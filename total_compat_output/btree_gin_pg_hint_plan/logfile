2023-07-25 16:06:03.566 UTC [1880045] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-25 16:06:03.566 UTC [1880045] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-25 16:06:03.576 UTC [1880045] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-25 16:06:03.590 UTC [1880048] LOG:  database system was shut down at 2023-07-25 16:06:03 UTC
2023-07-25 16:06:03.601 UTC [1880045] LOG:  database system is ready to accept connections
2023-07-25 16:06:05.172 UTC [1880046] LOG:  checkpoint starting: immediate force wait
2023-07-25 16:06:05.327 UTC [1880046] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.010 s, total=0.155 s; sync files=7, longest=0.006 s, average=0.002 s; distance=11125 kB, estimate=11125 kB
2023-07-25 16:06:07.675 UTC [1880045] LOG:  received SIGHUP, reloading configuration files
2023-07-25 16:06:07.677 UTC [1880045] LOG:  parameter "effective_cache_size" changed to "16384"
2023-07-25 16:06:08.074 UTC [1880206] ERROR:  table hint is not activated because queryid is not available
2023-07-25 16:06:08.074 UTC [1880206] HINT:  Set compute_query_id to on or auto to use hint table.
2023-07-25 16:06:08.074 UTC [1880206] STATEMENT:  SET pg_hint_plan.enable_hint_table to on;
2023-07-25 16:06:08.074 UTC [1880206] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-25 16:06:08.074 UTC [1880206] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-25 16:06:08.074 UTC [1880206] LOG:  hint table feature is reactivated
2023-07-25 16:06:08.074 UTC [1880206] STATEMENT:  SELECT 1;
2023-07-25 16:06:08.075 UTC [1880206] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-25 16:06:08.075 UTC [1880206] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-25 16:06:08.078 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.078 UTC [1880206] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.078 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.078 UTC [1880206] STATEMENT:  EXPLAIN (COSTS false) /*+Set(enable_indexscan off)*/
	 SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.078 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(enable_hashjoin off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.078 UTC [1880206] STATEMENT:  /*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.078 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.078 UTC [1880206] STATEMENT:  /*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.079 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.079 UTC [1880206] STATEMENT:  /*+ 	 
		 	Set 	 
		 	( 	 
		 	enable_indexscan 	 
		 	off 	 
		 	) 	 
		 	*/	 	
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.079 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	Set(enable_mergejoin off)
	Set(enable_nestloop off)
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.079 UTC [1880206] STATEMENT:  /*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
		 	Set(enable_seqscan off)
		 	*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.079 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem 1M)
	
2023-07-25 16:06:08.079 UTC [1880206] STATEMENT:  /*+Set(work_mem "1M")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.079 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Set(work_mem 1MB)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.079 UTC [1880206] STATEMENT:  /*+Set(work_mem "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.080 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem TO 1MB)
	
2023-07-25 16:06:08.080 UTC [1880206] STATEMENT:  /*+Set(work_mem TO "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.080 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 16:06:08.080 UTC [1880206] STATEMENT:  /*+SeqScan() */ SELECT 1;
2023-07-25 16:06:08.080 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-25 16:06:08.080 UTC [1880206] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.080 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.080 UTC [1880206] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.081 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.081 UTC [1880206] STATEMENT:  /*+SeqScan(t1)IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.081 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.081 UTC [1880206] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.081 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.081 UTC [1880206] STATEMENT:  /*+BitmapScan(t2)NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.081 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.081 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.082 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.082 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
2023-07-25 16:06:08.082 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.082 UTC [1880206] STATEMENT:  /*+TidScan(t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
2023-07-25 16:06:08.082 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.082 UTC [1880206] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
2023-07-25 16:06:08.082 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-25 16:06:08.082 UTC [1880206] STATEMENT:  /*+ NestLoop() */ SELECT 1;
2023-07-25 16:06:08.083 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(x)
	
2023-07-25 16:06:08.083 UTC [1880206] STATEMENT:  /*+ NestLoop(x) */ SELECT 1;
2023-07-25 16:06:08.083 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.083 UTC [1880206] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.083 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.083 UTC [1880206] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.083 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.083 UTC [1880206] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.083 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.083 UTC [1880206] STATEMENT:  /*+MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-25 16:06:08.084 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.084 UTC [1880206] STATEMENT:  /*+NestLoop(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-25 16:06:08.084 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.084 UTC [1880206] STATEMENT:  /*+NoHashJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-25 16:06:08.085 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.085 UTC [1880206] STATEMENT:  /*+MergeJoin(t4 t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.085 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.085 UTC [1880206] STATEMENT:  /*+HashJoin(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.086 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t3)
	NestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.086 UTC [1880206] STATEMENT:  /*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.087 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.087 UTC [1880206] STATEMENT:  /*+NoNestLoop(t4 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.089 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-25 16:06:08.089 UTC [1880206] STATEMENT:  /*+Leading( )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.090 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3)
	
2023-07-25 16:06:08.090 UTC [1880206] STATEMENT:  /*+Leading( t3 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.090 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.090 UTC [1880206] STATEMENT:  /*+Leading( t3 t4 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.091 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.091 UTC [1880206] STATEMENT:  /*+Leading(t3 t4 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.092 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.092 UTC [1880206] STATEMENT:  /*+Leading(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.092 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t1 t2 t1)
	
2023-07-25 16:06:08.092 UTC [1880206] STATEMENT:  /*+Leading(t3 t4 t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.093 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t4)
	
2023-07-25 16:06:08.093 UTC [1880206] STATEMENT:  /*+Leading(t3 t4 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 16:06:08.094 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.094 UTC [1880206] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-25 16:06:08.094 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.094 UTC [1880206] STATEMENT:  /*+HashJoin(t1 *VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-25 16:06:08.094 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	HashJoin(*VALUES* t1)
	not used hint:
	IndexScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.094 UTC [1880206] STATEMENT:  /*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-25 16:06:08.095 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.095 UTC [1880206] STATEMENT:  /*+BitmapScan(v_1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.096 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.096 UTC [1880206] STATEMENT:  /*+BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.096 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.096 UTC [1880206] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.097 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.097 UTC [1880206] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.097 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.097 UTC [1880206] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.098 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.098 UTC [1880206] STATEMENT:  /*+BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.098 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.098 UTC [1880206] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 16:06:08.099 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.099 UTC [1880206] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.099 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.099 UTC [1880206] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.099 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.099 UTC [1880206] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.099 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.099 UTC [1880206] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.099 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.099 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.100 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.100 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.100 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.100 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.100 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.100 UTC [1880206] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 16:06:08.100 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.100 UTC [1880206] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.101 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.101 UTC [1880206] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.101 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.101 UTC [1880206] STATEMENT:  /*+SeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.101 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.101 UTC [1880206] STATEMENT:  /*+SeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.101 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.101 UTC [1880206] STATEMENT:  /*+SeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.102 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.102 UTC [1880206] STATEMENT:  /*+SeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.102 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.102 UTC [1880206] STATEMENT:  /*+SeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.102 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.102 UTC [1880206] STATEMENT:  /*+SeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.102 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.102 UTC [1880206] STATEMENT:  /*+SeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.102 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.102 UTC [1880206] STATEMENT:  /*+SeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.103 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.103 UTC [1880206] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.103 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.103 UTC [1880206] STATEMENT:  /*+IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.103 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.103 UTC [1880206] STATEMENT:  /*+IndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.103 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.103 UTC [1880206] STATEMENT:  /*+IndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.104 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.104 UTC [1880206] STATEMENT:  /*+IndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.104 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.104 UTC [1880206] STATEMENT:  /*+IndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.104 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.104 UTC [1880206] STATEMENT:  /*+IndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.104 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.104 UTC [1880206] STATEMENT:  /*+IndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.105 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.105 UTC [1880206] STATEMENT:  /*+IndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.105 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.105 UTC [1880206] STATEMENT:  /*+IndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.105 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.105 UTC [1880206] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.105 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.105 UTC [1880206] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.106 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.106 UTC [1880206] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.106 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.106 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.106 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.106 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.106 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.106 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.107 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.107 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.107 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.107 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.107 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.107 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.107 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.107 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.108 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.108 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.108 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.108 UTC [1880206] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.108 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.108 UTC [1880206] STATEMENT:  /*+TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.108 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.108 UTC [1880206] STATEMENT:  /*+TidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.108 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.108 UTC [1880206] STATEMENT:  /*+TidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.109 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.109 UTC [1880206] STATEMENT:  /*+TidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.109 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.109 UTC [1880206] STATEMENT:  /*+TidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.109 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.109 UTC [1880206] STATEMENT:  /*+TidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.109 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.109 UTC [1880206] STATEMENT:  /*+TidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.109 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.109 UTC [1880206] STATEMENT:  /*+TidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.110 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.110 UTC [1880206] STATEMENT:  /*+TidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.110 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.110 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.110 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.110 UTC [1880206] STATEMENT:  /*+NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.110 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.110 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.110 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.110 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.111 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.111 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.111 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.111 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.111 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.111 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.111 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.111 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.111 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.111 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.112 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.112 UTC [1880206] STATEMENT:  /*+NoSeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.112 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.112 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.112 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.112 UTC [1880206] STATEMENT:  /*+NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.112 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.112 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.112 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.112 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.113 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.113 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.113 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.113 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.113 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.113 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.113 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.113 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.114 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.114 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.114 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.114 UTC [1880206] STATEMENT:  /*+NoIndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.114 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.114 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.114 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.114 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.114 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.114 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.115 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.115 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.115 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.115 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.115 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.115 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.115 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.115 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.115 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.115 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.116 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.116 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.116 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.116 UTC [1880206] STATEMENT:  /*+NoBitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.116 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.116 UTC [1880206] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.116 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.116 UTC [1880206] STATEMENT:  /*+NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.116 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.116 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.117 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.117 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.117 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.117 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.117 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.117 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.117 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.117 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.117 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.117 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.118 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.118 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.118 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.118 UTC [1880206] STATEMENT:  /*+NoTidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.118 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.118 UTC [1880206] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)' AND t1.id < 10 AND t2.id < 10;
2023-07-25 16:06:08.119 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.119 UTC [1880206] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-25 16:06:08.119 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.119 UTC [1880206] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-25 16:06:08.121 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.121 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.122 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.122 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.122 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.122 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.123 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.123 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.123 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.123 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.124 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.124 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.124 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.124 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.124 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.124 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.126 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.126 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.127 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.127 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.128 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.128 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.128 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.128 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.129 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.129 UTC [1880206] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.129 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.129 UTC [1880206] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.130 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.130 UTC [1880206] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.130 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.130 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.131 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.131 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.131 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.131 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.132 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.132 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.132 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.132 UTC [1880206] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.133 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.133 UTC [1880206] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.133 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.133 UTC [1880206] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.134 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.134 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.134 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.134 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.134 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.134 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.134 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.134 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.134 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.134 UTC [1880206] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.135 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.135 UTC [1880206] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.135 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.135 UTC [1880206] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.135 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.135 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.135 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.135 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.135 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.135 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.135 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.135 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 16:06:08.136 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.136 UTC [1880206] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.136 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.136 UTC [1880206] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.136 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.136 UTC [1880206] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.137 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.137 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.137 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.137 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.137 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.137 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.137 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.137 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.137 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.137 UTC [1880206] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.138 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.138 UTC [1880206] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.138 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.138 UTC [1880206] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.138 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.138 UTC [1880206] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 16:06:08.175 UTC [1880206] LOG:  available indexes for IndexScan(ischk_d1): ischk_d1_b_idx
2023-07-25 16:06:08.175 UTC [1880206] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-25 16:06:08.175 UTC [1880206] LOG:  available indexes for IndexScan(ischk_d2): ischk_d2_b_idx
2023-07-25 16:06:08.175 UTC [1880206] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-25 16:06:08.175 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ischk ischk_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.175 UTC [1880206] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-25 16:06:08.176 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""t1 )	")
	IndexScan("t	2 """)
	HashJoin("""t1 )	" T3 "t	2 """)
	Leading("""t1 )	" T3 "t	2 """)
	Set(application_name "a	a	a""	a	A")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.176 UTC [1880206] STATEMENT:  /*+SeqScan("""t1 )	")IndexScan("t	2 """)HashJoin("""t1 )	"T3"t	2 """)Leading("""t1 )	"T3"t	2 """)Set(application_name"a	a	a""	a	A")*/
	EXPLAIN (COSTS false) SELECT * FROM t1 """t1 )	", t2 "t	2 """, t3 "T3" WHERE """t1 )	".id = "t	2 """.id AND """t1 )	".id = "T3".id;
2023-07-25 16:06:08.178 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_mergejoin on)
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	SeqScan(t1)
	IndexScan(t1)
	BitmapScan(t1)
	SeqScan(t2)
	IndexScan(t2)
	BitmapScan(t2)
	HashJoin(t1 t2)
	NestLoop(t1 t2)
	Leading(t1 t2)
	Set(enable_seqscan off)
	error hint:
	
2023-07-25 16:06:08.178 UTC [1880206] STATEMENT:  /*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 16:06:08.194 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.194 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.199 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.199 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.203 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.203 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.206 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.206 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.210 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.210 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.212 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.212 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.213 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.213 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.215 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1_3 t3_3)
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.215 UTC [1880206] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 16:06:08.216 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	MergeJoin(t1 t2)
	
2023-07-25 16:06:08.216 UTC [1880206] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-25 16:06:08.216 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t1)
	
2023-07-25 16:06:08.216 UTC [1880206] STATEMENT:  /*+Leading(t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-25 16:06:08.217 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-25 16:06:08.217 UTC [1880206] STATEMENT:  /*+
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "123456789012345678901234567890123456789012345678901234567890123" JOIN t2 ON ("123456789012345678901234567890123456789012345678901234567890123".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-25 16:06:08.218 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-25 16:06:08.218 UTC [1880206] STATEMENT:  /*+
	Leading(1234567890123456789012345678901234567890123456789012345678901234 t2 t3)
	SeqScan(1234567890123456789012345678901234567890123456789012345678901234)
	MergeJoin(1234567890123456789012345678901234567890123456789012345678901234 t2)
	Set(1234567890123456789012345678901234567890123456789012345678901234 1)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "1234567890123456789012345678901234567890123456789012345678901234" JOIN t2 ON ("1234567890123456789012345678901234567890123456789012345678901234".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-25 16:06:08.218 UTC [1880206] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-25 16:06:08.218 UTC [1880206] STATEMENT:  SET "123456789012345678901234567890123456789012345678901234567890123" TO 1;
2023-07-25 16:06:08.218 UTC [1880206] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-25 16:06:08.218 UTC [1880206] STATEMENT:  SET "1234567890123456789012345678901234567890123456789012345678901234" TO 1;
2023-07-25 16:06:08.218 UTC [1880206] ERROR:  1.23457e+63 is outside the valid range for parameter "cursor_tuple_fraction" (0 .. 1)
2023-07-25 16:06:08.218 UTC [1880206] STATEMENT:  SET cursor_tuple_fraction TO 1234567890123456789012345678901234567890123456789012345678901234;
2023-07-25 16:06:08.218 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_seqscan 100)
	Set(seq_page_cost on)
	
2023-07-25 16:06:08.218 UTC [1880206] STATEMENT:  /*+ Set(enable_seqscan 100)Set(seq_page_cost on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  available indexes for IndexScan(t5):
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  available indexes for IndexScan(t5): t5_id2 t5_id1
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id1 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.219 UTC [1880206] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-25 16:06:08.219 UTC [1880206] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.220 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.220 UTC [1880206] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.220 UTC [1880206] LOG:  available indexes for IndexScan(t5):
2023-07-25 16:06:08.220 UTC [1880206] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.220 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist5 no_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.220 UTC [1880206] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 16:06:08.220 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1))
	
2023-07-25 16:06:08.220 UTC [1880206] STATEMENT:  /*+Leading((t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.221 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.221 UTC [1880206] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.221 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1 t2 t3))
	
2023-07-25 16:06:08.221 UTC [1880206] STATEMENT:  /*+Leading((t1 t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.221 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.221 UTC [1880206] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id < 10;
2023-07-25 16:06:08.222 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.222 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.223 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) t4))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.223 UTC [1880206] STATEMENT:  /*+Leading((((t1 t2) t3) t4))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.223 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.223 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.224 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.224 UTC [1880206] STATEMENT:  /*+Leading((t1 (t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.224 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.224 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.225 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t3 t1) t2))
	not used hint:
	duplication hint:
	Leading(((t1 t2) t3))
	error hint:
	
2023-07-25 16:06:08.225 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-25 16:06:08.226 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	Leading((t1_2 t2_2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.226 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-25 16:06:08.226 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(((((t1 t2) t3) t1_2) t2_2))
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.226 UTC [1880206] STATEMENT:  /*+Leading(((((t1 t2) t3) t1_2) t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-25 16:06:08.226 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.226 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.227 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.227 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.227 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.227 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.227 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t1 t3)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.227 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.228 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.228 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.228 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.228 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.229 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.229 UTC [1880206] STATEMENT:  /*+ Leading ( ( t1 ( t2 t3 ) ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.229 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.229 UTC [1880206] STATEMENT:  /*+Leading((t1(t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.229 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("t1(t2" "t3)"))
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.229 UTC [1880206] STATEMENT:  /*+Leading(("t1(t2" "t3)"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.230 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.230 UTC [1880206] STATEMENT:  /*+ Leading ( ( ( t1 t2 ) t3 ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.230 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.230 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2)t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.230 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("(t1" "t2)t3"))
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.230 UTC [1880206] STATEMENT:  /*+Leading(("(t1" "t2)t3"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 16:06:08.231 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 (t3 (t4 t5)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.231 UTC [1880206] STATEMENT:  /*+Leading((t1(t2(t3(t4 t5)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.232 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((t5 (t4 (t3 (t2 t1)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.232 UTC [1880206] STATEMENT:  /*+Leading((t5(t4(t3(t2 t1)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.232 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t1 t2) t3) t4) t5))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.232 UTC [1880206] STATEMENT:  /*+Leading(((((t1 t2)t3)t4)t5))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.233 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t5 t4) t3) t2) t1))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.233 UTC [1880206] STATEMENT:  /*+Leading(((((t5 t4)t3)t2)t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.234 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 (t4 t5))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.234 UTC [1880206] STATEMENT:  /*+Leading(((t1 t2)(t3(t4 t5))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.235 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading(((t5 t4) (t3 (t2 t1))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.235 UTC [1880206] STATEMENT:  /*+Leading(((t5 t4)(t3(t2 t1))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.236 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) (t4 t5)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.236 UTC [1880206] STATEMENT:  /*+Leading((((t1 t2)t3)(t4 t5)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.236 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Leading((((t5 t4) t3) (t2 t1)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.236 UTC [1880206] STATEMENT:  /*+Leading((((t5 t4)t3)(t2 t1)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 16:06:08.240 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 16:06:08.240 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.240 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 16:06:08.240 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.240 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 16:06:08.240 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.241 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.241 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.242 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_val_id_idx
2023-07-25 16:06:08.242 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.242 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_id_idx
2023-07-25 16:06:08.242 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.242 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_id_idx
2023-07-25 16:06:08.242 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.242 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_id_idx
2023-07-25 16:06:08.242 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.242 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_id_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.242 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2):
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.243 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.243 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.244 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 16:06:08.244 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.244 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 16:06:08.244 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.244 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 16:06:08.244 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.244 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 16:06:08.244 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.244 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.244 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_id2_val
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id2_val
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_val2_id
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1):
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.245 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val2_id)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.245 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2):
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.246 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.246 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2):
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1):
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.247 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.247 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  available indexes for IndexScan(p2):
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.248 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 16:06:08.248 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.249 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.249 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.250 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.250 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_expr
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_expr_idx
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.251 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.251 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_val_idx6
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.252 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_val_idx6 p2_val_idx
2023-07-25 16:06:08.252 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7 p2_c1_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7 p2_c2_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7 p2_c3_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7 p2_c4_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7 p2_c1_c1_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7 p2_c1_c2_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7 p2_c3_c1_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7 p2_c3_c2_val_idx
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 16:06:08.253 UTC [1880206] LOG:  available indexes for IndexScanRegexp(t5): t5_val t5_pkey
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.253 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.253 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexScan(t5):
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_val t5_pkey
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.254 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.254 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for IndexOnlyScan(t5):
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(t5): t5_val t5_pkey
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  available indexes for BitmapScan(t5):
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.255 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.255 UTC [1880206] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1): p1_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.256 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.256 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c2):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c4):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1_c1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c1_c2):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3_c1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScanRegexp(p1_c3_c2):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c2):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c4):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c2):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c1):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c2):
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.257 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey
2023-07-25 16:06:08.257 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.258 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.258 UTC [1880206] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c1):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c2):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c3):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c4):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c1_c1):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c1_c2):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c3_c1):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for IndexOnlyScan(p1_c3_c2):
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1): p1_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.259 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1): p1_val2
2023-07-25 16:06:08.259 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c2):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c4):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c2):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c3):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c4):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c1_c1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c1_c2):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c3_c1):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  available indexes for BitmapScan(p1_c3_c2):
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.260 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.260 UTC [1880206] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 16:06:08.269 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.269 UTC [1880206] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM t1 WHERE t1.id = 1;
2023-07-25 16:06:08.304 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.304 UTC [1880206] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ *          FROM t1 LIMIT 1"
	PL/pgSQL function testfunc() line 5 at SQL statement
2023-07-25 16:06:08.304 UTC [1880206] STATEMENT:  SELECT testfunc();
2023-07-25 16:06:08.314 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.314 UTC [1880206] CONTEXT:  SQL statement "/*+ SeqScan(t1) */ SELECT * FROM t1"
	PL/pgSQL function testfunc() line 3 at EXECUTE
2023-07-25 16:06:08.314 UTC [1880206] STATEMENT:  SELECT testfunc();
2023-07-25 16:06:08.318 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.318 UTC [1880206] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-25 16:06:08.327 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.327 UTC [1880206] CONTEXT:  SQL statement "SELECT  1, /*+ SeqScan(t1) */ * from t1"
	PL/pgSQL function testfunc() line 3 at PERFORM
2023-07-25 16:06:08.327 UTC [1880206] STATEMENT:  SELECT testfunc();
2023-07-25 16:06:08.341 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.341 UTC [1880206] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ v FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over SELECT rows
2023-07-25 16:06:08.341 UTC [1880206] STATEMENT:  SELECT testfunc();
2023-07-25 16:06:08.363 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.363 UTC [1880206] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ val FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 8 at FOR over EXECUTE statement
2023-07-25 16:06:08.363 UTC [1880206] STATEMENT:  SELECT testfunc();
2023-07-25 16:06:08.380 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.380 UTC [1880206] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over cursor
2023-07-25 16:06:08.380 UTC [1880206] STATEMENT:  SELECT testfunc();
2023-07-25 16:06:08.394 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.394 UTC [1880206] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-25 16:06:08.394 UTC [1880206] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-25 16:06:08.401 UTC [1880206] ERROR:  relation "ttx" does not exist at character 34
2023-07-25 16:06:08.401 UTC [1880206] QUERY:  SELECT /*+ SeqScan(t1) */ * FROM ttx ORDER BY id
2023-07-25 16:06:08.401 UTC [1880206] CONTEXT:  PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-25 16:06:08.401 UTC [1880206] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-25 16:06:08.402 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:08.402 UTC [1880206] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-25 16:06:11.445 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:11.445 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(t1) */ SELECT count(*) FROM t1 WHERE id < $1"
	PL/pgSQL function dynsql1(integer) line 4 at EXECUTE
2023-07-25 16:06:11.445 UTC [1880206] STATEMENT:  SELECT dynsql1(9000);
2023-07-25 16:06:14.473 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1): p1_c1_pkey
2023-07-25 16:06:14.473 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 16:06:14.473 UTC [1880206] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 16:06:14.473 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 16:06:14.473 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 16:06:14.473 UTC [1880206] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 16:06:14.473 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 16:06:14.473 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 16:06:14.473 UTC [1880206] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 16:06:14.473 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c1 p1_c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:14.473 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 16:06:14.473 UTC [1880206] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 16:06:14.473 UTC [1880206] LOG:  available indexes for IndexScan(p1_c2): p1_c2_pkey
2023-07-25 16:06:14.473 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 16:06:14.473 UTC [1880206] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 16:06:14.474 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c2 p1_c2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:14.474 UTC [1880206] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 16:06:14.474 UTC [1880206] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.484 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-25 16:06:15.484 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.485 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-25 16:06:15.485 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.486 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.486 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.488 UTC [1880206] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-25 16:06:15.488 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.488 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-25 16:06:15.488 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.488 UTC [1880206] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-25 16:06:15.488 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.488 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-25 16:06:15.488 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.489 UTC [1880206] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-25 16:06:15.489 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.489 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-25 16:06:15.489 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.489 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-25 16:06:15.489 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.489 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-25 16:06:15.489 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.489 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-25 16:06:15.489 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.490 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 16:06:15.490 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.490 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 16:06:15.490 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.490 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-25 16:06:15.490 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.491 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.491 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.498 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 16:06:15.498 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.498 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 16:06:15.498 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.498 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-25 16:06:15.498 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.498 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-25 16:06:15.498 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.498 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-25 16:06:15.498 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.498 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 16:06:15.498 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.499 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 16:06:15.499 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.499 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-25 16:06:15.499 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.499 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-25 16:06:15.499 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.499 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.499 UTC [1880206] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.501 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-25 16:06:15.501 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.502 UTC [1880206] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-25 16:06:15.502 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.503 UTC [1880206] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 16:06:15.503 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.504 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-25 16:06:15.504 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.504 UTC [1880206] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-25 16:06:15.504 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.504 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.504 UTC [1880206] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 16:06:15.505 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-25 16:06:15.505 UTC [1880206] STATEMENT:  /*+ Rows() */ SELECT 1;
2023-07-25 16:06:15.505 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-25 16:06:15.505 UTC [1880206] STATEMENT:  /*+ Rows(x) */ SELECT 1;
2023-07-25 16:06:15.516 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.516 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 #99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.526 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.526 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 +99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.536 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.536 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 -99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.546 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.546 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 *99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.556 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.01)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.556 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 *0.01) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.566 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #aa)
	
2023-07-25 16:06:15.566 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 #aa) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.575 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 /99)
	
2023-07-25 16:06:15.575 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 /99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.585 UTC [1880206] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999) 
2023-07-25 16:06:15.585 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99999)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.585 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 -99999) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 16:06:15.606 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #22)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.606 UTC [1880206] STATEMENT:  /*+ Rows(t1 t2 #22) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-25 16:06:15.616 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t3 *10)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.616 UTC [1880206] STATEMENT:  /*+ Rows(t1 t3 *10) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-25 16:06:15.630 UTC [1880206] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:15.630 UTC [1880206] STATEMENT:  /*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;
2023-07-25 16:06:15.712 UTC [1880284] ERROR:  extension "btree_gin" already exists
2023-07-25 16:06:15.712 UTC [1880284] STATEMENT:  CREATE EXTENSION btree_gin;
2023-07-25 16:06:16.458 UTC [1880290] ERROR:  extension "pg_hint_plan" must be installed in schema "hint_plan"
2023-07-25 16:06:16.458 UTC [1880290] STATEMENT:  CREATE EXTENSION pg_hint_plan SCHEMA other_schema;
2023-07-25 16:06:16.486 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.486 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.490 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.490 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.490 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.490 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) SELECT c1, c2 AS c_2 /*+SeqScan(t1)*/ FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.514 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.514 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.515 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.515 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.558 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.558 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) SELECT c1 FROM s1.t1;
2023-07-25 16:06:16.571 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.571 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.587 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.587 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 OR t1.c1 = 0;
2023-07-25 16:06:16.603 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.603 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.604 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.604 UTC [1880290] STATEMENT:  /*+ Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.605 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.605 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.606 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.606 UTC [1880290] STATEMENT:  /*+ Set (enable_indexscan"off") Set (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.606 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.606 UTC [1880290] STATEMENT:  /*+Set ( enable_indexscan"off")Set ( enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.607 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.607 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off" ) Set(enable_bitmapscan"off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.608 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.608 UTC [1880290] STATEMENT:  /*+Set( enable_indexscan "off" )Set( enable_bitmapscan "off" )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.608 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.608 UTC [1880290] STATEMENT:  /*+ Set ( enable_indexscan "off" ) Set ( enable_bitmapscan "off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.609 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.609 UTC [1880290] STATEMENT:  /*+	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.609 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.609 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.610 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.610 UTC [1880290] STATEMENT:  /*+	Set	(enable_indexscan"off")	Set	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.611 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.611 UTC [1880290] STATEMENT:  /*+Set	(	enable_indexscan"off")Set	(	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.611 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.611 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off"	)	Set(enable_bitmapscan"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.612 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.612 UTC [1880290] STATEMENT:  /*+Set(	enable_indexscan	"off"	)Set(	enable_bitmapscan	"off"	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.612 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.612 UTC [1880290] STATEMENT:  /*+	Set	(	enable_indexscan	"off"	)	Set	(	enable_bitmapscan	"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.613 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.613 UTC [1880290] STATEMENT:  /*+
	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.614 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.614 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.614 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.614 UTC [1880290] STATEMENT:  /*+
	Set
	(enable_indexscan"off")
	Set
	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.615 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.615 UTC [1880290] STATEMENT:  /*+Set
	(
	enable_indexscan"off")Set
	(
	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.616 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.616 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off"
	)
	Set(enable_bitmapscan"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.617 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.617 UTC [1880290] STATEMENT:  /*+Set(
	enable_indexscan
	"off"
	)Set(
	enable_bitmapscan
	"off"
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.618 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.618 UTC [1880290] STATEMENT:  /*+
	Set
	(
	enable_indexscan
	"off"
	)
	Set
	(
	enable_bitmapscan
	"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.618 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.618 UTC [1880290] STATEMENT:  /*+ 	
		 Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.619 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.619 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.620 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.620 UTC [1880290] STATEMENT:  /*+ 	
		 Set 	
		 (enable_indexscan"off") 	
		 Set 	
		 (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.621 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.621 UTC [1880290] STATEMENT:  /*+Set 	
		 ( 	
		 enable_indexscan"off")Set 	
		 ( 	
		 enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.621 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.621 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan"off" 	
		 ) 	
		 Set(enable_bitmapscan"off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.622 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.622 UTC [1880290] STATEMENT:  /*+Set( 	
		 enable_indexscan 	
		 "off" 	
		 )Set( 	
		 enable_bitmapscan 	
		 "off" 	
		 )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.623 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.623 UTC [1880290] STATEMENT:  /*+ 	
		 Set 	
		 ( 	
		 enable_indexscan 	
		 "off" 	
		 ) 	
		 Set 	
		 ( 	
		 enable_bitmapscan 	
		 "off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.624 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.624 UTC [1880290] STATEMENT:  /*+SeqScan(t)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-25 16:06:16.624 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.624 UTC [1880290] STATEMENT:  /*+SeqScan(ttt)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-25 16:06:16.625 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.625 UTC [1880290] STATEMENT:  /*+SeqScan("t")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-25 16:06:16.625 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.625 UTC [1880290] STATEMENT:  /*+SeqScan("ttt")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-25 16:06:16.626 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.626 UTC [1880290] STATEMENT:  /*+SeqScan(T)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-25 16:06:16.627 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.627 UTC [1880290] STATEMENT:  /*+SeqScan(TTT)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-25 16:06:16.627 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.627 UTC [1880290] STATEMENT:  /*+SeqScan("T")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-25 16:06:16.628 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.628 UTC [1880290] STATEMENT:  /*+SeqScan("TTT")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-25 16:06:16.629 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("(")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.629 UTC [1880290] STATEMENT:  /*+SeqScan("(")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "(" WHERE "(".c1 = 1;
2023-07-25 16:06:16.630 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 16:06:16.630 UTC [1880290] STATEMENT:  /*+SeqScan())*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-25 16:06:16.630 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.630 UTC [1880290] STATEMENT:  /*+SeqScan(")")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-25 16:06:16.631 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")))")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.631 UTC [1880290] STATEMENT:  /*+SeqScan(")))")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")))" WHERE ")))".c1 = 1;
2023-07-25 16:06:16.632 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.632 UTC [1880290] STATEMENT:  /*+SeqScan("""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """" WHERE """".c1 = 1;
2023-07-25 16:06:16.633 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""""""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.633 UTC [1880290] STATEMENT:  /*+SeqScan("""""""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """""""" WHERE """""""".c1 = 1;
2023-07-25 16:06:16.634 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 16:06:16.634 UTC [1880290] STATEMENT:  /*+SeqScan( )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-25 16:06:16.634 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(" ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.634 UTC [1880290] STATEMENT:  /*+SeqScan(" ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-25 16:06:16.635 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("   ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.635 UTC [1880290] STATEMENT:  /*+SeqScan("   ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "   " WHERE "   ".c1 = 1;
2023-07-25 16:06:16.636 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 16:06:16.636 UTC [1880290] STATEMENT:  /*+SeqScan(	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-25 16:06:16.636 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.636 UTC [1880290] STATEMENT:  /*+SeqScan("	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-25 16:06:16.637 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("			")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.637 UTC [1880290] STATEMENT:  /*+SeqScan("			")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "			" WHERE "			".c1 = 1;
2023-07-25 16:06:16.638 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 16:06:16.638 UTC [1880290] STATEMENT:  /*+SeqScan(
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-25 16:06:16.638 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.638 UTC [1880290] STATEMENT:  /*+SeqScan("
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-25 16:06:16.639 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	
	
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.639 UTC [1880290] STATEMENT:  /*+SeqScan("
	
	
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	
	
	" WHERE "
	
	
	".c1 = 1;
2023-07-25 16:06:16.640 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.640 UTC [1880290] STATEMENT:  /*+SeqScan(Set)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-25 16:06:16.641 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.641 UTC [1880290] STATEMENT:  /*+SeqScan("Set")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-25 16:06:16.641 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("Set SeqScan Leading")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.641 UTC [1880290] STATEMENT:  /*+SeqScan("Set SeqScan Leading")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set SeqScan Leading" WHERE "Set SeqScan Leading".c1 = 1;
2023-07-25 16:06:16.642 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.642 UTC [1880290] STATEMENT:  /*+SeqScan(あ)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-25 16:06:16.643 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.643 UTC [1880290] STATEMENT:  /*+SeqScan(あいう)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-25 16:06:16.643 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.643 UTC [1880290] STATEMENT:  /*+SeqScan("あ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-25 16:06:16.644 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.644 UTC [1880290] STATEMENT:  /*+SeqScan("あいう")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-25 16:06:16.647 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan("tT()"" 	
	Setあ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.647 UTC [1880290] STATEMENT:  /*+SeqScan("tT()"" 	
	Setあ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "tT()"" 	
	Setあ" WHERE "tT()"" 	
	Setあ".c1 = 1;
2023-07-25 16:06:16.647 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(a123456789b123456789c123456789d123456789e123456789f123)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.647 UTC [1880290] STATEMENT:  /*+SeqScan(a123456789b123456789c123456789d123456789e123456789f123)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "123456789012345678901234567890123456789012345678901234" WHERE "123456789012345678901234567890123456789012345678901234".c1 = 1;
2023-07-25 16:06:16.648 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.648 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)Set enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.649 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.649 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan off Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.649 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.649 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan "off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.650 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.650 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)SeqScan("")Set(enable_bitmapscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.651 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.651 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)NoSet(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.652 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.652 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)"Set"(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.657 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.657 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.660 UTC [1880290] ERROR:  invalid value for parameter "pg_hint_plan.debug_print": "enable"
2023-07-25 16:06:16.660 UTC [1880290] HINT:  Available values: off, on, detailed, verbose.
2023-07-25 16:06:16.660 UTC [1880290] STATEMENT:  SET pg_hint_plan.debug_print TO enable;
2023-07-25 16:06:16.669 UTC [1880290] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 16:06:16.669 UTC [1880290] DETAIL:  Opening parenthesis is necessary.
2023-07-25 16:06:16.669 UTC [1880290] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 16:06:16.669 UTC [1880290] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 16:06:16.669 UTC [1880290] DETAIL:  Opening parenthesis is necessary.
2023-07-25 16:06:16.669 UTC [1880290] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 16:06:16.672 UTC [1880290] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 16:06:16.672 UTC [1880290] DETAIL:  Opening parenthesis is necessary.
2023-07-25 16:06:16.672 UTC [1880290] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 16:06:16.672 UTC [1880290] DETAIL:  Opening parenthesis is necessary.
2023-07-25 16:06:16.673 UTC [1880290] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 16:06:16.673 UTC [1880290] DETAIL:  Opening parenthesis is necessary.
2023-07-25 16:06:16.673 UTC [1880290] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 16:06:16.673 UTC [1880290] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 16:06:16.673 UTC [1880290] DETAIL:  Opening parenthesis is necessary.
2023-07-25 16:06:16.673 UTC [1880290] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 16:06:16.674 UTC [1880290] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "fatal"
2023-07-25 16:06:16.674 UTC [1880290] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-25 16:06:16.674 UTC [1880290] STATEMENT:  SET pg_hint_plan.parse_messages TO fatal;
2023-07-25 16:06:16.675 UTC [1880290] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "panic"
2023-07-25 16:06:16.675 UTC [1880290] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-25 16:06:16.675 UTC [1880290] STATEMENT:  SET pg_hint_plan.parse_messages TO panic;
2023-07-25 16:06:16.675 UTC [1880290] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "on"
2023-07-25 16:06:16.675 UTC [1880290] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-25 16:06:16.675 UTC [1880290] STATEMENT:  SET pg_hint_plan.parse_messages TO on;
2023-07-25 16:06:16.680 UTC [1880290] ERROR:  parameter "pg_hint_plan.enable_hint_table" requires a Boolean value
2023-07-25 16:06:16.680 UTC [1880290] STATEMENT:  SET pg_hint_plan.enable_hint_table TO enable;
2023-07-25 16:06:16.697 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.697 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.698 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(no_table)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.698 UTC [1880290] STATEMENT:  /*+SeqScan(no_table)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.699 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	error hint:
	
2023-07-25 16:06:16.699 UTC [1880290] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:16.700 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	error hint:
	
2023-07-25 16:06:16.700 UTC [1880290] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:16.701 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	IndexScan(t1)
	error hint:
	
2023-07-25 16:06:16.701 UTC [1880290] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:16.702 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_indexscan enable)
	
2023-07-25 16:06:16.702 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan enable)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.708 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.708 UTC [1880290] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 16:06:16.711 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.711 UTC [1880290] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 16:06:16.713 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.713 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.713 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.713 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.714 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.714 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.715 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.715 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.715 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.715 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.716 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.716 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.719 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.719 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.720 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.720 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 16:06:16.722 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.722 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 16:06:16.724 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.724 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.724 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.724 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.725 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.725 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.726 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.726 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.726 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.726 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.727 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.727 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.729 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.729 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 16:06:16.740 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.740 UTC [1880290] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 16:06:16.743 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.743 UTC [1880290] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 16:06:16.744 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.744 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.745 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.745 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.745 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.745 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.746 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.746 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.747 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.747 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.747 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.747 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.750 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.750 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.751 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.751 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 16:06:16.753 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.753 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 16:06:16.755 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.755 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.755 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.755 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.756 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.756 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.757 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.757 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.757 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.757 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.758 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.758 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.760 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.760 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 16:06:16.770 UTC [1880290] ERROR:  prepared statement "p1" does not exist
2023-07-25 16:06:16.770 UTC [1880290] STATEMENT:  EXECUTE p1;
2023-07-25 16:06:16.773 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.773 UTC [1880290] STATEMENT:  /*+Set(enable_seqscan off)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.774 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.774 UTC [1880290] STATEMENT:  /*+SeqScan(t1)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.779 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1 t1)
	
2023-07-25 16:06:16.779 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 16:06:16.784 UTC [1880290] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-25 16:06:16.784 UTC [1880290] DETAIL:  Relation name "t1" is duplicated.
2023-07-25 16:06:16.784 UTC [1880290] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.786 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.786 UTC [1880290] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.789 UTC [1880290] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-25 16:06:16.789 UTC [1880290] DETAIL:  Relation name "t1" is duplicated.
2023-07-25 16:06:16.789 UTC [1880290] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.793 UTC [1880290] ERROR:  prepared statement "p2" does not exist
2023-07-25 16:06:16.793 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-25 16:06:16.793 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.793 UTC [1880290] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.796 UTC [1880290] ERROR:  prepared statement "p2" does not exist
2023-07-25 16:06:16.796 UTC [1880290] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-25 16:06:16.800 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.800 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.803 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.803 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.806 UTC [1880290] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.806 UTC [1880290] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:16.814 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.814 UTC [1880291] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.815 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.815 UTC [1880291] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.815 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.815 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.815 UTC [1880291] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.815 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.815 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.815 UTC [1880291] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.816 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.816 UTC [1880291] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.817 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.817 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.817 UTC [1880291] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.817 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.817 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.817 UTC [1880291] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.817 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.817 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.817 UTC [1880291] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.817 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.817 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.817 UTC [1880291] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.818 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.818 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.818 UTC [1880291] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.818 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.818 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.818 UTC [1880291] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.818 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.818 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.818 UTC [1880291] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.818 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.818 UTC [1880291] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 16:06:16.818 UTC [1880291] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.818 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.818 UTC [1880291] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 16:06:16.820 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.820 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.820 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.821 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.821 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.822 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.822 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.822 UTC [1880291] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 16:06:16.823 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	HashJoin(st_1 st_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.823 UTC [1880291] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 16:06:16.824 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.824 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.824 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 16:06:16.824 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.824 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 16:06:16.825 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.825 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.825 UTC [1880291] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.826 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st_1 st_2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.826 UTC [1880291] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.827 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.827 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.827 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.827 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.827 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.830 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.830 UTC [1880291] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-25 16:06:16.830 UTC [1880291] STATEMENT:  EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.831 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.831 UTC [1880291] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-25 16:06:16.831 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.832 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-25 16:06:16.832 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.832 UTC [1880291] ERROR:  function recall_planner_one_t(integer) does not exist
2023-07-25 16:06:16.832 UTC [1880291] STATEMENT:  DROP FUNCTION recall_planner_one_t(int);
2023-07-25 16:06:16.833 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.833 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.833 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.834 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-25 16:06:16.834 UTC [1880291] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.835 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.835 UTC [1880291] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 16:06:16.835 UTC [1880291] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.836 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	MergeJoin(t_1 t_2)
	error hint:
	
2023-07-25 16:06:16.836 UTC [1880291] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 16:06:16.850 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.850 UTC [1880291] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-25 16:06:16.851 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.851 UTC [1880291] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-25 16:06:16.867 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.867 UTC [1880291] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-25 16:06:16.868 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.868 UTC [1880291] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-25 16:06:16.874 UTC [1880291] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.874 UTC [1880291] STATEMENT:  EXPLAIN EXECUTE test_query(array[1,2,3]);
2023-07-25 16:06:16.907 UTC [1880045] LOG:  received SIGHUP, reloading configuration files
2023-07-25 16:06:16.909 UTC [1880045] LOG:  parameter "session_preload_libraries" changed to "pg_hint_plan"
2023-07-25 16:06:16.915 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.915 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.915 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.915 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-25 16:06:16.916 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.916 UTC [1880295] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-25 16:06:16.917 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.917 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.918 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1.t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.918 UTC [1880295] STATEMENT:  /*+SeqScan(s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.918 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.918 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.919 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.919 UTC [1880295] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.921 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.921 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = 1 AND t1.c1 = t2.c1;
2023-07-25 16:06:16.923 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.923 UTC [1880295] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:16.924 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.924 UTC [1880295] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-25 16:06:16.925 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(s2t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.925 UTC [1880295] STATEMENT:  /*+BitmapScan(s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-25 16:06:16.928 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.928 UTC [1880295] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 WHERE s1.t1.c1 = 1) FROM s1.t1 WHERE s1.t1.c1 = 1;
2023-07-25 16:06:16.929 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t11)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.929 UTC [1880295] STATEMENT:  /*+BitmapScan(t11)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-25 16:06:16.930 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t12)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.930 UTC [1880295] STATEMENT:  /*+BitmapScan(t12)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-25 16:06:16.930 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.930 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:16.935 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.935 UTC [1880295] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE p1.c1 = 1;
2023-07-25 16:06:16.937 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ul1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.937 UTC [1880295] STATEMENT:  /*+SeqScan(ul1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 WHERE ul1.c1 = 1;
2023-07-25 16:06:16.944 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tm1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.944 UTC [1880295] STATEMENT:  /*+SeqScan(tm1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 WHERE tm1.c1 = 1;
2023-07-25 16:06:16.945 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(pg_class)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.945 UTC [1880295] STATEMENT:  /*+SeqScan(pg_class)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class WHERE oid = 1;
2023-07-25 16:06:16.946 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(ft1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.946 UTC [1880295] STATEMENT:  /*+SeqScan(ft1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() AS ft1 WHERE ft1.c1 = 1;
2023-07-25 16:06:16.947 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(val1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.947 UTC [1880295] STATEMENT:  /*+SeqScan(val1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-25 16:06:16.947 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.947 UTC [1880295] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-25 16:06:16.948 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(c1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.948 UTC [1880295] STATEMENT:  /*+SeqScan(c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(c1) FROM s1.t1 WHERE t1.c1 = 1)
	SELECT * FROM s1.t1, c1 WHERE t1.c1 = 1 AND t1.c1 = c1.c1;
2023-07-25 16:06:16.949 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(v1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.949 UTC [1880295] STATEMENT:  /*+SeqScan(v1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 WHERE v1.c1 = 1;
2023-07-25 16:06:16.950 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.950 UTC [1880295] STATEMENT:  /*+SeqScan(s1)*/
	EXPLAIN (COSTS false) SELECT * FROM (SELECT * FROM s1.t1 WHERE t1.c1 = 1) AS s1 WHERE s1.c1 = 1;
2023-07-25 16:06:16.953 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.953 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.953 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.953 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.953 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.953 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.953 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.953 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.953 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.953 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.956 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.956 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.956 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.956 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.957 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.957 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.957 UTC [1880295] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 16:06:16.957 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.957 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.957 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.957 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.957 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.958 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.958 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:16.959 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.959 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:16.959 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.959 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:16.959 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.959 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:16.960 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.960 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:16.960 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.960 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:16.961 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.961 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:16.962 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.962 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 16:06:16.962 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.962 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 16:06:16.963 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.963 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 16:06:16.963 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.963 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 16:06:16.963 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.963 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 16:06:16.965 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.965 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.965 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.965 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.965 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.965 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.965 UTC [1880295] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 16:06:16.965 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.966 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.966 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.966 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.966 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.966 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.966 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:16.968 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.968 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 16:06:16.968 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.968 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 16:06:16.968 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.968 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 16:06:16.968 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.968 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 16:06:16.969 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.969 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 16:06:16.972 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.972 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.972 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.972 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.972 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.972 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.972 UTC [1880295] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 16:06:16.972 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.972 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.972 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.972 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.972 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.974 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.974 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:16.975 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.975 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:16.975 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.975 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:16.975 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.975 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:16.975 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.975 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:16.975 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.975 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:16.976 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.976 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.976 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.976 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.976 UTC [1880295] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-25 16:06:16.976 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.976 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.976 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.976 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.976 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.979 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.979 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.979 UTC [1880295] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 16:06:16.979 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.979 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.979 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.979 UTC [1880295] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-25 16:06:16.979 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.979 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.979 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.979 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.979 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.980 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.980 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.980 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.980 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.980 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.980 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.982 UTC [1880295] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 16:06:16.982 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.983 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.983 UTC [1880295] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:16.984 UTC [1880295] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 16:06:16.984 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.984 UTC [1880295] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 16:06:16.984 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.984 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r1)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.984 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.985 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.985 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.985 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.985 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.986 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.986 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.987 UTC [1880295] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 16:06:16.987 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.987 UTC [1880295] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 16:06:16.987 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.988 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.988 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.988 UTC [1880295] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 16:06:16.988 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.988 UTC [1880295] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 16:06:16.988 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.988 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.988 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.990 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.990 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.990 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.990 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.990 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.990 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.990 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.990 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.990 UTC [1880295] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 16:06:16.990 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.991 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.991 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.993 UTC [1880295] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 16:06:16.993 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.993 UTC [1880295] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 16:06:16.993 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.993 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.993 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.993 UTC [1880295] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 16:06:16.993 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.993 UTC [1880295] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 16:06:16.993 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.993 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.993 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.994 UTC [1880295] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 16:06:16.994 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.994 UTC [1880295] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 16:06:16.994 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.994 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.994 UTC [1880295] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.996 UTC [1880295] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 16:06:16.996 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.996 UTC [1880295] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 16:06:16.996 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.997 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.997 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.997 UTC [1880295] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 16:06:16.997 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.997 UTC [1880295] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 16:06:16.997 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.997 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.997 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.997 UTC [1880295] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 16:06:16.997 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.997 UTC [1880295] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-25 16:06:16.997 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.998 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.998 UTC [1880295] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:16.999 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.999 UTC [1880295] STATEMENT:  /*+BitmapScan(v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:16.999 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(v1t1)
	BitmapScan(v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:16.999 UTC [1880295] STATEMENT:  /*+SeqScan(v1t1)BitmapScan(v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.000 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(r4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.000 UTC [1880295] STATEMENT:  /*+BitmapScan(r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.000 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r4t1)
	BitmapScan(r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.000 UTC [1880295] STATEMENT:  /*+SeqScan(r4t1)BitmapScan(r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.000 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.000 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-25 16:06:17.000 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.000 UTC [1880295] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-25 16:06:17.001 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-25 16:06:17.001 UTC [1880295] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.001 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.001 UTC [1880295] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.001 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.001 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 16:06:17.001 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.001 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.001 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.001 UTC [1880295] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.002 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.002 UTC [1880295] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 16:06:17.002 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.002 UTC [1880295] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-25 16:06:17.002 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.002 UTC [1880295] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.002 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.002 UTC [1880295] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:17.002 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.002 UTC [1880295] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid IN ('(1,1)', '(2,2)', '(3,3)');
2023-07-25 16:06:17.003 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.003 UTC [1880295] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 16:06:17.003 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.003 UTC [1880295] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.003 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.003 UTC [1880295] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.003 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.003 UTC [1880295] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 16:06:17.003 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.003 UTC [1880295] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-25 16:06:17.004 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.004 UTC [1880295] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.004 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.004 UTC [1880295] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:17.004 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.004 UTC [1880295] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.004 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.004 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.004 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.004 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 16:06:17.004 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.004 UTC [1880295] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.005 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.005 UTC [1880295] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 16:06:17.006 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_i3
2023-07-25 16:06:17.006 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.006 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.006 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.006 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_i3 ti1_i2
2023-07-25 16:06:17.006 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.006 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.006 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.006 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 16:06:17.006 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.006 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.006 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_i3
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_i3 ti1_i2
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.007 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 16:06:17.007 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 16:06:17.007 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3 ti1_i2
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 16:06:17.007 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 16:06:17.007 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 16:06:17.007 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.007 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 16:06:17.012 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_btree
2023-07-25 16:06:17.012 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.012 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.012 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_hash
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_gist
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_gin
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_expr
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.013 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.013 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_uniq
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_multi
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_ts
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.014 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.014 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_c2_key
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_hash
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_gist
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.015 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.015 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_gin
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_expr
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_uniq
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_multi
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.016 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.016 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_ts
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_c2_key
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 16:06:17.017 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.017 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.017 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_hash
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gist
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gin
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_expr
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-25 16:06:17.018 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.018 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-25 16:06:17.019 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-25 16:06:17.019 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-25 16:06:17.019 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_uniq
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.019 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.019 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_multi
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.019 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.019 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_ts
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-25 16:06:17.019 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.019 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-25 16:06:17.020 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-25 16:06:17.020 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.020 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.020 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.020 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_c2_key
2023-07-25 16:06:17.020 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-25 16:06:17.020 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.020 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-25 16:06:17.020 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-25 16:06:17.020 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.020 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.020 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.023 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-25 16:06:17.023 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.023 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.023 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.026 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-25 16:06:17.026 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.026 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.026 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.028 UTC [1880295] LOG:  available indexes for IndexScan(ti1):
2023-07-25 16:06:17.028 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.028 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.028 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.031 UTC [1880295] LOG:  available indexes for BitmapScan(ti1):
2023-07-25 16:06:17.031 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.031 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.031 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.034 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1):
2023-07-25 16:06:17.034 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.034 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.034 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 16:06:17.037 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.037 UTC [1880295] STATEMENT:  /*+TidScan(t1)*/ EXPLAIN (COSTS true) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.039 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.039 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE c1 = 100;
2023-07-25 16:06:17.040 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.040 UTC [1880295] STATEMENT:  /*+SeqScan(t1)BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:17.040 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.040 UTC [1880295] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:17.041 UTC [1880295] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 16:06:17.041 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.041 UTC [1880295] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 16:06:17.041 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.041 UTC [1880295] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-25 16:06:17.041 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.041 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	TidScan(b4t1)
	not used hint:
	SeqScan(b1t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.041 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.041 UTC [1880295] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 16:06:17.041 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.041 UTC [1880295] LOG:  available indexes for BitmapScan(b4t2): t2_pkey
2023-07-25 16:06:17.041 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	SeqScan(b2t2)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	BitmapScan(b4t2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.042 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.042 UTC [1880295] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 16:06:17.043 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.043 UTC [1880295] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.043 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.043 UTC [1880295] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.043 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.043 UTC [1880295] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.044 UTC [1880295] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-25 16:06:17.044 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.044 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.044 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.044 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.044 UTC [1880295] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.044 UTC [1880295] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-25 16:06:17.044 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.044 UTC [1880295] LOG:  available indexes for IndexScan(p1c1): p1c1_pkey
2023-07-25 16:06:17.044 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.044 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.044 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 16:06:17.045 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.045 UTC [1880295] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.046 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.046 UTC [1880295] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.046 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.046 UTC [1880295] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.047 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2c1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.047 UTC [1880295] STATEMENT:  /*+IndexScan(p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.050 UTC [1880295] LOG:  available indexes for IndexScan(p1): p1_parent
2023-07-25 16:06:17.050 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-25 16:06:17.050 UTC [1880295] LOG:  available indexes for IndexScan(p1c1): p1c1_c4_expr_idx
2023-07-25 16:06:17.050 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-25 16:06:17.050 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_parent)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.050 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-25 16:06:17.052 UTC [1880295] LOG:  available indexes for IndexScan(p1): p1_i2
2023-07-25 16:06:17.052 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 16:06:17.052 UTC [1880295] LOG:  available indexes for IndexScan(p1c1):
2023-07-25 16:06:17.052 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 16:06:17.052 UTC [1880295] LOG:  available indexes for IndexScan(p1c2):
2023-07-25 16:06:17.052 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 16:06:17.052 UTC [1880295] LOG:  available indexes for IndexScan(p1c3):
2023-07-25 16:06:17.052 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 16:06:17.052 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.052 UTC [1880295] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 16:06:17.055 UTC [1880295] LOG:  available indexes for IndexScan(p2):
2023-07-25 16:06:17.055 UTC [1880295] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.055 UTC [1880295] LOG:  available indexes for IndexScan(p2c1): p2c1_pkey
2023-07-25 16:06:17.055 UTC [1880295] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.055 UTC [1880295] LOG:  available indexes for IndexScan(p2c1c1):
2023-07-25 16:06:17.055 UTC [1880295] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.055 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.055 UTC [1880295] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 16:06:17.058 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	IndexScan(ti1)
	error hint:
	
2023-07-25 16:06:17.058 UTC [1880295] STATEMENT:  /*+IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.058 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-25 16:06:17.058 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.058 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-25 16:06:17.058 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.058 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	BitmapScan(ti1)
	IndexScan(ti1)
	error hint:
	
2023-07-25 16:06:17.058 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1) IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.059 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-25 16:06:17.059 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.059 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	BitmapScan(ti1 ti1_hash)
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-25 16:06:17.059 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.059 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.059 UTC [1880295] STATEMENT:  /*+SeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.059 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.059 UTC [1880295] STATEMENT:  /*+SeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.059 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.059 UTC [1880295] STATEMENT:  /*+SeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.059 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.059 UTC [1880295] STATEMENT:  /*+IndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_btree ti1_pkey
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  available indexes for BitmapScan(ti1): ti1_btree ti1_pkey
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	TidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+TidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.060 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.060 UTC [1880295] STATEMENT:  /*+TidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+TidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+NoSeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+NoIndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.061 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.061 UTC [1880295] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+NoBitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+NoTidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.062 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.062 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.062 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree ti1_pkey
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+NoIndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey)
	
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  available indexes for IndexScanRegexp(ti1): ti1_c2_key
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_.*_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  available indexes for IndexScanRegexp(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.063 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_i.)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.063 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(ti1):
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_pkey
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 .*pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(p1): p1_i2 p1_i
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_i p1c1_c4_expr_idx
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1.*i)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScanRegexp(p1c1):
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  available indexes for IndexScan(ti1):
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.064 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.064 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.065 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_i2 ti1_i1
2023-07-25 16:06:17.065 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.065 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.065 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.065 UTC [1880295] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-25 16:06:17.065 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.065 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.065 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.065 UTC [1880295] LOG:  available indexes for IndexScan(ti1):
2023-07-25 16:06:17.065 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.065 UTC [1880295] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist1 not_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.065 UTC [1880295] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 16:06:17.072 UTC [1880045] LOG:  received SIGHUP, reloading configuration files
2023-07-25 16:06:17.072 UTC [1880045] LOG:  parameter "session_preload_libraries" removed from configuration file, reset to default
2023-07-25 16:06:17.080 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.080 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.080 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.080 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 16:06:17.080 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.080 UTC [1880367] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 16:06:17.080 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.080 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.080 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s1.t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.080 UTC [1880367] STATEMENT:  /*+HashJoin(s1.t1 s1.t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.081 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.081 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.081 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.081 UTC [1880367] STATEMENT:  /*+HashJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.081 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.081 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.081 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-25 16:06:17.081 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:17.082 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s2.t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.082 UTC [1880367] STATEMENT:  /*+HashJoin(s1.t1 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:17.082 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(s2t1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.082 UTC [1880367] STATEMENT:  /*+HashJoin(t1 s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-25 16:06:17.083 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.083 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.083 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.083 UTC [1880367] STATEMENT:  /*+NestLoop(st1 st2)HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.083 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.083 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.083 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-25 16:06:17.083 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.083 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	HashJoin(t2 t2)
	
2023-07-25 16:06:17.083 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t1)HashJoin(t2 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.084 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1 t2 t2)
	
2023-07-25 16:06:17.084 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.085 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.085 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.086 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.086 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.086 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.086 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.089 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.089 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.090 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.090 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2 WHERE t1.oid = t2.oid;
2023-07-25 16:06:17.090 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.090 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.091 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.091 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.091 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(*VALUES* t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.091 UTC [1880367] STATEMENT:  /*+NestLoop(*VALUES* t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.091 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(c1 t1)
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.091 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)HashJoin(t1 c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-25 16:06:17.092 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.092 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.092 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.092 UTC [1880367] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.093 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.093 UTC [1880367] STATEMENT:  /*+MergeJoin(t1 t2)NestLoop(st1 st2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-25 16:06:17.096 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st2 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.096 UTC [1880367] STATEMENT:  /*+HashJoin(t1 st2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 16:06:17.096 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.096 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 16:06:17.098 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.098 UTC [1880367] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 16:06:17.101 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.101 UTC [1880367] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 16:06:17.103 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.103 UTC [1880367] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 16:06:17.104 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.104 UTC [1880367] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 16:06:17.106 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.106 UTC [1880367] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.108 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.108 UTC [1880367] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.112 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.112 UTC [1880367] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:17.120 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.120 UTC [1880367] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-25 16:06:17.122 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(bmt1 c1)
	Leading(c1 bmt1)
	not used hint:
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.122 UTC [1880367] STATEMENT:  /*+
	Leading(c1 bmt1)
	HashJoin(bmt1 c1)
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:17.123 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.123 UTC [1880367] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.126 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	MergeJoin(bmt4 c1)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	HashJoin(bmt3 bmt4 c1)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.126 UTC [1880367] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.129 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	MergeJoin(bmt4 c1)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.129 UTC [1880367] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.130 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r1 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.130 UTC [1880367] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r1)
	MergeJoin(t4 t3 t2 t1 r1)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.132 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	NestLoop(b1t2 b1t3 b1t4)
	HashJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r1_)
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.132 UTC [1880367] STATEMENT:  /*+
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	MergeJoin(b1t4 b1t3 b1t2 b1t1 r1_)
	HashJoin(b1t4 b1t3 b1t2 b1t1)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.133 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.133 UTC [1880367] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.134 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.134 UTC [1880367] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.136 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.136 UTC [1880367] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.136 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.136 UTC [1880367] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.138 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.138 UTC [1880367] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.139 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.139 UTC [1880367] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.139 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.139 UTC [1880367] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.142 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b2t1 b2t2 b2t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.142 UTC [1880367] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.142 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.142 UTC [1880367] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.143 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.143 UTC [1880367] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.143 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-25 16:06:17.143 UTC [1880367] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.144 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.144 UTC [1880367] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.144 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(r4t1 r4t1)
	
2023-07-25 16:06:17.144 UTC [1880367] STATEMENT:  /*+HashJoin(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.145 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.145 UTC [1880367] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.145 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t3)
	NestLoop(t1 t2 t3)
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.145 UTC [1880367] STATEMENT:  /*+ Leading(t3 t1 t2) HashJoin(t3 t1)NestLoop(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.145 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	NestLoop(*VALUES* t1 t2)
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.145 UTC [1880367] STATEMENT:  /*+ Leading(*VALUES* t1 t2) HashJoin(*VALUES* t1)NestLoop(*VALUES* t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.146 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	HashJoin(t2 t3 t4)
	MergeJoin(t1 t2 t3 t4)
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.146 UTC [1880367] STATEMENT:  /*+ Leading(t4 t3 t2 t1) NestLoop(t4 t3)HashJoin(t4 t3 t2)MergeJoin(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.147 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	duplication hint:
	error hint:
	HashJoin(*VALUES* t2 t3)
	MergeJoin(*VALUES* t1 t2 t3)
	Leading(*VALUES* t3 t2 t1)
	
2023-07-25 16:06:17.147 UTC [1880367] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) NestLoop(t4 t3)HashJoin(*VALUES* t3 t2)MergeJoin(*VALUES* t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.147 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.147 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.147 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.147 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.147 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.147 UTC [1880367] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.148 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.148 UTC [1880367] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-25 16:06:17.148 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.148 UTC [1880367] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.148 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.148 UTC [1880367] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.149 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.149 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.149 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.149 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.149 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.149 UTC [1880367] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.149 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.149 UTC [1880367] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.149 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.149 UTC [1880367] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.149 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.149 UTC [1880367] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.150 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.150 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.150 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.150 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.150 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.150 UTC [1880367] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.150 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.150 UTC [1880367] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.150 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.150 UTC [1880367] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.150 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.150 UTC [1880367] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.152 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.152 UTC [1880367] STATEMENT:  /*+MergeJoin(p1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 16:06:17.152 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p1c1 p2c1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.152 UTC [1880367] STATEMENT:  /*+MergeJoin(p1c1 p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 16:06:17.154 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p2 pt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.154 UTC [1880367] STATEMENT:  /*+MergeJoin(pt1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-25 16:06:17.154 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p2c1 pt1_c1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.154 UTC [1880367] STATEMENT:  /*+MergeJoin(pt1_c1 p2c1)*/ /* will ignored */
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-25 16:06:17.154 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 16:06:17.154 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+MergeJoin(t1 t2)HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+MergeJoin(t2 t1)HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+HashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+MergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.155 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.155 UTC [1880367] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.156 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-25 16:06:17.156 UTC [1880367] STATEMENT:  /*+NestLoop()*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 16:06:17.156 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1)
	
2023-07-25 16:06:17.156 UTC [1880367] STATEMENT:  /*+NestLoop(t1)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 16:06:17.156 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.156 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 16:06:17.156 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.156 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2 t3)*/
	SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE false;
2023-07-25 16:06:17.156 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.156 UTC [1880367] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1 FULL OUTER JOIN s1.t2 ON (t1.c1 = t2.c1);
2023-07-25 16:06:17.160 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.160 UTC [1880367] STATEMENT:  /*+ nomemoize(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-25 16:06:17.161 UTC [1880367] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.161 UTC [1880367] STATEMENT:  /*+ nomemoize(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-25 16:06:17.168 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.168 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.169 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.169 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-25 16:06:17.169 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t_4 t_2 t_3 t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.169 UTC [1880385] STATEMENT:  /*+Leading(t_4 t_2 t_3 t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-25 16:06:17.170 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.170 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.170 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t4 s1.t2 s1.t3 s1.t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.170 UTC [1880385] STATEMENT:  /*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.171 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.171 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.171 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t5 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.171 UTC [1880385] STATEMENT:  /*+Leading(t5 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.171 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.171 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.172 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t3 t1)
	
2023-07-25 16:06:17.172 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:17.173 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t1 t2 t3 s2.t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.173 UTC [1880385] STATEMENT:  /*+Leading(s1.t1 t2 t3 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:17.174 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(s2t1 t1 t3 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.174 UTC [1880385] STATEMENT:  /*+Leading(s2t1 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
2023-07-25 16:06:17.176 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.176 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.176 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(st1 st2 st3 st4)
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.176 UTC [1880385] STATEMENT:  /*+Leading(st1 st2 st3 st4)Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.177 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.177 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.177 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4)
	
2023-07-25 16:06:17.177 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.178 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t4)
	
2023-07-25 16:06:17.178 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.178 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4 t2 t3 t1)
	
2023-07-25 16:06:17.178 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.179 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t2 t4)
	
2023-07-25 16:06:17.179 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t2 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.179 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.179 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.181 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.181 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.182 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.182 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.185 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.185 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.187 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.187 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
2023-07-25 16:06:17.188 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.188 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.189 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.189 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t1 (c1, c2, c3, c4), s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.191 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(ct4 ct3 ct2 ct1)
	Leading(st4 st3 st2 st1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.191 UTC [1880385] STATEMENT:  /*+Leading(ct4 ct3 ct2 ct1)Leading(st4 st3 st2 st1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
2023-07-25 16:06:17.192 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.192 UTC [1880385] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.193 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 v1t1_ v1t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.193 UTC [1880385] STATEMENT:  /*+Leading(t4 v1t1_ v1t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.194 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(st4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.194 UTC [1880385] STATEMENT:  /*+Leading(st4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-25 16:06:17.195 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.195 UTC [1880385] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-25 16:06:17.197 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.197 UTC [1880385] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 16:06:17.200 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.200 UTC [1880385] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 16:06:17.201 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.201 UTC [1880385] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 16:06:17.202 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.202 UTC [1880385] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 16:06:17.204 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.204 UTC [1880385] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.207 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.207 UTC [1880385] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.211 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.211 UTC [1880385] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:17.219 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.219 UTC [1880385] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-25 16:06:17.220 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.220 UTC [1880385] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 16:06:17.221 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.221 UTC [1880385] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.224 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.224 UTC [1880385] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.227 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.227 UTC [1880385] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 16:06:17.228 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.228 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r1) */
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.229 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.229 UTC [1880385] STATEMENT:  /*+ Leading(b1t1 b1t2 b1t3 b1t4 r1_) */
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.231 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.231 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.232 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.232 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.233 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.233 UTC [1880385] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.234 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.234 UTC [1880385] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.236 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.236 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.237 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.237 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.237 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.237 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.239 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.239 UTC [1880385] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.240 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.240 UTC [1880385] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.240 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.240 UTC [1880385] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.241 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(v1t1 v1t1)
	
2023-07-25 16:06:17.241 UTC [1880385] STATEMENT:  /*+Leading(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.241 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.241 UTC [1880385] STATEMENT:  /*+Leading(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.242 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(r4t1 r4t1)
	
2023-07-25 16:06:17.242 UTC [1880385] STATEMENT:  /*+Leading(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.242 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.242 UTC [1880385] STATEMENT:  /*+Leading(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.243 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.243 UTC [1880385] STATEMENT:  /*+ Leading(t3 t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.243 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.243 UTC [1880385] STATEMENT:  /*+ Leading(*VALUES* t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.244 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.244 UTC [1880385] STATEMENT:  /*+ Leading(t4 t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.245 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	
2023-07-25 16:06:17.245 UTC [1880385] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.245 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.245 UTC [1880385] STATEMENT:  /*+Leading(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.245 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.245 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.247 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t1 t2 t3)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.247 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.248 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.248 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.248 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 v2t1 v2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.248 UTC [1880385] STATEMENT:  /*+Leading(t1 v2t1 v2t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-25 16:06:17.249 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(v2t1 v2t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.249 UTC [1880385] STATEMENT:  /*+Leading(v2t1 v2t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-25 16:06:17.250 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.250 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.250 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.250 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.251 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.251 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.252 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(p2c1c1 p2c2c1 p2c3c1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.252 UTC [1880385] STATEMENT:  /*+Leading(p2c1c1 p2c2c1 p2c3c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.253 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t2 t3 t1)
	error hint:
	
2023-07-25 16:06:17.253 UTC [1880385] STATEMENT:  /*+Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.253 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	Leading(t2 t3 t1)
	error hint:
	
2023-07-25 16:06:17.253 UTC [1880385] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.253 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-25 16:06:17.253 UTC [1880385] STATEMENT:  /*+Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.253 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	error hint:
	Leading()
	
2023-07-25 16:06:17.253 UTC [1880385] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.254 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-25 16:06:17.254 UTC [1880385] STATEMENT:  /*+Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.254 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1)
	
2023-07-25 16:06:17.254 UTC [1880385] STATEMENT:  /*+Leading(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.254 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.254 UTC [1880385] STATEMENT:  /*+Leading(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.255 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.255 UTC [1880385] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 16:06:17.255 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2))
	
2023-07-25 16:06:17.255 UTC [1880385] STATEMENT:  /*+Leading((t2))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.255 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading((t2 t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.255 UTC [1880385] STATEMENT:  /*+Leading((t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.256 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2 t3 t4))
	
2023-07-25 16:06:17.256 UTC [1880385] STATEMENT:  /*+Leading((t2 t3 t4))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.256 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.256 UTC [1880385] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.257 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t3) t4) t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.257 UTC [1880385] STATEMENT:  /*+Leading((((t1 t3) t4) t2)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.257 UTC [1880385] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t3 (t4 t2))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.257 UTC [1880385] STATEMENT:  /*+Leading((t1 (t3 (t4 t2))))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.265 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.265 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.266 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.266 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.269 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.269 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.269 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.269 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.272 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.272 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.272 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.272 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.275 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.275 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.276 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.276 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.276 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.276 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.280 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.280 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.280 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.280 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.281 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.281 UTC [1880389] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 16:06:17.282 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-25 16:06:17.282 UTC [1880389] STATEMENT:  /*+Set(1234567890123456789012345678901234567890123456789012345678901234 1)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.282 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)
	
2023-07-25 16:06:17.282 UTC [1880389] STATEMENT:  /*+Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.282 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(block_size 16384)
	
2023-07-25 16:06:17.282 UTC [1880389] STATEMENT:  /*+Set(block_size 16384)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.282 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_mode off)
	
2023-07-25 16:06:17.282 UTC [1880389] STATEMENT:  /*+Set(archive_mode off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.283 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_timeout 0)
	
2023-07-25 16:06:17.283 UTC [1880389] STATEMENT:  /*+Set(archive_timeout 0)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.283 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_connections off)
	
2023-07-25 16:06:17.283 UTC [1880389] STATEMENT:  /*+Set(log_connections off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.283 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(log_min_messages WARNING)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.283 UTC [1880389] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.286 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_min_messages WARNING)
	
2023-07-25 16:06:17.286 UTC [1880389] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.286 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.286 UTC [1880389] STATEMENT:  /*+Set(enable_seqscan on)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 16:06:17.289 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	
2023-07-25 16:06:17.289 UTC [1880389] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan off)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 16:06:17.289 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	Set(client_min_messages DEBUG2)
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	
2023-07-25 16:06:17.289 UTC [1880389] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBUG2)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 16:06:17.289 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	Set(enable_indexscan o)
	
2023-07-25 16:06:17.289 UTC [1880389] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan o)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 16:06:17.289 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	Set(client_min_messages DEBU)
	
2023-07-25 16:06:17.289 UTC [1880389] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBU)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 16:06:17.290 UTC [1880389] LOG:  pg_hint_plan:
	used hint:
	IndexScan(a)
	not used hint:
	SeqScan(c)
	duplication hint:
	SeqScan(a)
	error hint:
	NestLoop(a)
	
2023-07-25 16:06:17.290 UTC [1880389] STATEMENT:  /*+SeqScan(a)IndexScan(a)SeqScan(c)NestLoop(a) */
	SELECT * FROM s1.t1 a, s1.t2 b WHERE false;
2023-07-25 16:06:17.299 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.299 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.301 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.301 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 16:06:17.304 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t_1 t_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.304 UTC [1880393] STATEMENT:  /*+Rows(t_1 t_2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 16:06:17.307 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.307 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.310 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s1.t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.310 UTC [1880393] STATEMENT:  /*+Rows(s1.t1 s1.t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.312 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.312 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.315 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.315 UTC [1880393] STATEMENT:  /*+Rows(t3 t4 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.318 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.318 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.323 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-25 16:06:17.323 UTC [1880393] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:17.326 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s2.t1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.326 UTC [1880393] STATEMENT:  /*+Rows(s1.t1 s2.t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 16:06:17.332 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(s2t1 t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.332 UTC [1880393] STATEMENT:  /*+Rows(t1 s2t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-25 16:06:17.338 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.338 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.341 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.341 UTC [1880393] STATEMENT:  /*+Rows(st1 st2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.344 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.344 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.347 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-25 16:06:17.347 UTC [1880393] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.358 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.358 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.365 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.365 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.370 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.370 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.379 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.379 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.386 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.386 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM t_pg_class t1, t_pg_class t2 WHERE t1.oid = t2.oid;
2023-07-25 16:06:17.392 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.392 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.397 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.397 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.400 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(*VALUES* t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.400 UTC [1880393] STATEMENT:  /*+Rows(*VALUES* t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.406 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(c1 t1 +1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.406 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 c1 +1)*/
	EXPLAIN WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-25 16:06:17.412 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.412 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.415 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.415 UTC [1880393] STATEMENT:  /*+Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.420 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.420 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)Rows(st1 st2 #1)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-25 16:06:17.426 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(st2 t1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.426 UTC [1880393] STATEMENT:  /*+Rows(t1 st2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 16:06:17.429 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.429 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 16:06:17.431 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 #1)
	
2023-07-25 16:06:17.431 UTC [1880393] STATEMENT:  /*+Rows(t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.434 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 1)
	
2023-07-25 16:06:17.434 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.437 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #notrows)
	
2023-07-25 16:06:17.437 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #notrows)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.441 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.441 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:17.445 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.445 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:17.449 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.449 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:17.454 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.454 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 16:06:17.457 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.457 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.460 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.460 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.464 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.464 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.467 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.467 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.470 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.470 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	);
2023-07-25 16:06:17.474 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.474 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 16:06:17.479 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.479 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-25 16:06:17.483 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.483 UTC [1880393] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-25 16:06:17.487 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.487 UTC [1880393] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 16:06:17.492 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(c1 c2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 c1 c2 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.492 UTC [1880393] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(c2 c1 #1)Rows(c2 c1 bmt1 #1)Rows(c2 c1 bmt1 bmt2 #1)Rows(c2 c1 bmt1 bmt2 bmt3 #1)Rows(c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1;
2023-07-25 16:06:17.499 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.499 UTC [1880393] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-25 16:06:17.505 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(c2 c3 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(c1 c2 c3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 c1 c2 c3 #1)
	Rows(bmt1 bmt2 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 c3 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.505 UTC [1880393] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(c3 c2 #1)Rows(c3 c2 c1 #1)Rows(c3 c2 c1 bmt1 #1)Rows(c3 c2 c1 bmt1 bmt2 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-25 16:06:17.508 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.508 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-25 16:06:17.511 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	Rows(bmt1 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.511 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt1)
	Rows(bmt1 c1 #1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-25 16:06:17.515 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.515 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	);
2023-07-25 16:06:17.518 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Rows(bmt2 c1 #1)
	Rows(bmt1 bmt2 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.518 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Rows(c1 bmt2 #1)
	Rows(c1 bmt1 bmt2 #1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	)
	;
2023-07-25 16:06:17.530 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.530 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-25 16:06:17.543 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	Rows(b1t3 b1t4 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t3 b3t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t2 b2t3 b2t4 #1)
	Rows(b3t2 b3t3 b3t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.543 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	Rows(b2t4 b2t3 #1)
	Rows(b2t4 b2t3 b2t2 #1)
	Rows(b2t4 b2t3 b2t2 b2t1 #1)
	Rows(b3t4 b3t3 #1)
	Rows(b3t4 b3t3 b3t2 #1)
	Rows(b3t4 b3t3 b3t2 b3t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-25 16:06:17.555 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.555 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-25 16:06:17.566 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Rows(b1t3 b1t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.566 UTC [1880393] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-25 16:06:17.570 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.570 UTC [1880393] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.573 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.573 UTC [1880393] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 t2 t3 t4 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 #2)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.576 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.576 UTC [1880393] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.580 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r1_ #2)
	Rows(b1t1 b1t2 r1_ #2)
	Rows(b1t1 b1t2 b1t3 r1_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r1_ #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.580 UTC [1880393] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(r1_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r1_ b1t1 b1t2 b1t3 #2)
	Rows(r1_ b1t1 b1t2 #2)
	Rows(r1_ b1t1 #2)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.583 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.583 UTC [1880393] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.583 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.583 UTC [1880393] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.587 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.587 UTC [1880393] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.587 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.587 UTC [1880393] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.590 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.590 UTC [1880393] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.591 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.591 UTC [1880393] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.594 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.594 UTC [1880393] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.595 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.595 UTC [1880393] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.598 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.598 UTC [1880393] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.598 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.598 UTC [1880393] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.599 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.599 UTC [1880393] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.602 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.602 UTC [1880393] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.602 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.602 UTC [1880393] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.603 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.603 UTC [1880393] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.606 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.606 UTC [1880393] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.607 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.607 UTC [1880393] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.607 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.607 UTC [1880393] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.611 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b2t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.611 UTC [1880393] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.611 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b1t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.611 UTC [1880393] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.612 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b3t1 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b1t1 r3_ #2)
	Rows(b2t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.612 UTC [1880393] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 16:06:17.615 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-25 16:06:17.615 UTC [1880393] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.617 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	Rows(v1t1 v1t1 #1)
	
2023-07-25 16:06:17.617 UTC [1880393] STATEMENT:  /*+HashJoin(v1t1 v1t1)Rows(v1t1 v1t1 #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.620 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.620 UTC [1880393] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.623 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.623 UTC [1880393] STATEMENT:  /*+NestLoop(v1t1 v1t1_)Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 16:06:17.631 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.631 UTC [1880393] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.634 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	Rows(r4t1 r5t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.634 UTC [1880393] STATEMENT:  /*+NestLoop(r4t1 r5t1)Rows(r4t1 r5t1 #1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.640 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	Rows(t1 t3 #2)
	Rows(t1 t2 t3 #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.640 UTC [1880393] STATEMENT:  /*+ Leading(t3 t1 t2) Rows(t3 t1 #2)Rows(t3 t1 t2 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.643 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	Rows(*VALUES* t1 #2)
	Rows(*VALUES* t1 t2 #20)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.643 UTC [1880393] STATEMENT:  /*+ Leading(*VALUES* t1 t2) Rows(*VALUES* t1 #2)Rows(*VALUES* t1 t2 #20)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 16:06:17.649 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	Rows(t3 t4 #2)
	Rows(t2 t3 t4 #2)
	Rows(t1 t2 t3 t4 #2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.649 UTC [1880393] STATEMENT:  /*+ Leading(t4 t3 t2 t1) Rows(t4 t3 #2) Rows(t4 t3 t2 #2)Rows(t4 t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.652 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #2)
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	Rows(*VALUES* t2 t3 #2)
	Rows(*VALUES* t1 t2 t3 #2)
	
2023-07-25 16:06:17.652 UTC [1880393] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) Rows(t4 t3 #2)Rows(*VALUES* t3 t2 #2)Rows(*VALUES* t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 16:06:17.658 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.658 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.665 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 *0.6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.665 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 *0.6)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.671 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt4 *0.5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.671 UTC [1880393] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt1 *0.5)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 16:06:17.674 UTC [1880393] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 #0)
2023-07-25 16:06:17.674 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.674 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.676 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.676 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #5)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.679 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.679 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.682 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.682 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 -1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.685 UTC [1880393] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -1000)
2023-07-25 16:06:17.685 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1000)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.685 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 -1000)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.688 UTC [1880393] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 *0)
2023-07-25 16:06:17.688 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.688 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 *0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.690 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.690 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 *2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.693 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.693 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 *0.1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.700 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(p1 p2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.700 UTC [1880393] STATEMENT:  /*+Rows(p1 p2 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 16:06:17.706 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(p1c1 p2c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.706 UTC [1880393] STATEMENT:  /*+Rows(p1c1 p2c1 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 16:06:17.712 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 16:06:17.712 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.717 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 16:06:17.717 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.723 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 16:06:17.723 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.729 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 16:06:17.729 UTC [1880393] STATEMENT:  /*+Rows(t2 t1 #1)Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.734 UTC [1880393] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.734 UTC [1880393] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 16:06:17.771 UTC [1881161] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	SeqScan(ft_1)
	SeqScan(ft_2)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.771 UTC [1881161] STATEMENT:  /*+SeqScan(t1)SeqScan(ft_1)SeqScan(ft_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 16:06:17.780 UTC [1881161] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(ft_1 ft_2)
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.780 UTC [1881161] STATEMENT:  /*+MergeJoin(ft_1 ft_2)Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 16:06:17.790 UTC [1881161] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.790 UTC [1881161] STATEMENT:  /*+Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 16:06:17.799 UTC [1881161] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	Rows(ft_1 ft_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.799 UTC [1881161] STATEMENT:  /*+Rows(ft_1 ft_2 #1)Leading(ft_1 ft_2 t1)*/
	EXPLAIN SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 16:06:17.857 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.857 UTC [1881192] STATEMENT:  /*+Parallel(t1 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 16:06:17.858 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(t11 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.858 UTC [1881192] STATEMENT:  /*+Parallel(t11 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 as t11, s1.t1 as t12;
2023-07-25 16:06:17.861 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.861 UTC [1881192] STATEMENT:  /*+Parallel(t1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 16:06:17.862 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.862 UTC [1881192] STATEMENT:  /*+Parallel(t1 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 16:06:17.862 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.862 UTC [1881192] STATEMENT:  /*+Parallel(t1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 16:06:17.864 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 4 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.864 UTC [1881192] STATEMENT:  /*+Parallel(t1 4 hard) */ /* to be gather merge*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ORDER BY s1.t1.c1 LIMIT 4;
2023-07-25 16:06:17.872 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.872 UTC [1881192] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.874 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.874 UTC [1881192] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.877 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.877 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.878 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.878 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.880 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.880 UTC [1881192] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.881 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.881 UTC [1881192] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.886 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.886 UTC [1881192] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 16:06:17.888 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 soft)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.888 UTC [1881192] STATEMENT:  /*+Parallel(p1_c1_c1 8 soft) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 16:06:17.889 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.889 UTC [1881192] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 16:06:17.891 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.891 UTC [1881192] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 16:06:17.901 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.901 UTC [1881192] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.903 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.903 UTC [1881192] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.905 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.905 UTC [1881192] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.907 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.907 UTC [1881192] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.909 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.909 UTC [1881192] STATEMENT:  /*+Parallel(p2 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.911 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.911 UTC [1881192] STATEMENT:  /*+Parallel(p2 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.912 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.912 UTC [1881192] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.914 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.914 UTC [1881192] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.915 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.915 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.917 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.917 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.918 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.918 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.919 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.919 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.920 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.920 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.921 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.921 UTC [1881192] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.922 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	Parallel(p1 0 hard)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.922 UTC [1881192] STATEMENT:  /*+Parallel(p1 0 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 16:06:17.924 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.924 UTC [1881192] STATEMENT:  /*+Parallel(p1 8) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 16:06:17.924 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Set(max_parallel_workers_per_gather 1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.924 UTC [1881192] STATEMENT:  /*+Set(max_parallel_workers_per_gather 1)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 16:06:17.925 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 6 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.925 UTC [1881192] STATEMENT:  /*+Parallel(p1 5 hard)Parallel(p2 6 hard) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 16:06:17.926 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.926 UTC [1881192] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.926 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.926 UTC [1881192] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 16:06:17.927 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Parallel(p1 100x hard)
	Parallel(p1 -1000 hard)
	Parallel(p1 1000000 hard)
	Parallel(p1 8 soft)
	Parallel()
	Parallel()
	
2023-07-25 16:06:17.927 UTC [1881192] STATEMENT:  /*+Parallel(p1 100x hard)Parallel(p1 -1000 hard)Parallel(p1 1000000 hard)
	   Parallel(p1 8 hoge)Parallel(p1)Parallel(p1 100 soft x)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 16:06:17.928 UTC [1881192] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	not used hint:
	IndexScan(*VALUES*)
	SeqScan(cte1)
	TidScan(fs1)
	IndexScan(ft1)
	IndexScan(t)
	Parallel(s1 3 hard)
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.928 UTC [1881192] STATEMENT:  /*+Parallel(p1 5 hard) Parallel(s1 3 hard) IndexScan(ft1) SeqScan(cte1)
	  TidScan(fs1) IndexScan(t) IndexScan(*VALUES*) */
	EXPLAIN (COSTS false) SELECT id FROM p1_c1_c1 as s1 TABLESAMPLE SYSTEM(10)
	 UNION ALL
	SELECT id FROM ft1
	 UNION ALL
	(WITH cte1 AS (SELECT id FROM p1 WHERE id % 2 = 0) SELECT id FROM cte1)
	 UNION ALL
	SELECT userid FROM pg_stat_statements fs1
	 UNION ALL
	SELECT x FROM (VALUES (1), (2), (3)) t(x);
2023-07-25 16:06:17.946 UTC [1880045] LOG:  received SIGHUP, reloading configuration files
2023-07-25 16:06:17.992 UTC [1881200] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.992 UTC [1881200] STATEMENT:  EXPLAIN SELECT * FROM t1 WHERE id = 100;
2023-07-25 16:06:17.993 UTC [1881200] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.993 UTC [1881200] STATEMENT:  EXPLAIN DECLARE c1 CURSOR FOR SELECT * FROM t1 WHERE id = 100;
2023-07-25 16:06:17.993 UTC [1881200] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.993 UTC [1881200] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS SELECT * FROM t1 WHERE id = 100;
2023-07-25 16:06:17.994 UTC [1881200] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.994 UTC [1881200] STATEMENT:  EXPLAIN EXECUTE p1;
2023-07-25 16:06:17.996 UTC [1881200] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:17.996 UTC [1881200] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS EXECUTE p1;
2023-07-25 16:06:18.059 UTC [1881208] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.059 UTC [1881208] STATEMENT:  explain (costs false)
	select * from t1 join t2 on t1.id = t2.id where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-25 16:06:18.062 UTC [1881208] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.062 UTC [1881208] STATEMENT:  /*+ MergeJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-25 16:06:18.063 UTC [1881208] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.063 UTC [1881208] STATEMENT:  /*+ HashJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+MergeJoin(t1 t2)*/' <> '';
2023-07-25 16:06:18.097 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.097 UTC [1881212] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-25 16:06:18.099 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.099 UTC [1881212] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-25 16:06:18.121 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.121 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.121 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.122 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.122 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.122 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.127 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.127 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.127 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.128 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.128 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.128 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.129 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.129 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.129 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.129 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.129 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.129 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.133 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.133 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.133 UTC [1881212] STATEMENT:  call test_hint_transaction();
2023-07-25 16:06:18.134 UTC [1881212] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 16:06:18.134 UTC [1881212] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 16:06:18.134 UTC [1881212] STATEMENT:  call test_hint_transaction();
