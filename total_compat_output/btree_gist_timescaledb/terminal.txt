The files belonging to this database system will be owned by user "abigalek".
This user must also own the server process.

The database cluster will be initialized with locale "en_US.UTF-8".
The default database encoding has accordingly been set to "UTF8".
The default text search configuration will be set to "english".

Data page checksums are disabled.

creating directory pg-15-data ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... posix
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting default time zone ... Etc/UTC
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

initdb: warning: enabling "trust" authentication for local connections
initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    pg-15-dist/bin/pg_ctl -D pg-15-data -l logfile start

waiting for server to start.... done
server started
(using postmaster on Unix socket, default port)
============== dropping database "contrib_regression" ==============
SET
DROP DATABASE
============== creating database "contrib_regression" ==============
CREATE DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
============== installing timescaledb                 ==============
WARNING:  
WELCOME TO
 _____ _                               _     ____________  
|_   _(_)                             | |    |  _  \ ___ \ 
  | |  _ _ __ ___   ___  ___  ___ __ _| | ___| | | | |_/ / 
  | | | |  _ ` _ \ / _ \/ __|/ __/ _` | |/ _ \ | | | ___ \ 
  | | | | | | | | |  __/\__ \ (_| (_| | |  __/ |/ /| |_/ /
  |_| |_|_| |_| |_|\___||___/\___\__,_|_|\___|___/ \____/
               Running version 2.11.1
For more information on TimescaleDB, please visit the following links:

 1. Getting started: https://docs.timescale.com/timescaledb/latest/getting-started
 2. API reference documentation: https://docs.timescale.com/api/latest
 3. How TimescaleDB is designed: https://docs.timescale.com/timescaledb/latest/overview/core-concepts

Note: Please enable telemetry to help us improve our product by running: ALTER DATABASE "contrib_regression" SET timescaledb.telemetry_level = 'basic';

CREATE EXTENSION
============== running regression test queries        ==============
test init                         ... ok           35 ms
test int2                         ... ok           20 ms
test int4                         ... ok           20 ms
test int8                         ... ok           20 ms
test float4                       ... FAILED       22 ms
test float8                       ... FAILED       21 ms
test cash                         ... ok           22 ms
test oid                          ... ok           20 ms
test timestamp                    ... ok           21 ms
test timestamptz                  ... ok           24 ms
test time                         ... ok           21 ms
test timetz                       ... ok          123 ms
test date                         ... ok           20 ms
test interval                     ... ok           21 ms
test macaddr                      ... ok           20 ms
test macaddr8                     ... ok           21 ms
test inet                         ... ok           42 ms
test cidr                         ... ok           25 ms
test text                         ... ok           40 ms
test varchar                      ... ok           23 ms
test char                         ... ok           25 ms
test bytea                        ... ok           34 ms
test bit                          ... ok           21 ms
test varbit                       ... ok           31 ms
test numeric                      ... ok           45 ms
test uuid                         ... ok           24 ms
test not_equal                    ... ok           64 ms
test enum                         ... FAILED       28 ms
test bool                         ... ok           22 ms

=======================
 3 of 29 tests failed. 
=======================

The differences that caused some tests to fail can be viewed in the
file "/home/abigalek/pgext-cli/postgresql-15.3/contrib/btree_gist/regression.diffs".  A copy of the test summary that you see
above is saved in the file "/home/abigalek/pgext-cli/postgresql-15.3/contrib/btree_gist/regression.out".

CREATE EXTENSION
waiting for server to shut down.... done
server stopped
TESTS 
IGNORES 
SKIPS 
(using postmaster on localhost, port 5432)
============== dropping database "single"             ==============
SET
DROP DATABASE
============== dropping role "super_user"             ==============
SET
DROP ROLE
============== dropping role "default_perm_user"      ==============
SET
DROP ROLE
============== dropping role "default_perm_user_2"    ==============
SET
DROP ROLE
============== dropping role "cluster_super_user"     ==============
SET
DROP ROLE
============== dropping role "test_role_1"            ==============
SET
DROP ROLE
============== dropping role "test_role_2"            ==============
SET
DROP ROLE
============== dropping role "test_role_3"            ==============
SET
DROP ROLE
============== dropping role "test_role_4"            ==============
SET
DROP ROLE
============== dropping role "test_role_read_only"    ==============
SET
DROP ROLE
============== creating database "single"             ==============
CREATE DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
ALTER DATABASE
============== creating role "super_user"             ==============
CREATE ROLE
GRANT
============== creating role "default_perm_user"      ==============
CREATE ROLE
GRANT
============== creating role "default_perm_user_2"    ==============
CREATE ROLE
GRANT
============== creating role "cluster_super_user"     ==============
CREATE ROLE
GRANT
============== creating role "test_role_1"            ==============
CREATE ROLE
GRANT
============== creating role "test_role_2"            ==============
CREATE ROLE
GRANT
============== creating role "test_role_3"            ==============
CREATE ROLE
GRANT
============== creating role "test_role_4"            ==============
CREATE ROLE
GRANT
============== creating role "test_role_read_only"    ==============
CREATE ROLE
GRANT
============== running regression test queries        ==============
test alter                        ... ok         2627 ms
test alternate_users              ... ok         1685 ms
test chunk_utils                  ... ok         1891 ms
test index                        ... ok         2200 ms
test pg_dump_unprivileged         ... ok         1518 ms
test tablespace                   ... ok         1513 ms
parallel group (21 tests):  agg_bookends-15 baserel_cache create_table cluster-15 create_hypertable ddl-15 chunks drop_hypertable broken_tables chunk_adaptive create_chunks cursor-15 custom_type ddl_errors delete-15 drop_extension ddl_extra copy-15 append-15 constraint-15 drop_owned
     agg_bookends-15              ... ok        11644 ms
     append-15                    ... ok        11689 ms
     baserel_cache                ... ok        11646 ms
     broken_tables                ... ok        11656 ms
     chunk_adaptive               ... ok        11655 ms
     chunks                       ... ok        11649 ms
     cluster-15                   ... ok        11647 ms
     constraint-15                ... ok        11855 ms
     copy-15                      ... ok        11676 ms
     create_chunks                ... ok        11655 ms
     create_hypertable            ... ok        11646 ms
     create_table                 ... ok        11645 ms
     cursor-15                    ... ok        11655 ms
     custom_type                  ... ok        11655 ms
     ddl-15                       ... ok        11647 ms
     ddl_errors                   ... ok        11654 ms
     ddl_extra                    ... ok        11654 ms
     delete-15                    ... ok        11654 ms
     drop_extension               ... FAILED    11654 ms
     drop_hypertable              ... ok        11647 ms
     drop_owned                   ... ok        11915 ms
parallel group (21 tests):  hash merge grant_hypertable histogram_test insert_returning license dump_meta drop_rename_hypertable null_exclusion insert_single information_views lateral misc partition generated_as_identity extension_scripts parallel-15 drop_schema partitioning insert-15 insert_many
     drop_rename_hypertable       ... ok        15582 ms
     drop_schema                  ... ok        15634 ms
     dump_meta                    ... ok        15582 ms
     extension_scripts            ... ok        15589 ms
     generated_as_identity        ... ok        15588 ms
     grant_hypertable             ... ok        15566 ms
     hash                         ... ok        11824 ms
     histogram_test               ... ok        15581 ms
     information_views            ... ok        15587 ms
     insert-15                    ... ok        16114 ms
     insert_many                  ... ok        18207 ms
     insert_returning             ... ok        15581 ms
     insert_single                ... ok        15581 ms
     lateral                      ... ok        15587 ms
     license                      ... ok        15581 ms
     merge                        ... ok        15548 ms
     misc                         ... ok        15587 ms
     null_exclusion               ... ok        15581 ms
     parallel-15                  ... ok        15587 ms
     partition                    ... ok        15587 ms
     partitioning                 ... ok        15632 ms
parallel group (21 tests):  tableam query-15 partitionwise-15 sql_query reloptions sort_optimization upsert plan_hypertable_inline-15 timestamp triggers plain update-15 size_utils rowsecurity-15 plan_ordered_append plan_expand_hypertable-15 plan_hashagg-15 pg_join truncate trusted_extension relocate_extension
     partitionwise-15             ... ok        19774 ms
     pg_join                      ... ok        20434 ms
     plain                        ... FAILED    19778 ms
     plan_expand_hypertable-15    ... ok        19804 ms
     plan_hashagg-15              ... ok        19805 ms
     plan_hypertable_inline-15    ... ok        19775 ms
     plan_ordered_append          ... ok        19804 ms
     query-15                     ... ok        19768 ms
     relocate_extension           ... ok        21084 ms
     reloptions                   ... ok        19773 ms
     rowsecurity-15               ... ok        19803 ms
     size_utils                   ... ok        19803 ms
     sort_optimization            ... ok        19773 ms
     sql_query                    ... ok        19773 ms
     tableam                      ... ok        19082 ms
     timestamp                    ... ok        19776 ms
     triggers                     ... ok        19776 ms
     truncate                     ... ok        20541 ms
     trusted_extension            ... ok        20541 ms
     update-15                    ... ok        19800 ms
     upsert                       ... ok        19773 ms
parallel group (4 tests):  version util vacuum_parallel vacuum
     util                         ... ok         1758 ms
     vacuum                       ... ok         1761 ms
     vacuum_parallel              ... ok         1761 ms
     version                      ... ok         1732 ms

=======================
 2 of 73 tests failed. 
=======================

The differences that caused some tests to fail can be viewed in the
file "/home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/regression.diffs".  A copy of the test summary that you see
above is saved in the file "/home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/regression.out".

