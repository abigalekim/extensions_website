2023-07-26 07:11:17.395 UTC [2037626] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-26 07:11:17.395 UTC [2037626] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-26 07:11:17.401 UTC [2037626] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-26 07:11:17.411 UTC [2037629] LOG:  database system was shut down at 2023-07-26 07:11:17 UTC
2023-07-26 07:11:17.419 UTC [2037626] LOG:  database system is ready to accept connections
2023-07-26 07:11:17.683 UTC [2037652] ERROR:  log2m modifier must be between 0 and 17
2023-07-26 07:11:17.683 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), -1))
	       from test_khvengxf;
2023-07-26 07:11:17.684 UTC [2037652] ERROR:  log2m modifier must be between 0 and 17
2023-07-26 07:11:17.684 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 32))
	       from test_khvengxf;
2023-07-26 07:11:17.684 UTC [2037652] ERROR:  regwidth modifier must be between 0 and 7
2023-07-26 07:11:17.684 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, -1))
	       from test_khvengxf;
2023-07-26 07:11:17.685 UTC [2037652] ERROR:  regwidth modifier must be between 0 and 7
2023-07-26 07:11:17.685 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 8))
	       from test_khvengxf;
2023-07-26 07:11:17.686 UTC [2037652] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-26 07:11:17.686 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, -2))
	       from test_khvengxf;
2023-07-26 07:11:17.686 UTC [2037652] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-26 07:11:17.686 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 8589934592))
	       from test_khvengxf;
2023-07-26 07:11:17.687 UTC [2037652] ERROR:  sparseon modifier must be 0 or 1
2023-07-26 07:11:17.687 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, -1))
	       from test_khvengxf;
2023-07-26 07:11:17.687 UTC [2037652] ERROR:  sparseon modifier must be 0 or 1
2023-07-26 07:11:17.687 UTC [2037652] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, 2))
	       from test_khvengxf;
2023-07-26 07:11:17.800 UTC [2037664] ERROR:  operator does not exist: double precision || hll_hashval at character 31
2023-07-26 07:11:17.800 UTC [2037664] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-26 07:11:17.800 UTC [2037664] STATEMENT:  SELECT #hll_empty(11,5,256,1) || hll_hash_integer(1,0);
2023-07-26 07:11:17.818 UTC [2037668] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:17.818 UTC [2037668] STATEMENT:  SELECT E'\\x118b7f'::hll(10,5,-1,1);
2023-07-26 07:11:17.818 UTC [2037668] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-26 07:11:17.818 UTC [2037668] STATEMENT:  SELECT E'\\x118b7f'::hll(11,4,-1,1);
2023-07-26 07:11:17.818 UTC [2037668] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-26 07:11:17.818 UTC [2037668] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,64,1);
2023-07-26 07:11:17.819 UTC [2037668] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-26 07:11:17.819 UTC [2037668] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,-1,0);
2023-07-26 07:11:17.819 UTC [2037668] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:17.819 UTC [2037668] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(10,5,-1,1);
2023-07-26 07:11:17.820 UTC [2037668] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-26 07:11:17.820 UTC [2037668] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,4,-1,1);
2023-07-26 07:11:17.820 UTC [2037668] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-26 07:11:17.820 UTC [2037668] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,64,1);
2023-07-26 07:11:17.820 UTC [2037668] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-26 07:11:17.820 UTC [2037668] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,-1,0);
2023-07-26 07:11:17.821 UTC [2037668] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:17.821 UTC [2037668] STATEMENT:  SELECT E'\\x138b7f0001'::hll(10,5,-1,1);
2023-07-26 07:11:17.821 UTC [2037668] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-26 07:11:17.821 UTC [2037668] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,4,-1,1);
2023-07-26 07:11:17.821 UTC [2037668] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-26 07:11:17.821 UTC [2037668] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,64,1);
2023-07-26 07:11:17.821 UTC [2037668] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-26 07:11:17.821 UTC [2037668] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,-1,0);
2023-07-26 07:11:17.823 UTC [2037668] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:17.823 UTC [2037668] STATEMENT:  SELECT E'\\x148b7fhll(10,5,-1,1);
2023-07-26 07:11:17.823 UTC [2037668] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-26 07:11:17.823 UTC [2037668] STATEMENT:  SELECT E'\\x148b7fhll(11,4,-1,1);
2023-07-26 07:11:17.824 UTC [2037668] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-26 07:11:17.824 UTC [2037668] STATEMENT:  SELECT E'\\x148b7fhll(11,5,64,1);
2023-07-26 07:11:17.824 UTC [2037668] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-26 07:11:17.824 UTC [2037668] STATEMENT:  SELECT E'\\x148b7fhll(11,5,-1,0);
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] ERROR:  function hll_hash_boolean(integer, integer) does not exist at character 8
2023-07-26 07:11:34.181 UTC [2037736] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-26 07:11:34.181 UTC [2037736] STATEMENT:  SELECT hll_hash_boolean(0, -1);
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.181 UTC [2037736] WARNING:  negative seed values not compatible
2023-07-26 07:11:34.183 UTC [2037736] ERROR:  operator does not exist: hll || integer at character 20
2023-07-26 07:11:34.183 UTC [2037736] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-26 07:11:34.183 UTC [2037736] STATEMENT:  SELECT hll_empty() || 42;
2023-07-26 07:11:34.183 UTC [2037736] ERROR:  operator does not exist: hll || bigint at character 20
2023-07-26 07:11:34.183 UTC [2037736] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-26 07:11:34.183 UTC [2037736] STATEMENT:  SELECT hll_empty() || 42::bigint;
2023-07-26 07:11:34.275 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.275 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17819' ORDER BY 1;
2023-07-26 07:11:34.281 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.281 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17824' ORDER BY 1;
2023-07-26 07:11:34.289 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.289 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17829' ORDER BY 1;
2023-07-26 07:11:34.295 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.295 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17834' ORDER BY 1;
2023-07-26 07:11:34.302 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.302 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17839' ORDER BY 1;
2023-07-26 07:11:34.304 UTC [2037778] ERROR:  invalid number of type modifiers at character 32
2023-07-26 07:11:34.304 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(10, 4, 64, 0, 42));
2023-07-26 07:11:34.304 UTC [2037778] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-26 07:11:34.304 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(-1));
2023-07-26 07:11:34.310 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.310 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17844' ORDER BY 1;
2023-07-26 07:11:34.312 UTC [2037778] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-26 07:11:34.312 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(31));
2023-07-26 07:11:34.312 UTC [2037778] ERROR:  table "test_qiundgkm" does not exist
2023-07-26 07:11:34.312 UTC [2037778] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-26 07:11:34.312 UTC [2037778] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-26 07:11:34.312 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(32));
2023-07-26 07:11:34.313 UTC [2037778] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-26 07:11:34.313 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, -1));
2023-07-26 07:11:34.319 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.319 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17849' ORDER BY 1;
2023-07-26 07:11:34.326 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.326 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17854' ORDER BY 1;
2023-07-26 07:11:34.328 UTC [2037778] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-26 07:11:34.328 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 8));
2023-07-26 07:11:34.328 UTC [2037778] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-26 07:11:34.328 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, -2));
2023-07-26 07:11:34.335 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.335 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17859' ORDER BY 1;
2023-07-26 07:11:34.342 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.342 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17864' ORDER BY 1;
2023-07-26 07:11:34.352 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.352 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17869' ORDER BY 1;
2023-07-26 07:11:34.354 UTC [2037778] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-26 07:11:34.354 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 4294967296));
2023-07-26 07:11:34.356 UTC [2037778] ERROR:  table "test_qiundgkm" does not exist
2023-07-26 07:11:34.356 UTC [2037778] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-26 07:11:34.356 UTC [2037778] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-26 07:11:34.356 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 8589934592));
2023-07-26 07:11:34.356 UTC [2037778] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-26 07:11:34.356 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, -1));
2023-07-26 07:11:34.366 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.366 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17874' ORDER BY 1;
2023-07-26 07:11:34.377 UTC [2037778] ERROR:  cache lookup failed for type 18
2023-07-26 07:11:34.377 UTC [2037778] STATEMENT:  SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '17879' ORDER BY 1;
2023-07-26 07:11:34.380 UTC [2037778] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-26 07:11:34.380 UTC [2037778] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, 2));
2023-07-26 07:11:34.420 UTC [2037788] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:34.420 UTC [2037788] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (
	E'\\x148b7fhll
	);
2023-07-26 07:11:34.421 UTC [2037788] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:34.421 UTC [2037788] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (hll_empty(11));
2023-07-26 07:11:34.421 UTC [2037788] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:34.421 UTC [2037788] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x118b7f');
2023-07-26 07:11:34.422 UTC [2037788] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-26 07:11:34.422 UTC [2037788] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x128b7f1111111111111111');
