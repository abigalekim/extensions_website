SET search_path TO public, oracle;
-- Tests for the aggregate listagg
SELECT listagg(i::text) from generate_series(1,3) g(i);
ERROR:  function listagg(text) does not exist
LINE 1: SELECT listagg(i::text) from generate_series(1,3) g(i);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT listagg(i::text, ',') from generate_series(1,3) g(i);
ERROR:  function listagg(text, unknown) does not exist
LINE 1: SELECT listagg(i::text, ',') from generate_series(1,3) g(i);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT coalesce(listagg(i::text), '<NULL>') from (SELECT ''::text) g(i);
ERROR:  function listagg(text) does not exist
LINE 1: SELECT coalesce(listagg(i::text), '<NULL>') from (SELECT '':...
                        ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT coalesce(listagg(i::text), '<NULL>') from generate_series(1,0) g(i);
ERROR:  function listagg(text) does not exist
LINE 1: SELECT coalesce(listagg(i::text), '<NULL>') from generate_se...
                        ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT wm_concat(i::text) from generate_series(1,3) g(i);
ERROR:  function wm_concat(text) does not exist
LINE 1: SELECT wm_concat(i::text) from generate_series(1,3) g(i);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Tests for the aggregate median( real | double )
CREATE FUNCTION checkMedianRealOdd()  RETURNS real AS $$
DECLARE
 med real;

BEGIN
	CREATE TABLE median_test (salary real);
        INSERT INTO median_test VALUES (4500);
        INSERT INTO median_test VALUES (NULL);
        INSERT INTO median_test VALUES (2100);
        INSERT INTO median_test VALUES (3600);
        INSERT INTO median_test VALUES (4000);
        SELECT into med median(salary) from median_test;
        DROP TABLE median_test;
        return med;
        
END;
$$ LANGUAGE plpgsql;
CREATE FUNCTION checkMedianRealEven() RETURNS real AS $$
DECLARE
 med real;

BEGIN
        CREATE TABLE median_test (salary real);
        INSERT INTO median_test VALUES (4500);
        INSERT INTO median_test VALUES (1500);
        INSERT INTO median_test VALUES (2100);
        INSERT INTO median_test VALUES (3600);
        INSERT INTO median_test VALUES (1000);
        INSERT INTO median_test VALUES (4000);
        select into med median(salary) from median_test;
        DROP TABLE median_test;
        return med;
END;
$$ LANGUAGE plpgsql;
CREATE FUNCTION checkMedianDoubleOdd() RETURNS double precision AS $$
DECLARE 
  med double precision;
BEGIN
        CREATE TABLE median_test (salary double precision);
        INSERT INTO median_test VALUES (4500);
        INSERT INTO median_test VALUES (1500);
        INSERT INTO median_test VALUES (2100);
        INSERT INTO median_test VALUES (3600);
        INSERT INTO median_test VALUES (4000);
        select into med median(salary) from median_test;
        DROP TABLE median_test;
        return med;
END;
$$ LANGUAGE plpgsql;
CREATE FUNCTION checkMedianDoubleEven() RETURNS double precision AS $$
DECLARE
 med double precision;

BEGIN
        CREATE TABLE median_test (salary double precision);
        INSERT INTO median_test VALUES (4500);
        INSERT INTO median_test VALUES (1500);
        INSERT INTO median_test VALUES (2100);
        INSERT INTO median_test VALUES (3600);
        INSERT INTO median_test VALUES (4000);
        INSERT INTO median_test VALUES (1000);
        select into med median(salary) from median_test;
        DROP TABLE median_test;
        return med;
END;
$$ LANGUAGE plpgsql;
SELECT checkMedianRealOdd();
ERROR:  function median(real) does not exist
LINE 1: SELECT          median(salary) from median_test
                        ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  SELECT          median(salary) from median_test
CONTEXT:  PL/pgSQL function checkmedianrealodd() line 12 at SQL statement
SELECT checkMedianRealEven();
ERROR:  function median(real) does not exist
LINE 1: select          median(salary) from median_test
                        ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  select          median(salary) from median_test
CONTEXT:  PL/pgSQL function checkmedianrealeven() line 13 at SQL statement
SELECT checkMedianDoubleOdd();
ERROR:  function median(double precision) does not exist
LINE 1: select          median(salary) from median_test
                        ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  select          median(salary) from median_test
CONTEXT:  PL/pgSQL function checkmediandoubleodd() line 11 at SQL statement
SELECT checkMedianDoubleEven();
ERROR:  function median(double precision) does not exist
LINE 1: select          median(salary) from median_test
                        ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
QUERY:  select          median(salary) from median_test
CONTEXT:  PL/pgSQL function checkmediandoubleeven() line 13 at SQL statement
DROP FUNCTION checkMedianRealOdd();
DROP FUNCTION checkMedianRealEven();
DROP FUNCTION checkMedianDoubleOdd();
DROP FUNCTION checkMedianDoubleEven();
