\set ECHO none
SET search_path TO public, oracle;
--
-- test built-in date type oracle compatibility functions
--
SELECT add_months (date '2003-08-01', 3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2003-08-01', 3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2003-08-01', -3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2003-08-01', -3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2003-08-21', -3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2003-08-21', -3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2003-01-31', 1);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2003-01-31', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-02-28', 1);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-02-28', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-02-29', 1);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-02-29', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-01-31', 12);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-01-31', 12);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-01-31', -12);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-01-31', -12);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-01-31', 95903);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-01-31', 95903);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-01-31', -80640);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-01-31', -80640);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '03-21-2008',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '03-21-2008',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '21-MAR-2008',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '21-MAR-2008',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '21-MAR-08',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '21-MAR-08',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date '2008-MAR-21',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date '2008-MAR-21',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months (date 'March 21,2008',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months (date 'March 21,2008',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months(date '03/21/2008',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months(date '03/21/2008',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months(date '20080321',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months(date '20080321',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months(date '080321',3);
ERROR:  function add_months(date, integer) does not exist
LINE 1: SELECT add_months(date '080321',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2003-08-01 10:12:21', 3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2003-08-01 10:12:21', 3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2003-08-01 10:21:21', -3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2003-08-01 10:21:21', -3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2003-08-21 12:21:21', -3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2003-08-21 12:21:21', -3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2003-01-31 01:12:45', 1);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2003-01-31 01:12:45', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-02-28 02:12:12', 1);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-02-28 02:12:12', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-02-29 12:12:12', 1);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-02-29 12:12:12', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-01-31 11:11:21', 12);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-01-31 11:11:21', 12);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-01-31 11:21:21', -12);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-01-31 11:21:21', -12);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-01-31 12:12:12', 95903);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-01-31 12:12:12', 95903);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-01-31 11:32:12', -80640);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-01-31 11:32:12', -80640);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('03-21-2008 08:12:22',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('03-21-2008 08:12:22',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('21-MAR-2008 06:02:12',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('21-MAR-2008 06:02:12',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('21-MAR-08 12:11:22',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('21-MAR-08 12:11:22',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('2008-MAR-21 11:32:43',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('2008-MAR-21 11:32:43',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months ('March 21,2008 12:32:12',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months ('March 21,2008 12:32:12',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months('03/21/2008 12:32:12',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months('03/21/2008 12:32:12',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months('20080321 123244',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months('20080321 123244',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT add_months('080321 121212',3);
ERROR:  function add_months(unknown, integer) does not exist
LINE 1: SELECT add_months('080321 121212',3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(to_date('2003/03/15', 'yyyy/mm/dd'));
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(to_date('2003/03/15', 'yyyy/mm/dd'));
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(to_date('2003/02/03', 'yyyy/mm/dd'));
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(to_date('2003/02/03', 'yyyy/mm/dd'));
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(to_date('2004/02/03', 'yyyy/mm/dd'));
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(to_date('2004/02/03', 'yyyy/mm/dd'));
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(date '1900-02-01');
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(date '1900-02-01');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(date '2000-02-01');
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(date '2000-02-01');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(date '2007-02-01');
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(date '2007-02-01');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(date '2008-02-01');
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(date '2008-02-01');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO oracle,"$user", public, pg_catalog;
SELECT last_day(to_date('2003/03/15 11:12:21', 'yyyy/mm/dd hh:mi:ss'));
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(to_date('2003/03/15 11:12:21', 'yyyy/mm/dd h...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(to_date('2003/02/03 10:21:32', 'yyyy/mm/dd hh:mi:ss'));
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(to_date('2003/02/03 10:21:32', 'yyyy/mm/dd h...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day(to_date('2004/02/03 11:32:12', 'yyyy/mm/dd hh:mi:ss'));
ERROR:  function last_day(date) does not exist
LINE 1: SELECT last_day(to_date('2004/02/03 11:32:12', 'yyyy/mm/dd h...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day('1900-02-01 12:12:11');
ERROR:  function last_day(unknown) does not exist
LINE 1: SELECT last_day('1900-02-01 12:12:11');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day('2000-02-01 121143');
ERROR:  function last_day(unknown) does not exist
LINE 1: SELECT last_day('2000-02-01 121143');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day('2007-02-01 12:21:33');
ERROR:  function last_day(unknown) does not exist
LINE 1: SELECT last_day('2007-02-01 12:21:33');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT last_day('2008-02-01 121212');
ERROR:  function last_day(unknown) does not exist
LINE 1: SELECT last_day('2008-02-01 121212');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO public, oracle;
SELECT next_day (date '2003-08-01', 'TUESDAY');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: SELECT next_day (date '2003-08-01', 'TUESDAY');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day (date '2003-08-06', 'WEDNESDAY');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: SELECT next_day (date '2003-08-06', 'WEDNESDAY');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day (date '2003-08-06', 'SUNDAY');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: SELECT next_day (date '2003-08-06', 'SUNDAY');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day (date '2008-01-01', 'sun');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: SELECT next_day (date '2008-01-01', 'sun');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day (date '2008-01-01', 'sunAAA');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: SELECT next_day (date '2008-01-01', 'sunAAA');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day (date '2008-01-01', 1);
ERROR:  function next_day(date, integer) does not exist
LINE 1: SELECT next_day (date '2008-01-01', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day (date '2008-01-01', 7);
ERROR:  function next_day(date, integer) does not exist
LINE 1: SELECT next_day (date '2008-01-01', 7);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2003-08-01 111211', 'TUESDAY');
ERROR:  function next_day(unknown, unknown) does not exist
LINE 1: SELECT next_day ('2003-08-01 111211', 'TUESDAY');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2003-08-06 10:11:43', 'WEDNESDAY');
ERROR:  function next_day(unknown, unknown) does not exist
LINE 1: SELECT next_day ('2003-08-06 10:11:43', 'WEDNESDAY');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2003-08-06 11:21:21', 'SUNDAY');
ERROR:  function next_day(unknown, unknown) does not exist
LINE 1: SELECT next_day ('2003-08-06 11:21:21', 'SUNDAY');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2008-01-01 111343', 'sun');
ERROR:  function next_day(unknown, unknown) does not exist
LINE 1: SELECT next_day ('2008-01-01 111343', 'sun');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2008-01-01 121212', 'sunAAA');
ERROR:  function next_day(unknown, unknown) does not exist
LINE 1: SELECT next_day ('2008-01-01 121212', 'sunAAA');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2008-01-01 111213', 1);
ERROR:  function next_day(unknown, integer) does not exist
LINE 1: SELECT next_day ('2008-01-01 111213', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT next_day ('2008-01-01 11:12:13', 7);
ERROR:  function next_day(unknown, integer) does not exist
LINE 1: SELECT next_day ('2008-01-01 11:12:13', 7);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/01/01', 'yyyy/mm/dd'), to_date ('2003/03/14', 'yyyy/mm/dd'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/01/01', 'yyyy/mm/dd'),...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/07/01', 'yyyy/mm/dd'), to_date ('2003/03/14', 'yyyy/mm/dd'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/07/01', 'yyyy/mm/dd'),...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/07/02', 'yyyy/mm/dd'), to_date ('2003/07/02', 'yyyy/mm/dd'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/07/02', 'yyyy/mm/dd'),...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/08/02', 'yyyy/mm/dd'), to_date ('2003/06/02', 'yyyy/mm/dd'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/08/02', 'yyyy/mm/dd'),...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2007-02-28', '2007-04-30');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2007-02-28', '2007-04-30');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2008-01-31', '2008-02-29');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2008-01-31', '2008-02-29');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2008-02-29', '2008-03-31');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2008-02-29', '2008-03-31');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2008-02-29', '2008-04-30');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2008-02-29', '2008-04-30');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT trunc(months_between('21-feb-2008', '2008-02-29'));
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT trunc(months_between('21-feb-2008', '2008-02-29'));
                     ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/01/01 12:12:12', 'yyyy/mm/dd h24:mi:ss'), to_date ('2003/03/14 11:11:11', 'yyyy/mm/dd h24:mi:ss'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/01/01 12:12:12', 'yyyy...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/07/01 10:11:11', 'yyyy/mm/dd h24:mi:ss'), to_date ('2003/03/14 10:12:12', 'yyyy/mm/dd h24:mi:ss'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/07/01 10:11:11', 'yyyy...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_date ('2003/07/02 11:21:21', 'yyyy/mm/dd h24:mi:ss'), to_date ('2003/07/02 11:11:11', 'yyyy/mm/dd h24:mi:ss'));
ERROR:  function months_between(date, date) does not exist
LINE 1: SELECT months_between (to_date ('2003/07/02 11:21:21', 'yyyy...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between (to_timestamp ('2003/08/02 10:11:12', 'yyyy/mm/dd h24:mi:ss'), to_date ('2003/06/02 10:10:11', 'yyyy/mm/dd h24:mi:ss'));
ERROR:  function months_between(timestamp with time zone, date) does not exist
LINE 1: SELECT months_between (to_timestamp ('2003/08/02 10:11:12', ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2007-02-28 111111', '2007-04-30 112121');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2007-02-28 111111', '2007-04-30 1121...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2008-01-31 11:32:11', '2008-02-29 11:12:12');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2008-01-31 11:32:11', '2008-02-29 11...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2008-02-29 10:11:13', '2008-03-31 10:12:11');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2008-02-29 10:11:13', '2008-03-31 10...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT months_between ('2008-02-29 111111', '2008-04-30 12:12:12');
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT months_between ('2008-02-29 111111', '2008-04-30 12:1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT trunc(months_between('21-feb-2008 12:11:11', '2008-02-29 11:11:11'));
ERROR:  function months_between(unknown, unknown) does not exist
LINE 1: SELECT trunc(months_between('21-feb-2008 12:11:11', '2008-02...
                     ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select length('jmenuji se Pavel Stehule'),dbms_pipe.pack_message('jmenuji se Pavel Stehule');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select length('jmenuji se Pavel Stehule'),dbms_pipe.pack_mes...
                                                  ^
select length('a bydlim ve Skalici'),dbms_pipe.pack_message('a bydlim ve Skalici');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select length('a bydlim ve Skalici'),dbms_pipe.pack_message(...
                                             ^
select dbms_pipe.send_message('pavel',0,1);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('pavel',0,1);
               ^
select dbms_pipe.send_message('pavel',0,2);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('pavel',0,2);
               ^
select dbms_pipe.receive_message('pavel',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('pavel',0);
               ^
select '>>>>'||dbms_pipe.unpack_message_text()||'<<<<';
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select '>>>>'||dbms_pipe.unpack_message_text()||'<<<<';
                       ^
select '>>>>'||dbms_pipe.unpack_message_text()||'<<<<';
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select '>>>>'||dbms_pipe.unpack_message_text()||'<<<<';
                       ^
select dbms_pipe.receive_message('pavel',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('pavel',0);
               ^
select dbms_pipe.purge('bob');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.purge('bob');
               ^
select dbms_pipe.reset_buffer();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.reset_buffer();
               ^
select dbms_pipe.pack_message('012345678901234+1');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message('012345678901234+1');
               ^
select dbms_pipe.send_message('bob',0,10);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('bob',0,10);
               ^
select dbms_pipe.pack_message('012345678901234+2');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message('012345678901234+2');
               ^
select dbms_pipe.send_message('bob',0,10);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('bob',0,10);
               ^
select dbms_pipe.pack_message('012345678901234+3');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message('012345678901234+3');
               ^
select dbms_pipe.send_message('bob',0,10);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('bob',0,10);
               ^
--------------------------------------------
select dbms_pipe.receive_message('bob',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('bob',0);
               ^
select dbms_pipe.unpack_message_text();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_text();
               ^
select dbms_pipe.receive_message('bob',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('bob',0);
               ^
select dbms_pipe.unpack_message_text();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_text();
               ^
select dbms_pipe.receive_message('bob',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('bob',0);
               ^
select dbms_pipe.unpack_message_text();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_text();
               ^
select dbms_pipe.unique_session_name() LIKE 'PG$PIPE$%';
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unique_session_name() LIKE 'PG$PIPE$%';
               ^
select dbms_pipe.pack_message('012345678901234-1');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message('012345678901234-1');
               ^
select dbms_pipe.send_message('bob',0,10);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('bob',0,10);
               ^
select dbms_pipe.receive_message('bob',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('bob',0);
               ^
select dbms_pipe.unpack_message_text();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_text();
               ^
select dbms_pipe.pack_message('012345678901234-2');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message('012345678901234-2');
               ^
select dbms_pipe.send_message('bob',0,10);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('bob',0,10);
               ^
select dbms_pipe.send_message('bob',0,10);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('bob',0,10);
               ^
select dbms_pipe.receive_message('bob',0);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('bob',0);
               ^
select dbms_pipe.unpack_message_text();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_text();
               ^
select dbms_pipe.pack_message(TO_DATE('2006-10-11', 'YYYY-MM-DD'));
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message(TO_DATE('2006-10-11', 'YYYY-MM...
               ^
select dbms_pipe.send_message('test_date');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('test_date');
               ^
select dbms_pipe.receive_message('test_date');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('test_date');
               ^
select dbms_pipe.next_item_type();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.next_item_type();
               ^
select dbms_pipe.unpack_message_date();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_date();
               ^
select dbms_pipe.pack_message(to_timestamp('2008-10-30 01:23:45', 'YYYY-MM-DD HH24:MI:SS'));
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message(to_timestamp('2008-10-30 01:23...
               ^
select dbms_pipe.send_message('test_timestamp');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('test_timestamp');
               ^
select dbms_pipe.receive_message('test_timestamp');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('test_timestamp');
               ^
select dbms_pipe.next_item_type();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.next_item_type();
               ^
select to_char(dbms_pipe.unpack_message_timestamp(), 'YYYY-MM-DD HH24:MI:SS');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select to_char(dbms_pipe.unpack_message_timestamp(), 'YYYY-M...
                       ^
select dbms_pipe.pack_message(6262626262::numeric);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.pack_message(6262626262::numeric);
               ^
select dbms_pipe.send_message('test_int');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.send_message('test_int');
               ^
select dbms_pipe.receive_message('test_int');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.receive_message('test_int');
               ^
select dbms_pipe.next_item_type();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.next_item_type();
               ^
select dbms_pipe.unpack_message_number();
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.unpack_message_number();
               ^
select dbms_pipe.purge('bob');
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.purge('bob');
               ^
select name, items, "limit", private, owner from dbms_pipe.db_pipes where name = 'bob';
ERROR:  relation "dbms_pipe.db_pipes" does not exist
LINE 1: select name, items, "limit", private, owner from dbms_pipe.d...
                                                         ^
select PLVstr.betwn('Harry and Sally are very happy', 7, 9);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 7, 9);
               ^
select PLVstr.betwn('Harry and Sally are very happy', 7, 9, FALSE);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 7, 9, ...
               ^
select PLVstr.betwn('Harry and Sally are very happy', -3, -1);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', -3, -1...
               ^
select PLVstr.betwn('Harry and Sally are very happy', 'a', 'ry');
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 'a', '...
               ^
select PLVstr.betwn('Harry and Sally are very happy', 'a', 'ry', 1,1,FALSE,FALSE);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 'a', '...
               ^
select PLVstr.betwn('Harry and Sally are very happy', 'a', 'ry', 2,1,TRUE,FALSE);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 'a', '...
               ^
select PLVstr.betwn('Harry and Sally are very happy', 'a', 'y', 2,1);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 'a', '...
               ^
select PLVstr.betwn('Harry and Sally are very happy', 'a', 'a', 2, 2);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 'a', '...
               ^
select PLVstr.betwn('Harry and Sally are very happy', 'a', 'a', 2, 3, FALSE,FALSE);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.betwn('Harry and Sally are very happy', 'a', '...
               ^
select plvsubst.string('My name is %s %s.', ARRAY['Pavel','Stěhule']);
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is %s %s.', ARRAY['Pavel','S...
               ^
select plvsubst.string('My name is % %.', ARRAY['Pavel','Stěhule'], '%');
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is % %.', ARRAY['Pavel','Stě...
               ^
select plvsubst.string('My name is %s.', ARRAY['Stěhule']);
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is %s.', ARRAY['Stěhule']);
               ^
select plvsubst.string('My name is %s %s.', 'Pavel,Stěhule');
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is %s %s.', 'Pavel,Stěhule')...
               ^
select plvsubst.string('My name is %s %s.', 'Pavel|Stěhule','|');
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is %s %s.', 'Pavel|Stěhule',...
               ^
select plvsubst.string('My name is %s.', 'Stěhule');
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is %s.', 'Stěhule');
               ^
select plvsubst.string('My name is %s.', '');
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is %s.', '');
               ^
select plvsubst.string('My name is empty.', '');
ERROR:  schema "plvsubst" does not exist
LINE 1: select plvsubst.string('My name is empty.', '');
               ^
select round(to_date ('22-AUG-03', 'DD-MON-YY'),'YEAR')  =  to_date ('01-JAN-04', 'DD-MON-YY');
ERROR:  function round(date, unknown) does not exist
LINE 1: select round(to_date ('22-AUG-03', 'DD-MON-YY'),'YEAR')  =  ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(to_date ('22-AUG-03', 'DD-MON-YY'),'Q')  =  to_date ('01-OCT-03', 'DD-MON-YY');
ERROR:  function round(date, unknown) does not exist
LINE 1: select round(to_date ('22-AUG-03', 'DD-MON-YY'),'Q')  =  to_...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(to_date ('22-AUG-03', 'DD-MON-YY'),'MONTH') =  to_date ('01-SEP-03', 'DD-MON-YY');
ERROR:  function round(date, unknown) does not exist
LINE 1: select round(to_date ('22-AUG-03', 'DD-MON-YY'),'MONTH') =  ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(to_date ('22-AUG-03', 'DD-MON-YY'),'DDD')  =  to_date ('22-AUG-03', 'DD-MON-YY');
ERROR:  function round(date, unknown) does not exist
LINE 1: select round(to_date ('22-AUG-03', 'DD-MON-YY'),'DDD')  =  t...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(to_date ('22-AUG-03', 'DD-MON-YY'),'DAY')  =  to_date ('24-AUG-03', 'DD-MON-YY');
ERROR:  function round(date, unknown) does not exist
LINE 1: select round(to_date ('22-AUG-03', 'DD-MON-YY'),'DAY')  =  t...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'YEAR')  =  to_date ('01-JAN-03', 'DD-MON-YY');
ERROR:  function trunc(date, unknown) does not exist
LINE 1: select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'YEAR')  =  ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'Q')  =  to_date ('01-JUL-03', 'DD-MON-YY');
ERROR:  function trunc(date, unknown) does not exist
LINE 1: select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'Q')  =  to_...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'MONTH') =  to_date ('01-AUG-03', 'DD-MON-YY');
ERROR:  function trunc(date, unknown) does not exist
LINE 1: select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'MONTH') =  ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'DDD')  =  to_date ('22-AUG-03', 'DD-MON-YY');
ERROR:  function trunc(date, unknown) does not exist
LINE 1: select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'DDD')  =  t...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'DAY')  =  to_date ('17-AUG-03', 'DD-MON-YY');
ERROR:  function trunc(date, unknown) does not exist
LINE 1: select trunc(to_date('22-AUG-03', 'DD-MON-YY'), 'DAY')  =  t...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','YEAR') = '2004-01-01 00:00:00-08';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','Q') = '2004-10-01 00:00:00-07';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','MONTH') = '2004-10-01 00:00:00-07';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','DDD') = '2004-10-19 00:00:00-07';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','DAY') = '2004-10-17 00:00:00-07';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','HH') = '2004-10-19 01:00:00-07';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+02','MI') = '2004-10-19 01:23:00-07';
ERROR:  function trunc(timestamp with time zone, unknown) does not exist
LINE 1: select trunc(TIMESTAMP WITH TIME ZONE '2004-10-19 10:23:54+0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select next_day(to_date('01-Aug-03', 'DD-MON-YY'), 'TUESDAY')  =  to_date ('05-Aug-03', 'DD-MON-YY');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: select next_day(to_date('01-Aug-03', 'DD-MON-YY'), 'TUESDAY'...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select next_day(to_date('06-Aug-03', 'DD-MON-YY'), 'WEDNESDAY') =  to_date ('13-Aug-03', 'DD-MON-YY');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: select next_day(to_date('06-Aug-03', 'DD-MON-YY'), 'WEDNESDA...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select next_day(to_date('06-Aug-03', 'DD-MON-YY'), 'SUNDAY')  =  to_date ('10-Aug-03', 'DD-MON-YY');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: select next_day(to_date('06-Aug-03', 'DD-MON-YY'), 'SUNDAY')...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO oracle,"$user", public, pg_catalog;
select next_day(to_date('01-Aug-03 101111', 'DD-MON-YY h24miss'), 'TUESDAY') = to_date ('05-Aug-03 101111', 'DD-MON-YY h24miss');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: select next_day(to_date('01-Aug-03 101111', 'DD-MON-YY h24mi...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select next_day(to_date('06-Aug-03 10:12:13', 'DD-MON-YY H24:MI:SS'), 'WEDNESDAY') = to_date ('13-Aug-03 10:12:13', 'DD-MON-YY H24:MI:SS');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: select next_day(to_date('06-Aug-03 10:12:13', 'DD-MON-YY H24...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select next_day(to_date('06-Aug-03 11:11:11', 'DD-MON-YY HH:MI:SS'), 'SUNDAY') = to_date ('10-Aug-03 11:11:11', 'DD-MON-YY HH:MI:SS');
ERROR:  function next_day(date, unknown) does not exist
LINE 1: select next_day(to_date('06-Aug-03 11:11:11', 'DD-MON-YY HH:...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO public,oracle;
select instr('Tech on the net', 'e') =2;
ERROR:  function instr(unknown, unknown) does not exist
LINE 1: select instr('Tech on the net', 'e') =2;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select instr('Tech on the net', 'e', 1, 1) = 2;
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select instr('Tech on the net', 'e', 1, 1) = 2;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select instr('Tech on the net', 'e', 1, 2) = 11;
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select instr('Tech on the net', 'e', 1, 2) = 11;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select instr('Tech on the net', 'e', 1, 3) = 14;
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select instr('Tech on the net', 'e', 1, 3) = 14;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select instr('Tech on the net', 'e', -3, 2) = 2;
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select instr('Tech on the net', 'e', -3, 2) = 2;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select instr('abc', NULL) IS NULL;
ERROR:  function instr(unknown, unknown) does not exist
LINE 1: select instr('abc', NULL) IS NULL;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 1 = instr('abc', '');
ERROR:  function instr(unknown, unknown) does not exist
LINE 1: select 1 = instr('abc', '');
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 1 = instr('abc', 'a');
ERROR:  function instr(unknown, unknown) does not exist
LINE 1: select 1 = instr('abc', 'a');
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 3 = instr('abc', 'c');
ERROR:  function instr(unknown, unknown) does not exist
LINE 1: select 3 = instr('abc', 'c');
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 0 = instr('abc', 'z');
ERROR:  function instr(unknown, unknown) does not exist
LINE 1: select 0 = instr('abc', 'z');
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 1 = instr('abcabcabc', 'abca', 1);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 1 = instr('abcabcabc', 'abca', 1);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 4 = instr('abcabcabc', 'abca', 2);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 4 = instr('abcabcabc', 'abca', 2);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 0 = instr('abcabcabc', 'abca', 7);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 0 = instr('abcabcabc', 'abca', 7);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 0 = instr('abcabcabc', 'abca', 9);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 0 = instr('abcabcabc', 'abca', 9);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 4 = instr('abcabcabc', 'abca', -1);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 4 = instr('abcabcabc', 'abca', -1);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 1 = instr('abcabcabc', 'abca', -8);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 1 = instr('abcabcabc', 'abca', -8);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 1 = instr('abcabcabc', 'abca', -9);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 1 = instr('abcabcabc', 'abca', -9);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 0 = instr('abcabcabc', 'abca', -10);
ERROR:  function instr(unknown, unknown, integer) does not exist
LINE 1: select 0 = instr('abcabcabc', 'abca', -10);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 1 = instr('abcabcabc', 'abca', 1, 1);
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select 1 = instr('abcabcabc', 'abca', 1, 1);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 4 = instr('abcabcabc', 'abca', 1, 2);
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select 4 = instr('abcabcabc', 'abca', 1, 2);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select 0 = instr('abcabcabc', 'abca', 1, 3);
ERROR:  function instr(unknown, unknown, integer, integer) does not exist
LINE 1: select 0 = instr('abcabcabc', 'abca', 1, 3);
                   ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select oracle.substr('This is a test', 6, 2) = 'is';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('This is a test', 6, 2) = 'is';
               ^
select oracle.substr('This is a test', 6) =  'is a test';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('This is a test', 6) =  'is a test';
               ^
select oracle.substr('TechOnTheNet', 1, 4) =  'Tech';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('TechOnTheNet', 1, 4) =  'Tech';
               ^
select oracle.substr('TechOnTheNet', -3, 3) =  'Net';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('TechOnTheNet', -3, 3) =  'Net';
               ^
select oracle.substr('TechOnTheNet', -6, 3) =  'The';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('TechOnTheNet', -6, 3) =  'The';
               ^
select oracle.substr('TechOnTheNet', -8, 2) =  'On';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('TechOnTheNet', -8, 2) =  'On';
               ^
select oracle.substr('TechOnTheNet', -8, 0) =  '';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('TechOnTheNet', -8, 0) =  '';
               ^
select oracle.substr('TechOnTheNet', -8, -1) =  '';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('TechOnTheNet', -8, -1) =  '';
               ^
select oracle.substr(1234567,3.6::smallint)='4567';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::smallint)='4567';
               ^
select oracle.substr(1234567,3.6::int)='4567';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::int)='4567';
               ^
select oracle.substr(1234567,3.6::bigint)='4567';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::bigint)='4567';
               ^
select oracle.substr(1234567,3.6::numeric)='34567';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::numeric)='34567';
               ^
select oracle.substr(1234567,-1)='7';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,-1)='7';
               ^
select oracle.substr(1234567,3.6::smallint,2.6)='45';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::smallint,2.6)='45';
               ^
select oracle.substr(1234567,3.6::smallint,2.6::smallint)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::smallint,2.6::smallint)='4...
               ^
select oracle.substr(1234567,3.6::smallint,2.6::int)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::smallint,2.6::int)='456';
               ^
select oracle.substr(1234567,3.6::smallint,2.6::bigint)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::smallint,2.6::bigint)='456...
               ^
select oracle.substr(1234567,3.6::smallint,2.6::numeric)='45';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::smallint,2.6::numeric)='45...
               ^
select oracle.substr(1234567,3.6::int,2.6::smallint)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::int,2.6::smallint)='456';
               ^
select oracle.substr(1234567,3.6::int,2.6::int)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::int,2.6::int)='456';
               ^
select oracle.substr(1234567,3.6::int,2.6::bigint)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::int,2.6::bigint)='456';
               ^
select oracle.substr(1234567,3.6::int,2.6::numeric)='45';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::int,2.6::numeric)='45';
               ^
select oracle.substr(1234567,3.6::bigint,2.6::smallint)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::bigint,2.6::smallint)='456...
               ^
select oracle.substr(1234567,3.6::bigint,2.6::int)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::bigint,2.6::int)='456';
               ^
select oracle.substr(1234567,3.6::bigint,2.6::bigint)='456';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::bigint,2.6::bigint)='456';
               ^
select oracle.substr(1234567,3.6::bigint,2.6::numeric)='45';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::bigint,2.6::numeric)='45';
               ^
select oracle.substr(1234567,3.6::numeric,2.6::smallint)='345';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::numeric,2.6::smallint)='34...
               ^
select oracle.substr(1234567,3.6::numeric,2.6::int)='345';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::numeric,2.6::int)='345';
               ^
select oracle.substr(1234567,3.6::numeric,2.6::bigint)='345';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::numeric,2.6::bigint)='345'...
               ^
select oracle.substr(1234567,3.6::numeric,2.6::numeric)='34';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr(1234567,3.6::numeric,2.6::numeric)='34'...
               ^
select oracle.substr('abcdef'::varchar,3.6::smallint)='def';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.6::smallint)='def';
               ^
select oracle.substr('abcdef'::varchar,3.6::int)='def';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.6::int)='def';
               ^
select oracle.substr('abcdef'::varchar,3.6::bigint)='def';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.6::bigint)='def';
               ^
select oracle.substr('abcdef'::varchar,3.6::numeric)='cdef';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.6::numeric)='cdef';
               ^
select oracle.substr('abcdef'::varchar,3.5::int,3.5::int)='def';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.5::int,3.5::int)='d...
               ^
select oracle.substr('abcdef'::varchar,3.5::numeric,3.5::numeric)='cde';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.5::numeric,3.5::num...
               ^
select oracle.substr('abcdef'::varchar,3.5::numeric,3.5::int)='cdef';
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.substr('abcdef'::varchar,3.5::numeric,3.5::int...
               ^
select concat('Tech on', ' the Net') =  'Tech on the Net';
 ?column? 
----------
 t
(1 row)

select concat('a', 'b') =  'ab';
 ?column? 
----------
 t
(1 row)

select concat('a', NULL) = 'a';
 ?column? 
----------
 t
(1 row)

select concat(NULL, 'b') = 'b';
 ?column? 
----------
 t
(1 row)

select concat('a', 2) = 'a2';
 ?column? 
----------
 t
(1 row)

select concat(1, 'b') = '1b';
 ?column? 
----------
 t
(1 row)

select concat(1, 2) = '12';
 ?column? 
----------
 t
(1 row)

select concat(1, NULL) = '1';
 ?column? 
----------
 t
(1 row)

select concat(NULL, 2) = '2';
 ?column? 
----------
 t
(1 row)

select nvl('A'::text, 'B');
ERROR:  function nvl(text, unknown) does not exist
LINE 1: select nvl('A'::text, 'B');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl(NULL::text, 'B');
ERROR:  function nvl(text, unknown) does not exist
LINE 1: select nvl(NULL::text, 'B');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl(NULL::text, NULL);
ERROR:  function nvl(text, unknown) does not exist
LINE 1: select nvl(NULL::text, NULL);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl(1, 2);
ERROR:  function nvl(integer, integer) does not exist
LINE 1: select nvl(1, 2);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl(NULL::int, 2);
ERROR:  function nvl(integer, integer) does not exist
LINE 1: select nvl(NULL::int, 2);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl2('A'::text, 'B', 'C');
ERROR:  function nvl2(text, unknown, unknown) does not exist
LINE 1: select nvl2('A'::text, 'B', 'C');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl2(NULL::text, 'B', 'C');
ERROR:  function nvl2(text, unknown, unknown) does not exist
LINE 1: select nvl2(NULL::text, 'B', 'C');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl2('A'::text, NULL, 'C');
ERROR:  function nvl2(text, unknown, unknown) does not exist
LINE 1: select nvl2('A'::text, NULL, 'C');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl2(NULL::text, 'B', NULL);
ERROR:  function nvl2(text, unknown, unknown) does not exist
LINE 1: select nvl2(NULL::text, 'B', NULL);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl2(1, 2, 3);
ERROR:  function nvl2(integer, integer, integer) does not exist
LINE 1: select nvl2(1, 2, 3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select nvl2(NULL, 2, 3);
ERROR:  function nvl2(unknown, integer, integer) does not exist
LINE 1: select nvl2(NULL, 2, 3);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select lnnvl(true);
ERROR:  function lnnvl(boolean) does not exist
LINE 1: select lnnvl(true);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select lnnvl(false);
ERROR:  function lnnvl(boolean) does not exist
LINE 1: select lnnvl(false);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select lnnvl(NULL);
ERROR:  function lnnvl(unknown) does not exist
LINE 1: select lnnvl(NULL);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(1, 1, 100, 2, 200);
ERROR:  function decode(integer, integer, integer, integer, integer) does not exist
LINE 1: select decode(1, 1, 100, 2, 200);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2, 1, 100, 2, 200);
ERROR:  function decode(integer, integer, integer, integer, integer) does not exist
LINE 1: select decode(2, 1, 100, 2, 200);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(3, 1, 100, 2, 200);
ERROR:  function decode(integer, integer, integer, integer, integer) does not exist
LINE 1: select decode(3, 1, 100, 2, 200);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(3, 1, 100, 2, 200, 300);
ERROR:  function decode(integer, integer, integer, integer, integer, integer) does not exist
LINE 1: select decode(3, 1, 100, 2, 200, 300);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 1, 100, NULL, 200, 300);
ERROR:  function decode(unknown, integer, integer, unknown, integer, integer) does not exist
LINE 1: select decode(NULL, 1, 100, NULL, 200, 300);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('1'::text, '1', 100, '2', 200);
ERROR:  function decode(text, unknown, integer, unknown, integer) does not exist
LINE 1: select decode('1'::text, '1', 100, '2', 200);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2, 1, 'ABC', 2, 'DEF');
ERROR:  function decode(integer, integer, unknown, integer, unknown) does not exist
LINE 1: select decode(2, 1, 'ABC', 2, 'DEF');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2009-02-05'::date, '2009-02-05', 'ok');
ERROR:  function decode(date, unknown, unknown) does not exist
LINE 1: select decode('2009-02-05'::date, '2009-02-05', 'ok');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2009-02-05 01:02:03'::timestamp, '2009-02-05 01:02:03', 'ok');
ERROR:  function decode(timestamp without time zone, unknown, unknown) does not exist
LINE 1: select decode('2009-02-05 01:02:03'::timestamp, '2009-02-05 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- For type 'bpchar'
select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar);
ERROR:  function decode(character, character, character) does not exist
LINE 1: select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('c'::bpchar, 'a'::bpchar,'postgres'::bpchar);
ERROR:  function decode(character, character, character) does not exist
LINE 1: select decode('c'::bpchar, 'a'::bpchar,'postgres'::bpchar);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'default value'::bpchar);
ERROR:  function decode(character, character, character, character) does not exist
LINE 1: select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'d...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('c', 'a'::bpchar,'postgres'::bpchar,'default value'::bpchar);
ERROR:  function decode(unknown, character, character, character) does not exist
LINE 1: select decode('c', 'a'::bpchar,'postgres'::bpchar,'default v...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar);
ERROR:  function decode(character, character, character, character, character) does not exist
LINE 1: select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar);
ERROR:  function decode(character, character, character, character, character) does not exist
LINE 1: select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar,'default value'::bpchar);
ERROR:  function decode(character, character, character, character, character, character) does not exist
LINE 1: select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar,'default value'::bpchar);
ERROR:  function decode(character, character, character, character, character, character) does not exist
LINE 1: select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar, 'c'::bpchar, 'system'::bpchar);
ERROR:  function decode(character, character, character, character, character, character, character) does not exist
LINE 1: select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar, 'c'::bpchar, 'system'::bpchar);
ERROR:  function decode(character, character, character, character, character, character, character) does not exist
LINE 1: select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar, 'c'::bpchar, 'system'::bpchar,'default value'::bpchar);
ERROR:  function decode(character, character, character, character, character, character, character, character) does not exist
LINE 1: select decode('a'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b'::bpchar,'database'::bpchar, 'c'::bpchar, 'system'::bpchar,'default value'::bpchar);
ERROR:  function decode(character, character, character, character, character, character, character, character) does not exist
LINE 1: select decode('d'::bpchar, 'a'::bpchar,'postgres'::bpchar,'b...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, NULL,'database'::bpchar);
ERROR:  function decode(unknown, character, character, unknown, character) does not exist
LINE 1: select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, NULL,'d...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, 'b'::bpchar,'database'::bpchar);
ERROR:  function decode(unknown, character, character, character, character) does not exist
LINE 1: select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, 'b'::bp...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, NULL,'database'::bpchar,'default value'::bpchar);
ERROR:  function decode(unknown, character, character, unknown, character, character) does not exist
LINE 1: select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, NULL,'d...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, 'b'::bpchar,'database'::bpchar,'default value'::bpchar);
ERROR:  function decode(unknown, character, character, character, character, character) does not exist
LINE 1: select decode(NULL, 'a'::bpchar, 'postgres'::bpchar, 'b'::bp...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- For type 'bigint'
select decode(2147483651::bigint, 2147483650::bigint,2147483650::bigint);
ERROR:  function decode(bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483651::bigint, 2147483650::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483653::bigint, 2147483651::bigint,2147483650::bigint);
ERROR:  function decode(bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483653::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483653::bigint, 2147483651::bigint,2147483650::bigint,9999999999::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483653::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483653::bigint, 2147483651::bigint,2147483650::bigint,9999999999::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483653::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483651::bigint, 2147483651::bigint,2147483650::bigint,2147483652::bigint,2147483651::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483651::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483654::bigint, 2147483651::bigint,2147483650::bigint,2147483652::bigint,2147483651::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483654::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483651::bigint, 2147483651::bigint,2147483650::bigint,2147483652::bigint,2147483651::bigint,9999999999::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483651::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483654::bigint, 2147483651::bigint,2147483650::bigint,2147483652::bigint,2147483651::bigint,9999999999::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483654::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483651::bigint, 2147483651::bigint,2147483650::bigint, 2147483652::bigint,2147483651::bigint, 2147483653::bigint, 2147483652::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483651::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483654::bigint, 2147483651::bigint,2147483650::bigint, 2147483652::bigint,2147483651::bigint, 2147483653::bigint, 2147483652::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483654::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483651::bigint, 2147483651::bigint,2147483650::bigint, 2147483652::bigint,2147483651::bigint, 2147483653::bigint, 2147483652::bigint,9999999999::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483651::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(2147483654::bigint, 2147483651::bigint,2147483650::bigint, 2147483652::bigint,2147483651::bigint, 2147483653::bigint, 2147483652::bigint,9999999999::bigint);
ERROR:  function decode(bigint, bigint, bigint, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(2147483654::bigint, 2147483651::bigint,2147483...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 2147483651::bigint, 2147483650::bigint, NULL,2147483651::bigint);
ERROR:  function decode(unknown, bigint, bigint, unknown, bigint) does not exist
LINE 1: select decode(NULL, 2147483651::bigint, 2147483650::bigint, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 2147483651::bigint, 2147483650::bigint, 2147483652::bigint,2147483651::bigint);
ERROR:  function decode(unknown, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(NULL, 2147483651::bigint, 2147483650::bigint, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 2147483651::bigint, 2147483650::bigint, NULL,2147483651::bigint,9999999999::bigint);
ERROR:  function decode(unknown, bigint, bigint, unknown, bigint, bigint) does not exist
LINE 1: select decode(NULL, 2147483651::bigint, 2147483650::bigint, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 2147483651::bigint, 2147483650::bigint, 2147483652::bigint,2147483651::bigint,9999999999::bigint);
ERROR:  function decode(unknown, bigint, bigint, bigint, bigint, bigint) does not exist
LINE 1: select decode(NULL, 2147483651::bigint, 2147483650::bigint, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- For type 'numeric'
select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric) does not exist
LINE 1: select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.003::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric) does not exist
LINE 1: select decode(12.003::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.003::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.003::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4), 12.003::numeric(5,3), 214748.3652::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4), 12.003::numeric(5,3), 214748.3652::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4), 12.003::numeric(5,3), 214748.3652::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.001::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214748.3650::numeric(10,4),12.002::numeric(5,3),214748.3651::numeric(10,4), 12.003::numeric(5,3), 214748.3652::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(numeric, numeric, numeric, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(12.004::numeric(5,3), 12.001::numeric(5,3),214...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 12.001::numeric(5,3), 214748.3650::numeric(10,4), NULL,214748.3651::numeric(10,4));
ERROR:  function decode(unknown, numeric, numeric, unknown, numeric) does not exist
LINE 1: select decode(NULL, 12.001::numeric(5,3), 214748.3650::numer...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 12.001::numeric(5,3), 214748.3650::numeric(10,4), 12.002::numeric(5,3),214748.3651::numeric(10,4));
ERROR:  function decode(unknown, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(NULL, 12.001::numeric(5,3), 214748.3650::numer...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 12.001::numeric(5,3), 214748.3650::numeric(10,4), NULL,214748.3651::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(unknown, numeric, numeric, unknown, numeric, numeric) does not exist
LINE 1: select decode(NULL, 12.001::numeric(5,3), 214748.3650::numer...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, 12.001::numeric(5,3), 214748.3650::numeric(10,4), 12.002::numeric(5,3),214748.3651::numeric(10,4),999999.9999::numeric(10,4));
ERROR:  function decode(unknown, numeric, numeric, numeric, numeric, numeric) does not exist
LINE 1: select decode(NULL, 12.001::numeric(5,3), 214748.3650::numer...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
--For type 'date'
select decode('2020-01-01'::date, '2020-01-01'::date,'2012-12-20'::date);
ERROR:  function decode(date, date, date) does not exist
LINE 1: select decode('2020-01-01'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-03'::date, '2020-01-01'::date,'2012-12-20'::date);
ERROR:  function decode(date, date, date) does not exist
LINE 1: select decode('2020-01-03'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01'::date, '2020-01-01'::date,'2012-12-20'::date,'2012-12-21'::date);
ERROR:  function decode(date, date, date, date) does not exist
LINE 1: select decode('2020-01-01'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-03'::date, '2020-01-01'::date,'2012-12-20'::date,'2012-12-21'::date);
ERROR:  function decode(date, date, date, date) does not exist
LINE 1: select decode('2020-01-03'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date);
ERROR:  function decode(date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-01'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date);
ERROR:  function decode(date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-04'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date,'2012-12-31'::date);
ERROR:  function decode(date, date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-01'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date,'2012-12-31'::date);
ERROR:  function decode(date, date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-04'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date, '2020-01-03'::date, '2012-12-31'::date);
ERROR:  function decode(date, date, date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-01'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date, '2020-01-03'::date, '2012-12-31'::date);
ERROR:  function decode(date, date, date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-04'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date, '2020-01-03'::date, '2012-12-31'::date,'2013-01-01'::date);
ERROR:  function decode(date, date, date, date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-01'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04'::date, '2020-01-01'::date,'2012-12-20'::date,'2020-01-02'::date,'2012-12-21'::date, '2020-01-03'::date, '2012-12-31'::date,'2013-01-01'::date);
ERROR:  function decode(date, date, date, date, date, date, date, date) does not exist
LINE 1: select decode('2020-01-04'::date, '2020-01-01'::date,'2012-1...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, NULL,'2012-12-21'::date);
ERROR:  function decode(unknown, date, date, unknown, date) does not exist
LINE 1: select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, '2020-01-02'::date,'2012-12-21'::date);
ERROR:  function decode(unknown, date, date, date, date) does not exist
LINE 1: select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, NULL,'2012-12-21'::date,'2012-12-31'::date);
ERROR:  function decode(unknown, date, date, unknown, date, date) does not exist
LINE 1: select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, '2020-01-02'::date,'2012-12-21'::date,'2012-12-31'::date);
ERROR:  function decode(unknown, date, date, date, date, date) does not exist
LINE 1: select decode(NULL, '2020-01-01'::date, '2012-12-20'::date, ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- For type 'time'
select decode('01:00:01'::time, '01:00:01'::time,'09:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:01'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:03'::time, '01:00:01'::time,'09:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:03'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:01'::time, '01:00:01'::time,'09:00:00'::time,'00:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:01'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:03'::time, '01:00:01'::time,'09:00:00'::time,'00:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:03'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:01'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:01'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:04'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:04'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:01'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time,'00:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:01'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:04'::time, '01:00:01'::time,'09:00:00'::time,'01:00:01'::time,'12:00:00'::time,'00:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:04'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:01'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time, '01:00:03'::time, '15:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:01'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:04'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time, '01:00:03'::time, '15:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:04'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:01'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time, '01:00:03'::time, '15:00:00'::time,'00:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:01'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('01:00:04'::time, '01:00:01'::time,'09:00:00'::time,'01:00:02'::time,'12:00:00'::time, '01:00:03'::time, '15:00:00'::time,'00:00:00'::time);
ERROR:  function decode(time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode('01:00:04'::time, '01:00:01'::time,'09:00:00':...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '01:00:01'::time, '09:00:00'::time, NULL,'12:00:00'::time);
ERROR:  function decode(unknown, time without time zone, time without time zone, unknown, time without time zone) does not exist
LINE 1: select decode(NULL, '01:00:01'::time, '09:00:00'::time, NULL...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '01:00:01'::time, '09:00:00'::time, '01:00:02'::time,'12:00:00'::time);
ERROR:  function decode(unknown, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode(NULL, '01:00:01'::time, '09:00:00'::time, '01:...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '01:00:01'::time, '09:00:00'::time, NULL,'12:00:00'::time,'00:00:00'::time);
ERROR:  function decode(unknown, time without time zone, time without time zone, unknown, time without time zone, time without time zone) does not exist
LINE 1: select decode(NULL, '01:00:01'::time, '09:00:00'::time, NULL...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '01:00:01'::time, '09:00:00'::time, '01:00:02'::time,'12:00:00'::time,'00:00:00'::time);
ERROR:  function decode(unknown, time without time zone, time without time zone, time without time zone, time without time zone, time without time zone) does not exist
LINE 1: select decode(NULL, '01:00:01'::time, '09:00:00'::time, '01:...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- For type 'timestamp'
select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-03 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-03 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-03 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-03 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp, '2020-01-03 01:00:01'::timestamp, '2012-12-20 15:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp, '2020-01-03 01:00:01'::timestamp, '2012-12-20 15:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp, '2020-01-03 01:00:01'::timestamp, '2012-12-20 15:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 01:00:01'::timestamp,'2012-12-20 09:00:00'::timestamp,'2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp, '2020-01-03 01:00:01'::timestamp, '2012-12-20 15:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01'::timestamp, '2020-01-01 ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-12-20 09:00:00'::timestamp, NULL,'2012-12-20 12:00:00'::timestamp);
ERROR:  function decode(unknown, timestamp without time zone, timestamp without time zone, unknown, timestamp without time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-12-20 09:00:00'::timestamp, '2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp);
ERROR:  function decode(unknown, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-12-20 09:00:00'::timestamp, NULL,'2012-12-20 12:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(unknown, timestamp without time zone, timestamp without time zone, unknown, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-12-20 09:00:00'::timestamp, '2020-01-02 01:00:01'::timestamp,'2012-12-20 12:00:00'::timestamp,'2012-12-20 00:00:00'::timestamp);
ERROR:  function decode(unknown, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01'::timestamp, '2012-...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- For type 'timestamptz'
select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-03 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-03 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-03 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-03 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz, '2020-01-03 01:00:01-08'::timestamptz, '2012-12-20 15:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-04 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz, '2020-01-03 01:00:01-08'::timestamptz, '2012-12-20 15:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-04 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-01-01 01:00:01-08'::timestamptz,'2012-12-20 09:00:00-08'::timestamptz,'2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz, '2020-01-03 01:00:01-08'::timestamptz, '2012-12-20 15:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode('2020-01-01 01:00:01-08'::timestamptz, '2020-0...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(4, 1,'2012-12-20 09:00:00-08'::timestamptz,2,'2012-12-20 12:00:00-08'::timestamptz, 3, '2012-12-20 15:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(integer, integer, timestamp with time zone, integer, timestamp with time zone, integer, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode(4, 1,'2012-12-20 09:00:00-08'::timestamptz,2,'...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '2012-12-20 09:00:00-08'::timestamptz, NULL,'2012-12-20 12:00:00-08'::timestamptz);
ERROR:  function decode(unknown, timestamp with time zone, timestamp with time zone, unknown, timestamp with time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '2012-12-20 09:00:00-08'::timestamptz, '2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz);
ERROR:  function decode(unknown, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '2012-12-20 09:00:00-08'::timestamptz, NULL,'2012-12-20 12:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(unknown, timestamp with time zone, timestamp with time zone, unknown, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '2012-12-20 09:00:00-08'::timestamptz, '2020-01-02 01:00:01-08'::timestamptz,'2012-12-20 12:00:00-08'::timestamptz,'2012-12-20 00:00:00-08'::timestamptz);
ERROR:  function decode(unknown, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone) does not exist
LINE 1: select decode(NULL, '2020-01-01 01:00:01-08'::timestamptz, '...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
--Test case to check if decode accepts other expressions as a key
CREATE OR REPLACE FUNCTION five() RETURNS integer AS $$
BEGIN
	RETURN 5;
END; 
$$ LANGUAGE plpgsql;
select decode(five(), 1, 'one', 2, 'two', 5, 'five');
ERROR:  function decode(integer, integer, unknown, integer, unknown, integer, unknown) does not exist
LINE 1: select decode(five(), 1, 'one', 2, 'two', 5, 'five');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
DROP FUNCTION five();
-- Test case to check duplicate keys in search list
select decode(1, 1, 'one', 2, 'two', 1, 'one-again') = 'one';
ERROR:  function decode(integer, integer, unknown, integer, unknown, integer, unknown) does not exist
LINE 1: select decode(1, 1, 'one', 2, 'two', 1, 'one-again') = 'one'...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
/* Test case to check explicit type casting of keys in search list in 
 * case of ambiguous key (1st argument) provided.
 */
-- 1) succeed and return 'result-1'
select decode('2012-01-01', '2012-01-01'::date,'result-1','2012-01-02', 'result-2');
ERROR:  function decode(unknown, date, unknown, unknown, unknown) does not exist
LINE 5: select decode('2012-01-01', '2012-01-01'::date,'result-1','2...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select decode('2012-01-01', '2012-01-01', 'result-1', '2012-02-01'::date, 'result-2');
ERROR:  function decode(unknown, unknown, unknown, date, unknown) does not exist
LINE 1: select decode('2012-01-01', '2012-01-01', 'result-1', '2012-...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select PLVstr.rvrs ('Jumping Jack Flash') ='hsalF kcaJ gnipmuJ';
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('Jumping Jack Flash') ='hsalF kcaJ gnipm...
               ^
select PLVstr.rvrs ('Jumping Jack Flash', 9) = 'hsalF kcaJ';
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('Jumping Jack Flash', 9) = 'hsalF kcaJ';
               ^
select PLVstr.rvrs ('Jumping Jack Flash', 4, 6) = 'nip';
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('Jumping Jack Flash', 4, 6) = 'nip';
               ^
select PLVstr.rvrs (NULL, 10, 20);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs (NULL, 10, 20);
               ^
select PLVstr.rvrs ('alphabet', -2, -5);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('alphabet', -2, -5);
               ^
select PLVstr.rvrs ('alphabet', -2);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('alphabet', -2);
               ^
select PLVstr.rvrs ('alphabet', 2, 200);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('alphabet', 2, 200);
               ^
select PLVstr.rvrs ('alphabet', 20, 200);
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.rvrs ('alphabet', 20, 200);
               ^
select PLVstr.lstrip ('*val1|val2|val3|*', '*') = 'val1|val2|val3|*';
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.lstrip ('*val1|val2|val3|*', '*') = 'val1|val2...
               ^
select PLVstr.lstrip (',,,val1,val2,val3,', ',', 3)= 'val1,val2,val3,';
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.lstrip (',,,val1,val2,val3,', ',', 3)= 'val1,v...
               ^
select PLVstr.lstrip ('WHERE WHITE = ''FRONT'' AND COMP# = 1500', 'WHERE ') = 'WHITE = ''FRONT'' AND COMP# = 1500';
ERROR:  schema "plvstr" does not exist
LINE 1: select PLVstr.lstrip ('WHERE WHITE = ''FRONT'' AND COMP# = 1...
               ^
select plvstr.left('Příliš žluťoučký kůň',4) = pg_catalog.substr('Příl', 1, 4);
ERROR:  schema "plvstr" does not exist
LINE 1: select plvstr.left('Příliš žluťoučký kůň',4) = pg_catalog.su...
               ^
select pos,token from plvlex.tokens('select * from a.b.c join d ON x=y', true, true);
ERROR:  schema "plvlex" does not exist
LINE 1: select pos,token from plvlex.tokens('select * from a.b.c joi...
                              ^
SET lc_numeric TO 'C';
select to_char(22);
ERROR:  function to_char(integer) does not exist
LINE 1: select to_char(22);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(99::smallint);
ERROR:  function to_char(smallint) does not exist
LINE 1: select to_char(99::smallint);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(-44444);
ERROR:  function to_char(integer) does not exist
LINE 1: select to_char(-44444);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(1234567890123456::bigint);
ERROR:  function to_char(bigint) does not exist
LINE 1: select to_char(1234567890123456::bigint);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(123.456::real);
ERROR:  function to_char(real) does not exist
LINE 1: select to_char(123.456::real);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(1234.5678::double precision);
ERROR:  function to_char(double precision) does not exist
LINE 1: select to_char(1234.5678::double precision);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(12345678901234567890::numeric);
ERROR:  function to_char(numeric) does not exist
LINE 1: select to_char(12345678901234567890::numeric);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char(1234567890.12345);
ERROR:  function to_char(numeric) does not exist
LINE 1: select to_char(1234567890.12345);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char('4.00'::numeric);
ERROR:  function to_char(numeric) does not exist
LINE 1: select to_char('4.00'::numeric);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_char('4.0010'::numeric);
ERROR:  function to_char(numeric) does not exist
LINE 1: select to_char('4.0010'::numeric);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number('123'::text);
ERROR:  function to_number(text) does not exist
LINE 1: SELECT to_number('123'::text);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number('123.456'::text);
ERROR:  function to_number(text) does not exist
LINE 1: SELECT to_number('123.456'::text);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(123);
ERROR:  function to_number(integer) does not exist
LINE 1: SELECT to_number(123);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(123::smallint);
ERROR:  function to_number(smallint) does not exist
LINE 1: SELECT to_number(123::smallint);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(123::int);
ERROR:  function to_number(integer) does not exist
LINE 1: SELECT to_number(123::int);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(123::bigint);
ERROR:  function to_number(bigint) does not exist
LINE 1: SELECT to_number(123::bigint);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(123::numeric);
ERROR:  function to_number(numeric) does not exist
LINE 1: SELECT to_number(123::numeric);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(123.456);
ERROR:  function to_number(numeric) does not exist
LINE 1: SELECT to_number(123.456);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(1210.73, 9999.99);
ERROR:  function to_number(numeric, numeric) does not exist
LINE 1: SELECT to_number(1210.73, 9999.99);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(1210::smallint, 9999::smallint);
ERROR:  function to_number(smallint, smallint) does not exist
LINE 1: SELECT to_number(1210::smallint, 9999::smallint);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(1210::int, 9999::int);
ERROR:  function to_number(integer, integer) does not exist
LINE 1: SELECT to_number(1210::int, 9999::int);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(1210::bigint, 9999::bigint);
ERROR:  function to_number(bigint, bigint) does not exist
LINE 1: SELECT to_number(1210::bigint, 9999::bigint);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_number(1210.73::numeric, 9999.99::numeric);
ERROR:  function to_number(numeric, numeric) does not exist
LINE 1: SELECT to_number(1210.73::numeric, 9999.99::numeric);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2009-01-02');
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2009-01-02');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT bitand(5,1), bitand(5,2), bitand(5,4);
ERROR:  function bitand(integer, integer) does not exist
LINE 1: SELECT bitand(5,1), bitand(5,2), bitand(5,4);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT sinh(1.570796)::numeric(10, 8), cosh(1.570796)::numeric(10, 8), tanh(4)::numeric(10, 8);
    sinh    |    cosh    |    tanh    
------------+------------+------------
 2.30129808 | 2.50917773 | 0.99932930
(1 row)

SELECT nanvl(12345, 1), nanvl('NaN', 1);
ERROR:  function nanvl(integer, integer) does not exist
LINE 1: SELECT nanvl(12345, 1), nanvl('NaN', 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::float4, 1), nanvl('NaN'::float4, 1);
ERROR:  function nanvl(real, integer) does not exist
LINE 1: SELECT nanvl(12345::float4, 1), nanvl('NaN'::float4, 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::float8, 1), nanvl('NaN'::float8, 1);
ERROR:  function nanvl(double precision, integer) does not exist
LINE 1: SELECT nanvl(12345::float8, 1), nanvl('NaN'::float8, 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::numeric, 1), nanvl('NaN'::numeric, 1);
ERROR:  function nanvl(numeric, integer) does not exist
LINE 1: SELECT nanvl(12345::numeric, 1), nanvl('NaN'::numeric, 1);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345, '1'::varchar), nanvl('NaN', 1::varchar);
ERROR:  function nanvl(integer, character varying) does not exist
LINE 1: SELECT nanvl(12345, '1'::varchar), nanvl('NaN', 1::varchar);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::float4, '1'::varchar), nanvl('NaN'::float4, '1'::varchar);
ERROR:  function nanvl(real, character varying) does not exist
LINE 1: SELECT nanvl(12345::float4, '1'::varchar), nanvl('NaN'::floa...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::float8, '1'::varchar), nanvl('NaN'::float8, '1'::varchar);
ERROR:  function nanvl(double precision, character varying) does not exist
LINE 1: SELECT nanvl(12345::float8, '1'::varchar), nanvl('NaN'::floa...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::numeric, '1'::varchar), nanvl('NaN'::numeric, '1'::varchar);
ERROR:  function nanvl(numeric, character varying) does not exist
LINE 1: SELECT nanvl(12345::numeric, '1'::varchar), nanvl('NaN'::num...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345, '1'::char), nanvl('NaN', 1::char);
ERROR:  function nanvl(integer, character) does not exist
LINE 1: SELECT nanvl(12345, '1'::char), nanvl('NaN', 1::char);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::float4, '1'::char), nanvl('NaN'::float4, '1'::char);
ERROR:  function nanvl(real, character) does not exist
LINE 1: SELECT nanvl(12345::float4, '1'::char), nanvl('NaN'::float4,...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::float8, '1'::char), nanvl('NaN'::float8, '1'::char);
ERROR:  function nanvl(double precision, character) does not exist
LINE 1: SELECT nanvl(12345::float8, '1'::char), nanvl('NaN'::float8,...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT nanvl(12345::numeric, '1'::char), nanvl('NaN'::numeric, '1'::char);
ERROR:  function nanvl(numeric, character) does not exist
LINE 1: SELECT nanvl(12345::numeric, '1'::char), nanvl('NaN'::numeri...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select dbms_assert.enquote_literal('some text '' some text');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.enquote_literal('some text '' some text')...
               ^
select dbms_assert.enquote_name('''"AAA');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.enquote_name('''"AAA');
               ^
select dbms_assert.enquote_name('''"AAA', false);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.enquote_name('''"AAA', false);
               ^
select dbms_assert.noop('some string');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.noop('some string');
               ^
select dbms_assert.qualified_sql_name('aaa.bbb.ccc."aaaa""aaa"');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.qualified_sql_name('aaa.bbb.ccc."aaaa""aa...
               ^
select dbms_assert.qualified_sql_name('aaa.bbb.cc%c."aaaa""aaa"');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.qualified_sql_name('aaa.bbb.cc%c."aaaa""a...
               ^
select dbms_assert.schema_name('dbms_assert');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.schema_name('dbms_assert');
               ^
select dbms_assert.schema_name('jabadabado');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.schema_name('jabadabado');
               ^
select dbms_assert.simple_sql_name('"Aaa dghh shsh"');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.simple_sql_name('"Aaa dghh shsh"');
               ^
select dbms_assert.simple_sql_name('ajajaj -- ajaj');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.simple_sql_name('ajajaj -- ajaj');
               ^
select dbms_assert.object_name('pg_catalog.pg_class');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.object_name('pg_catalog.pg_class');
               ^
select dbms_assert.object_name('dbms_assert.fooo');
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.object_name('dbms_assert.fooo');
               ^
select dbms_assert.enquote_literal(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.enquote_literal(NULL);
               ^
select dbms_assert.enquote_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.enquote_name(NULL);
               ^
select dbms_assert.enquote_name(NULL, false);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.enquote_name(NULL, false);
               ^
select dbms_assert.noop(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.noop(NULL);
               ^
select dbms_assert.qualified_sql_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.qualified_sql_name(NULL);
               ^
select dbms_assert.qualified_sql_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.qualified_sql_name(NULL);
               ^
select dbms_assert.schema_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.schema_name(NULL);
               ^
select dbms_assert.schema_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.schema_name(NULL);
               ^
select dbms_assert.simple_sql_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.simple_sql_name(NULL);
               ^
select dbms_assert.simple_sql_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.simple_sql_name(NULL);
               ^
select dbms_assert.object_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.object_name(NULL);
               ^
select dbms_assert.object_name(NULL);
ERROR:  schema "dbms_assert" does not exist
LINE 1: select dbms_assert.object_name(NULL);
               ^
select plunit.assert_true(NULL);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_true(NULL);
               ^
select plunit.assert_true(1 = 2);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_true(1 = 2);
               ^
select plunit.assert_true(1 = 2, 'one is not two');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_true(1 = 2, 'one is not two');
               ^
select plunit.assert_true(1 = 1);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_true(1 = 1);
               ^
select plunit.assert_false(1 = 1);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_false(1 = 1);
               ^
select plunit.assert_false(1 = 1, 'trap is open');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_false(1 = 1, 'trap is open');
               ^
select plunit.assert_false(NULL);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_false(NULL);
               ^
select plunit.assert_null(current_date);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_null(current_date);
               ^
select plunit.assert_null(NULL::date);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_null(NULL::date);
               ^
select plunit.assert_not_null(current_date);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_not_null(current_date);
               ^
select plunit.assert_not_null(NULL::date);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_not_null(NULL::date);
               ^
select plunit.assert_equals('Pavel','Pa'||'vel');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_equals('Pavel','Pa'||'vel');
               ^
select plunit.assert_equals(current_date, current_date + 1, 'diff dates');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_equals(current_date, current_date + 1, ...
               ^
select plunit.assert_equals(10.2, 10.3, 0.5);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_equals(10.2, 10.3, 0.5);
               ^
select plunit.assert_equals(10.2, 10.3, 0.01, 'attention some diff');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_equals(10.2, 10.3, 0.01, 'attention som...
               ^
select plunit.assert_not_equals(current_date, current_date + 1, 'yestarday is today');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_not_equals(current_date, current_date +...
               ^
select plunit.fail();
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.fail();
               ^
select plunit.fail('custom exception');
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.fail('custom exception');
               ^
SELECT dump('Yellow dog'::text) ~ E'^Typ=25 Len=(\\d+): \\d+(,\\d+)*$' AS t;
ERROR:  function dump(text) does not exist
LINE 1: SELECT dump('Yellow dog'::text) ~ E'^Typ=25 Len=(\\d+): \\d+...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump('Yellow dog'::text, 10) ~ E'^Typ=25 Len=(\\d+): \\d+(,\\d+)*$' AS t;
ERROR:  function dump(text, integer) does not exist
LINE 1: SELECT dump('Yellow dog'::text, 10) ~ E'^Typ=25 Len=(\\d+): ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump('Yellow dog'::text, 17) ~ E'^Typ=25 Len=(\\d+): .(,.)*$' AS t;
ERROR:  function dump(text, integer) does not exist
LINE 1: SELECT dump('Yellow dog'::text, 17) ~ E'^Typ=25 Len=(\\d+): ...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump(10::int2) ~ E'^Typ=21 Len=2: \\d+(,\\d+){1}$' AS t;
ERROR:  function dump(smallint) does not exist
LINE 1: SELECT dump(10::int2) ~ E'^Typ=21 Len=2: \\d+(,\\d+){1}$' AS...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump(10::int4) ~ E'^Typ=23 Len=4: \\d+(,\\d+){3}$' AS t;
ERROR:  function dump(integer) does not exist
LINE 1: SELECT dump(10::int4) ~ E'^Typ=23 Len=4: \\d+(,\\d+){3}$' AS...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump(10::int8) ~ E'^Typ=20 Len=8: \\d+(,\\d+){7}$' AS t;
ERROR:  function dump(bigint) does not exist
LINE 1: SELECT dump(10::int8) ~ E'^Typ=20 Len=8: \\d+(,\\d+){7}$' AS...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump(10.23::float4) ~ E'^Typ=700 Len=4: \\d+(,\\d+){3}$' AS t;
ERROR:  function dump(real) does not exist
LINE 1: SELECT dump(10.23::float4) ~ E'^Typ=700 Len=4: \\d+(,\\d+){3...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump(10.23::float8) ~ E'^Typ=701 Len=8: \\d+(,\\d+){7}$' AS t;
ERROR:  function dump(double precision) does not exist
LINE 1: SELECT dump(10.23::float8) ~ E'^Typ=701 Len=8: \\d+(,\\d+){7...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump(10.23::numeric) ~ E'^Typ=1700 Len=(\\d+): \\d+(,\\d+)*$' AS t;
ERROR:  function dump(numeric) does not exist
LINE 1: SELECT dump(10.23::numeric) ~ E'^Typ=1700 Len=(\\d+): \\d+(,...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump('2008-10-10'::date) ~ E'^Typ=1082 Len=4: \\d+(,\\d+){3}$' AS t;
ERROR:  function dump(date) does not exist
LINE 1: SELECT dump('2008-10-10'::date) ~ E'^Typ=1082 Len=4: \\d+(,\...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump('2008-10-10'::timestamp) ~ E'^Typ=1114 Len=8: \\d+(,\\d+){7}$' AS t;
ERROR:  function dump(timestamp without time zone) does not exist
LINE 1: SELECT dump('2008-10-10'::timestamp) ~ E'^Typ=1114 Len=8: \\...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT dump('2009-10-10'::timestamp) ~ E'^Typ=1114 Len=8: \\d+(,\\d+){7}$' AS t;
ERROR:  function dump(timestamp without time zone) does not exist
LINE 1: SELECT dump('2009-10-10'::timestamp) ~ E'^Typ=1114 Len=8: \\...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Tests for to_multi_byte
SELECT to_multi_byte('123$test');
ERROR:  function to_multi_byte(unknown) does not exist
LINE 1: SELECT to_multi_byte('123$test');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Check internal representation difference
SELECT octet_length('abc');
 octet_length 
--------------
            3
(1 row)

SELECT octet_length(to_multi_byte('abc'));
ERROR:  function to_multi_byte(unknown) does not exist
LINE 1: SELECT octet_length(to_multi_byte('abc'));
                            ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Tests for to_single_byte
SELECT to_single_byte('123$test');
ERROR:  function to_single_byte(unknown) does not exist
LINE 1: SELECT to_single_byte('123$test');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_single_byte('１２３＄ｔｅｓｔ');
ERROR:  function to_single_byte(unknown) does not exist
LINE 1: SELECT to_single_byte('１２３＄ｔｅｓｔ');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Check internal representation difference
SELECT octet_length('ａｂｃ');
 octet_length 
--------------
            9
(1 row)

SELECT octet_length(to_single_byte('ａｂｃ'));
ERROR:  function to_single_byte(unknown) does not exist
LINE 1: SELECT octet_length(to_single_byte('ａｂｃ'));
                            ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Tests for round(TIMESTAMP WITH TIME ZONE)
select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','YEAR') = '1991-01-01 00:00:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(TIMESTAMP WITH TIME ZONE'05/08/1990 05:35:25','Q') = '1990-04-01 00:00:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'05/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','MONTH') = '1990-12-01 00:00:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','DDD') = '1990-12-08 00:00:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','DAY') = '1990-12-09 00:00:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','hh') = '1990-12-08 06:00:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','mi') = '1990-12-08 05:35:00';
ERROR:  function round(timestamp with time zone, unknown) does not exist
LINE 1: select round(TIMESTAMP WITH TIME ZONE'12/08/1990 05:35:25','...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
-- Tests for to_date
SET DATESTYLE TO SQL, MDY;
SELECT to_date('2009-01-02');
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2009-01-02');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('January 8,1999');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('January 8,1999');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET DATESTYLE TO POSTGRES, MDY;
select to_date('1999-01-08');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('1999-01-08');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('1/12/1999');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('1/12/1999');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET DATESTYLE TO SQL, DMY;
select to_date('01/02/03');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('01/02/03');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('1999-Jan-08');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('1999-Jan-08');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('Jan-08-1999');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('Jan-08-1999');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('08-Jan-1999');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('08-Jan-1999');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET DATESTYLE TO ISO, YMD;
select to_date('99-Jan-08');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('99-Jan-08');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET DATESTYLE TO ISO, DMY;
select to_date('08-Jan-99');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('08-Jan-99');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('Jan-08-99');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('Jan-08-99');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('19990108');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('19990108');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('990108');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('990108');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
select to_date('J2451187');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('J2451187');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='YY-MonDD HH24:MI:SS';
select to_date('14-Jan08 11:44:49+05:30');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('14-Jan08 11:44:49+05:30');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='YY-DDMon HH24:MI:SS';
select to_date('14-08Jan 11:44:49+05:30');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('14-08Jan 11:44:49+05:30');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select to_date('21052014 12:13:44+05:30');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('21052014 12:13:44+05:30');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='DDMMYY HH24:MI:SS';
select to_date('210514 12:13:44+05:30');
ERROR:  function to_date(unknown) does not exist
LINE 1: select to_date('210514 12:13:44+05:30');
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='DDMMYY HH24:MI:SS.MS';
select oracle.orafce__obsolete_to_date('210514 12:13:44.55');
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.orafce__obsolete_to_date('210514 12:13:44.55')...
               ^
select oracle.to_date('210514 12:13:44.55');
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_date('210514 12:13:44.55');
               ^
-- Tests for oracle.to_date(text,text)
SET search_path TO oracle,"$user", public, pg_catalog;
select to_date('2014/04/25 10:13', 'YYYY/MM/DD HH:MI');
  to_date   
------------
 2014-04-25
(1 row)

select to_date('16-Feb-09 10:11:11', 'DD-Mon-YY HH:MI:SS');
  to_date   
------------
 2009-02-16
(1 row)

select to_date('02/16/09 04:12:12', 'MM/DD/YY HH24:MI:SS');
  to_date   
------------
 2009-02-16
(1 row)

select to_date('021609 111213', 'MMDDYY HHMISS');
  to_date   
------------
 2009-02-16
(1 row)

select to_date('16-Feb-09 11:12:12', 'DD-Mon-YY HH:MI:SS');
  to_date   
------------
 2009-02-16
(1 row)

select to_date('Feb/16/09 11:21:23', 'Mon/DD/YY HH:MI:SS');
  to_date   
------------
 2009-02-16
(1 row)

select to_date('February.16.2009 10:11:12', 'Month.DD.YYYY HH:MI:SS');
  to_date   
------------
 2009-02-16
(1 row)

select to_date('20020315111212', 'yyyymmddhh12miss');
  to_date   
------------
 2002-03-15
(1 row)

select to_date('January 15, 1989, 11:00 A.M.','Month dd, YYYY, HH:MI A.M.');
  to_date   
------------
 1989-01-15
(1 row)

select to_date('14-Jan08 11:44:49+05:30' ,'YY-MonDD HH24:MI:SS');
  to_date   
------------
 2014-01-08
(1 row)

select to_date('14-08Jan 11:44:49+05:30','YY-DDMon HH24:MI:SS');
  to_date   
------------
 2014-01-08
(1 row)

select to_date('21052014 12:13:44+05:30','DDMMYYYY HH24:MI:SS');
  to_date   
------------
 2014-05-21
(1 row)

select to_date('210514 12:13:44+05:30','DDMMYY HH24:MI:SS');
  to_date   
------------
 2014-05-21
(1 row)

SET search_path TO public,oracle;
-- Tests for + operator with DATE and number(smallint,integer,bigint,numeric)
SET search_path TO oracle,"$user", public, pg_catalog;
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') + 9::smallint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') + 9::smallint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') + 9::smallint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') + 9::smallint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') + 9::smallint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') + 9::smallint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') + 9;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') + 9;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') + 9::smallint;
  ?column?  
------------
 2014-07-11
(1 row)

SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') + 9::smallint;
  ?column?  
------------
 2014-07-11
(1 row)

SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') + 9::smallint;
  ?column?  
------------
 2014-07-11
(1 row)

SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') + 9::bigint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') + 9::bigint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') + 9::bigint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') + 9::bigint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') + 9::bigint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') + 9::bigint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') + 9::bigint;
ERROR:  operator does not exist: date + bigint
LINE 1: ...date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') + 9::bigin...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') + 9::bigint;
ERROR:  operator does not exist: date + bigint
LINE 1: ...date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') + 9::bigin...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') + 9::bigint;
ERROR:  operator does not exist: date + bigint
LINE 1: ...date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') + 9::bigin...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') + 9::integer;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') + 9::integer;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') + 9::integer;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') + 9::integer;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') + 9::integer;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') + 9::integer;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') + 9::integer;
  ?column?  
------------
 2014-07-11
(1 row)

SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') + 9::integer;
  ?column?  
------------
 2014-07-11
(1 row)

SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') + 9::integer;
  ?column?  
------------
 2014-07-11
(1 row)

SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') + 9::numeric;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') + 9::numeric;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') + 9::numeric;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') + 9::numeric;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') + 9::numeric;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') + 9::numeric;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') + 9::numeric;
ERROR:  operator does not exist: date + numeric
LINE 1: ...date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') + 9::numer...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') + 9::numeric;
ERROR:  operator does not exist: date + numeric
LINE 1: ...date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') + 9::numer...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') + 9::numeric;
ERROR:  operator does not exist: date + numeric
LINE 1: ...date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') + 9::numer...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-01-01 00:00:00') + 1.5;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-01-01 00:00:00') + 1.5;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-01-01 00:00:00','yyyy-mm-dd hh24:mi:ss') + 1.5;
ERROR:  operator does not exist: date + numeric
LINE 1: ...o_date('2014-01-01 00:00:00','yyyy-mm-dd hh24:mi:ss') + 1.5;
                                                                 ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO public,oracle;
-- Tests for - operator with DATE and number(smallint,integer,bigint,numeric)
SET search_path TO oracle,"$user", public, pg_catalog;
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') - 9::smallint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') - 9::smallint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') - 9::smallint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') - 9::smallint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') - 9::smallint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') - 9::smallint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') - 9;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') - 9;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') - 9::smallint;
  ?column?  
------------
 2014-06-23
(1 row)

SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') - 9::smallint;
  ?column?  
------------
 2014-06-23
(1 row)

SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') - 9::smallint;
  ?column?  
------------
 2014-06-23
(1 row)

SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') - 9::bigint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') - 9::bigint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') - 9::bigint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') - 9::bigint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') - 9::bigint;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') - 9::bigint;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') - 9::bigint;
ERROR:  operator does not exist: date - bigint
LINE 1: ...date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') - 9::bigin...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') - 9::bigint;
ERROR:  operator does not exist: date - bigint
LINE 1: ...date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') - 9::bigin...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') - 9::bigint;
ERROR:  operator does not exist: date - bigint
LINE 1: ...date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') - 9::bigin...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') - 9::integer;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') - 9::integer;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') - 9::integer;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') - 9::integer;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') - 9::integer;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') - 9::integer;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') - 9::integer;
  ?column?  
------------
 2014-06-23
(1 row)

SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') - 9::integer;
  ?column?  
------------
 2014-06-23
(1 row)

SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') - 9::integer;
  ?column?  
------------
 2014-06-23
(1 row)

SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-07-02 10:08:55') - 9::numeric;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-07-02 10:08:55') - 9::numeric;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='MM-DD-YYYY HH24:MI:SS';
SELECT to_date('07-02-2014 10:08:55') - 9::numeric;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('07-02-2014 10:08:55') - 9::numeric;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='DD-MM-YYYY HH24:MI:SS';
SELECT to_date('02-07-2014 10:08:55') - 9::numeric;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('02-07-2014 10:08:55') - 9::numeric;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') - 9::numeric;
ERROR:  operator does not exist: date - numeric
LINE 1: ...date('2014-07-02 10:08:55','YYYY-MM-DD HH:MI:SS') - 9::numer...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') - 9::numeric;
ERROR:  operator does not exist: date - numeric
LINE 1: ...date('02-07-2014 10:08:55','DD-MM-YYYY HH:MI:SS') - 9::numer...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') - 9::numeric;
ERROR:  operator does not exist: date - numeric
LINE 1: ...date('07-02-2014 10:08:55','MM-DD-YYYY HH:MI:SS') - 9::numer...
                                                             ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SET orafce.nls_date_format='YYYY-MM-DD HH24:MI:SS';
SELECT to_date('2014-01-01 00:00:00') - 1.5;
ERROR:  function to_date(unknown) does not exist
LINE 1: SELECT to_date('2014-01-01 00:00:00') - 1.5;
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT to_date('2014-01-01 00:00:00','yyyy-mm-dd hh24:mi:ss') - 1.5;
ERROR:  operator does not exist: date - numeric
LINE 1: ...o_date('2014-01-01 00:00:00','yyyy-mm-dd hh24:mi:ss') - 1.5;
                                                                 ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO public,oracle;
--Tests for oracle.to_char(timestamp)-used to set the DATE output format
SET search_path TO oracle,"$user", public, pg_catalog;
SET orafce.nls_date_format to default;
select oracle.to_char(to_date('19-APR-16 21:41:48'));
ERROR:  function to_date(unknown) does not exist
LINE 1: select oracle.to_char(to_date('19-APR-16 21:41:48'));
                              ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='YY-MonDD HH24:MI:SS';
select oracle.to_char(to_date('14-Jan08 11:44:49+05:30'));
ERROR:  function to_date(unknown) does not exist
LINE 1: select oracle.to_char(to_date('14-Jan08 11:44:49+05:30'));
                              ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='YY-DDMon HH24:MI:SS';
select oracle.to_char(to_date('14-08Jan 11:44:49+05:30'));
ERROR:  function to_date(unknown) does not exist
LINE 1: select oracle.to_char(to_date('14-08Jan 11:44:49+05:30'));
                              ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(to_date('21052014 12:13:44+05:30'));
ERROR:  function to_date(unknown) does not exist
LINE 1: select oracle.to_char(to_date('21052014 12:13:44+05:30'));
                              ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='DDMMYY HH24:MI:SS';
select oracle.to_char(to_date('210514 12:13:44+05:30'));
ERROR:  function to_date(unknown) does not exist
LINE 1: select oracle.to_char(to_date('210514 12:13:44+05:30'));
                              ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('2014/04/25 10:13', 'YYYY/MM/DD HH:MI'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('2014/04/25 10:13', 'YY...
                              ^
set orafce.nls_date_format='YY-DDMon HH24:MI:SS';
select oracle.to_char(oracle.to_date('16-Feb-09 10:11:11', 'DD-Mon-YY HH:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('16-Feb-09 10:11:11', '...
                              ^
set orafce.nls_date_format='YY-DDMon HH24:MI:SS';
select oracle.to_char(oracle.to_date('02/16/09 04:12:12', 'MM/DD/YY HH24:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('02/16/09 04:12:12', 'M...
                              ^
set orafce.nls_date_format='YY-MonDD HH24:MI:SS';
select oracle.to_char(oracle.to_date('021609 111213', 'MMDDYY HHMISS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('021609 111213', 'MMDDY...
                              ^
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('16-Feb-09 11:12:12', 'DD-Mon-YY HH:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('16-Feb-09 11:12:12', '...
                              ^
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('Feb/16/09 11:21:23', 'Mon/DD/YY HH:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('Feb/16/09 11:21:23', '...
                              ^
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('February.16.2009 10:11:12', 'Month.DD.YYYY HH:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('February.16.2009 10:11...
                              ^
set orafce.nls_date_format='YY-MonDD HH24:MI:SS';
select oracle.to_char(oracle.to_date('20020315111212', 'yyyymmddhh12miss'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('20020315111212', 'yyyy...
                              ^
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('January 15, 1989, 11:00 A.M.','Month dd, YYYY, HH:MI A.M.'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('January 15, 1989, 11:0...
                              ^
set orafce.nls_date_format='DDMMYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('14-Jan08 11:44:49+05:30' ,'YY-MonDD HH24:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('14-Jan08 11:44:49+05:3...
                              ^
set orafce.nls_date_format='DDMMYYYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('14-08Jan 11:44:49+05:30','YY-DDMon HH24:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('14-08Jan 11:44:49+05:3...
                              ^
set orafce.nls_date_format='YY-MonDD HH24:MI:SS';
select oracle.to_char(oracle.to_date('21052014 12:13:44+05:30','DDMMYYYY HH24:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('21052014 12:13:44+05:3...
                              ^
set orafce.nls_date_format='DDMMYY HH24:MI:SS';
select oracle.to_char(oracle.to_date('210514 12:13:44+05:30','DDMMYY HH24:MI:SS'));
ERROR:  schema "oracle" does not exist
LINE 1: select oracle.to_char(oracle.to_date('210514 12:13:44+05:30'...
                              ^
SET search_path TO public,oracle;
--Tests for oracle.-(oracle.date,oracle.date)
SET search_path TO oracle,"$user", public, pg_catalog;
SELECT (to_date('2014-07-17 11:10:15', 'yyyy-mm-dd hh24:mi:ss') - to_date('2014-02-01 10:00:00', 'yyyy-mm-dd hh24:mi:ss'))::numeric(10,4);
 numeric  
----------
 166.0000
(1 row)

SELECT (to_date('2014-07-17 13:14:15', 'yyyy-mm-dd hh24:mi:ss') - to_date('2014-02-01 10:00:00', 'yyyy-mm-dd hh24:mi:ss'))::numeric(10,4);
 numeric  
----------
 166.0000
(1 row)

SELECT (to_date('07-17-2014 13:14:15', 'mm-dd-yyyy hh24:mi:ss') - to_date('2014-02-01 10:00:00', 'yyyy-mm-dd hh24:mi:ss'))::numeric(10,4);
 numeric  
----------
 166.0000
(1 row)

SELECT (to_date('07-17-2014 13:14:15', 'mm-dd-yyyy hh24:mi:ss') - to_date('2015-02-01 10:00:00', 'yyyy-mm-dd hh24:mi:ss'))::numeric(10,4);
  numeric  
-----------
 -199.0000
(1 row)

SELECT (to_date('07-17-2014 13:14:15', 'mm-dd-yyyy hh24:mi:ss') - to_date('01-01-2013 10:00:00', 'mm-dd-yyyy hh24:mi:ss'))::numeric(10,4);
 numeric  
----------
 562.0000
(1 row)

SELECT (to_date('17-07-2014 13:14:15', 'dd-mm-yyyy hh24:mi:ss') - to_date('01-01-2013 10:00:00', 'dd--mm-yyyy hh24:mi:ss'))::numeric(10,4);
 numeric  
----------
 562.0000
(1 row)

SELECT (to_date('2014/02/01 10:11:12', 'YYYY/MM/DD hh12:mi:ss') - to_date('2013/02/01 10:11:12', 'YYYY/MM/DD hh12:mi:ss'))::numeric(10,4);
 numeric  
----------
 365.0000
(1 row)

SELECT (to_date('17-Jul-14 10:11:11', 'DD-Mon-YY HH:MI:SS') - to_date('17-Jan-14 00:00:00', 'DD-Mon-YY HH24:MI:SS'))::numeric(10,4);
 numeric  
----------
 181.0000
(1 row)

SELECT (to_date('July.17.2014 10:11:12', 'Month.DD.YYYY HH:MI:SS') - to_date('February.16.2014 10:21:12', 'Month.DD.YYYY HH:MI:SS'))::numeric(10,4);
 numeric  
----------
 151.0000
(1 row)

SELECT (to_date('20140717111211', 'yyyymmddhh12miss') - to_date('20140315111212', 'yyyymmddhh12miss'))::numeric(10,4);
 numeric  
----------
 124.0000
(1 row)

SELECT (to_date('January 15, 1990, 11:00 A.M.','Month dd, YYYY, HH:MI A.M.') - to_date('January 15, 1989, 10:00 A.M.','Month dd, YYYY, HH:MI A.M.'))::numeric(10,4);
 numeric  
----------
 365.0000
(1 row)

SELECT (to_date('14-Jul14 11:44:49' ,'YY-MonDD HH24:MI:SS') - to_date('14-Jan14 12:44:49' ,'YY-MonDD HH24:MI:SS'))::numeric(10,4);
 numeric  
----------
 181.0000
(1 row)

SELECT (to_date('210514 12:13:44','DDMMYY HH24:MI:SS') - to_date('210114 10:13:44','DDMMYY HH24:MI:SS'))::numeric(10,4);
 numeric  
----------
 120.0000
(1 row)

SELECT trunc(to_date('210514 12:13:44','DDMMYY HH24:MI:SS'));
ERROR:  function trunc(date) does not exist
LINE 1: SELECT trunc(to_date('210514 12:13:44','DDMMYY HH24:MI:SS'))...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT round(to_date('210514 12:13:44','DDMMYY HH24:MI:SS'));
ERROR:  function round(date) does not exist
LINE 1: SELECT round(to_date('210514 12:13:44','DDMMYY HH24:MI:SS'))...
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SET search_path TO public,oracle;
--
-- Note: each Japanese character used below has display width of 2, otherwise 1.
-- Note: each output string is surrounded by '|' for improved readability
--
--
-- test LPAD family of functions
--
/* cases where one or more arguments are of type CHAR */
SELECT '|' || oracle.lpad('あbcd'::char(8), 10) || '|';
ERROR:  schema "oracle" does not exist
LINE 2: SELECT '|' || oracle.lpad('あbcd'::char(8), 10) || '|';
                      ^
SELECT '|' || oracle.lpad('あbcd'::char(8),  5) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::char(8),  5) || '|';
                      ^
SELECT '|' || oracle.lpad('あbcd'::char(8), 1) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::char(8), 1) || '|';
                      ^
SELECT '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::char(...
                      ^
SELECT '|' || oracle.lpad('あbcd'::char(5),  5, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::char(5),  5, 'xい'::char(...
                      ^
SELECT '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::text) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::text)...
                      ^
SELECT '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: ...T '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::varchar2(5...
                                                             ^
SELECT '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::nvarchar2(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: ...T '|' || oracle.lpad('あbcd'::char(5), 10, 'xい'::nvarchar2(...
                                                             ^
SELECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::char(3))...
                      ^
SELECT '|' || oracle.lpad('あbcd'::text,  5, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::text,  5, 'xい'::char(3))...
                      ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::char(3)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::c...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(5),  5, 'xい'::char(3)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(5),  5, 'xい'::c...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::char(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5),  5, 'xい'::char(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5),  5, 'xい'::...
                                           ^
/* test oracle.lpad(text, int [, text]) */
SELECT '|' || oracle.lpad('あbcd'::text, 10) || '|';
ERROR:  schema "oracle" does not exist
LINE 2: SELECT '|' || oracle.lpad('あbcd'::text, 10) || '|';
                      ^
SELECT '|' || oracle.lpad('あbcd'::text,  5) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::text,  5) || '|';
                      ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(10), 10) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(10), 10) || '|';
                                           ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(10), 5) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(10), 5) || '|';
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(10), 10) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(10), 10) || '|'...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(10), 5) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(10), 5) || '|';
                                           ^
SELECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::text) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::text) ||...
                      ^
SELECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: ...LECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::varchar2(5...
                                                             ^
SELECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::nvarchar2(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: ...LECT '|' || oracle.lpad('あbcd'::text, 10, 'xい'::nvarchar2(...
                                                             ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::text) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::t...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::v...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::nvarchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::varchar2(5), 10, 'xい'::n...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::text) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::nvarchar2(5)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.lpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
--
-- test RPAD family of functions
--
/* cases where one or more arguments are of type CHAR */
SELECT '|' || oracle.rpad('あbcd'::char(8), 10) || '|';
ERROR:  schema "oracle" does not exist
LINE 2: SELECT '|' || oracle.rpad('あbcd'::char(8), 10) || '|';
                      ^
SELECT '|' || oracle.rpad('あbcd'::char(8),  5) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::char(8),  5) || '|';
                      ^
SELECT '|' || oracle.rpad('あbcd'::char(8), 1) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::char(8), 1) || '|';
                      ^
SELECT '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::char(...
                      ^
SELECT '|' || oracle.rpad('あbcd'::char(5),  5, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::char(5),  5, 'xい'::char(...
                      ^
SELECT '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::text) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::text)...
                      ^
SELECT '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: ...T '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::varchar2(5...
                                                             ^
SELECT '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::nvarchar2(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: ...T '|' || oracle.rpad('あbcd'::char(5), 10, 'xい'::nvarchar2(...
                                                             ^
SELECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::char(3))...
                      ^
SELECT '|' || oracle.rpad('あbcd'::text,  5, 'xい'::char(3)) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::text,  5, 'xい'::char(3))...
                      ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::char(3)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::c...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(5),  5, 'xい'::char(3)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(5),  5, 'xい'::c...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::char(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5),  5, 'xい'::char(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5),  5, 'xい'::...
                                           ^
/* test oracle.lpad(text, int [, text]) */
SELECT '|' || oracle.rpad('あbcd'::text, 10) || '|';
ERROR:  schema "oracle" does not exist
LINE 2: SELECT '|' || oracle.rpad('あbcd'::text, 10) || '|';
                      ^
SELECT '|' || oracle.rpad('あbcd'::text,  5) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::text,  5) || '|';
                      ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(10), 10) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(10), 10) || '|';
                                           ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(10), 5) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(10), 5) || '|';
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(10), 10) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(10), 10) || '|'...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(10), 5) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(10), 5) || '|';
                                           ^
SELECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::text) || '|';
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::text) ||...
                      ^
SELECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: ...LECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::varchar2(5...
                                                             ^
SELECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::nvarchar2(3)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: ...LECT '|' || oracle.rpad('あbcd'::text, 10, 'xい'::nvarchar2(...
                                                             ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::text) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::t...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::v...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::nvarchar2(5)) || '|';
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::varchar2(5), 10, 'xい'::n...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::text) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::varchar2(5)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::nvarchar2(5)) || '|';
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rpad('あbcd'::nvarchar2(5), 10, 'xい'::...
                                           ^
--
-- test TRIM family of functions
--
/* test that trailing blanks of CHAR arguments are not removed and are significant */
--
-- LTRIM
--
SELECT '|' || oracle.ltrim(' abcd'::char(10)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 5: SELECT '|' || oracle.ltrim(' abcd'::char(10)) || '|' as LTRI...
                      ^
SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::char(3)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::char(3)) |...
                      ^
SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::text) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::text) || '...
                      ^
SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::varchar2(3)) || '|' as LTRIM;
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::varchar2(3...
                                                          ^
SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::nvarchar2(3)) || '|' as LTRIM;
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd'::char(10),'a'::nvarchar2(...
                                                          ^
SELECT '|' || oracle.ltrim(' abcd  '::text,'a'::char(3)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd  '::text,'a'::char(3)) || ...
                      ^
SELECT '|' || oracle.ltrim(' abcd  '::varchar2(10),'a'::char(3)) || '|' as LTRIM;
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd  '::varchar2(10),'a'::char...
                                              ^
SELECT '|' || oracle.ltrim(' abcd  '::nvarchar2(10),'a'::char(3)) || '|' as LTRIM;
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.ltrim(' abcd  '::nvarchar2(10),'a'::cha...
                                              ^
--
-- RTRIM
--
SELECT '|' || oracle.rtrim(' abcd'::char(10)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd'::char(10)) || '|' as LTRI...
                      ^
SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::char(3)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::char(3)) |...
                      ^
SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::text) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::text) || '...
                      ^
SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::varchar2(3)) || '|' as LTRIM;
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::varchar2(3...
                                                          ^
SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::nvarchar2(3)) || '|' as LTRIM;
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd'::char(10),'d'::nvarchar2(...
                                                          ^
SELECT '|' || oracle.rtrim(' abcd  '::text,'d'::char(3)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd  '::text,'d'::char(3)) || ...
                      ^
SELECT '|' || oracle.rtrim(' abcd  '::varchar2(10),'d'::char(3)) || '|' as LTRIM;
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd  '::varchar2(10),'d'::char...
                                              ^
SELECT '|' || oracle.rtrim(' abcd  '::nvarchar2(10),'d'::char(3)) || '|' as LTRIM;
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.rtrim(' abcd  '::nvarchar2(10),'d'::cha...
                                              ^
--
-- BTRIM
--
SELECT '|' || oracle.btrim(' abcd'::char(10)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.btrim(' abcd'::char(10)) || '|' as LTRI...
                      ^
SELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::char(3)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::char(3)) ...
                      ^
SELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::text) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::text) || ...
                      ^
SELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::varchar2(3)) || '|' as LTRIM;
ERROR:  type "varchar2" does not exist
LINE 1: ...ELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::varchar2(3...
                                                             ^
SELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::nvarchar2(3)) || '|' as LTRIM;
ERROR:  type "nvarchar2" does not exist
LINE 1: ...ELECT '|' || oracle.btrim(' abcd'::char(10),'ad'::nvarchar2(...
                                                             ^
SELECT '|' || oracle.btrim(' abcd  '::text,'d'::char(3)) || '|' as LTRIM;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT '|' || oracle.btrim(' abcd  '::text,'d'::char(3)) || ...
                      ^
SELECT '|' || oracle.btrim(' abcd  '::varchar2(10),'d'::char(3)) || '|' as LTRIM;
ERROR:  type "varchar2" does not exist
LINE 1: SELECT '|' || oracle.btrim(' abcd  '::varchar2(10),'d'::char...
                                              ^
SELECT '|' || oracle.btrim(' abcd  '::nvarchar2(10),'d'::char(3)) || '|' as LTRIM;
ERROR:  type "nvarchar2" does not exist
LINE 1: SELECT '|' || oracle.btrim(' abcd  '::nvarchar2(10),'d'::cha...
                                              ^
--
-- test oracle.length()
--
/* test that trailing blanks are not ignored */
SELECT oracle.length('あbb'::char(6));
ERROR:  schema "oracle" does not exist
LINE 2: SELECT oracle.length('あbb'::char(6));
               ^
SELECT oracle.length(''::char(6));
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.length(''::char(6));
               ^
--
-- test plvdate.bizdays_between
--
SELECT plvdate.including_start();
ERROR:  schema "plvdate" does not exist
LINE 1: SELECT plvdate.including_start();
               ^
SELECT plvdate.bizdays_between('2016-02-24','2016-02-26');
ERROR:  schema "plvdate" does not exist
LINE 1: SELECT plvdate.bizdays_between('2016-02-24','2016-02-26');
               ^
SELECT plvdate.bizdays_between('2016-02-21','2016-02-27');
ERROR:  schema "plvdate" does not exist
LINE 1: SELECT plvdate.bizdays_between('2016-02-21','2016-02-27');
               ^
SELECT plvdate.include_start(false);
ERROR:  schema "plvdate" does not exist
LINE 1: SELECT plvdate.include_start(false);
               ^
SELECT plvdate.bizdays_between('2016-02-24','2016-02-26');
ERROR:  schema "plvdate" does not exist
LINE 1: SELECT plvdate.bizdays_between('2016-02-24','2016-02-26');
               ^
SELECT plvdate.bizdays_between('2016-02-21','2016-02-27');
ERROR:  schema "plvdate" does not exist
LINE 1: SELECT plvdate.bizdays_between('2016-02-21','2016-02-27');
               ^
SELECT oracle.round(1.234::double precision, 2), oracle.trunc(1.234::double precision, 2);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.round(1.234::double precision, 2), oracle.trun...
               ^
SELECT oracle.round(1.234::float, 2), oracle.trunc(1.234::float, 2);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.round(1.234::float, 2), oracle.trunc(1.234::fl...
               ^
--
-- should not fail - fix: Crashes due to insufficent argument checking (#59)
--
select dbms_random.string(null, 42);
ERROR:  schema "dbms_random" does not exist
LINE 1: select dbms_random.string(null, 42);
               ^
select dbms_pipe.create_pipe(null);
ERROR:  schema "dbms_pipe" does not exist
LINE 1: select dbms_pipe.create_pipe(null);
               ^
select plunit.assert_not_equals(1,2,3);
ERROR:  schema "plunit" does not exist
LINE 1: select plunit.assert_not_equals(1,2,3);
               ^
--
-- lexer text
--
SELECT pos, token, class, mod FROM plvlex.tokens('select * from a.b.c join d on x=y', true, true);
ERROR:  schema "plvlex" does not exist
LINE 1: SELECT pos, token, class, mod FROM plvlex.tokens('select * f...
                                           ^
--
-- trigger functions
--
CREATE TABLE trg_test(a varchar, b int, c varchar, d date, e int);
CREATE TRIGGER trg_test_xx BEFORE INSERT OR UPDATE
  ON trg_test FOR EACH ROW EXECUTE PROCEDURE oracle.replace_empty_strings(true);
ERROR:  schema "oracle" does not exist
\pset null ***
INSERT INTO trg_test VALUES('',10, 'AHOJ', NULL, NULL);
INSERT INTO trg_test VALUES('AHOJ', NULL, '', '2020-01-01', 100);
SELECT * FROM trg_test;
  a   |  b  |  c   |     d      |  e  
------+-----+------+------------+-----
      |  10 | AHOJ | ***        | ***
 AHOJ | *** |      | 2020-01-01 | 100
(2 rows)

DELETE FROM trg_test;
DROP TRIGGER trg_test_xx ON trg_test;
ERROR:  trigger "trg_test_xx" for table "trg_test" does not exist
CREATE TRIGGER trg_test_xx BEFORE INSERT OR UPDATE
  ON trg_test FOR EACH ROW EXECUTE PROCEDURE oracle.replace_null_strings();
ERROR:  schema "oracle" does not exist
INSERT INTO trg_test VALUES(NULL, 10, 'AHOJ', NULL, NULL);
INSERT INTO trg_test VALUES('AHOJ', NULL, NULL, '2020-01-01', 100);
SELECT * FROM trg_test;
  a   |  b  |  c   |     d      |  e  
------+-----+------+------------+-----
 ***  |  10 | AHOJ | ***        | ***
 AHOJ | *** | ***  | 2020-01-01 | 100
(2 rows)

DROP TABLE trg_test;
SELECT oracle.unistr('\0441\043B\043E\043D');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('\0441\043B\043E\043D');
               ^
SELECT oracle.unistr('d\u0061t\U00000061');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('d\u0061t\U00000061');
               ^
-- run-time error
SELECT oracle.unistr('wrong: \db99');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \db99');
               ^
SELECT oracle.unistr('wrong: \db99\0061');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \db99\0061');
               ^
SELECT oracle.unistr('wrong: \+00db99\+000061');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \+00db99\+000061');
               ^
SELECT oracle.unistr('wrong: \+2FFFFF');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \+2FFFFF');
               ^
SELECT oracle.unistr('wrong: \udb99\u0061');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \udb99\u0061');
               ^
SELECT oracle.unistr('wrong: \U0000db99\U00000061');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \U0000db99\U00000061');
               ^
SELECT oracle.unistr('wrong: \U002FFFFF');
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.unistr('wrong: \U002FFFFF');
               ^
----
-- Tests for the greatest/least scalar function
----
-- The PostgreSQL native function returns NULL only if all parameters are nulls
SELECT greatest(2, 6, 8);
 greatest 
----------
        8
(1 row)

SELECT greatest(2, NULL, 8);
 greatest 
----------
        8
(1 row)

SELECT least(2, 6, 8);
 least 
-------
     2
(1 row)

SELECT least(2, NULL, 8);
 least 
-------
     2
(1 row)

-- The Oracle function returns NULL on NULL input, even a single parameter
SELECT oracle.greatest(2, 6, 8, 4);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(2, 6, 8, 4);
               ^
SELECT oracle.greatest(2, NULL, 8, 4);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(2, NULL, 8, 4);
               ^
SELECT oracle.least(2, 6, 8, 1);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(2, 6, 8, 1);
               ^
SELECT oracle.least(2, NULL, 8, 1);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(2, NULL, 8, 1);
               ^
-- Test different data type
SELECT oracle.greatest('A'::text, 'B'::text, 'C'::text, 'D'::text);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest('A'::text, 'B'::text, 'C'::text, 'D':...
               ^
SELECT oracle.greatest('A'::bpchar, 'B'::bpchar, 'C'::bpchar, 'D'::bpchar);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest('A'::bpchar, 'B'::bpchar, 'C'::bpchar...
               ^
SELECT oracle.greatest(1::bigint,2::bigint,3::bigint,4::bigint);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(1::bigint,2::bigint,3::bigint,4::bigi...
               ^
SELECT oracle.greatest(1::integer,2::integer,3::integer,4::integer);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(1::integer,2::integer,3::integer,4::i...
               ^
SELECT oracle.greatest(1::smallint,2::smallint,3::smallint,4::smallint);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(1::smallint,2::smallint,3::smallint,4...
               ^
SELECT oracle.greatest(1.2::numeric,2.4::numeric,2.3::numeric,2.2::numeric);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(1.2::numeric,2.4::numeric,2.3::numeri...
               ^
SELECT oracle.greatest(1.2::double precision,2.4::double precision,2.3::double precision,2.2::double precision);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(1.2::double precision,2.4::double pre...
               ^
SELECT oracle.greatest(1.2::real,2.4::real,2.2::real,2.3::real);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.greatest(1.2::real,2.4::real,2.2::real,2.3::re...
               ^
SELECT oracle.least('A'::text, 'B'::text, 'C'::text, 'D'::text);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least('A'::text, 'B'::text, 'C'::text, 'D'::te...
               ^
SELECT oracle.least('A'::bpchar, 'B'::bpchar, 'C'::bpchar, 'D'::bpchar);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least('A'::bpchar, 'B'::bpchar, 'C'::bpchar, '...
               ^
SELECT oracle.least(1::bigint,2::bigint,3::bigint,4::bigint);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(1::bigint,2::bigint,3::bigint,4::bigint)...
               ^
SELECT oracle.least(1::integer,2::integer,3::integer,4::integer);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(1::integer,2::integer,3::integer,4::inte...
               ^
SELECT oracle.least(1::smallint,2::smallint,3::smallint,4::smallint);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(1::smallint,2::smallint,3::smallint,4::s...
               ^
SELECT oracle.least(1.2::numeric,2.4::numeric,2.3::numeric,2.2::numeric);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(1.2::numeric,2.4::numeric,2.3::numeric,2...
               ^
SELECT oracle.least(1.2::double precision,2.4::double precision,2.3::double precision,2.2::double precision);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(1.2::double precision,2.4::double precis...
               ^
SELECT oracle.least(1.2::real,2.4::real,2.2::real,2.3::real);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT oracle.least(1.2::real,2.4::real,2.2::real,2.3::real)...
               ^
SELECT i, oracle.greatest(100, 24, 1234, 12, i) FROM generate_series(1,3) g(i);
ERROR:  schema "oracle" does not exist
LINE 1: SELECT i, oracle.greatest(100, 24, 1234, 12, i) FROM generat...
                  ^
-- test remainder function
CREATE TABLE testorafce_remainder(v1 int, v2 int);
INSERT INTO testorafce_remainder VALUES(24, 7);
INSERT INTO testorafce_remainder VALUES(24, 6);
INSERT INTO testorafce_remainder VALUES(24, 5);
INSERT INTO testorafce_remainder VALUES(-58, -10);
INSERT INTO testorafce_remainder VALUES(58, 10);
INSERT INTO testorafce_remainder VALUES(58, -10);
INSERT INTO testorafce_remainder VALUES(58, 10);
INSERT INTO testorafce_remainder VALUES(-44, -10);
INSERT INTO testorafce_remainder VALUES(44, 10);
INSERT INTO testorafce_remainder VALUES(44, -10);
INSERT INTO testorafce_remainder VALUES(44, 10);
SELECT v1, v2, oracle.remainder(v1, v2) FROM testorafce_remainder;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT v1, v2, oracle.remainder(v1, v2) FROM testorafce_rema...
                       ^
SELECT v1, v2, oracle.remainder(v1::smallint, v2::smallint) FROM testorafce_remainder;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT v1, v2, oracle.remainder(v1::smallint, v2::smallint) ...
                       ^
SELECT v1, v2, oracle.remainder(v1::bigint, v2::bigint) FROM testorafce_remainder;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT v1, v2, oracle.remainder(v1::bigint, v2::bigint) FROM...
                       ^
SELECT v1, v2, oracle.remainder(v1::numeric, v2::numeric) FROM testorafce_remainder;
ERROR:  schema "oracle" does not exist
LINE 1: SELECT v1, v2, oracle.remainder(v1::numeric, v2::numeric) FR...
                       ^
DROP TABLE testorafce_remainder;
