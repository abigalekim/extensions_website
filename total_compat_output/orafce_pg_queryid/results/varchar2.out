\set VERBOSITY terse
SET client_encoding = utf8;
SET search_path TO public, oracle;
--
-- test type modifier related rules
--
-- ERROR (typmod >= 1)
CREATE TABLE foo (a VARCHAR2(0));
ERROR:  type "varchar2" does not exist at character 21
-- ERROR (number of typmods = 1)
CREATE TABLE foo (a VARCHAR2(10, 1));
ERROR:  type "varchar2" does not exist at character 21
-- OK
CREATE TABLE foo (a VARCHAR(5000));
-- cleanup
DROP TABLE foo;
-- OK
CREATE TABLE foo (a VARCHAR2(5));
ERROR:  type "varchar2" does not exist at character 21
CREATE INDEX ON foo(a);
ERROR:  relation "foo" does not exist
--
-- test that no value longer than maxlen is allowed
--
-- ERROR (length > 5)
INSERT INTO foo VALUES ('abcdef');
ERROR:  relation "foo" does not exist at character 13
-- ERROR (length > 5);
-- VARCHAR2 does not truncate blank spaces on implicit coercion
INSERT INTO foo VALUES ('abcde  ');
ERROR:  relation "foo" does not exist at character 13
-- OK
INSERT INTO foo VALUES ('abcde');
ERROR:  relation "foo" does not exist at character 13
-- OK
INSERT INTO foo VALUES ('abcdef'::VARCHAR2(5));
ERROR:  relation "foo" does not exist at character 13
-- OK
INSERT INTO foo VALUES ('abcde  '::VARCHAR2(5));
ERROR:  relation "foo" does not exist at character 13
--OK
INSERT INTO foo VALUES ('abc'::VARCHAR2(5));
ERROR:  relation "foo" does not exist at character 13
--
-- test whitespace semantics on comparison
--
-- equal
SELECT 'abcde   '::VARCHAR2(10) = 'abcde   '::VARCHAR2(10);
ERROR:  type "varchar2" does not exist at character 20
-- not equal
SELECT 'abcde  '::VARCHAR2(10) = 'abcde   '::VARCHAR2(10);
ERROR:  type "varchar2" does not exist at character 19
--
-- test string functions created for varchar2
--
-- substrb(varchar2, int, int)
SELECT substrb('ABCありがとう'::VARCHAR2, 7, 6);
ERROR:  type "varchar2" does not exist at character 28
-- returns 'f' (emtpy string is not NULL)
SELECT substrb('ABCありがとう'::VARCHAR2, 7, 0) IS NULL;
ERROR:  type "varchar2" does not exist at character 28
-- If the starting position is zero or less, then return from the start
-- of the string adjusting the length to be consistent with the "negative start"
-- per SQL.
SELECT substrb('ABCありがとう'::VARCHAR2, 0, 4);
ERROR:  type "varchar2" does not exist at character 28
-- substrb(varchar2, int)
SELECT substrb('ABCありがとう', 5);
ERROR:  function substrb(unknown, integer) does not exist at character 8
-- strposb(varchar2, varchar2)
SELECT strposb('ABCありがとう', 'りが');
ERROR:  function strposb(unknown, unknown) does not exist at character 8
-- returns 1 (start of the source string)
SELECT strposb('ABCありがとう', '');
ERROR:  function strposb(unknown, unknown) does not exist at character 8
-- returns 0
SELECT strposb('ABCありがとう', 'XX');
ERROR:  function strposb(unknown, unknown) does not exist at character 8
-- returns 't'
SELECT strposb('ABCありがとう', NULL) IS NULL;
ERROR:  function strposb(unknown, unknown) does not exist at character 8
-- lengthb(varchar2)
SELECT lengthb('ABCありがとう');
ERROR:  function lengthb(unknown) does not exist at character 8
-- returns 0
SELECT lengthb('');
ERROR:  function lengthb(unknown) does not exist at character 8
-- returs 't'
SELECT lengthb(NULL) IS NULL;
ERROR:  function lengthb(unknown) does not exist at character 8
-- null safe concat (disabled by default)
SELECT NULL || 'hello'::varchar2 || NULL;
ERROR:  type "varchar2" does not exist at character 25
SET orafce.varchar2_null_safe_concat TO true;
SELECT NULL || 'hello'::varchar2 || NULL;
ERROR:  type "varchar2" does not exist at character 25
