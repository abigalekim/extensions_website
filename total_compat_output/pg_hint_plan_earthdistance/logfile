2023-07-25 19:30:25.737 UTC [819035] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-25 19:30:25.737 UTC [819035] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-25 19:30:25.743 UTC [819035] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-25 19:30:25.750 UTC [819038] LOG:  database system was shut down at 2023-07-25 19:30:25 UTC
2023-07-25 19:30:25.755 UTC [819035] LOG:  database system is ready to accept connections
2023-07-25 19:30:27.066 UTC [819035] LOG:  received SIGHUP, reloading configuration files
2023-07-25 19:30:27.068 UTC [819035] LOG:  parameter "effective_cache_size" changed to "16384"
2023-07-25 19:30:27.273 UTC [819065] ERROR:  table hint is not activated because queryid is not available
2023-07-25 19:30:27.273 UTC [819065] HINT:  Set compute_query_id to on or auto to use hint table.
2023-07-25 19:30:27.273 UTC [819065] STATEMENT:  SET pg_hint_plan.enable_hint_table to on;
2023-07-25 19:30:27.274 UTC [819065] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-25 19:30:27.274 UTC [819065] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-25 19:30:27.274 UTC [819065] LOG:  hint table feature is reactivated
2023-07-25 19:30:27.274 UTC [819065] STATEMENT:  SELECT 1;
2023-07-25 19:30:27.275 UTC [819065] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-25 19:30:27.275 UTC [819065] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-25 19:30:27.278 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.278 UTC [819065] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.278 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.278 UTC [819065] STATEMENT:  EXPLAIN (COSTS false) /*+Set(enable_indexscan off)*/
	 SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.279 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(enable_hashjoin off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.279 UTC [819065] STATEMENT:  /*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.279 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.279 UTC [819065] STATEMENT:  /*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.279 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.279 UTC [819065] STATEMENT:  /*+ 	 
		 	Set 	 
		 	( 	 
		 	enable_indexscan 	 
		 	off 	 
		 	) 	 
		 	*/	 	
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.280 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	Set(enable_mergejoin off)
	Set(enable_nestloop off)
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.280 UTC [819065] STATEMENT:  /*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
		 	Set(enable_seqscan off)
		 	*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.280 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem 1M)
	
2023-07-25 19:30:27.280 UTC [819065] STATEMENT:  /*+Set(work_mem "1M")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.280 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Set(work_mem 1MB)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.280 UTC [819065] STATEMENT:  /*+Set(work_mem "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.281 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem TO 1MB)
	
2023-07-25 19:30:27.281 UTC [819065] STATEMENT:  /*+Set(work_mem TO "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.281 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 19:30:27.281 UTC [819065] STATEMENT:  /*+SeqScan() */ SELECT 1;
2023-07-25 19:30:27.281 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-25 19:30:27.281 UTC [819065] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.282 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.282 UTC [819065] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.282 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.282 UTC [819065] STATEMENT:  /*+SeqScan(t1)IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.282 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.282 UTC [819065] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.283 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.283 UTC [819065] STATEMENT:  /*+BitmapScan(t2)NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.283 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.283 UTC [819065] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.283 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.283 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
2023-07-25 19:30:27.284 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.284 UTC [819065] STATEMENT:  /*+TidScan(t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
2023-07-25 19:30:27.284 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.284 UTC [819065] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
2023-07-25 19:30:27.284 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-25 19:30:27.284 UTC [819065] STATEMENT:  /*+ NestLoop() */ SELECT 1;
2023-07-25 19:30:27.284 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(x)
	
2023-07-25 19:30:27.284 UTC [819065] STATEMENT:  /*+ NestLoop(x) */ SELECT 1;
2023-07-25 19:30:27.285 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.285 UTC [819065] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.285 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.285 UTC [819065] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.285 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.285 UTC [819065] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.286 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.286 UTC [819065] STATEMENT:  /*+MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-25 19:30:27.286 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.286 UTC [819065] STATEMENT:  /*+NestLoop(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-25 19:30:27.286 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.286 UTC [819065] STATEMENT:  /*+NoHashJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-25 19:30:27.287 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.287 UTC [819065] STATEMENT:  /*+MergeJoin(t4 t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.288 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.288 UTC [819065] STATEMENT:  /*+HashJoin(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.289 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t3)
	NestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.289 UTC [819065] STATEMENT:  /*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.291 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.291 UTC [819065] STATEMENT:  /*+NoNestLoop(t4 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.293 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-25 19:30:27.293 UTC [819065] STATEMENT:  /*+Leading( )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.294 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3)
	
2023-07-25 19:30:27.294 UTC [819065] STATEMENT:  /*+Leading( t3 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.294 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.294 UTC [819065] STATEMENT:  /*+Leading( t3 t4 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.295 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.295 UTC [819065] STATEMENT:  /*+Leading(t3 t4 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.296 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.296 UTC [819065] STATEMENT:  /*+Leading(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.297 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t1 t2 t1)
	
2023-07-25 19:30:27.297 UTC [819065] STATEMENT:  /*+Leading(t3 t4 t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.299 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t4)
	
2023-07-25 19:30:27.299 UTC [819065] STATEMENT:  /*+Leading(t3 t4 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-25 19:30:27.299 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.299 UTC [819065] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-25 19:30:27.300 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.300 UTC [819065] STATEMENT:  /*+HashJoin(t1 *VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-25 19:30:27.300 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	HashJoin(*VALUES* t1)
	not used hint:
	IndexScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.300 UTC [819065] STATEMENT:  /*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-25 19:30:27.301 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.301 UTC [819065] STATEMENT:  /*+BitmapScan(v_1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.302 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.302 UTC [819065] STATEMENT:  /*+BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.303 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.303 UTC [819065] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.303 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.303 UTC [819065] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.304 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.304 UTC [819065] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.305 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.305 UTC [819065] STATEMENT:  /*+BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.305 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.305 UTC [819065] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-25 19:30:27.306 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.306 UTC [819065] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.306 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.306 UTC [819065] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.307 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.307 UTC [819065] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.307 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.307 UTC [819065] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.307 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.307 UTC [819065] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.307 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.307 UTC [819065] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.308 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.308 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.308 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.308 UTC [819065] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-25 19:30:27.309 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.309 UTC [819065] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.309 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.309 UTC [819065] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.309 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.309 UTC [819065] STATEMENT:  /*+SeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.310 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.310 UTC [819065] STATEMENT:  /*+SeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.310 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.310 UTC [819065] STATEMENT:  /*+SeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.310 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.310 UTC [819065] STATEMENT:  /*+SeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.311 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.311 UTC [819065] STATEMENT:  /*+SeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.311 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.311 UTC [819065] STATEMENT:  /*+SeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.311 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.311 UTC [819065] STATEMENT:  /*+SeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.312 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.312 UTC [819065] STATEMENT:  /*+SeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.312 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.312 UTC [819065] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.312 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.312 UTC [819065] STATEMENT:  /*+IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.313 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.313 UTC [819065] STATEMENT:  /*+IndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.313 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.313 UTC [819065] STATEMENT:  /*+IndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.313 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.313 UTC [819065] STATEMENT:  /*+IndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.314 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.314 UTC [819065] STATEMENT:  /*+IndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.314 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.314 UTC [819065] STATEMENT:  /*+IndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.314 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.314 UTC [819065] STATEMENT:  /*+IndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.315 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.315 UTC [819065] STATEMENT:  /*+IndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.315 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.315 UTC [819065] STATEMENT:  /*+IndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.315 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.315 UTC [819065] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.316 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.316 UTC [819065] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.316 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.316 UTC [819065] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.316 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.316 UTC [819065] STATEMENT:  /*+BitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.317 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.317 UTC [819065] STATEMENT:  /*+BitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.317 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.317 UTC [819065] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.317 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.317 UTC [819065] STATEMENT:  /*+BitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.317 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.317 UTC [819065] STATEMENT:  /*+BitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.317 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.317 UTC [819065] STATEMENT:  /*+BitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.317 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.317 UTC [819065] STATEMENT:  /*+BitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.318 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.318 UTC [819065] STATEMENT:  /*+BitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.318 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.318 UTC [819065] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.318 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.318 UTC [819065] STATEMENT:  /*+TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.318 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.318 UTC [819065] STATEMENT:  /*+TidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.318 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.318 UTC [819065] STATEMENT:  /*+TidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.319 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.319 UTC [819065] STATEMENT:  /*+TidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.319 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.319 UTC [819065] STATEMENT:  /*+TidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.319 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.319 UTC [819065] STATEMENT:  /*+TidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.319 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.319 UTC [819065] STATEMENT:  /*+TidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.319 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.319 UTC [819065] STATEMENT:  /*+TidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.319 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.319 UTC [819065] STATEMENT:  /*+TidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.320 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.320 UTC [819065] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.320 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.320 UTC [819065] STATEMENT:  /*+NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.320 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.320 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.320 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.320 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.320 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.320 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.320 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.320 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.321 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.321 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.321 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.321 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.321 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.321 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.321 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.321 UTC [819065] STATEMENT:  /*+NoSeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.321 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.321 UTC [819065] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.322 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.322 UTC [819065] STATEMENT:  /*+NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.322 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.322 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.322 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.322 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.322 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.322 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.322 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.322 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.322 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.322 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.323 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.323 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.323 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.323 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.323 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.323 UTC [819065] STATEMENT:  /*+NoIndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.323 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.323 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.323 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.323 UTC [819065] STATEMENT:  /*+NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.324 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.324 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.324 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.324 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.324 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.324 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.324 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.324 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.324 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.324 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.324 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.324 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.325 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.325 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.325 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.325 UTC [819065] STATEMENT:  /*+NoBitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.325 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.325 UTC [819065] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.325 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.325 UTC [819065] STATEMENT:  /*+NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.325 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.325 UTC [819065] STATEMENT:  /*+NoTidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.326 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.326 UTC [819065] STATEMENT:  /*+NoTidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.326 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.326 UTC [819065] STATEMENT:  /*+NoTidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.326 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.326 UTC [819065] STATEMENT:  /*+NoTidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.326 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.326 UTC [819065] STATEMENT:  /*+NoTidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.326 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.326 UTC [819065] STATEMENT:  /*+NoTidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.326 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.326 UTC [819065] STATEMENT:  /*+NoTidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.327 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.327 UTC [819065] STATEMENT:  /*+NoTidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.327 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.327 UTC [819065] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)' AND t1.id < 10 AND t2.id < 10;
2023-07-25 19:30:27.327 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.327 UTC [819065] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-25 19:30:27.327 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.327 UTC [819065] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-25 19:30:27.330 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.330 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.330 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.330 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.331 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.331 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.331 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.331 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.331 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.331 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.332 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.332 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.332 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.332 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.332 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.332 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.334 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.334 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.334 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.334 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.335 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.335 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.336 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.336 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.336 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.336 UTC [819065] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.337 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.337 UTC [819065] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.337 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.337 UTC [819065] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.338 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.338 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.338 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.338 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.339 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.339 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.339 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.339 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.340 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.340 UTC [819065] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.340 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.340 UTC [819065] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.340 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.340 UTC [819065] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.341 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.341 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.341 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.341 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.341 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.341 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.341 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.341 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.341 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.341 UTC [819065] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-25 19:30:27.342 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.342 UTC [819065] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.343 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.343 UTC [819065] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.343 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.343 UTC [819065] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.343 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.343 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.343 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.343 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.344 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.344 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.344 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.344 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.344 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.344 UTC [819065] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.344 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.344 UTC [819065] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.344 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.344 UTC [819065] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.345 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.345 UTC [819065] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-25 19:30:27.357 UTC [819065] LOG:  available indexes for IndexScan(ischk_d1): ischk_d1_b_idx
2023-07-25 19:30:27.357 UTC [819065] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-25 19:30:27.357 UTC [819065] LOG:  available indexes for IndexScan(ischk_d2): ischk_d2_b_idx
2023-07-25 19:30:27.357 UTC [819065] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-25 19:30:27.357 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ischk ischk_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.357 UTC [819065] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-25 19:30:27.358 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""t1 )	")
	IndexScan("t	2 """)
	HashJoin("""t1 )	" T3 "t	2 """)
	Leading("""t1 )	" T3 "t	2 """)
	Set(application_name "a	a	a""	a	A")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.358 UTC [819065] STATEMENT:  /*+SeqScan("""t1 )	")IndexScan("t	2 """)HashJoin("""t1 )	"T3"t	2 """)Leading("""t1 )	"T3"t	2 """)Set(application_name"a	a	a""	a	A")*/
	EXPLAIN (COSTS false) SELECT * FROM t1 """t1 )	", t2 "t	2 """, t3 "T3" WHERE """t1 )	".id = "t	2 """.id AND """t1 )	".id = "T3".id;
2023-07-25 19:30:27.358 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_mergejoin on)
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	SeqScan(t1)
	IndexScan(t1)
	BitmapScan(t1)
	SeqScan(t2)
	IndexScan(t2)
	BitmapScan(t2)
	HashJoin(t1 t2)
	NestLoop(t1 t2)
	Leading(t1 t2)
	Set(enable_seqscan off)
	error hint:
	
2023-07-25 19:30:27.358 UTC [819065] STATEMENT:  /*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-25 19:30:27.362 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.362 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.364 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.364 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.365 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.365 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.367 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.367 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.370 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.370 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.371 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.371 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.372 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.372 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.373 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1_3 t3_3)
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.373 UTC [819065] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-25 19:30:27.374 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	MergeJoin(t1 t2)
	
2023-07-25 19:30:27.374 UTC [819065] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-25 19:30:27.374 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t1)
	
2023-07-25 19:30:27.374 UTC [819065] STATEMENT:  /*+Leading(t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-25 19:30:27.375 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-25 19:30:27.375 UTC [819065] STATEMENT:  /*+
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "123456789012345678901234567890123456789012345678901234567890123" JOIN t2 ON ("123456789012345678901234567890123456789012345678901234567890123".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-25 19:30:27.375 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-25 19:30:27.375 UTC [819065] STATEMENT:  /*+
	Leading(1234567890123456789012345678901234567890123456789012345678901234 t2 t3)
	SeqScan(1234567890123456789012345678901234567890123456789012345678901234)
	MergeJoin(1234567890123456789012345678901234567890123456789012345678901234 t2)
	Set(1234567890123456789012345678901234567890123456789012345678901234 1)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "1234567890123456789012345678901234567890123456789012345678901234" JOIN t2 ON ("1234567890123456789012345678901234567890123456789012345678901234".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-25 19:30:27.376 UTC [819065] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  SET "123456789012345678901234567890123456789012345678901234567890123" TO 1;
2023-07-25 19:30:27.376 UTC [819065] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  SET "1234567890123456789012345678901234567890123456789012345678901234" TO 1;
2023-07-25 19:30:27.376 UTC [819065] ERROR:  1.23457e+63 is outside the valid range for parameter "cursor_tuple_fraction" (0 .. 1)
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  SET cursor_tuple_fraction TO 1234567890123456789012345678901234567890123456789012345678901234;
2023-07-25 19:30:27.376 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_seqscan 100)
	Set(seq_page_cost on)
	
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  /*+ Set(enable_seqscan 100)Set(seq_page_cost on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-25 19:30:27.376 UTC [819065] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.376 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.376 UTC [819065] LOG:  available indexes for IndexScan(t5):
2023-07-25 19:30:27.376 UTC [819065] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  available indexes for IndexScan(t5): t5_id2 t5_id1
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id1 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  available indexes for IndexScan(t5):
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist5 no_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-25 19:30:27.377 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1))
	
2023-07-25 19:30:27.377 UTC [819065] STATEMENT:  /*+Leading((t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.378 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.378 UTC [819065] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.378 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1 t2 t3))
	
2023-07-25 19:30:27.378 UTC [819065] STATEMENT:  /*+Leading((t1 t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.378 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.378 UTC [819065] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id < 10;
2023-07-25 19:30:27.379 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.379 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.380 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) t4))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.380 UTC [819065] STATEMENT:  /*+Leading((((t1 t2) t3) t4))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.380 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.380 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.380 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.380 UTC [819065] STATEMENT:  /*+Leading((t1 (t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.381 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.381 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.382 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t3 t1) t2))
	not used hint:
	duplication hint:
	Leading(((t1 t2) t3))
	error hint:
	
2023-07-25 19:30:27.382 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-25 19:30:27.382 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	Leading((t1_2 t2_2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.382 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-25 19:30:27.383 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(((((t1 t2) t3) t1_2) t2_2))
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.383 UTC [819065] STATEMENT:  /*+Leading(((((t1 t2) t3) t1_2) t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-25 19:30:27.383 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.383 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.383 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.383 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.384 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.384 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.384 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t1 t3)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.384 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.384 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.384 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.385 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.385 UTC [819065] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.385 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.385 UTC [819065] STATEMENT:  /*+ Leading ( ( t1 ( t2 t3 ) ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.385 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.385 UTC [819065] STATEMENT:  /*+Leading((t1(t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.386 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("t1(t2" "t3)"))
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.386 UTC [819065] STATEMENT:  /*+Leading(("t1(t2" "t3)"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.386 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.386 UTC [819065] STATEMENT:  /*+ Leading ( ( ( t1 t2 ) t3 ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.386 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.386 UTC [819065] STATEMENT:  /*+Leading(((t1 t2)t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.386 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("(t1" "t2)t3"))
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.386 UTC [819065] STATEMENT:  /*+Leading(("(t1" "t2)t3"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-25 19:30:27.387 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 (t3 (t4 t5)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.387 UTC [819065] STATEMENT:  /*+Leading((t1(t2(t3(t4 t5)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.388 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((t5 (t4 (t3 (t2 t1)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.388 UTC [819065] STATEMENT:  /*+Leading((t5(t4(t3(t2 t1)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.389 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t1 t2) t3) t4) t5))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.389 UTC [819065] STATEMENT:  /*+Leading(((((t1 t2)t3)t4)t5))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.390 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t5 t4) t3) t2) t1))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.390 UTC [819065] STATEMENT:  /*+Leading(((((t5 t4)t3)t2)t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.390 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 (t4 t5))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.390 UTC [819065] STATEMENT:  /*+Leading(((t1 t2)(t3(t4 t5))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.391 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading(((t5 t4) (t3 (t2 t1))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.391 UTC [819065] STATEMENT:  /*+Leading(((t5 t4)(t3(t2 t1))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.392 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) (t4 t5)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.392 UTC [819065] STATEMENT:  /*+Leading((((t1 t2)t3)(t4 t5)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.393 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Leading((((t5 t4) t3) (t2 t1)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.393 UTC [819065] STATEMENT:  /*+Leading((((t5 t4)t3)(t2 t1)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.397 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 19:30:27.397 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_val_id_idx
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_id_idx
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_id_idx
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_id_idx
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.398 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_id_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.398 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.399 UTC [819065] LOG:  available indexes for IndexScan(p2):
2023-07-25 19:30:27.399 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.399 UTC [819065] LOG:  available indexes for IndexScan(p2_c1):
2023-07-25 19:30:27.399 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c2):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c3):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c4):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2):
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.400 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.400 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_id2_val
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id2_val
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_val2_id
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.401 UTC [819065] LOG:  available indexes for IndexScan(p2_c1):
2023-07-25 19:30:27.401 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val2_id)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.402 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.402 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2_c1):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.403 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.403 UTC [819065] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.404 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.404 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  available indexes for IndexScan(p2):
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.405 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-25 19:30:27.405 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.406 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.406 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_expr
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_expr_idx
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.407 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.407 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_val_idx6
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.408 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.408 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_val_idx6 p2_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7 p2_c1_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7 p2_c2_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7 p2_c3_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7 p2_c4_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7 p2_c1_c1_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7 p2_c1_c2_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7 p2_c3_c1_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7 p2_c3_c2_val_idx
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.409 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.409 UTC [819065] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-25 19:30:27.410 UTC [819065] LOG:  available indexes for IndexScanRegexp(t5): t5_val t5_pkey
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  available indexes for IndexScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  available indexes for IndexScan(t5):
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.410 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.410 UTC [819065] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_val t5_pkey
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for IndexOnlyScan(t5):
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for BitmapScanRegexp(t5): t5_val t5_pkey
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for BitmapScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.411 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.411 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for BitmapScan(t5):
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.412 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.412 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1): p1_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c2):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c4):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1_c1):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c1_c2):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3_c1):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScanRegexp(p1_c3_c2):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScan(p1):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.413 UTC [819065] LOG:  available indexes for IndexScan(p1_c1):
2023-07-25 19:30:27.413 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c2):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c3):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c4):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c1):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c2):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c1):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c2):
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.414 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.414 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c2):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c3):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c4):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c1_c1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c1_c2):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c3_c1):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for IndexOnlyScan(p1_c3_c2):
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1): p1_pkey
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_pkey
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_pkey
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_pkey
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.415 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_pkey
2023-07-25 19:30:27.415 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1): p1_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c2):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c4):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2):
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.416 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.416 UTC [819065] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c1):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c2):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c3):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c4):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c1_c1):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c1_c2):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c3_c1):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  available indexes for BitmapScan(p1_c3_c2):
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.417 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.417 UTC [819065] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-25 19:30:27.420 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.420 UTC [819065] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM t1 WHERE t1.id = 1;
2023-07-25 19:30:27.439 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.439 UTC [819065] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ *          FROM t1 LIMIT 1"
	PL/pgSQL function testfunc() line 5 at SQL statement
2023-07-25 19:30:27.439 UTC [819065] STATEMENT:  SELECT testfunc();
2023-07-25 19:30:27.443 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.443 UTC [819065] CONTEXT:  SQL statement "/*+ SeqScan(t1) */ SELECT * FROM t1"
	PL/pgSQL function testfunc() line 3 at EXECUTE
2023-07-25 19:30:27.443 UTC [819065] STATEMENT:  SELECT testfunc();
2023-07-25 19:30:27.446 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.446 UTC [819065] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-25 19:30:27.449 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.449 UTC [819065] CONTEXT:  SQL statement "SELECT  1, /*+ SeqScan(t1) */ * from t1"
	PL/pgSQL function testfunc() line 3 at PERFORM
2023-07-25 19:30:27.449 UTC [819065] STATEMENT:  SELECT testfunc();
2023-07-25 19:30:27.454 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.454 UTC [819065] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ v FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over SELECT rows
2023-07-25 19:30:27.454 UTC [819065] STATEMENT:  SELECT testfunc();
2023-07-25 19:30:27.460 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.460 UTC [819065] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ val FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 8 at FOR over EXECUTE statement
2023-07-25 19:30:27.460 UTC [819065] STATEMENT:  SELECT testfunc();
2023-07-25 19:30:27.466 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.466 UTC [819065] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over cursor
2023-07-25 19:30:27.466 UTC [819065] STATEMENT:  SELECT testfunc();
2023-07-25 19:30:27.479 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.479 UTC [819065] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-25 19:30:27.479 UTC [819065] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-25 19:30:27.484 UTC [819065] ERROR:  relation "ttx" does not exist at character 34
2023-07-25 19:30:27.484 UTC [819065] QUERY:  SELECT /*+ SeqScan(t1) */ * FROM ttx ORDER BY id
2023-07-25 19:30:27.484 UTC [819065] CONTEXT:  PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-25 19:30:27.484 UTC [819065] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-25 19:30:27.484 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:27.484 UTC [819065] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-25 19:30:30.514 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:30.514 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(t1) */ SELECT count(*) FROM t1 WHERE id < $1"
	PL/pgSQL function dynsql1(integer) line 4 at EXECUTE
2023-07-25 19:30:30.514 UTC [819065] STATEMENT:  SELECT dynsql1(9000);
2023-07-25 19:30:33.545 UTC [819065] LOG:  available indexes for IndexScan(p1_c1): p1_c1_pkey
2023-07-25 19:30:33.545 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 19:30:33.545 UTC [819065] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 19:30:33.545 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_pkey
2023-07-25 19:30:33.545 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 19:30:33.545 UTC [819065] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 19:30:33.545 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_pkey
2023-07-25 19:30:33.545 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 19:30:33.545 UTC [819065] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 19:30:33.545 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c1 p1_c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:33.545 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 19:30:33.545 UTC [819065] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 19:30:33.546 UTC [819065] LOG:  available indexes for IndexScan(p1_c2): p1_c2_pkey
2023-07-25 19:30:33.546 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 19:30:33.546 UTC [819065] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 19:30:33.546 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c2 p1_c2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:33.546 UTC [819065] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-25 19:30:33.546 UTC [819065] STATEMENT:  SELECT dynsql2(9000);
2023-07-25 19:30:34.555 UTC [819065] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-25 19:30:34.555 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.555 UTC [819065] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-25 19:30:34.555 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.555 UTC [819065] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-25 19:30:34.555 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.555 UTC [819065] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-25 19:30:34.555 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.556 UTC [819065] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-25 19:30:34.556 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.556 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-25 19:30:34.556 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.556 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-25 19:30:34.556 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.556 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-25 19:30:34.556 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.556 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-25 19:30:34.556 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.557 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.557 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.559 UTC [819065] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-25 19:30:34.559 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.559 UTC [819065] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-25 19:30:34.559 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.559 UTC [819065] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-25 19:30:34.559 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.559 UTC [819065] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-25 19:30:34.559 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.559 UTC [819065] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-25 19:30:34.559 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.560 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-25 19:30:34.560 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.560 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-25 19:30:34.560 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.560 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-25 19:30:34.560 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.560 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-25 19:30:34.560 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.561 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 19:30:34.561 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.561 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 19:30:34.561 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.561 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-25 19:30:34.561 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.561 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-25 19:30:34.561 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.561 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-25 19:30:34.561 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.561 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 19:30:34.561 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.562 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 19:30:34.562 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.562 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-25 19:30:34.562 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.562 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-25 19:30:34.562 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.562 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.562 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.568 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-25 19:30:34.568 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.569 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-25 19:30:34.569 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.569 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.569 UTC [819065] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.570 UTC [819065] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-25 19:30:34.570 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.571 UTC [819065] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-25 19:30:34.571 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.572 UTC [819065] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-25 19:30:34.572 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.572 UTC [819065] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-25 19:30:34.572 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.572 UTC [819065] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-25 19:30:34.572 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.573 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.573 UTC [819065] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-25 19:30:34.574 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-25 19:30:34.574 UTC [819065] STATEMENT:  /*+ Rows() */ SELECT 1;
2023-07-25 19:30:34.574 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-25 19:30:34.574 UTC [819065] STATEMENT:  /*+ Rows(x) */ SELECT 1;
2023-07-25 19:30:34.584 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.584 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 #99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.593 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.593 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 +99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.602 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.602 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 -99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.611 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.611 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 *99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.620 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.01)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.620 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 *0.01) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.629 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #aa)
	
2023-07-25 19:30:34.629 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 #aa) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.639 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 /99)
	
2023-07-25 19:30:34.639 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 /99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.647 UTC [819065] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999) 
2023-07-25 19:30:34.647 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99999)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.647 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 -99999) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-25 19:30:34.666 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #22)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.666 UTC [819065] STATEMENT:  /*+ Rows(t1 t2 #22) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-25 19:30:34.676 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t3 *10)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.676 UTC [819065] STATEMENT:  /*+ Rows(t1 t3 *10) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-25 19:30:34.689 UTC [819065] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:34.689 UTC [819065] STATEMENT:  /*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;
2023-07-25 19:30:35.566 UTC [819147] ERROR:  extension "pg_hint_plan" must be installed in schema "hint_plan"
2023-07-25 19:30:35.566 UTC [819147] STATEMENT:  CREATE EXTENSION pg_hint_plan SCHEMA other_schema;
2023-07-25 19:30:35.592 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.592 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.596 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.596 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.597 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.597 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) SELECT c1, c2 AS c_2 /*+SeqScan(t1)*/ FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.614 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.614 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.616 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.616 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.673 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.673 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) SELECT c1 FROM s1.t1;
2023-07-25 19:30:35.694 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.694 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.713 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.713 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 OR t1.c1 = 0;
2023-07-25 19:30:35.729 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.729 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.730 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.730 UTC [819147] STATEMENT:  /*+ Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.731 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.731 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.732 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.732 UTC [819147] STATEMENT:  /*+ Set (enable_indexscan"off") Set (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.732 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.732 UTC [819147] STATEMENT:  /*+Set ( enable_indexscan"off")Set ( enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.733 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.733 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off" ) Set(enable_bitmapscan"off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.734 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.734 UTC [819147] STATEMENT:  /*+Set( enable_indexscan "off" )Set( enable_bitmapscan "off" )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.735 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.735 UTC [819147] STATEMENT:  /*+ Set ( enable_indexscan "off" ) Set ( enable_bitmapscan "off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.736 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.736 UTC [819147] STATEMENT:  /*+	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.736 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.736 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.737 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.737 UTC [819147] STATEMENT:  /*+	Set	(enable_indexscan"off")	Set	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.738 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.738 UTC [819147] STATEMENT:  /*+Set	(	enable_indexscan"off")Set	(	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.739 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.739 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off"	)	Set(enable_bitmapscan"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.739 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.739 UTC [819147] STATEMENT:  /*+Set(	enable_indexscan	"off"	)Set(	enable_bitmapscan	"off"	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.740 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.740 UTC [819147] STATEMENT:  /*+	Set	(	enable_indexscan	"off"	)	Set	(	enable_bitmapscan	"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.741 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.741 UTC [819147] STATEMENT:  /*+
	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.742 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.742 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.742 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.742 UTC [819147] STATEMENT:  /*+
	Set
	(enable_indexscan"off")
	Set
	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.743 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.743 UTC [819147] STATEMENT:  /*+Set
	(
	enable_indexscan"off")Set
	(
	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.744 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.744 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off"
	)
	Set(enable_bitmapscan"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.745 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.745 UTC [819147] STATEMENT:  /*+Set(
	enable_indexscan
	"off"
	)Set(
	enable_bitmapscan
	"off"
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.746 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.746 UTC [819147] STATEMENT:  /*+
	Set
	(
	enable_indexscan
	"off"
	)
	Set
	(
	enable_bitmapscan
	"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.746 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.746 UTC [819147] STATEMENT:  /*+ 	
		 Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.747 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.747 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.748 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.748 UTC [819147] STATEMENT:  /*+ 	
		 Set 	
		 (enable_indexscan"off") 	
		 Set 	
		 (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.749 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.749 UTC [819147] STATEMENT:  /*+Set 	
		 ( 	
		 enable_indexscan"off")Set 	
		 ( 	
		 enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.750 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.750 UTC [819147] STATEMENT:  /*+Set(enable_indexscan"off" 	
		 ) 	
		 Set(enable_bitmapscan"off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.750 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.750 UTC [819147] STATEMENT:  /*+Set( 	
		 enable_indexscan 	
		 "off" 	
		 )Set( 	
		 enable_bitmapscan 	
		 "off" 	
		 )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.751 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.751 UTC [819147] STATEMENT:  /*+ 	
		 Set 	
		 ( 	
		 enable_indexscan 	
		 "off" 	
		 ) 	
		 Set 	
		 ( 	
		 enable_bitmapscan 	
		 "off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.752 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.752 UTC [819147] STATEMENT:  /*+SeqScan(t)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-25 19:30:35.753 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.753 UTC [819147] STATEMENT:  /*+SeqScan(ttt)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-25 19:30:35.753 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.753 UTC [819147] STATEMENT:  /*+SeqScan("t")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-25 19:30:35.754 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.754 UTC [819147] STATEMENT:  /*+SeqScan("ttt")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-25 19:30:35.755 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.755 UTC [819147] STATEMENT:  /*+SeqScan(T)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-25 19:30:35.755 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.755 UTC [819147] STATEMENT:  /*+SeqScan(TTT)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-25 19:30:35.756 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.756 UTC [819147] STATEMENT:  /*+SeqScan("T")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-25 19:30:35.757 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.757 UTC [819147] STATEMENT:  /*+SeqScan("TTT")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-25 19:30:35.758 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("(")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.758 UTC [819147] STATEMENT:  /*+SeqScan("(")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "(" WHERE "(".c1 = 1;
2023-07-25 19:30:35.758 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 19:30:35.758 UTC [819147] STATEMENT:  /*+SeqScan())*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-25 19:30:35.759 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.759 UTC [819147] STATEMENT:  /*+SeqScan(")")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-25 19:30:35.760 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")))")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.760 UTC [819147] STATEMENT:  /*+SeqScan(")))")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")))" WHERE ")))".c1 = 1;
2023-07-25 19:30:35.761 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.761 UTC [819147] STATEMENT:  /*+SeqScan("""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """" WHERE """".c1 = 1;
2023-07-25 19:30:35.762 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""""""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.762 UTC [819147] STATEMENT:  /*+SeqScan("""""""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """""""" WHERE """""""".c1 = 1;
2023-07-25 19:30:35.762 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 19:30:35.762 UTC [819147] STATEMENT:  /*+SeqScan( )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-25 19:30:35.763 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(" ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.763 UTC [819147] STATEMENT:  /*+SeqScan(" ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-25 19:30:35.763 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("   ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.763 UTC [819147] STATEMENT:  /*+SeqScan("   ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "   " WHERE "   ".c1 = 1;
2023-07-25 19:30:35.764 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 19:30:35.764 UTC [819147] STATEMENT:  /*+SeqScan(	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-25 19:30:35.765 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.765 UTC [819147] STATEMENT:  /*+SeqScan("	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-25 19:30:35.766 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("			")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.766 UTC [819147] STATEMENT:  /*+SeqScan("			")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "			" WHERE "			".c1 = 1;
2023-07-25 19:30:35.766 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-25 19:30:35.766 UTC [819147] STATEMENT:  /*+SeqScan(
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-25 19:30:35.767 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.767 UTC [819147] STATEMENT:  /*+SeqScan("
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-25 19:30:35.768 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	
	
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.768 UTC [819147] STATEMENT:  /*+SeqScan("
	
	
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	
	
	" WHERE "
	
	
	".c1 = 1;
2023-07-25 19:30:35.768 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.768 UTC [819147] STATEMENT:  /*+SeqScan(Set)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-25 19:30:35.769 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.769 UTC [819147] STATEMENT:  /*+SeqScan("Set")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-25 19:30:35.770 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("Set SeqScan Leading")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.770 UTC [819147] STATEMENT:  /*+SeqScan("Set SeqScan Leading")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set SeqScan Leading" WHERE "Set SeqScan Leading".c1 = 1;
2023-07-25 19:30:35.770 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.770 UTC [819147] STATEMENT:  /*+SeqScan(あ)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-25 19:30:35.771 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.771 UTC [819147] STATEMENT:  /*+SeqScan(あいう)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-25 19:30:35.771 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.771 UTC [819147] STATEMENT:  /*+SeqScan("あ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-25 19:30:35.772 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.772 UTC [819147] STATEMENT:  /*+SeqScan("あいう")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-25 19:30:35.775 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan("tT()"" 	
	Setあ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.775 UTC [819147] STATEMENT:  /*+SeqScan("tT()"" 	
	Setあ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "tT()"" 	
	Setあ" WHERE "tT()"" 	
	Setあ".c1 = 1;
2023-07-25 19:30:35.775 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(a123456789b123456789c123456789d123456789e123456789f123)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.775 UTC [819147] STATEMENT:  /*+SeqScan(a123456789b123456789c123456789d123456789e123456789f123)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "123456789012345678901234567890123456789012345678901234" WHERE "123456789012345678901234567890123456789012345678901234".c1 = 1;
2023-07-25 19:30:35.776 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.776 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)Set enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.777 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.777 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan off Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.778 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.778 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan "off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.778 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.778 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)SeqScan("")Set(enable_bitmapscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.779 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.779 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)NoSet(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.780 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.780 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)"Set"(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.786 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.786 UTC [819147] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.789 UTC [819147] ERROR:  invalid value for parameter "pg_hint_plan.debug_print": "enable"
2023-07-25 19:30:35.789 UTC [819147] HINT:  Available values: off, on, detailed, verbose.
2023-07-25 19:30:35.789 UTC [819147] STATEMENT:  SET pg_hint_plan.debug_print TO enable;
2023-07-25 19:30:35.797 UTC [819147] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 19:30:35.797 UTC [819147] DETAIL:  Opening parenthesis is necessary.
2023-07-25 19:30:35.797 UTC [819147] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 19:30:35.797 UTC [819147] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 19:30:35.797 UTC [819147] DETAIL:  Opening parenthesis is necessary.
2023-07-25 19:30:35.797 UTC [819147] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 19:30:35.799 UTC [819147] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 19:30:35.799 UTC [819147] DETAIL:  Opening parenthesis is necessary.
2023-07-25 19:30:35.800 UTC [819147] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 19:30:35.800 UTC [819147] DETAIL:  Opening parenthesis is necessary.
2023-07-25 19:30:35.800 UTC [819147] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 19:30:35.800 UTC [819147] DETAIL:  Opening parenthesis is necessary.
2023-07-25 19:30:35.800 UTC [819147] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 19:30:35.801 UTC [819147] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-25 19:30:35.801 UTC [819147] DETAIL:  Opening parenthesis is necessary.
2023-07-25 19:30:35.801 UTC [819147] STATEMENT:  /*+Set*/SELECT 1;
2023-07-25 19:30:35.802 UTC [819147] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "fatal"
2023-07-25 19:30:35.802 UTC [819147] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-25 19:30:35.802 UTC [819147] STATEMENT:  SET pg_hint_plan.parse_messages TO fatal;
2023-07-25 19:30:35.802 UTC [819147] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "panic"
2023-07-25 19:30:35.802 UTC [819147] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-25 19:30:35.802 UTC [819147] STATEMENT:  SET pg_hint_plan.parse_messages TO panic;
2023-07-25 19:30:35.802 UTC [819147] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "on"
2023-07-25 19:30:35.802 UTC [819147] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-25 19:30:35.802 UTC [819147] STATEMENT:  SET pg_hint_plan.parse_messages TO on;
2023-07-25 19:30:35.808 UTC [819147] ERROR:  parameter "pg_hint_plan.enable_hint_table" requires a Boolean value
2023-07-25 19:30:35.808 UTC [819147] STATEMENT:  SET pg_hint_plan.enable_hint_table TO enable;
2023-07-25 19:30:35.825 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.825 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.826 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(no_table)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.826 UTC [819147] STATEMENT:  /*+SeqScan(no_table)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.827 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	error hint:
	
2023-07-25 19:30:35.827 UTC [819147] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:35.828 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	error hint:
	
2023-07-25 19:30:35.828 UTC [819147] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:35.829 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	IndexScan(t1)
	error hint:
	
2023-07-25 19:30:35.829 UTC [819147] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:35.830 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_indexscan enable)
	
2023-07-25 19:30:35.830 UTC [819147] STATEMENT:  /*+Set(enable_indexscan enable)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.836 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.836 UTC [819147] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 19:30:35.838 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.838 UTC [819147] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 19:30:35.840 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.840 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.840 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.840 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.841 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.841 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.842 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.842 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.842 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.842 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.843 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.843 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.845 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.845 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.846 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.846 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 19:30:35.848 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.848 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 19:30:35.850 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.850 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.850 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.850 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.851 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.851 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.851 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.851 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.852 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.852 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.852 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.852 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.855 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.855 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-25 19:30:35.865 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.865 UTC [819147] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 19:30:35.868 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.868 UTC [819147] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 19:30:35.869 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.869 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.870 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.870 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.870 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.870 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.871 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.871 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.871 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.871 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.872 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.872 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.874 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.874 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.875 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.875 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 19:30:35.881 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.881 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-25 19:30:35.882 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.882 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.883 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.883 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.883 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.883 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.884 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.884 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.884 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.884 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.885 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.885 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.887 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.887 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-25 19:30:35.896 UTC [819147] ERROR:  prepared statement "p1" does not exist
2023-07-25 19:30:35.896 UTC [819147] STATEMENT:  EXECUTE p1;
2023-07-25 19:30:35.898 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.898 UTC [819147] STATEMENT:  /*+Set(enable_seqscan off)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.899 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.899 UTC [819147] STATEMENT:  /*+SeqScan(t1)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.903 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1 t1)
	
2023-07-25 19:30:35.903 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-25 19:30:35.907 UTC [819147] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-25 19:30:35.907 UTC [819147] DETAIL:  Relation name "t1" is duplicated.
2023-07-25 19:30:35.907 UTC [819147] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.910 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.910 UTC [819147] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.913 UTC [819147] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-25 19:30:35.913 UTC [819147] DETAIL:  Relation name "t1" is duplicated.
2023-07-25 19:30:35.913 UTC [819147] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.917 UTC [819147] ERROR:  prepared statement "p2" does not exist
2023-07-25 19:30:35.917 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-25 19:30:35.917 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.917 UTC [819147] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.921 UTC [819147] ERROR:  prepared statement "p2" does not exist
2023-07-25 19:30:35.921 UTC [819147] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-25 19:30:35.925 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.925 UTC [819147] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.928 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.928 UTC [819147] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.931 UTC [819147] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.931 UTC [819147] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:35.938 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.938 UTC [819148] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.939 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.939 UTC [819148] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.939 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.939 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.939 UTC [819148] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.939 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.939 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.939 UTC [819148] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.940 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.940 UTC [819148] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.941 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.941 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.941 UTC [819148] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.941 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.941 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.941 UTC [819148] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.941 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.941 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.941 UTC [819148] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.942 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.942 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.942 UTC [819148] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.942 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.942 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.942 UTC [819148] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.942 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.942 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.942 UTC [819148] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.942 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.942 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.942 UTC [819148] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.942 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.942 UTC [819148] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-25 19:30:35.942 UTC [819148] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.942 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.942 UTC [819148] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-25 19:30:35.944 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.944 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.944 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.944 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.944 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.944 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.944 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.944 UTC [819148] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 19:30:35.944 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	HashJoin(st_1 st_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.944 UTC [819148] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 19:30:35.945 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.945 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.945 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 19:30:35.945 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.945 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-25 19:30:35.945 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.945 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.945 UTC [819148] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.945 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st_1 st_2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.945 UTC [819148] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.945 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.945 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.945 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.945 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.945 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.946 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.946 UTC [819148] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-25 19:30:35.946 UTC [819148] STATEMENT:  EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.947 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.947 UTC [819148] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-25 19:30:35.947 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.947 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-25 19:30:35.947 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.947 UTC [819148] ERROR:  function recall_planner_one_t(integer) does not exist
2023-07-25 19:30:35.947 UTC [819148] STATEMENT:  DROP FUNCTION recall_planner_one_t(int);
2023-07-25 19:30:35.947 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.947 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.947 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.947 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-25 19:30:35.947 UTC [819148] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.947 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.947 UTC [819148] CONTEXT:  SQL function "recall_planner" during startup
2023-07-25 19:30:35.947 UTC [819148] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.948 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	MergeJoin(t_1 t_2)
	error hint:
	
2023-07-25 19:30:35.948 UTC [819148] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-25 19:30:35.955 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.955 UTC [819148] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-25 19:30:35.955 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.955 UTC [819148] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-25 19:30:35.962 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.962 UTC [819148] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-25 19:30:35.963 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.963 UTC [819148] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-25 19:30:35.965 UTC [819148] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.965 UTC [819148] STATEMENT:  EXPLAIN EXECUTE test_query(array[1,2,3]);
2023-07-25 19:30:35.979 UTC [819035] LOG:  received SIGHUP, reloading configuration files
2023-07-25 19:30:35.980 UTC [819035] LOG:  parameter "session_preload_libraries" changed to "pg_hint_plan"
2023-07-25 19:30:35.981 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.981 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.981 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.981 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-25 19:30:35.982 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.982 UTC [819152] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-25 19:30:35.982 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.982 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.982 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1.t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.982 UTC [819152] STATEMENT:  /*+SeqScan(s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.982 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.982 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.982 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.982 UTC [819152] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.983 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.983 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = 1 AND t1.c1 = t2.c1;
2023-07-25 19:30:35.983 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.983 UTC [819152] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:35.983 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.983 UTC [819152] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-25 19:30:35.983 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(s2t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.983 UTC [819152] STATEMENT:  /*+BitmapScan(s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-25 19:30:35.984 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.984 UTC [819152] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 WHERE s1.t1.c1 = 1) FROM s1.t1 WHERE s1.t1.c1 = 1;
2023-07-25 19:30:35.984 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t11)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.984 UTC [819152] STATEMENT:  /*+BitmapScan(t11)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-25 19:30:35.984 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t12)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.984 UTC [819152] STATEMENT:  /*+BitmapScan(t12)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-25 19:30:35.985 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.985 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:35.986 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.986 UTC [819152] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE p1.c1 = 1;
2023-07-25 19:30:35.986 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ul1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.986 UTC [819152] STATEMENT:  /*+SeqScan(ul1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 WHERE ul1.c1 = 1;
2023-07-25 19:30:35.989 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tm1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.989 UTC [819152] STATEMENT:  /*+SeqScan(tm1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 WHERE tm1.c1 = 1;
2023-07-25 19:30:35.990 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(pg_class)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.990 UTC [819152] STATEMENT:  /*+SeqScan(pg_class)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class WHERE oid = 1;
2023-07-25 19:30:35.990 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(ft1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.990 UTC [819152] STATEMENT:  /*+SeqScan(ft1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() AS ft1 WHERE ft1.c1 = 1;
2023-07-25 19:30:35.991 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(val1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.991 UTC [819152] STATEMENT:  /*+SeqScan(val1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-25 19:30:35.991 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.991 UTC [819152] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-25 19:30:35.991 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(c1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.991 UTC [819152] STATEMENT:  /*+SeqScan(c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(c1) FROM s1.t1 WHERE t1.c1 = 1)
	SELECT * FROM s1.t1, c1 WHERE t1.c1 = 1 AND t1.c1 = c1.c1;
2023-07-25 19:30:35.992 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(v1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.992 UTC [819152] STATEMENT:  /*+SeqScan(v1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 WHERE v1.c1 = 1;
2023-07-25 19:30:35.992 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.992 UTC [819152] STATEMENT:  /*+SeqScan(s1)*/
	EXPLAIN (COSTS false) SELECT * FROM (SELECT * FROM s1.t1 WHERE t1.c1 = 1) AS s1 WHERE s1.c1 = 1;
2023-07-25 19:30:35.994 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:35.994 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.994 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:35.994 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.994 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:35.994 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.994 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:35.994 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.994 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.994 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.997 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:35.997 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.997 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:35.997 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.997 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:35.997 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.997 UTC [819152] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 19:30:35.997 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.997 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:35.997 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.997 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:35.997 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.998 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.998 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:35.999 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:35.999 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:35.999 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:35.999 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:35.999 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:35.999 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.000 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.000 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.000 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.000 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.000 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.000 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.002 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.002 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 19:30:36.002 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.002 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 19:30:36.002 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.002 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 19:30:36.002 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.002 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 19:30:36.002 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.002 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-25 19:30:36.004 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.004 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.004 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.004 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.004 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.004 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.005 UTC [819152] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 19:30:36.005 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.005 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.005 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.005 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.005 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.005 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.005 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.007 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.007 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 19:30:36.007 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.007 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 19:30:36.007 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.007 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 19:30:36.007 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.007 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 19:30:36.008 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.008 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-25 19:30:36.012 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.012 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.012 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.012 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.012 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.012 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.012 UTC [819152] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 19:30:36.012 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.012 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.012 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.012 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.012 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.014 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.014 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.015 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.015 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.015 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.015 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.015 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.015 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.015 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.015 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.015 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.015 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.016 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.016 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.016 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.016 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.016 UTC [819152] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-25 19:30:36.016 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.017 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.017 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.017 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.017 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.019 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.019 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.019 UTC [819152] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 19:30:36.019 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.019 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.019 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.019 UTC [819152] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-25 19:30:36.019 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.020 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.020 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.020 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.020 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.020 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.020 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.020 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.020 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.020 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.020 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.022 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.022 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.022 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.022 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.022 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.022 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.022 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.022 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.022 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.022 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.022 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.022 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.023 UTC [819152] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-25 19:30:36.023 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.023 UTC [819152] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-25 19:30:36.023 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.023 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.023 UTC [819152] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.024 UTC [819152] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 19:30:36.024 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.024 UTC [819152] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 19:30:36.024 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.025 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r1)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.025 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.026 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.026 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.026 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.026 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.026 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.026 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.028 UTC [819152] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 19:30:36.028 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.028 UTC [819152] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 19:30:36.028 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.028 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.028 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.028 UTC [819152] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 19:30:36.028 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.028 UTC [819152] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 19:30:36.028 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.028 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.028 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.030 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.030 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.030 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.030 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.030 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.030 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.030 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.030 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.030 UTC [819152] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 19:30:36.030 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.031 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.031 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.033 UTC [819152] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 19:30:36.033 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.033 UTC [819152] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 19:30:36.033 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.033 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.033 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.033 UTC [819152] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 19:30:36.033 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.033 UTC [819152] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 19:30:36.033 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.034 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.034 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.034 UTC [819152] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-25 19:30:36.034 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.034 UTC [819152] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-25 19:30:36.034 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.034 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.034 UTC [819152] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.037 UTC [819152] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-25 19:30:36.037 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.037 UTC [819152] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-25 19:30:36.037 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.037 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.037 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.037 UTC [819152] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-25 19:30:36.037 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.037 UTC [819152] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-25 19:30:36.037 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.038 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.038 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.038 UTC [819152] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-25 19:30:36.038 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.038 UTC [819152] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-25 19:30:36.038 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.038 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.038 UTC [819152] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.039 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.039 UTC [819152] STATEMENT:  /*+BitmapScan(v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.039 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(v1t1)
	BitmapScan(v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.039 UTC [819152] STATEMENT:  /*+SeqScan(v1t1)BitmapScan(v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.040 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(r4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.040 UTC [819152] STATEMENT:  /*+BitmapScan(r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.040 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r4t1)
	BitmapScan(r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.040 UTC [819152] STATEMENT:  /*+SeqScan(r4t1)BitmapScan(r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.041 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.041 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-25 19:30:36.041 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.041 UTC [819152] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-25 19:30:36.041 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-25 19:30:36.041 UTC [819152] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.041 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.041 UTC [819152] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.041 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.041 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 19:30:36.041 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.041 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.042 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.042 UTC [819152] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.042 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.042 UTC [819152] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 19:30:36.042 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.042 UTC [819152] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-25 19:30:36.042 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.042 UTC [819152] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.042 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.042 UTC [819152] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:36.043 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.043 UTC [819152] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid IN ('(1,1)', '(2,2)', '(3,3)');
2023-07-25 19:30:36.043 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.043 UTC [819152] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 19:30:36.043 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.043 UTC [819152] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.043 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.043 UTC [819152] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.043 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.043 UTC [819152] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 19:30:36.044 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.044 UTC [819152] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-25 19:30:36.044 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.044 UTC [819152] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.044 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.044 UTC [819152] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:36.044 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.044 UTC [819152] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.044 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.044 UTC [819152] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.044 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.044 UTC [819152] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 19:30:36.045 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.045 UTC [819152] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.045 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.045 UTC [819152] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-25 19:30:36.046 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_i3
2023-07-25 19:30:36.046 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.046 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.046 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.046 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_i3 ti1_i2
2023-07-25 19:30:36.046 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.046 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.046 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_i3
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_i3 ti1_i2
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3 ti1_i2
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 19:30:36.047 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 19:30:36.047 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.047 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-25 19:30:36.053 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_btree
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_hash
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_gist
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_gin
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_expr
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.053 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.053 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_uniq
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_multi
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_ts
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.054 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.054 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_c2_key
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_hash
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.055 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.055 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_gist
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_gin
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_expr
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_uniq
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.056 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.056 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_multi
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_ts
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_c2_key
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.057 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.057 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-25 19:30:36.058 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_hash
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gist
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gin
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.058 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_expr
2023-07-25 19:30:36.058 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-25 19:30:36.059 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-25 19:30:36.059 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-25 19:30:36.059 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-25 19:30:36.059 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_uniq
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.059 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.059 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_multi
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.059 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.059 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.060 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_ts
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-25 19:30:36.060 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-25 19:30:36.060 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.060 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.060 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_c2_key
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-25 19:30:36.060 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-25 19:30:36.060 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.060 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.060 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.063 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-25 19:30:36.063 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.063 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.063 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.066 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-25 19:30:36.066 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.066 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.066 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.068 UTC [819152] LOG:  available indexes for IndexScan(ti1):
2023-07-25 19:30:36.068 UTC [819152] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.068 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.068 UTC [819152] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.071 UTC [819152] LOG:  available indexes for BitmapScan(ti1):
2023-07-25 19:30:36.071 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.071 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.071 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.074 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1):
2023-07-25 19:30:36.074 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.074 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.074 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-25 19:30:36.077 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.077 UTC [819152] STATEMENT:  /*+TidScan(t1)*/ EXPLAIN (COSTS true) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.079 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.079 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE c1 = 100;
2023-07-25 19:30:36.080 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.080 UTC [819152] STATEMENT:  /*+SeqScan(t1)BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:36.080 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.080 UTC [819152] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:36.080 UTC [819152] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 19:30:36.080 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.080 UTC [819152] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 19:30:36.080 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.081 UTC [819152] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-25 19:30:36.081 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.081 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	TidScan(b4t1)
	not used hint:
	SeqScan(b1t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.081 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.081 UTC [819152] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 19:30:36.081 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.081 UTC [819152] LOG:  available indexes for BitmapScan(b4t2): t2_pkey
2023-07-25 19:30:36.081 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.081 UTC [819152] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-25 19:30:36.081 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.081 UTC [819152] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-25 19:30:36.081 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.082 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	SeqScan(b2t2)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	BitmapScan(b4t2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.082 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.082 UTC [819152] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 19:30:36.082 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.082 UTC [819152] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-25 19:30:36.082 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.082 UTC [819152] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-25 19:30:36.082 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.082 UTC [819152] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-25 19:30:36.082 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.082 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.082 UTC [819152] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-25 19:30:36.083 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.083 UTC [819152] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.083 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.083 UTC [819152] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  available indexes for IndexScan(p1c1): p1c1_pkey
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.084 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.084 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-25 19:30:36.085 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.085 UTC [819152] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.086 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.086 UTC [819152] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.086 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.086 UTC [819152] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.087 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2c1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.087 UTC [819152] STATEMENT:  /*+IndexScan(p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.089 UTC [819152] LOG:  available indexes for IndexScan(p1): p1_parent
2023-07-25 19:30:36.089 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-25 19:30:36.089 UTC [819152] LOG:  available indexes for IndexScan(p1c1): p1c1_c4_expr_idx
2023-07-25 19:30:36.089 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-25 19:30:36.090 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_parent)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.090 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-25 19:30:36.092 UTC [819152] LOG:  available indexes for IndexScan(p1): p1_i2
2023-07-25 19:30:36.092 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 19:30:36.092 UTC [819152] LOG:  available indexes for IndexScan(p1c1):
2023-07-25 19:30:36.092 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 19:30:36.092 UTC [819152] LOG:  available indexes for IndexScan(p1c2):
2023-07-25 19:30:36.092 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 19:30:36.092 UTC [819152] LOG:  available indexes for IndexScan(p1c3):
2023-07-25 19:30:36.092 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 19:30:36.092 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.092 UTC [819152] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-25 19:30:36.095 UTC [819152] LOG:  available indexes for IndexScan(p2):
2023-07-25 19:30:36.095 UTC [819152] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.095 UTC [819152] LOG:  available indexes for IndexScan(p2c1): p2c1_pkey
2023-07-25 19:30:36.095 UTC [819152] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.095 UTC [819152] LOG:  available indexes for IndexScan(p2c1c1):
2023-07-25 19:30:36.095 UTC [819152] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.095 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.095 UTC [819152] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-25 19:30:36.098 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	IndexScan(ti1)
	error hint:
	
2023-07-25 19:30:36.098 UTC [819152] STATEMENT:  /*+IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.098 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-25 19:30:36.098 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.098 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-25 19:30:36.098 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	BitmapScan(ti1)
	IndexScan(ti1)
	error hint:
	
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+BitmapScan(ti1) IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	BitmapScan(ti1 ti1_hash)
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+SeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+SeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+SeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.099 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.099 UTC [819152] STATEMENT:  /*+IndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_btree ti1_pkey
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  available indexes for BitmapScan(ti1): ti1_btree ti1_pkey
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.100 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	TidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.100 UTC [819152] STATEMENT:  /*+TidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+TidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+TidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+NoSeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+NoIndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.101 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.101 UTC [819152] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoBitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoTidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.102 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.102 UTC [819152] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree ti1_pkey
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+NoIndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey)
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  available indexes for IndexScanRegexp(ti1): ti1_c2_key
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.103 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_.*_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.103 UTC [819152] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_i.)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(ti1):
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_pkey
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 .*pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(p1): p1_i2 p1_i
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_i p1c1_c4_expr_idx
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1.*i)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.104 UTC [819152] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-25 19:30:36.104 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  available indexes for IndexScanRegexp(p1c1):
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  available indexes for IndexScan(ti1):
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_i2 ti1_i1
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  available indexes for IndexScan(ti1):
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.105 UTC [819152] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist1 not_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.105 UTC [819152] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-25 19:30:36.113 UTC [819035] LOG:  received SIGHUP, reloading configuration files
2023-07-25 19:30:36.114 UTC [819035] LOG:  parameter "session_preload_libraries" removed from configuration file, reset to default
2023-07-25 19:30:36.142 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.142 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.143 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.143 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 19:30:36.144 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.144 UTC [819224] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 19:30:36.145 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.145 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.146 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s1.t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.146 UTC [819224] STATEMENT:  /*+HashJoin(s1.t1 s1.t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.147 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.147 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.148 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.148 UTC [819224] STATEMENT:  /*+HashJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.149 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.149 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.151 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-25 19:30:36.151 UTC [819224] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:36.152 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s2.t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.152 UTC [819224] STATEMENT:  /*+HashJoin(s1.t1 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:36.154 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(s2t1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.154 UTC [819224] STATEMENT:  /*+HashJoin(t1 s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-25 19:30:36.157 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.157 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.159 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.159 UTC [819224] STATEMENT:  /*+NestLoop(st1 st2)HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.160 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.160 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.161 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-25 19:30:36.161 UTC [819224] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.162 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	HashJoin(t2 t2)
	
2023-07-25 19:30:36.162 UTC [819224] STATEMENT:  /*+HashJoin(t1 t1)HashJoin(t2 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.166 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1 t2 t2)
	
2023-07-25 19:30:36.166 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.167 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.167 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.171 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.171 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.172 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.172 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.177 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.177 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.179 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.179 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2 WHERE t1.oid = t2.oid;
2023-07-25 19:30:36.179 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.179 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.180 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.180 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.180 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(*VALUES* t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.180 UTC [819224] STATEMENT:  /*+NestLoop(*VALUES* t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.181 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(c1 t1)
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.181 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)HashJoin(t1 c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-25 19:30:36.182 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.182 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.182 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.182 UTC [819224] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.183 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.183 UTC [819224] STATEMENT:  /*+MergeJoin(t1 t2)NestLoop(st1 st2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-25 19:30:36.188 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st2 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.188 UTC [819224] STATEMENT:  /*+HashJoin(t1 st2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 19:30:36.188 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.188 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 19:30:36.191 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.191 UTC [819224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 19:30:36.194 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.194 UTC [819224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 19:30:36.196 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.196 UTC [819224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 19:30:36.197 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.197 UTC [819224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 19:30:36.199 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.199 UTC [819224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.202 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.202 UTC [819224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.206 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.206 UTC [819224] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.214 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.214 UTC [819224] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-25 19:30:36.215 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(bmt1 c1)
	Leading(c1 bmt1)
	not used hint:
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.215 UTC [819224] STATEMENT:  /*+
	Leading(c1 bmt1)
	HashJoin(bmt1 c1)
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.217 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.217 UTC [819224] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.220 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	MergeJoin(bmt4 c1)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	HashJoin(bmt3 bmt4 c1)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.220 UTC [819224] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.222 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	MergeJoin(bmt4 c1)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.222 UTC [819224] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.224 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r1 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.224 UTC [819224] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r1)
	MergeJoin(t4 t3 t2 t1 r1)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.225 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	NestLoop(b1t2 b1t3 b1t4)
	HashJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r1_)
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.225 UTC [819224] STATEMENT:  /*+
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	MergeJoin(b1t4 b1t3 b1t2 b1t1 r1_)
	HashJoin(b1t4 b1t3 b1t2 b1t1)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.227 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.227 UTC [819224] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.227 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.227 UTC [819224] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.229 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.229 UTC [819224] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.230 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.230 UTC [819224] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.232 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.232 UTC [819224] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.233 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.233 UTC [819224] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.233 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.233 UTC [819224] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.235 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b2t1 b2t2 b2t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.235 UTC [819224] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.236 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.236 UTC [819224] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.236 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.236 UTC [819224] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.237 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-25 19:30:36.237 UTC [819224] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.237 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.237 UTC [819224] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.238 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(r4t1 r4t1)
	
2023-07-25 19:30:36.238 UTC [819224] STATEMENT:  /*+HashJoin(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.238 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.238 UTC [819224] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.239 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t3)
	NestLoop(t1 t2 t3)
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.239 UTC [819224] STATEMENT:  /*+ Leading(t3 t1 t2) HashJoin(t3 t1)NestLoop(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.239 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	NestLoop(*VALUES* t1 t2)
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.239 UTC [819224] STATEMENT:  /*+ Leading(*VALUES* t1 t2) HashJoin(*VALUES* t1)NestLoop(*VALUES* t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.240 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	HashJoin(t2 t3 t4)
	MergeJoin(t1 t2 t3 t4)
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.240 UTC [819224] STATEMENT:  /*+ Leading(t4 t3 t2 t1) NestLoop(t4 t3)HashJoin(t4 t3 t2)MergeJoin(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.240 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	duplication hint:
	error hint:
	HashJoin(*VALUES* t2 t3)
	MergeJoin(*VALUES* t1 t2 t3)
	Leading(*VALUES* t3 t2 t1)
	
2023-07-25 19:30:36.240 UTC [819224] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) NestLoop(t4 t3)HashJoin(*VALUES* t3 t2)MergeJoin(*VALUES* t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.241 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.241 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.241 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.241 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.241 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.241 UTC [819224] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.242 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.242 UTC [819224] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-25 19:30:36.242 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.242 UTC [819224] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.242 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.242 UTC [819224] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.242 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.242 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.242 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.242 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.243 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.243 UTC [819224] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.243 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.243 UTC [819224] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.243 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.243 UTC [819224] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.243 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.243 UTC [819224] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.243 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.243 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.244 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.244 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.244 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.244 UTC [819224] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.244 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.244 UTC [819224] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.244 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.244 UTC [819224] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.244 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.244 UTC [819224] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.246 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.246 UTC [819224] STATEMENT:  /*+MergeJoin(p1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 19:30:36.246 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p1c1 p2c1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.246 UTC [819224] STATEMENT:  /*+MergeJoin(p1c1 p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 19:30:36.247 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p2 pt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.247 UTC [819224] STATEMENT:  /*+MergeJoin(pt1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-25 19:30:36.248 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p2c1 pt1_c1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.248 UTC [819224] STATEMENT:  /*+MergeJoin(pt1_c1 p2c1)*/ /* will ignored */
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-25 19:30:36.248 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 19:30:36.248 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.248 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 19:30:36.248 UTC [819224] STATEMENT:  /*+MergeJoin(t1 t2)HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.248 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 19:30:36.248 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+MergeJoin(t2 t1)HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+HashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+MergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NestLoop()*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1)
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NestLoop(t1)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-25 19:30:36.249 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.249 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2 t3)*/
	SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE false;
2023-07-25 19:30:36.250 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.250 UTC [819224] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1 FULL OUTER JOIN s1.t2 ON (t1.c1 = t2.c1);
2023-07-25 19:30:36.254 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.254 UTC [819224] STATEMENT:  /*+ nomemoize(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-25 19:30:36.254 UTC [819224] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.254 UTC [819224] STATEMENT:  /*+ nomemoize(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-25 19:30:36.261 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.261 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.262 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.262 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-25 19:30:36.262 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t_4 t_2 t_3 t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.262 UTC [819242] STATEMENT:  /*+Leading(t_4 t_2 t_3 t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-25 19:30:36.263 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.263 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.263 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t4 s1.t2 s1.t3 s1.t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.263 UTC [819242] STATEMENT:  /*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.264 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.264 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.264 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t5 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.264 UTC [819242] STATEMENT:  /*+Leading(t5 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.265 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.265 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.266 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t3 t1)
	
2023-07-25 19:30:36.266 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:36.266 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t1 t2 t3 s2.t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.266 UTC [819242] STATEMENT:  /*+Leading(s1.t1 t2 t3 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:36.267 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(s2t1 t1 t3 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.267 UTC [819242] STATEMENT:  /*+Leading(s2t1 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
2023-07-25 19:30:36.269 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.269 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.270 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(st1 st2 st3 st4)
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.270 UTC [819242] STATEMENT:  /*+Leading(st1 st2 st3 st4)Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.270 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.270 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.271 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4)
	
2023-07-25 19:30:36.271 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.271 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t4)
	
2023-07-25 19:30:36.271 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.272 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4 t2 t3 t1)
	
2023-07-25 19:30:36.272 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.272 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t2 t4)
	
2023-07-25 19:30:36.272 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t2 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.273 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.273 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.275 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.275 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.276 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.276 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.279 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.279 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.281 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.281 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
2023-07-25 19:30:36.282 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.282 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.282 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.282 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t1 (c1, c2, c3, c4), s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.284 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(ct4 ct3 ct2 ct1)
	Leading(st4 st3 st2 st1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.284 UTC [819242] STATEMENT:  /*+Leading(ct4 ct3 ct2 ct1)Leading(st4 st3 st2 st1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
2023-07-25 19:30:36.286 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.286 UTC [819242] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.287 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 v1t1_ v1t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.287 UTC [819242] STATEMENT:  /*+Leading(t4 v1t1_ v1t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.288 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(st4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.288 UTC [819242] STATEMENT:  /*+Leading(st4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-25 19:30:36.288 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.288 UTC [819242] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-25 19:30:36.290 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.290 UTC [819242] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 19:30:36.293 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.293 UTC [819242] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-25 19:30:36.294 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.294 UTC [819242] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 19:30:36.295 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.295 UTC [819242] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-25 19:30:36.297 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.297 UTC [819242] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.300 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.300 UTC [819242] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.304 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.304 UTC [819242] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.312 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.312 UTC [819242] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-25 19:30:36.313 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.313 UTC [819242] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-25 19:30:36.314 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.314 UTC [819242] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.318 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.318 UTC [819242] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.320 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.320 UTC [819242] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-25 19:30:36.321 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.321 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r1) */
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.323 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.323 UTC [819242] STATEMENT:  /*+ Leading(b1t1 b1t2 b1t3 b1t4 r1_) */
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.325 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.325 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.325 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.325 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.327 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.327 UTC [819242] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.327 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.327 UTC [819242] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.330 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.330 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.330 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.330 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.330 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.330 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.333 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.333 UTC [819242] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.333 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.333 UTC [819242] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.334 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.334 UTC [819242] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.334 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(v1t1 v1t1)
	
2023-07-25 19:30:36.334 UTC [819242] STATEMENT:  /*+Leading(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.335 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.335 UTC [819242] STATEMENT:  /*+Leading(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.335 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(r4t1 r4t1)
	
2023-07-25 19:30:36.335 UTC [819242] STATEMENT:  /*+Leading(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.336 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.336 UTC [819242] STATEMENT:  /*+Leading(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.336 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.336 UTC [819242] STATEMENT:  /*+ Leading(t3 t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.337 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.337 UTC [819242] STATEMENT:  /*+ Leading(*VALUES* t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.337 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.337 UTC [819242] STATEMENT:  /*+ Leading(t4 t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.338 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	
2023-07-25 19:30:36.338 UTC [819242] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.338 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.338 UTC [819242] STATEMENT:  /*+Leading(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.339 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.339 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.340 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t1 t2 t3)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.340 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.341 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.341 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.342 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 v2t1 v2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.342 UTC [819242] STATEMENT:  /*+Leading(t1 v2t1 v2t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-25 19:30:36.342 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(v2t1 v2t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.342 UTC [819242] STATEMENT:  /*+Leading(v2t1 v2t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-25 19:30:36.343 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.343 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.344 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.344 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.345 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.345 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.345 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(p2c1c1 p2c2c1 p2c3c1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.345 UTC [819242] STATEMENT:  /*+Leading(p2c1c1 p2c2c1 p2c3c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.346 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t2 t3 t1)
	error hint:
	
2023-07-25 19:30:36.346 UTC [819242] STATEMENT:  /*+Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.346 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	Leading(t2 t3 t1)
	error hint:
	
2023-07-25 19:30:36.346 UTC [819242] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.346 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-25 19:30:36.346 UTC [819242] STATEMENT:  /*+Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.347 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	error hint:
	Leading()
	
2023-07-25 19:30:36.347 UTC [819242] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.347 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-25 19:30:36.347 UTC [819242] STATEMENT:  /*+Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.347 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1)
	
2023-07-25 19:30:36.347 UTC [819242] STATEMENT:  /*+Leading(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.348 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.348 UTC [819242] STATEMENT:  /*+Leading(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.348 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.348 UTC [819242] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-25 19:30:36.349 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2))
	
2023-07-25 19:30:36.349 UTC [819242] STATEMENT:  /*+Leading((t2))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.349 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading((t2 t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.349 UTC [819242] STATEMENT:  /*+Leading((t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.349 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2 t3 t4))
	
2023-07-25 19:30:36.349 UTC [819242] STATEMENT:  /*+Leading((t2 t3 t4))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.350 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.350 UTC [819242] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.350 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t3) t4) t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.350 UTC [819242] STATEMENT:  /*+Leading((((t1 t3) t4) t2)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.351 UTC [819242] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t3 (t4 t2))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.351 UTC [819242] STATEMENT:  /*+Leading((t1 (t3 (t4 t2))))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.358 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.358 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.360 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.360 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.362 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.362 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.363 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.363 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.365 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.365 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.366 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.366 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.369 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.369 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.369 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.369 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.370 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.370 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.373 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.373 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.374 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.374 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.375 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.375 UTC [819246] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-25 19:30:36.375 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-25 19:30:36.375 UTC [819246] STATEMENT:  /*+Set(1234567890123456789012345678901234567890123456789012345678901234 1)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.376 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)
	
2023-07-25 19:30:36.376 UTC [819246] STATEMENT:  /*+Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.376 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(block_size 16384)
	
2023-07-25 19:30:36.376 UTC [819246] STATEMENT:  /*+Set(block_size 16384)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.376 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_mode off)
	
2023-07-25 19:30:36.376 UTC [819246] STATEMENT:  /*+Set(archive_mode off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.376 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_timeout 0)
	
2023-07-25 19:30:36.376 UTC [819246] STATEMENT:  /*+Set(archive_timeout 0)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.376 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_connections off)
	
2023-07-25 19:30:36.376 UTC [819246] STATEMENT:  /*+Set(log_connections off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.376 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(log_min_messages WARNING)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.376 UTC [819246] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.380 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_min_messages WARNING)
	
2023-07-25 19:30:36.380 UTC [819246] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.380 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.380 UTC [819246] STATEMENT:  /*+Set(enable_seqscan on)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-25 19:30:36.383 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	
2023-07-25 19:30:36.383 UTC [819246] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan off)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 19:30:36.383 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	Set(client_min_messages DEBUG2)
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	
2023-07-25 19:30:36.383 UTC [819246] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBUG2)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 19:30:36.383 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	Set(enable_indexscan o)
	
2023-07-25 19:30:36.383 UTC [819246] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan o)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 19:30:36.383 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	Set(client_min_messages DEBU)
	
2023-07-25 19:30:36.383 UTC [819246] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBU)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-25 19:30:36.383 UTC [819246] LOG:  pg_hint_plan:
	used hint:
	IndexScan(a)
	not used hint:
	SeqScan(c)
	duplication hint:
	SeqScan(a)
	error hint:
	NestLoop(a)
	
2023-07-25 19:30:36.383 UTC [819246] STATEMENT:  /*+SeqScan(a)IndexScan(a)SeqScan(c)NestLoop(a) */
	SELECT * FROM s1.t1 a, s1.t2 b WHERE false;
2023-07-25 19:30:36.392 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.392 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.394 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.394 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 19:30:36.397 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t_1 t_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.397 UTC [819250] STATEMENT:  /*+Rows(t_1 t_2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-25 19:30:36.400 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.400 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.403 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s1.t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.403 UTC [819250] STATEMENT:  /*+Rows(s1.t1 s1.t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.405 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.405 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.408 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.408 UTC [819250] STATEMENT:  /*+Rows(t3 t4 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.411 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.411 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.417 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-25 19:30:36.417 UTC [819250] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:36.419 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s2.t1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.419 UTC [819250] STATEMENT:  /*+Rows(s1.t1 s2.t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-25 19:30:36.425 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(s2t1 t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.425 UTC [819250] STATEMENT:  /*+Rows(t1 s2t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-25 19:30:36.431 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.431 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.434 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.434 UTC [819250] STATEMENT:  /*+Rows(st1 st2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.437 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.437 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.440 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-25 19:30:36.440 UTC [819250] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.452 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.452 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.458 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.458 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.464 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.464 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.472 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.472 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.480 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.480 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM t_pg_class t1, t_pg_class t2 WHERE t1.oid = t2.oid;
2023-07-25 19:30:36.486 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.486 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.491 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.491 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.494 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(*VALUES* t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.494 UTC [819250] STATEMENT:  /*+Rows(*VALUES* t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.500 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(c1 t1 +1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.500 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 c1 +1)*/
	EXPLAIN WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-25 19:30:36.505 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.505 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.508 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.508 UTC [819250] STATEMENT:  /*+Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.514 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.514 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)Rows(st1 st2 #1)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-25 19:30:36.520 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(st2 t1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.520 UTC [819250] STATEMENT:  /*+Rows(t1 st2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 19:30:36.523 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.523 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-25 19:30:36.525 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 #1)
	
2023-07-25 19:30:36.525 UTC [819250] STATEMENT:  /*+Rows(t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.528 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 1)
	
2023-07-25 19:30:36.528 UTC [819250] STATEMENT:  /*+Rows(t1 t2 1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.531 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #notrows)
	
2023-07-25 19:30:36.531 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #notrows)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.535 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.535 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:36.539 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.539 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:36.543 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.543 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:36.547 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.547 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-25 19:30:36.551 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.551 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.554 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.554 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.557 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.557 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.560 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.560 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.564 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.564 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	);
2023-07-25 19:30:36.568 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.568 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-25 19:30:36.572 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.572 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-25 19:30:36.576 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.576 UTC [819250] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-25 19:30:36.581 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.581 UTC [819250] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-25 19:30:36.585 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(c1 c2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 c1 c2 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.585 UTC [819250] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(c2 c1 #1)Rows(c2 c1 bmt1 #1)Rows(c2 c1 bmt1 bmt2 #1)Rows(c2 c1 bmt1 bmt2 bmt3 #1)Rows(c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1;
2023-07-25 19:30:36.592 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.592 UTC [819250] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-25 19:30:36.598 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(c2 c3 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(c1 c2 c3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 c1 c2 c3 #1)
	Rows(bmt1 bmt2 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 c3 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.598 UTC [819250] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(c3 c2 #1)Rows(c3 c2 c1 #1)Rows(c3 c2 c1 bmt1 #1)Rows(c3 c2 c1 bmt1 bmt2 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-25 19:30:36.602 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.602 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-25 19:30:36.605 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	Rows(bmt1 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.605 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt1)
	Rows(bmt1 c1 #1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-25 19:30:36.608 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.608 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	);
2023-07-25 19:30:36.611 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Rows(bmt2 c1 #1)
	Rows(bmt1 bmt2 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.611 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Rows(c1 bmt2 #1)
	Rows(c1 bmt1 bmt2 #1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	)
	;
2023-07-25 19:30:36.623 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.623 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-25 19:30:36.636 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	Rows(b1t3 b1t4 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t3 b3t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t2 b2t3 b2t4 #1)
	Rows(b3t2 b3t3 b3t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.636 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	Rows(b2t4 b2t3 #1)
	Rows(b2t4 b2t3 b2t2 #1)
	Rows(b2t4 b2t3 b2t2 b2t1 #1)
	Rows(b3t4 b3t3 #1)
	Rows(b3t4 b3t3 b3t2 #1)
	Rows(b3t4 b3t3 b3t2 b3t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-25 19:30:36.648 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.648 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-25 19:30:36.659 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Rows(b1t3 b1t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.659 UTC [819250] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-25 19:30:36.663 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.663 UTC [819250] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.666 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.666 UTC [819250] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 t2 t3 t4 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 #2)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.669 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.669 UTC [819250] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.672 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r1_ #2)
	Rows(b1t1 b1t2 r1_ #2)
	Rows(b1t1 b1t2 b1t3 r1_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r1_ #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.672 UTC [819250] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(r1_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r1_ b1t1 b1t2 b1t3 #2)
	Rows(r1_ b1t1 b1t2 #2)
	Rows(r1_ b1t1 #2)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.676 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.676 UTC [819250] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.676 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.676 UTC [819250] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.679 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.679 UTC [819250] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.680 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.680 UTC [819250] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.683 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.683 UTC [819250] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.684 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.684 UTC [819250] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.687 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.687 UTC [819250] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.687 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.687 UTC [819250] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.691 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.691 UTC [819250] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.691 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.691 UTC [819250] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.691 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.691 UTC [819250] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.695 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.695 UTC [819250] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.695 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.695 UTC [819250] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.696 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.696 UTC [819250] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.699 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.699 UTC [819250] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.699 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.699 UTC [819250] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.700 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.700 UTC [819250] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.703 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b2t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.703 UTC [819250] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.704 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b1t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.704 UTC [819250] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.704 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b3t1 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b1t1 r3_ #2)
	Rows(b2t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.704 UTC [819250] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-25 19:30:36.707 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-25 19:30:36.707 UTC [819250] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.710 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	Rows(v1t1 v1t1 #1)
	
2023-07-25 19:30:36.710 UTC [819250] STATEMENT:  /*+HashJoin(v1t1 v1t1)Rows(v1t1 v1t1 #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.712 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.712 UTC [819250] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.715 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.715 UTC [819250] STATEMENT:  /*+NestLoop(v1t1 v1t1_)Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-25 19:30:36.724 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.724 UTC [819250] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.726 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	Rows(r4t1 r5t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.726 UTC [819250] STATEMENT:  /*+NestLoop(r4t1 r5t1)Rows(r4t1 r5t1 #1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.732 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	Rows(t1 t3 #2)
	Rows(t1 t2 t3 #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.732 UTC [819250] STATEMENT:  /*+ Leading(t3 t1 t2) Rows(t3 t1 #2)Rows(t3 t1 t2 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.735 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	Rows(*VALUES* t1 #2)
	Rows(*VALUES* t1 t2 #20)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.735 UTC [819250] STATEMENT:  /*+ Leading(*VALUES* t1 t2) Rows(*VALUES* t1 #2)Rows(*VALUES* t1 t2 #20)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-25 19:30:36.741 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	Rows(t3 t4 #2)
	Rows(t2 t3 t4 #2)
	Rows(t1 t2 t3 t4 #2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.741 UTC [819250] STATEMENT:  /*+ Leading(t4 t3 t2 t1) Rows(t4 t3 #2) Rows(t4 t3 t2 #2)Rows(t4 t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.744 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #2)
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	Rows(*VALUES* t2 t3 #2)
	Rows(*VALUES* t1 t2 t3 #2)
	
2023-07-25 19:30:36.744 UTC [819250] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) Rows(t4 t3 #2)Rows(*VALUES* t3 t2 #2)Rows(*VALUES* t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-25 19:30:36.751 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.751 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.757 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 *0.6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.757 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 *0.6)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.763 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt4 *0.5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.763 UTC [819250] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt1 *0.5)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-25 19:30:36.766 UTC [819250] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 #0)
2023-07-25 19:30:36.766 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.766 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.769 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.769 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #5)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.772 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.772 UTC [819250] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.774 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.774 UTC [819250] STATEMENT:  /*+Rows(t1 t2 -1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.777 UTC [819250] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -1000)
2023-07-25 19:30:36.777 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1000)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.777 UTC [819250] STATEMENT:  /*+Rows(t1 t2 -1000)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.780 UTC [819250] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 *0)
2023-07-25 19:30:36.780 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.780 UTC [819250] STATEMENT:  /*+Rows(t1 t2 *0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.783 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.783 UTC [819250] STATEMENT:  /*+Rows(t1 t2 *2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.786 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.786 UTC [819250] STATEMENT:  /*+Rows(t1 t2 *0.1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.792 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(p1 p2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.792 UTC [819250] STATEMENT:  /*+Rows(p1 p2 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 19:30:36.799 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(p1c1 p2c1 #1)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.799 UTC [819250] STATEMENT:  /*+Rows(p1c1 p2c1 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-25 19:30:36.804 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 19:30:36.804 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.810 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 19:30:36.810 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.815 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 19:30:36.815 UTC [819250] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.821 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-25 19:30:36.821 UTC [819250] STATEMENT:  /*+Rows(t2 t1 #1)Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.827 UTC [819250] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.827 UTC [819250] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-25 19:30:36.863 UTC [820018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	SeqScan(ft_1)
	SeqScan(ft_2)
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.863 UTC [820018] STATEMENT:  /*+SeqScan(t1)SeqScan(ft_1)SeqScan(ft_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 19:30:36.873 UTC [820018] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(ft_1 ft_2)
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.873 UTC [820018] STATEMENT:  /*+MergeJoin(ft_1 ft_2)Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 19:30:36.882 UTC [820018] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.882 UTC [820018] STATEMENT:  /*+Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 19:30:36.892 UTC [820018] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	Rows(ft_1 ft_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.892 UTC [820018] STATEMENT:  /*+Rows(ft_1 ft_2 #1)Leading(ft_1 ft_2 t1)*/
	EXPLAIN SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-25 19:30:36.945 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.945 UTC [820049] STATEMENT:  /*+Parallel(t1 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 19:30:36.946 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(t11 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.946 UTC [820049] STATEMENT:  /*+Parallel(t11 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 as t11, s1.t1 as t12;
2023-07-25 19:30:36.948 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.948 UTC [820049] STATEMENT:  /*+Parallel(t1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 19:30:36.949 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.949 UTC [820049] STATEMENT:  /*+Parallel(t1 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 19:30:36.949 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.949 UTC [820049] STATEMENT:  /*+Parallel(t1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-25 19:30:36.951 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 4 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.951 UTC [820049] STATEMENT:  /*+Parallel(t1 4 hard) */ /* to be gather merge*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ORDER BY s1.t1.c1 LIMIT 4;
2023-07-25 19:30:36.958 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.958 UTC [820049] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:36.959 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.959 UTC [820049] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:36.962 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.962 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:36.964 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.964 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:36.965 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.965 UTC [820049] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:36.966 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.966 UTC [820049] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:36.971 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.971 UTC [820049] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 19:30:36.973 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 soft)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.973 UTC [820049] STATEMENT:  /*+Parallel(p1_c1_c1 8 soft) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 19:30:36.974 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.974 UTC [820049] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 19:30:36.976 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.976 UTC [820049] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-25 19:30:36.988 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.988 UTC [820049] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:36.990 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.990 UTC [820049] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:36.993 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.993 UTC [820049] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:36.995 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.995 UTC [820049] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:36.997 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.997 UTC [820049] STATEMENT:  /*+Parallel(p2 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:36.999 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:36.999 UTC [820049] STATEMENT:  /*+Parallel(p2 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.000 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.000 UTC [820049] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.002 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.002 UTC [820049] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.003 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.003 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.005 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.005 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.006 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.006 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.007 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.007 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.008 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.008 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.010 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.010 UTC [820049] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.011 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	Parallel(p1 0 hard)
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.011 UTC [820049] STATEMENT:  /*+Parallel(p1 0 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-25 19:30:37.012 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.012 UTC [820049] STATEMENT:  /*+Parallel(p1 8) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 19:30:37.013 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Set(max_parallel_workers_per_gather 1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.013 UTC [820049] STATEMENT:  /*+Set(max_parallel_workers_per_gather 1)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 19:30:37.014 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 6 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.014 UTC [820049] STATEMENT:  /*+Parallel(p1 5 hard)Parallel(p2 6 hard) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 19:30:37.015 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.015 UTC [820049] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:37.015 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.015 UTC [820049] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-25 19:30:37.015 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Parallel(p1 100x hard)
	Parallel(p1 -1000 hard)
	Parallel(p1 1000000 hard)
	Parallel(p1 8 soft)
	Parallel()
	Parallel()
	
2023-07-25 19:30:37.015 UTC [820049] STATEMENT:  /*+Parallel(p1 100x hard)Parallel(p1 -1000 hard)Parallel(p1 1000000 hard)
	   Parallel(p1 8 hoge)Parallel(p1)Parallel(p1 100 soft x)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-25 19:30:37.016 UTC [820049] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	not used hint:
	IndexScan(*VALUES*)
	SeqScan(cte1)
	TidScan(fs1)
	IndexScan(ft1)
	IndexScan(t)
	Parallel(s1 3 hard)
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.016 UTC [820049] STATEMENT:  /*+Parallel(p1 5 hard) Parallel(s1 3 hard) IndexScan(ft1) SeqScan(cte1)
	  TidScan(fs1) IndexScan(t) IndexScan(*VALUES*) */
	EXPLAIN (COSTS false) SELECT id FROM p1_c1_c1 as s1 TABLESAMPLE SYSTEM(10)
	 UNION ALL
	SELECT id FROM ft1
	 UNION ALL
	(WITH cte1 AS (SELECT id FROM p1 WHERE id % 2 = 0) SELECT id FROM cte1)
	 UNION ALL
	SELECT userid FROM pg_stat_statements fs1
	 UNION ALL
	SELECT x FROM (VALUES (1), (2), (3)) t(x);
2023-07-25 19:30:37.037 UTC [819035] LOG:  received SIGHUP, reloading configuration files
2023-07-25 19:30:37.067 UTC [820057] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.067 UTC [820057] STATEMENT:  EXPLAIN SELECT * FROM t1 WHERE id = 100;
2023-07-25 19:30:37.067 UTC [820057] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.067 UTC [820057] STATEMENT:  EXPLAIN DECLARE c1 CURSOR FOR SELECT * FROM t1 WHERE id = 100;
2023-07-25 19:30:37.068 UTC [820057] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.068 UTC [820057] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS SELECT * FROM t1 WHERE id = 100;
2023-07-25 19:30:37.069 UTC [820057] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.069 UTC [820057] STATEMENT:  EXPLAIN EXECUTE p1;
2023-07-25 19:30:37.071 UTC [820057] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.071 UTC [820057] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS EXECUTE p1;
2023-07-25 19:30:37.133 UTC [820065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.133 UTC [820065] STATEMENT:  explain (costs false)
	select * from t1 join t2 on t1.id = t2.id where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-25 19:30:37.135 UTC [820065] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.135 UTC [820065] STATEMENT:  /*+ MergeJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-25 19:30:37.136 UTC [820065] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.136 UTC [820065] STATEMENT:  /*+ HashJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+MergeJoin(t1 t2)*/' <> '';
2023-07-25 19:30:37.171 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.171 UTC [820069] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-25 19:30:37.173 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.173 UTC [820069] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-25 19:30:37.194 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.194 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.194 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.195 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.195 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.195 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.200 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.200 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.200 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.201 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.201 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.201 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.201 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.201 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.201 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.202 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.202 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.202 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.206 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.206 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.206 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.207 UTC [820069] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-25 19:30:37.207 UTC [820069] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-25 19:30:37.207 UTC [820069] STATEMENT:  call test_hint_transaction();
2023-07-25 19:30:37.490 UTC [820091] ERROR:  required extension "cube" is not installed
2023-07-25 19:30:37.490 UTC [820091] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-25 19:30:37.490 UTC [820091] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-25 19:30:37.543 UTC [820091] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-25 19:30:37.543 UTC [820091] DETAIL:  extension earthdistance depends on extension cube
2023-07-25 19:30:37.543 UTC [820091] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-25 19:30:37.543 UTC [820091] STATEMENT:  drop extension cube;
2023-07-25 19:30:37.544 UTC [820091] ERROR:  cannot drop type cube because extension cube requires it
2023-07-25 19:30:37.544 UTC [820091] HINT:  You can drop extension cube instead.
2023-07-25 19:30:37.544 UTC [820091] STATEMENT:  drop type cube;
2023-07-25 19:30:37.547 UTC [820091] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-25 19:30:37.547 UTC [820091] DETAIL:  column f1 of table foo depends on type cube
2023-07-25 19:30:37.547 UTC [820091] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-25 19:30:37.547 UTC [820091] STATEMENT:  drop extension cube;
2023-07-25 19:30:37.622 UTC [820091] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-25 19:30:37.622 UTC [820091] DETAIL:  column f1 of table foo depends on type c.cube
2023-07-25 19:30:37.622 UTC [820091] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-25 19:30:37.622 UTC [820091] STATEMENT:  drop extension cube;
2023-07-25 19:30:37.623 UTC [820091] ERROR:  cannot drop schema c because other objects depend on it
2023-07-25 19:30:37.623 UTC [820091] DETAIL:  extension cube depends on schema c
	column f1 of table foo depends on type c.cube
2023-07-25 19:30:37.623 UTC [820091] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-25 19:30:37.623 UTC [820091] STATEMENT:  drop schema c;
