diff -U3 /home/abigalek/pgext-cli-python/pgextworkdir/pgaudit-1.7.0/expected/pgaudit.out /home/abigalek/pgext-cli-python/pgextworkdir/pgaudit-1.7.0/results/pgaudit.out
--- /home/abigalek/pgext-cli-python/pgextworkdir/pgaudit-1.7.0/expected/pgaudit.out	2022-06-14 17:32:06.000000000 +0000
+++ /home/abigalek/pgext-cli-python/pgextworkdir/pgaudit-1.7.0/results/pgaudit.out	2023-07-26 14:04:53.397031294 +0000
@@ -905,7 +905,8 @@
 	EXECUTE 'DROP table ' || table_name;
 END $$;",<none>
 NOTICE:  AUDIT: SESSION,35,2,DDL,CREATE TABLE,TABLE,public.do_table,"CREATE TABLE do_table (""weird name"" INT)",<none>
-NOTICE:  AUDIT: SESSION,35,3,DDL,DROP TABLE,TABLE,public.do_table,DROP table do_table,<none>
+NOTICE:  AUDIT: SESSION,35,3,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,35,4,DDL,DROP TABLE,TABLE,public.do_table,DROP table do_table,<none>
 --
 -- Generate an error and make sure the stack gets cleared
 DO $$
@@ -927,9 +928,10 @@
 -- Test alter table statements
 ALTER TABLE public.test
 	DROP COLUMN description ;
-NOTICE:  AUDIT: SESSION,37,1,DDL,ALTER TABLE,TABLE COLUMN,public.test.description,"ALTER TABLE public.test
+NOTICE:  AUDIT: SESSION,37,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,37,2,DDL,ALTER TABLE,TABLE COLUMN,public.test.description,"ALTER TABLE public.test
 	DROP COLUMN description ;",<none>
-NOTICE:  AUDIT: SESSION,37,1,DDL,ALTER TABLE,TABLE,public.test,"ALTER TABLE public.test
+NOTICE:  AUDIT: SESSION,37,2,DDL,ALTER TABLE,TABLE,public.test,"ALTER TABLE public.test
 	DROP COLUMN description ;",<none>
 ALTER TABLE public.test
 	RENAME TO test2;
@@ -945,14 +947,16 @@
 	ADD COLUMN description TEXT;",<none>
 ALTER TABLE test.test2
 	DROP COLUMN description;
-NOTICE:  AUDIT: SESSION,41,1,DDL,ALTER TABLE,TABLE COLUMN,test.test2.description,"ALTER TABLE test.test2
+NOTICE:  AUDIT: SESSION,41,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,41,2,DDL,ALTER TABLE,TABLE COLUMN,test.test2.description,"ALTER TABLE test.test2
 	DROP COLUMN description;",<none>
-NOTICE:  AUDIT: SESSION,41,1,DDL,ALTER TABLE,TABLE,test.test2,"ALTER TABLE test.test2
+NOTICE:  AUDIT: SESSION,41,2,DDL,ALTER TABLE,TABLE,test.test2,"ALTER TABLE test.test2
 	DROP COLUMN description;",<none>
 DROP TABLE test.test2;
-NOTICE:  AUDIT: SESSION,42,1,DDL,DROP TABLE,TABLE,test.test2,DROP TABLE test.test2;,<none>
-NOTICE:  AUDIT: SESSION,42,1,DDL,DROP TABLE,TABLE CONSTRAINT,test_pkey on test.test2,DROP TABLE test.test2;,<none>
-NOTICE:  AUDIT: SESSION,42,1,DDL,DROP TABLE,INDEX,test.test_pkey,DROP TABLE test.test2;,<none>
+NOTICE:  AUDIT: SESSION,42,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,42,2,DDL,DROP TABLE,TABLE,test.test2,DROP TABLE test.test2;,<none>
+NOTICE:  AUDIT: SESSION,42,2,DDL,DROP TABLE,TABLE CONSTRAINT,test_pkey on test.test2,DROP TABLE test.test2;,<none>
+NOTICE:  AUDIT: SESSION,42,2,DDL,DROP TABLE,INDEX,test.test_pkey,DROP TABLE test.test2;,<none>
 --
 -- Test multiple statements with one semi-colon
 CREATE SCHEMA foo
@@ -1185,94 +1189,106 @@
 NOTICE:  AUDIT: SESSION,67,4,READ,SELECT,TABLE,public.aaa,"SELECT 1 FROM ONLY ""public"".""aaa"" x WHERE ""id"" OPERATOR(pg_catalog.=) $1 FOR KEY SHARE OF x",<not logged>
 SET pgaudit.log_parameter TO ON;
 DROP TABLE bbb;
+NOTICE:  AUDIT: SESSION,68,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
 DROP TABLE aaa;
+NOTICE:  AUDIT: SESSION,69,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
 -- Test create table as after extension as been dropped
 DROP EXTENSION pgaudit;
+NOTICE:  AUDIT: SESSION,70,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,70,2,WRITE,DELETE,TABLE,pgtle.feature_info,"DELETE FROM pgtle.feature_info
+					WHERE obj_identity = obj.object_identity",",,,,,,public.pgaudit_ddl_command_end(),,,"
+NOTICE:  AUDIT: SESSION,70,3,WRITE,DELETE,TABLE,pgtle.feature_info,"DELETE FROM pgtle.feature_info
+					WHERE obj_identity = obj.object_identity",",,,,,,public.pgaudit_sql_drop(),,,"
 CREATE TABLE tmp (id int, data text);
 CREATE TABLE tmp2 AS (SELECT * FROM tmp);
-NOTICE:  AUDIT: SESSION,68,1,READ,SELECT,TABLE,public.tmp,CREATE TABLE tmp2 AS (SELECT * FROM tmp);,<none>
+NOTICE:  AUDIT: SESSION,71,1,READ,SELECT,TABLE,public.tmp,CREATE TABLE tmp2 AS (SELECT * FROM tmp);,<none>
 DROP TABLE tmp;
+NOTICE:  AUDIT: SESSION,72,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
 DROP TABLE tmp2;
+NOTICE:  AUDIT: SESSION,73,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
 --
 -- Test MISC
 SET pgaudit.log = 'MISC';
-NOTICE:  AUDIT: SESSION,69,1,MISC,SET,,,SET pgaudit.log = 'MISC';,<none>
+NOTICE:  AUDIT: SESSION,74,1,MISC,SET,,,SET pgaudit.log = 'MISC';,<none>
 SET pgaudit.log_level = 'notice';
-NOTICE:  AUDIT: SESSION,70,1,MISC,SET,,,SET pgaudit.log_level = 'notice';,<none>
+NOTICE:  AUDIT: SESSION,75,1,MISC,SET,,,SET pgaudit.log_level = 'notice';,<none>
 SET pgaudit.log_client = ON;
-NOTICE:  AUDIT: SESSION,71,1,MISC,SET,,,SET pgaudit.log_client = ON;,<none>
+NOTICE:  AUDIT: SESSION,76,1,MISC,SET,,,SET pgaudit.log_client = ON;,<none>
 SET pgaudit.log_relation = ON;
-NOTICE:  AUDIT: SESSION,72,1,MISC,SET,,,SET pgaudit.log_relation = ON;,<none>
+NOTICE:  AUDIT: SESSION,77,1,MISC,SET,,,SET pgaudit.log_relation = ON;,<none>
 SET pgaudit.log_parameter = ON;
-NOTICE:  AUDIT: SESSION,73,1,MISC,SET,,,SET pgaudit.log_parameter = ON;,<none>
+NOTICE:  AUDIT: SESSION,78,1,MISC,SET,,,SET pgaudit.log_parameter = ON;,<none>
 CREATE ROLE alice;
 SET ROLE alice;
-NOTICE:  AUDIT: SESSION,74,1,MISC,SET,,,SET ROLE alice;,<none>
+NOTICE:  AUDIT: SESSION,79,1,MISC,SET,,,SET ROLE alice;,<none>
 CREATE TABLE t (a int, b text);
 SET search_path TO test, public;
-NOTICE:  AUDIT: SESSION,75,1,MISC,SET,,,"SET search_path TO test, public;",<none>
+NOTICE:  AUDIT: SESSION,80,1,MISC,SET,,,"SET search_path TO test, public;",<none>
 INSERT INTO t VALUES (1, 'misc');
 VACUUM t;
-NOTICE:  AUDIT: SESSION,76,1,MISC,VACUUM,,,VACUUM t;,<none>
+NOTICE:  AUDIT: SESSION,81,1,MISC,VACUUM,,,VACUUM t;,<none>
 RESET ROLE;
-NOTICE:  AUDIT: SESSION,77,1,MISC,RESET,,,RESET ROLE;,<none>
+NOTICE:  AUDIT: SESSION,82,1,MISC,RESET,,,RESET ROLE;,<none>
 --
 -- Test MISC_SET
 SET pgaudit.log = 'MISC_SET';
-NOTICE:  AUDIT: SESSION,78,1,MISC,SET,,,SET pgaudit.log = 'MISC_SET';,<none>
+NOTICE:  AUDIT: SESSION,83,1,MISC,SET,,,SET pgaudit.log = 'MISC_SET';,<none>
 SET ROLE alice;
-NOTICE:  AUDIT: SESSION,79,1,MISC,SET,,,SET ROLE alice;,<none>
+NOTICE:  AUDIT: SESSION,84,1,MISC,SET,,,SET ROLE alice;,<none>
 SET search_path TO public;
-NOTICE:  AUDIT: SESSION,80,1,MISC,SET,,,SET search_path TO public;,<none>
+NOTICE:  AUDIT: SESSION,85,1,MISC,SET,,,SET search_path TO public;,<none>
 INSERT INTO t VALUES (2, 'misc_set');
 VACUUM t;
 RESET ROLE;
-NOTICE:  AUDIT: SESSION,81,1,MISC,RESET,,,RESET ROLE;,<none>
+NOTICE:  AUDIT: SESSION,86,1,MISC,RESET,,,RESET ROLE;,<none>
 --
 -- Test ALL, -MISC, MISC_SET
 SET pgaudit.log = 'ALL, -MISC, MISC_SET';
-NOTICE:  AUDIT: SESSION,82,1,MISC,SET,,,"SET pgaudit.log = 'ALL, -MISC, MISC_SET';",<none>
+NOTICE:  AUDIT: SESSION,87,1,MISC,SET,,,"SET pgaudit.log = 'ALL, -MISC, MISC_SET';",<none>
 SET search_path TO public;
-NOTICE:  AUDIT: SESSION,83,1,MISC,SET,,,SET search_path TO public;,<none>
+NOTICE:  AUDIT: SESSION,88,1,MISC,SET,,,SET search_path TO public;,<none>
 INSERT INTO t VALUES (3, 'all, -misc, misc_set');
-NOTICE:  AUDIT: SESSION,84,1,WRITE,INSERT,TABLE,public.t,"INSERT INTO t VALUES (3, 'all, -misc, misc_set');",<none>
+NOTICE:  AUDIT: SESSION,89,1,WRITE,INSERT,TABLE,public.t,"INSERT INTO t VALUES (3, 'all, -misc, misc_set');",<none>
 VACUUM t;
 RESET ROLE;
-NOTICE:  AUDIT: SESSION,85,1,MISC,RESET,,,RESET ROLE;,<none>
+NOTICE:  AUDIT: SESSION,90,1,MISC,RESET,,,RESET ROLE;,<none>
 DROP TABLE public.t;
-NOTICE:  AUDIT: SESSION,86,1,DDL,DROP TABLE,,,DROP TABLE public.t;,<none>
+NOTICE:  AUDIT: SESSION,91,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,91,2,DDL,DROP TABLE,,,DROP TABLE public.t;,<none>
 DROP ROLE alice;
-NOTICE:  AUDIT: SESSION,87,1,ROLE,DROP ROLE,,,DROP ROLE alice;,<none>
+NOTICE:  AUDIT: SESSION,92,1,ROLE,DROP ROLE,,,DROP ROLE alice;,<none>
 --
 -- Test PARTITIONED table
 CREATE TABLE h(x int ,y int) PARTITION BY HASH(x);
-NOTICE:  AUDIT: SESSION,88,1,DDL,CREATE TABLE,,,"CREATE TABLE h(x int ,y int) PARTITION BY HASH(x);",<none>
+NOTICE:  AUDIT: SESSION,93,1,DDL,CREATE TABLE,,,"CREATE TABLE h(x int ,y int) PARTITION BY HASH(x);",<none>
 CREATE TABLE h_0 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 0);
-NOTICE:  AUDIT: SESSION,89,1,DDL,CREATE TABLE,,,"CREATE TABLE h_0 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 0);",<none>
+NOTICE:  AUDIT: SESSION,94,1,DDL,CREATE TABLE,,,"CREATE TABLE h_0 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 0);",<none>
 CREATE TABLE h_1 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 1);
-NOTICE:  AUDIT: SESSION,90,1,DDL,CREATE TABLE,,,"CREATE TABLE h_1 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 1);",<none>
+NOTICE:  AUDIT: SESSION,95,1,DDL,CREATE TABLE,,,"CREATE TABLE h_1 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 1);",<none>
 INSERT INTO h VALUES(1,1);
-NOTICE:  AUDIT: SESSION,91,1,WRITE,INSERT,TABLE,public.h,"INSERT INTO h VALUES(1,1);",<none>
+NOTICE:  AUDIT: SESSION,96,1,WRITE,INSERT,TABLE,public.h,"INSERT INTO h VALUES(1,1);",<none>
 SELECT * FROM h;
-NOTICE:  AUDIT: SESSION,92,1,READ,SELECT,TABLE,public.h,SELECT * FROM h;,<none>
+NOTICE:  AUDIT: SESSION,97,1,READ,SELECT,TABLE,public.h,SELECT * FROM h;,<none>
  x | y 
 ---+---
  1 | 1
 (1 row)
 
 SELECT * FROM h_0;
-NOTICE:  AUDIT: SESSION,93,1,READ,SELECT,TABLE,public.h_0,SELECT * FROM h_0;,<none>
+NOTICE:  AUDIT: SESSION,98,1,READ,SELECT,TABLE,public.h_0,SELECT * FROM h_0;,<none>
  x | y 
 ---+---
  1 | 1
 (1 row)
 
 CREATE INDEX h_idx ON h (x);
-NOTICE:  AUDIT: SESSION,94,1,DDL,CREATE INDEX,,,CREATE INDEX h_idx ON h (x);,<none>
+NOTICE:  AUDIT: SESSION,99,1,DDL,CREATE INDEX,,,CREATE INDEX h_idx ON h (x);,<none>
 DROP INDEX h_idx;
-NOTICE:  AUDIT: SESSION,95,1,DDL,DROP INDEX,,,DROP INDEX h_idx;,<none>
+NOTICE:  AUDIT: SESSION,100,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,100,2,DDL,DROP INDEX,,,DROP INDEX h_idx;,<none>
 DROP TABLE h;
-NOTICE:  AUDIT: SESSION,96,1,DDL,DROP TABLE,,,DROP TABLE h;,<none>
+NOTICE:  AUDIT: SESSION,101,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>
+NOTICE:  AUDIT: SESSION,101,2,DDL,DROP TABLE,,,DROP TABLE h;,<none>
 --
 -- Test rows retrived or affected by statements
 \connect - :current_user
@@ -1602,15 +1618,24 @@
 --
 -- Drop test tables
 DROP TABLE test2;
-NOTICE:  AUDIT: SESSION,32,1,DDL,DROP TABLE,,,DROP TABLE test2;,<none>,0
+NOTICE:  AUDIT: SESSION,32,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,6
+NOTICE:  AUDIT: SESSION,32,2,DDL,DROP TABLE,,,DROP TABLE test2;,<none>,0
 DROP VIEW vw_test3;
-NOTICE:  AUDIT: SESSION,33,1,DDL,DROP VIEW,,,DROP VIEW vw_test3;,<none>,0
+NOTICE:  AUDIT: SESSION,33,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,4
+NOTICE:  AUDIT: SESSION,33,2,DDL,DROP VIEW,,,DROP VIEW vw_test3;,<none>,0
 DROP TABLE test3;
-NOTICE:  AUDIT: SESSION,34,1,DDL,DROP TABLE,,,DROP TABLE test3;,<none>,0
+NOTICE:  AUDIT: SESSION,34,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,5
+NOTICE:  AUDIT: SESSION,34,2,DDL,DROP TABLE,,,DROP TABLE test3;,<none>,0
 DROP FUNCTION test2_insert();
-NOTICE:  AUDIT: SESSION,35,1,DDL,DROP FUNCTION,,,DROP FUNCTION test2_insert();,<none>,0
+NOTICE:  AUDIT: SESSION,35,1,READ,SELECT,TABLE,pgtle.feature_info,"SELECT count(*)                   FROM pgtle.feature_info
+				WHERE obj_identity = obj.object_identity",",,,,,,public.test2_insert(),,,",1
+NOTICE:  AUDIT: SESSION,35,2,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,1
+NOTICE:  AUDIT: SESSION,35,3,DDL,DROP FUNCTION,,,DROP FUNCTION test2_insert();,<none>,0
 DROP FUNCTION test2_change(int);
-NOTICE:  AUDIT: SESSION,36,1,DDL,DROP FUNCTION,,,DROP FUNCTION test2_change(int);,<none>,0
+NOTICE:  AUDIT: SESSION,36,1,READ,SELECT,TABLE,pgtle.feature_info,"SELECT count(*)                   FROM pgtle.feature_info
+				WHERE obj_identity = obj.object_identity",",,,,,,public.test2_change(integer),,,",1
+NOTICE:  AUDIT: SESSION,36,2,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,1
+NOTICE:  AUDIT: SESSION,36,3,DDL,DROP FUNCTION,,,DROP FUNCTION test2_change(int);,<none>,0
 --
 -- Only object logging will be done
 SET pgaudit.log = 'none';
@@ -1787,7 +1812,8 @@
 --
 -- Drop a table from a query
 DROP TABLE test.account_copy;
-NOTICE:  AUDIT: SESSION,52,1,DDL,DROP TABLE,,,DROP TABLE test.account_copy;,<none>,0
+NOTICE:  AUDIT: SESSION,52,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,5
+NOTICE:  AUDIT: SESSION,52,2,DDL,DROP TABLE,,,DROP TABLE test.account_copy;,<none>,0
 --
 -- Create a table from a query
 CREATE TABLE test.account_copy AS
@@ -1957,7 +1983,8 @@
 --
 -- Test prepared insert
 DROP TABLE test.test_insert;
-NOTICE:  AUDIT: SESSION,74,1,DDL,DROP TABLE,,,DROP TABLE test.test_insert;,<none>,0
+NOTICE:  AUDIT: SESSION,74,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,3
+NOTICE:  AUDIT: SESSION,74,2,DDL,DROP TABLE,,,DROP TABLE test.test_insert;,<none>,0
 --
 -- Test prepared insert
 CREATE TABLE test.test_insert
@@ -2119,7 +2146,8 @@
 	EXECUTE 'DROP table ' || table_name;
 END $$;",<none>,0
 NOTICE:  AUDIT: SESSION,90,2,DDL,CREATE TABLE,,,"CREATE TABLE do_table (""weird name"" INT)",<none>,0
-NOTICE:  AUDIT: SESSION,90,3,DDL,DROP TABLE,,,DROP table do_table,<none>,0
+NOTICE:  AUDIT: SESSION,90,3,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,3
+NOTICE:  AUDIT: SESSION,90,4,DDL,DROP TABLE,,,DROP table do_table,<none>,0
 --
 -- Generate an error and make sure the stack gets cleared
 DO $$
@@ -2141,7 +2169,8 @@
 -- Test alter table statements
 ALTER TABLE public.test
 	DROP COLUMN description ;
-NOTICE:  AUDIT: SESSION,92,1,DDL,ALTER TABLE,,,"ALTER TABLE public.test
+NOTICE:  AUDIT: SESSION,92,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,1
+NOTICE:  AUDIT: SESSION,92,2,DDL,ALTER TABLE,,,"ALTER TABLE public.test
 	DROP COLUMN description ;",<none>,0
 ALTER TABLE public.test
 	RENAME TO test2;
@@ -2157,10 +2186,12 @@
 	ADD COLUMN description TEXT;",<none>,0
 ALTER TABLE test.test2
 	DROP COLUMN description;
-NOTICE:  AUDIT: SESSION,96,1,DDL,ALTER TABLE,,,"ALTER TABLE test.test2
+NOTICE:  AUDIT: SESSION,96,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,1
+NOTICE:  AUDIT: SESSION,96,2,DDL,ALTER TABLE,,,"ALTER TABLE test.test2
 	DROP COLUMN description;",<none>,0
 DROP TABLE test.test2;
-NOTICE:  AUDIT: SESSION,97,1,DDL,DROP TABLE,,,DROP TABLE test.test2;,<none>,0
+NOTICE:  AUDIT: SESSION,97,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,7
+NOTICE:  AUDIT: SESSION,97,2,DDL,DROP TABLE,,,DROP TABLE test.test2;,<none>,0
 --
 -- Test multiple statements with one semi-colon
 CREATE SCHEMA foo1
@@ -2170,11 +2201,14 @@
 	CREATE TABLE foo1.bar1 (id int)
 	CREATE TABLE foo1.baz1 (id int);",<none>,0
 DROP TABLE foo1.bar1;
-NOTICE:  AUDIT: SESSION,99,1,DDL,DROP TABLE,,,DROP TABLE foo1.bar1;,<none>,0
+NOTICE:  AUDIT: SESSION,99,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,3
+NOTICE:  AUDIT: SESSION,99,2,DDL,DROP TABLE,,,DROP TABLE foo1.bar1;,<none>,0
 DROP TABLE foo1.baz1;
-NOTICE:  AUDIT: SESSION,100,1,DDL,DROP TABLE,,,DROP TABLE foo1.baz1;,<none>,0
+NOTICE:  AUDIT: SESSION,100,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,3
+NOTICE:  AUDIT: SESSION,100,2,DDL,DROP TABLE,,,DROP TABLE foo1.baz1;,<none>,0
 DROP SCHEMA foo1;
-NOTICE:  AUDIT: SESSION,101,1,DDL,DROP SCHEMA,,,DROP SCHEMA foo1;,<none>,0
+NOTICE:  AUDIT: SESSION,101,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,1
+NOTICE:  AUDIT: SESSION,101,2,DDL,DROP SCHEMA,,,DROP SCHEMA foo1;,<none>,0
 --
 -- Test aggregate
 CREATE FUNCTION public.int_add1
@@ -2373,85 +2407,90 @@
 NOTICE:  AUDIT: SESSION,121,4,WRITE,INSERT,TABLE,public.bbb,INSERT INTO bbb VALUES (1);,<not logged>,1
 SET pgaudit.log_parameter TO ON;
 DROP TABLE bbb;
+NOTICE:  AUDIT: SESSION,122,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,9
 DROP TABLE aaa;
+NOTICE:  AUDIT: SESSION,123,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,5
 --
 -- Test MISC
 SET pgaudit.log = 'misc';
-NOTICE:  AUDIT: SESSION,122,1,MISC,SET,,,SET pgaudit.log = 'misc';,<none>,0
+NOTICE:  AUDIT: SESSION,124,1,MISC,SET,,,SET pgaudit.log = 'misc';,<none>,0
 SET pgaudit.log_client = on;
-NOTICE:  AUDIT: SESSION,123,1,MISC,SET,,,SET pgaudit.log_client = on;,<none>,0
+NOTICE:  AUDIT: SESSION,125,1,MISC,SET,,,SET pgaudit.log_client = on;,<none>,0
 SET pgaudit.log_relation = on;
-NOTICE:  AUDIT: SESSION,124,1,MISC,SET,,,SET pgaudit.log_relation = on;,<none>,0
+NOTICE:  AUDIT: SESSION,126,1,MISC,SET,,,SET pgaudit.log_relation = on;,<none>,0
 SET pgaudit.log_parameter = on;
-NOTICE:  AUDIT: SESSION,125,1,MISC,SET,,,SET pgaudit.log_parameter = on;,<none>,0
+NOTICE:  AUDIT: SESSION,127,1,MISC,SET,,,SET pgaudit.log_parameter = on;,<none>,0
 CREATE ROLE alice;
 SET ROLE alice;
-NOTICE:  AUDIT: SESSION,126,1,MISC,SET,,,SET ROLE alice;,<none>,0
+NOTICE:  AUDIT: SESSION,128,1,MISC,SET,,,SET ROLE alice;,<none>,0
 CREATE TABLE t (a int, b text);
 SET search_path TO test, public;
-NOTICE:  AUDIT: SESSION,127,1,MISC,SET,,,"SET search_path TO test, public;",<none>,0
+NOTICE:  AUDIT: SESSION,129,1,MISC,SET,,,"SET search_path TO test, public;",<none>,0
 INSERT INTO t VALUES (1, 'misc');
 VACUUM t;
-NOTICE:  AUDIT: SESSION,128,1,MISC,VACUUM,,,VACUUM t;,<none>,0
+NOTICE:  AUDIT: SESSION,130,1,MISC,VACUUM,,,VACUUM t;,<none>,0
 RESET ROLE;
-NOTICE:  AUDIT: SESSION,129,1,MISC,RESET,,,RESET ROLE;,<none>,0
+NOTICE:  AUDIT: SESSION,131,1,MISC,RESET,,,RESET ROLE;,<none>,0
 --
 -- Test MISC_SET
 SET pgaudit.log = 'MISC_SET';
-NOTICE:  AUDIT: SESSION,130,1,MISC,SET,,,SET pgaudit.log = 'MISC_SET';,<none>,0
+NOTICE:  AUDIT: SESSION,132,1,MISC,SET,,,SET pgaudit.log = 'MISC_SET';,<none>,0
 SET ROLE alice;
-NOTICE:  AUDIT: SESSION,131,1,MISC,SET,,,SET ROLE alice;,<none>,0
+NOTICE:  AUDIT: SESSION,133,1,MISC,SET,,,SET ROLE alice;,<none>,0
 SET search_path TO public;
-NOTICE:  AUDIT: SESSION,132,1,MISC,SET,,,SET search_path TO public;,<none>,0
+NOTICE:  AUDIT: SESSION,134,1,MISC,SET,,,SET search_path TO public;,<none>,0
 INSERT INTO t VALUES (2, 'misc_set');
 VACUUM t;
 RESET ROLE;
-NOTICE:  AUDIT: SESSION,133,1,MISC,RESET,,,RESET ROLE;,<none>,0
+NOTICE:  AUDIT: SESSION,135,1,MISC,RESET,,,RESET ROLE;,<none>,0
 --
 -- Test ALL, -MISC, MISC_SET
 SET pgaudit.log = 'ALL, -MISC, MISC_SET';
-NOTICE:  AUDIT: SESSION,134,1,MISC,SET,,,"SET pgaudit.log = 'ALL, -MISC, MISC_SET';",<none>,0
+NOTICE:  AUDIT: SESSION,136,1,MISC,SET,,,"SET pgaudit.log = 'ALL, -MISC, MISC_SET';",<none>,0
 SET search_path TO public;
-NOTICE:  AUDIT: SESSION,135,1,MISC,SET,,,SET search_path TO public;,<none>,0
+NOTICE:  AUDIT: SESSION,137,1,MISC,SET,,,SET search_path TO public;,<none>,0
 INSERT INTO t VALUES (3, 'all, -misc, misc_set');
-NOTICE:  AUDIT: SESSION,136,1,WRITE,INSERT,TABLE,public.t,"INSERT INTO t VALUES (3, 'all, -misc, misc_set');",<none>,1
+NOTICE:  AUDIT: SESSION,138,1,WRITE,INSERT,TABLE,public.t,"INSERT INTO t VALUES (3, 'all, -misc, misc_set');",<none>,1
 VACUUM t;
 RESET ROLE;
-NOTICE:  AUDIT: SESSION,137,1,MISC,RESET,,,RESET ROLE;,<none>,0
+NOTICE:  AUDIT: SESSION,139,1,MISC,RESET,,,RESET ROLE;,<none>,0
 DROP TABLE public.t;
-NOTICE:  AUDIT: SESSION,138,1,DDL,DROP TABLE,,,DROP TABLE public.t;,<none>,0
+NOTICE:  AUDIT: SESSION,140,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,5
+NOTICE:  AUDIT: SESSION,140,2,DDL,DROP TABLE,,,DROP TABLE public.t;,<none>,0
 DROP ROLE alice;
-NOTICE:  AUDIT: SESSION,139,1,ROLE,DROP ROLE,,,DROP ROLE alice;,<none>,0
+NOTICE:  AUDIT: SESSION,141,1,ROLE,DROP ROLE,,,DROP ROLE alice;,<none>,0
 --
 -- Test PARTITIONED table
 CREATE TABLE h(x int ,y int) PARTITION BY HASH(x);
-NOTICE:  AUDIT: SESSION,140,1,DDL,CREATE TABLE,,,"CREATE TABLE h(x int ,y int) PARTITION BY HASH(x);",<none>,0
+NOTICE:  AUDIT: SESSION,142,1,DDL,CREATE TABLE,,,"CREATE TABLE h(x int ,y int) PARTITION BY HASH(x);",<none>,0
 CREATE TABLE h_0 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 0);
-NOTICE:  AUDIT: SESSION,141,1,DDL,CREATE TABLE,,,"CREATE TABLE h_0 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 0);",<none>,0
+NOTICE:  AUDIT: SESSION,143,1,DDL,CREATE TABLE,,,"CREATE TABLE h_0 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 0);",<none>,0
 CREATE TABLE h_1 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 1);
-NOTICE:  AUDIT: SESSION,142,1,DDL,CREATE TABLE,,,"CREATE TABLE h_1 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 1);",<none>,0
+NOTICE:  AUDIT: SESSION,144,1,DDL,CREATE TABLE,,,"CREATE TABLE h_1 partition OF h FOR VALUES WITH ( MODULUS 2, REMAINDER 1);",<none>,0
 INSERT INTO h VALUES(1,1);
-NOTICE:  AUDIT: SESSION,143,1,WRITE,INSERT,TABLE,public.h,"INSERT INTO h VALUES(1,1);",<none>,1
+NOTICE:  AUDIT: SESSION,145,1,WRITE,INSERT,TABLE,public.h,"INSERT INTO h VALUES(1,1);",<none>,1
 SELECT * FROM h;
-NOTICE:  AUDIT: SESSION,144,1,READ,SELECT,TABLE,public.h,SELECT * FROM h;,<none>,1
+NOTICE:  AUDIT: SESSION,146,1,READ,SELECT,TABLE,public.h,SELECT * FROM h;,<none>,1
  x | y 
 ---+---
  1 | 1
 (1 row)
 
 SELECT * FROM h_0;
-NOTICE:  AUDIT: SESSION,145,1,READ,SELECT,TABLE,public.h_0,SELECT * FROM h_0;,<none>,1
+NOTICE:  AUDIT: SESSION,147,1,READ,SELECT,TABLE,public.h_0,SELECT * FROM h_0;,<none>,1
  x | y 
 ---+---
  1 | 1
 (1 row)
 
 CREATE INDEX h_idx ON h (x);
-NOTICE:  AUDIT: SESSION,146,1,DDL,CREATE INDEX,,,CREATE INDEX h_idx ON h (x);,<none>,0
+NOTICE:  AUDIT: SESSION,148,1,DDL,CREATE INDEX,,,CREATE INDEX h_idx ON h (x);,<none>,0
 DROP INDEX h_idx;
-NOTICE:  AUDIT: SESSION,147,1,DDL,DROP INDEX,,,DROP INDEX h_idx;,<none>,0
+NOTICE:  AUDIT: SESSION,149,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,3
+NOTICE:  AUDIT: SESSION,149,2,DDL,DROP INDEX,,,DROP INDEX h_idx;,<none>,0
 DROP TABLE h;
-NOTICE:  AUDIT: SESSION,148,1,DDL,DROP TABLE,,,DROP TABLE h;,<none>,0
+NOTICE:  AUDIT: SESSION,150,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<none>,9
+NOTICE:  AUDIT: SESSION,150,2,DDL,DROP TABLE,,,DROP TABLE h;,<none>,0
 --
 -- Change configuration of user 1 so that full statements are not logged
 \connect - :current_user
@@ -2513,7 +2552,14 @@
 WARNING:  AUDIT: SESSION,4,1,DDL,ALTER EXTENSION,,,ALTER EXTENSION pg_stat_statements UPDATE TO '1.10';,<not logged>
 NOTICE:  version "1.10" of extension "pg_stat_statements" is already installed
 DROP EXTENSION pg_stat_statements;
-WARNING:  AUDIT: SESSION,5,1,DDL,DROP EXTENSION,,,DROP EXTENSION pg_stat_statements;,<not logged>
+WARNING:  AUDIT: SESSION,5,1,READ,SELECT,,,SELECT * FROM pg_catalog.pg_event_trigger_dropped_objects(),<not logged>
+WARNING:  AUDIT: SESSION,5,2,WRITE,DELETE,,,"DELETE FROM pgtle.feature_info
+					WHERE obj_identity = obj.object_identity",<not logged>
+WARNING:  AUDIT: SESSION,5,3,WRITE,DELETE,,,"DELETE FROM pgtle.feature_info
+					WHERE obj_identity = obj.object_identity",<not logged>
+WARNING:  AUDIT: SESSION,5,4,WRITE,DELETE,,,"DELETE FROM pgtle.feature_info
+					WHERE obj_identity = obj.object_identity",<not logged>
+WARNING:  AUDIT: SESSION,5,5,DDL,DROP EXTENSION,,,DROP EXTENSION pg_stat_statements;,<not logged>
 SET pgaudit.log_level = 'notice';
 -- Cleanup
 -- Set client_min_messages up to warning to avoid noise
