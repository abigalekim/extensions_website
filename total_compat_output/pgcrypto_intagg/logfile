2023-07-22 03:44:11.783 UTC [2690467] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:44:11.784 UTC [2690467] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:44:11.790 UTC [2690467] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:44:11.798 UTC [2690470] LOG:  database system was shut down at 2023-07-22 03:44:11 UTC
2023-07-22 03:44:11.803 UTC [2690467] LOG:  database system is ready to accept connections
2023-07-22 03:44:11.923 UTC [2690486] ERROR:  file "test_file1" exists
2023-07-22 03:44:11.923 UTC [2690486] STATEMENT:  SELECT pg_file_write('test_file1', 'test1', false);
2023-07-22 03:44:11.926 UTC [2690486] ERROR:  path must be in or below the current directory
2023-07-22 03:44:11.926 UTC [2690486] STATEMENT:  SELECT pg_file_write('../test_file0', 'test0', false);
2023-07-22 03:44:11.926 UTC [2690486] ERROR:  absolute path not allowed
2023-07-22 03:44:11.926 UTC [2690486] STATEMENT:  SELECT pg_file_write('/tmp/test_file0', 'test0', false);
2023-07-22 03:44:11.927 UTC [2690486] ERROR:  absolute path not allowed
2023-07-22 03:44:11.927 UTC [2690486] STATEMENT:  SELECT pg_file_write(current_setting('data_directory') || '/../test_file4', 'test4', false);
2023-07-22 03:44:11.935 UTC [2690486] ERROR:  could not stat file "test_file2": No such file or directory
2023-07-22 03:44:11.935 UTC [2690486] STATEMENT:  SELECT pg_file_sync('test_file2');
2023-07-22 03:44:11.936 UTC [2690486] ERROR:  could not open file "test_file1" for reading: No such file or directory
2023-07-22 03:44:11.936 UTC [2690486] STATEMENT:  SELECT pg_read_file('test_file1');
2023-07-22 03:44:11.936 UTC [2690486] WARNING:  file "test_file1" is not accessible: No such file or directory
2023-07-22 03:44:11.936 UTC [2690486] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:44:11.936 UTC [2690486] ERROR:  could not open file "test_file2" for reading: No such file or directory
2023-07-22 03:44:11.936 UTC [2690486] STATEMENT:  SELECT pg_read_file('test_file2');
2023-07-22 03:44:11.939 UTC [2690486] ERROR:  permission denied for function pg_file_write
2023-07-22 03:44:11.939 UTC [2690486] STATEMENT:  SELECT pg_file_write('test_file0', 'test0', false);
2023-07-22 03:44:11.939 UTC [2690486] ERROR:  permission denied for function pg_file_sync
2023-07-22 03:44:11.939 UTC [2690486] STATEMENT:  SELECT pg_file_sync('test_file0');
2023-07-22 03:44:11.939 UTC [2690486] ERROR:  permission denied for function pg_file_rename
2023-07-22 03:44:11.939 UTC [2690486] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:44:11.939 UTC [2690486] STATEMENT:  SELECT pg_file_rename('test_file0', 'test_file0');
2023-07-22 03:44:11.940 UTC [2690486] ERROR:  permission denied for function pg_file_unlink
2023-07-22 03:44:11.940 UTC [2690486] STATEMENT:  SELECT pg_file_unlink('test_file0');
2023-07-22 03:44:11.940 UTC [2690486] ERROR:  permission denied for function pg_logdir_ls
2023-07-22 03:44:11.940 UTC [2690486] STATEMENT:  SELECT pg_logdir_ls();
2023-07-22 03:44:12.053 UTC [2690501] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 03:44:12.053 UTC [2690501] STATEMENT:  select gen_salt('foo');
2023-07-22 03:44:12.053 UTC [2690501] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:44:12.053 UTC [2690501] STATEMENT:  select digest('foo', 'foo');
2023-07-22 03:44:12.053 UTC [2690501] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:44:12.053 UTC [2690501] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 03:44:12.053 UTC [2690501] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 03:44:12.053 UTC [2690501] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 03:44:12.090 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.090 UTC [2690521] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:44:12.090 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.090 UTC [2690521] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Key was too big
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Key was too big
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Key was too big
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 03:44:12.091 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.091 UTC [2690521] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  encrypt error: Key was too big
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 03:44:12.092 UTC [2690521] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.092 UTC [2690521] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 03:44:12.100 UTC [2690527] ERROR:  encrypt error: Encryption failed
2023-07-22 03:44:12.100 UTC [2690527] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 03:44:12.101 UTC [2690527] ERROR:  decrypt error: Decryption failed
2023-07-22 03:44:12.101 UTC [2690527] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 03:44:12.101 UTC [2690527] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 03:44:12.101 UTC [2690527] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 03:44:12.116 UTC [2690535] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.116 UTC [2690535] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 03:44:12.116 UTC [2690535] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.116 UTC [2690535] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 03:44:12.116 UTC [2690535] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.116 UTC [2690535] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 03:44:12.117 UTC [2690535] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.117 UTC [2690535] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 03:44:12.117 UTC [2690535] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:44:12.117 UTC [2690535] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 03:44:12.117 UTC [2690535] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:44:12.117 UTC [2690535] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 03:44:12.117 UTC [2690535] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.117 UTC [2690535] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 03:44:12.117 UTC [2690535] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.117 UTC [2690535] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 03:44:12.132 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.132 UTC [2690545] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 03:44:12.132 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.132 UTC [2690545] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 03:44:12.132 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.132 UTC [2690545] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 03:44:12.132 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.132 UTC [2690545] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 03:44:12.133 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.133 UTC [2690545] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 03:44:12.133 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.133 UTC [2690545] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 03:44:12.133 UTC [2690545] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:44:12.133 UTC [2690545] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 03:44:12.133 UTC [2690545] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:44:12.133 UTC [2690545] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 03:44:12.133 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.133 UTC [2690545] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 03:44:12.133 UTC [2690545] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:44:12.133 UTC [2690545] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 03:44:12.141 UTC [2690551] ERROR:  invalid salt
2023-07-22 03:44:12.141 UTC [2690551] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 03:44:12.244 UTC [2690559] ERROR:  invalid salt
2023-07-22 03:44:12.244 UTC [2690559] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 03:44:12.244 UTC [2690559] ERROR:  invalid salt
2023-07-22 03:44:12.244 UTC [2690559] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:44:12.244 UTC [2690559] ERROR:  invalid salt
2023-07-22 03:44:12.244 UTC [2690559] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:44:12.302 UTC [2690563] ERROR:  invalid salt
2023-07-22 03:44:12.302 UTC [2690563] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 03:44:12.303 UTC [2690563] ERROR:  crypt(3) returned NULL
2023-07-22 03:44:12.303 UTC [2690563] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 03:44:12.303 UTC [2690563] ERROR:  crypt(3) returned NULL
2023-07-22 03:44:12.303 UTC [2690563] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 03:44:12.329 UTC [2690567] ERROR:  Corrupt ascii-armor
2023-07-22 03:44:12.329 UTC [2690567] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:44:12.330 UTC [2690567] ERROR:  Corrupt ascii-armor
2023-07-22 03:44:12.330 UTC [2690567] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:44:12.330 UTC [2690567] ERROR:  Corrupt ascii-armor
2023-07-22 03:44:12.330 UTC [2690567] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  mismatched array dimensions
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  mismatched array dimensions
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  wrong number of array subscripts
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  wrong number of array subscripts
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  null value not allowed for header key
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  null value not allowed for header value
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 03:44:12.332 UTC [2690567] ERROR:  header key must not contain newlines
2023-07-22 03:44:12.332 UTC [2690567] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 03:44:12.333 UTC [2690567] ERROR:  header value must not contain newlines
2023-07-22 03:44:12.333 UTC [2690567] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 03:44:12.333 UTC [2690567] ERROR:  header key must not contain ": "
2023-07-22 03:44:12.333 UTC [2690567] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 03:44:12.342 UTC [2690571] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.342 UTC [2690571] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 03:44:12.356 UTC [2690571] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.356 UTC [2690571] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:44:12.357 UTC [2690571] ERROR:  Not text data
2023-07-22 03:44:12.357 UTC [2690571] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 03:44:12.358 UTC [2690571] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.358 UTC [2690571] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:44:12.359 UTC [2690571] ERROR:  Unsupported compression algorithm
2023-07-22 03:44:12.359 UTC [2690571] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 03:44:12.376 UTC [2690577] ERROR:  Not text data
2023-07-22 03:44:12.376 UTC [2690577] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 03:44:12.817 UTC [2690585] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.817 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 03:44:12.826 UTC [2690585] ERROR:  Wrong key
2023-07-22 03:44:12.826 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 03:44:12.826 UTC [2690585] ERROR:  No encryption key found
2023-07-22 03:44:12.826 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 03:44:12.827 UTC [2690585] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.827 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 03:44:12.831 UTC [2690585] ERROR:  Need password for secret key
2023-07-22 03:44:12.831 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:44:12.832 UTC [2690585] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.832 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:44:12.837 UTC [2690585] ERROR:  Wrong key or corrupt data
2023-07-22 03:44:12.837 UTC [2690585] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 03:44:12.868 UTC [2690591] ERROR:  No encryption key found
2023-07-22 03:44:12.868 UTC [2690591] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 03:44:12.868 UTC [2690591] ERROR:  Refusing to encrypt with secret key
2023-07-22 03:44:12.868 UTC [2690591] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:44:12.870 UTC [2690591] ERROR:  Not text data
2023-07-22 03:44:12.870 UTC [2690591] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:44:12.878 UTC [2690595] ERROR:  No encryption key found
2023-07-22 03:44:12.878 UTC [2690595] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 03:44:12.878 UTC [2690595] ERROR:  No encryption key found
2023-07-22 03:44:12.878 UTC [2690595] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 03:44:44.503 UTC [2690468] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:44:44.762 UTC [2690468] LOG:  checkpoint complete: wrote 1129 buffers (6.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.035 s, sync=0.182 s, total=0.259 s; sync files=517, longest=0.054 s, average=0.001 s; distance=145489 kB, estimate=145489 kB
2023-07-22 03:45:16.097 UTC [2690468] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:45:16.144 UTC [2690468] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.048 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137088 kB, estimate=144649 kB
2023-07-22 03:45:16.206 UTC [2690467] LOG:  received fast shutdown request
2023-07-22 03:45:16.209 UTC [2690467] LOG:  aborting any active transactions
2023-07-22 03:45:16.210 UTC [2690467] LOG:  background worker "logical replication launcher" (PID 2690473) exited with exit code 1
2023-07-22 03:45:16.211 UTC [2690468] LOG:  shutting down
2023-07-22 03:45:16.213 UTC [2690468] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:45:16.229 UTC [2690468] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130184 kB
2023-07-22 03:45:16.249 UTC [2690467] LOG:  database system is shut down
2023-07-22 03:45:16.936 UTC [2690722] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:45:16.936 UTC [2690722] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:45:16.942 UTC [2690722] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:45:16.949 UTC [2690725] LOG:  database system was shut down at 2023-07-22 03:45:16 UTC
2023-07-22 03:45:16.955 UTC [2690722] LOG:  database system is ready to accept connections
2023-07-22 03:45:17.138 UTC [2690744] ERROR:  file "test_file1" exists
2023-07-22 03:45:17.138 UTC [2690744] STATEMENT:  SELECT pg_file_write('test_file1', 'test1', false);
2023-07-22 03:45:17.143 UTC [2690744] ERROR:  path must be in or below the current directory
2023-07-22 03:45:17.143 UTC [2690744] STATEMENT:  SELECT pg_file_write('../test_file0', 'test0', false);
2023-07-22 03:45:17.143 UTC [2690744] ERROR:  absolute path not allowed
2023-07-22 03:45:17.143 UTC [2690744] STATEMENT:  SELECT pg_file_write('/tmp/test_file0', 'test0', false);
2023-07-22 03:45:17.144 UTC [2690744] ERROR:  absolute path not allowed
2023-07-22 03:45:17.144 UTC [2690744] STATEMENT:  SELECT pg_file_write(current_setting('data_directory') || '/../test_file4', 'test4', false);
2023-07-22 03:45:17.155 UTC [2690744] ERROR:  could not stat file "test_file2": No such file or directory
2023-07-22 03:45:17.155 UTC [2690744] STATEMENT:  SELECT pg_file_sync('test_file2');
2023-07-22 03:45:17.156 UTC [2690744] ERROR:  could not open file "test_file1" for reading: No such file or directory
2023-07-22 03:45:17.156 UTC [2690744] STATEMENT:  SELECT pg_read_file('test_file1');
2023-07-22 03:45:17.157 UTC [2690744] WARNING:  file "test_file1" is not accessible: No such file or directory
2023-07-22 03:45:17.157 UTC [2690744] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:45:17.159 UTC [2690744] ERROR:  could not open file "test_file2" for reading: No such file or directory
2023-07-22 03:45:17.159 UTC [2690744] STATEMENT:  SELECT pg_read_file('test_file2');
2023-07-22 03:45:17.165 UTC [2690744] ERROR:  permission denied for function pg_file_write
2023-07-22 03:45:17.165 UTC [2690744] STATEMENT:  SELECT pg_file_write('test_file0', 'test0', false);
2023-07-22 03:45:17.166 UTC [2690744] ERROR:  permission denied for function pg_file_sync
2023-07-22 03:45:17.166 UTC [2690744] STATEMENT:  SELECT pg_file_sync('test_file0');
2023-07-22 03:45:17.166 UTC [2690744] ERROR:  permission denied for function pg_file_rename
2023-07-22 03:45:17.166 UTC [2690744] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:45:17.166 UTC [2690744] STATEMENT:  SELECT pg_file_rename('test_file0', 'test_file0');
2023-07-22 03:45:17.167 UTC [2690744] ERROR:  permission denied for function pg_file_unlink
2023-07-22 03:45:17.167 UTC [2690744] STATEMENT:  SELECT pg_file_unlink('test_file0');
2023-07-22 03:45:17.167 UTC [2690744] ERROR:  permission denied for function pg_logdir_ls
2023-07-22 03:45:17.167 UTC [2690744] STATEMENT:  SELECT pg_logdir_ls();
2023-07-22 03:45:48.778 UTC [2690723] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:45:48.868 UTC [2690723] LOG:  checkpoint complete: wrote 462 buffers (2.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.017 s, sync=0.037 s, total=0.091 s; sync files=263, longest=0.003 s, average=0.001 s; distance=141459 kB, estimate=141459 kB
2023-07-22 03:46:20.222 UTC [2690723] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:20.305 UTC [2690723] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.011 s, sync=0.006 s, total=0.083 s; sync files=4, longest=0.005 s, average=0.002 s; distance=136818 kB, estimate=140995 kB
2023-07-22 03:46:20.375 UTC [2690722] LOG:  received fast shutdown request
2023-07-22 03:46:20.381 UTC [2690722] LOG:  aborting any active transactions
2023-07-22 03:46:20.383 UTC [2690722] LOG:  background worker "logical replication launcher" (PID 2690728) exited with exit code 1
2023-07-22 03:46:20.383 UTC [2690723] LOG:  shutting down
2023-07-22 03:46:20.388 UTC [2690723] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:46:20.411 UTC [2690723] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.028 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126895 kB
2023-07-22 03:46:20.438 UTC [2690722] LOG:  database system is shut down
2023-07-22 03:46:21.237 UTC [2690876] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:46:21.237 UTC [2690876] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:46:21.250 UTC [2690876] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:46:21.263 UTC [2690879] LOG:  database system was shut down at 2023-07-22 03:46:20 UTC
2023-07-22 03:46:21.272 UTC [2690876] LOG:  database system is ready to accept connections
2023-07-22 03:46:22.109 UTC [2690899] ERROR:  permission denied for function bt_index_check
2023-07-22 03:46:22.109 UTC [2690899] STATEMENT:  SELECT bt_index_check('bttest_a_idx'::regclass);
2023-07-22 03:46:22.109 UTC [2690899] ERROR:  permission denied for function bt_index_parent_check
2023-07-22 03:46:22.109 UTC [2690899] STATEMENT:  SELECT bt_index_parent_check('bttest_a_idx'::regclass);
2023-07-22 03:46:22.164 UTC [2690899] ERROR:  "bttest_a" is not an index
2023-07-22 03:46:22.164 UTC [2690899] STATEMENT:  SELECT bt_index_check('bttest_a');
2023-07-22 03:46:22.165 UTC [2690899] ERROR:  "bttest_a" is not an index
2023-07-22 03:46:22.165 UTC [2690899] STATEMENT:  SELECT bt_index_parent_check('bttest_a');
2023-07-22 03:46:22.165 UTC [2690899] ERROR:  could not open relation with OID 17
2023-07-22 03:46:22.165 UTC [2690899] STATEMENT:  SELECT bt_index_check(17);
2023-07-22 03:46:22.165 UTC [2690899] ERROR:  could not open relation with OID 17
2023-07-22 03:46:22.165 UTC [2690899] STATEMENT:  SELECT bt_index_parent_check(17);
2023-07-22 03:46:22.179 UTC [2690899] ERROR:  only B-Tree indexes are supported as targets for verification
2023-07-22 03:46:22.179 UTC [2690899] DETAIL:  Relation "bttest_a_brin_idx" is not a B-Tree index.
2023-07-22 03:46:22.179 UTC [2690899] STATEMENT:  SELECT bt_index_parent_check('bttest_a_brin_idx');
2023-07-22 03:46:23.210 UTC [2690903] ERROR:  invalid skip option
2023-07-22 03:46:23.210 UTC [2690903] HINT:  Valid skip options are "all-visible", "all-frozen", and "none".
2023-07-22 03:46:23.210 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'rope');
2023-07-22 03:46:23.215 UTC [2690903] ERROR:  permission denied for function verify_heapam
2023-07-22 03:46:23.215 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest');
2023-07-22 03:46:23.217 UTC [2690903] ERROR:  ending block number must be between 0 and 0
2023-07-22 03:46:23.217 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 10000);
2023-07-22 03:46:23.217 UTC [2690903] ERROR:  starting block number must be between 0 and 0
2023-07-22 03:46:23.217 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 10000, endblock := 11000);
2023-07-22 03:46:23.223 UTC [2690903] ERROR:  cannot check relation "test_partitioned"
2023-07-22 03:46:23.223 UTC [2690903] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 03:46:23.223 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam('test_partitioned',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:46:23.299 UTC [2690903] ERROR:  cannot check relation "test_index"
2023-07-22 03:46:23.299 UTC [2690903] DETAIL:  This operation is not supported for indexes.
2023-07-22 03:46:23.299 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam('test_index',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:46:23.303 UTC [2690903] ERROR:  cannot check relation "test_view"
2023-07-22 03:46:23.303 UTC [2690903] DETAIL:  This operation is not supported for views.
2023-07-22 03:46:23.303 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam('test_view',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:46:23.312 UTC [2690903] ERROR:  cannot check relation "test_foreign_table"
2023-07-22 03:46:23.312 UTC [2690903] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 03:46:23.312 UTC [2690903] STATEMENT:  SELECT * FROM verify_heapam('test_foreign_table',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:46:23.333 UTC [2690877] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:23.402 UTC [2690877] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 4 recycled; write=0.012 s, sync=0.011 s, total=0.069 s; sync files=14, longest=0.006 s, average=0.001 s; distance=61130 kB, estimate=61130 kB
2023-07-22 03:46:23.507 UTC [2690918] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 03:46:23.507 UTC [2690918] STATEMENT:  select gen_salt('foo');
2023-07-22 03:46:23.507 UTC [2690918] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:46:23.507 UTC [2690918] STATEMENT:  select digest('foo', 'foo');
2023-07-22 03:46:23.507 UTC [2690918] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:46:23.507 UTC [2690918] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 03:46:23.508 UTC [2690918] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 03:46:23.508 UTC [2690918] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 03:46:23.558 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.558 UTC [2690938] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:46:23.558 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.558 UTC [2690938] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 03:46:23.558 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.558 UTC [2690938] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:46:23.558 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.558 UTC [2690938] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 03:46:23.558 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.558 UTC [2690938] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Key was too big
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Key was too big
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Key was too big
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 03:46:23.559 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.559 UTC [2690938] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 03:46:23.560 UTC [2690938] ERROR:  encrypt error: Key was too big
2023-07-22 03:46:23.560 UTC [2690938] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 03:46:23.560 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.560 UTC [2690938] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 03:46:23.560 UTC [2690938] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:46:23.560 UTC [2690938] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 03:46:23.560 UTC [2690938] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:46:23.560 UTC [2690938] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 03:46:23.560 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.560 UTC [2690938] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 03:46:23.560 UTC [2690938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.560 UTC [2690938] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 03:46:23.573 UTC [2690944] ERROR:  encrypt error: Encryption failed
2023-07-22 03:46:23.573 UTC [2690944] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 03:46:23.574 UTC [2690944] ERROR:  decrypt error: Decryption failed
2023-07-22 03:46:23.574 UTC [2690944] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 03:46:23.575 UTC [2690944] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 03:46:23.575 UTC [2690944] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 03:46:23.598 UTC [2690952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.598 UTC [2690952] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 03:46:23.598 UTC [2690952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.598 UTC [2690952] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 03:46:23.599 UTC [2690952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.599 UTC [2690952] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 03:46:23.599 UTC [2690952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.599 UTC [2690952] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 03:46:23.599 UTC [2690952] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:46:23.599 UTC [2690952] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 03:46:23.599 UTC [2690952] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:46:23.599 UTC [2690952] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 03:46:23.599 UTC [2690952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.599 UTC [2690952] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 03:46:23.600 UTC [2690952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.600 UTC [2690952] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 03:46:23.623 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.623 UTC [2690962] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 03:46:23.623 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.623 UTC [2690962] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 03:46:23.623 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.623 UTC [2690962] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 03:46:23.624 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.624 UTC [2690962] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 03:46:23.624 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.624 UTC [2690962] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 03:46:23.624 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.624 UTC [2690962] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 03:46:23.624 UTC [2690962] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:46:23.624 UTC [2690962] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 03:46:23.624 UTC [2690962] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:46:23.624 UTC [2690962] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 03:46:23.625 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.625 UTC [2690962] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 03:46:23.625 UTC [2690962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:46:23.625 UTC [2690962] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 03:46:23.637 UTC [2690968] ERROR:  invalid salt
2023-07-22 03:46:23.637 UTC [2690968] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 03:46:23.740 UTC [2690976] ERROR:  invalid salt
2023-07-22 03:46:23.740 UTC [2690976] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 03:46:23.741 UTC [2690976] ERROR:  invalid salt
2023-07-22 03:46:23.741 UTC [2690976] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:46:23.741 UTC [2690976] ERROR:  invalid salt
2023-07-22 03:46:23.741 UTC [2690976] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:46:23.798 UTC [2690980] ERROR:  invalid salt
2023-07-22 03:46:23.798 UTC [2690980] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 03:46:23.798 UTC [2690980] ERROR:  crypt(3) returned NULL
2023-07-22 03:46:23.798 UTC [2690980] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 03:46:23.798 UTC [2690980] ERROR:  crypt(3) returned NULL
2023-07-22 03:46:23.798 UTC [2690980] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 03:46:23.849 UTC [2690984] ERROR:  Corrupt ascii-armor
2023-07-22 03:46:23.849 UTC [2690984] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:46:23.850 UTC [2690984] ERROR:  Corrupt ascii-armor
2023-07-22 03:46:23.850 UTC [2690984] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:46:23.851 UTC [2690984] ERROR:  Corrupt ascii-armor
2023-07-22 03:46:23.851 UTC [2690984] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:46:23.860 UTC [2690984] ERROR:  mismatched array dimensions
2023-07-22 03:46:23.860 UTC [2690984] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 03:46:23.861 UTC [2690984] ERROR:  mismatched array dimensions
2023-07-22 03:46:23.861 UTC [2690984] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 03:46:23.861 UTC [2690984] ERROR:  wrong number of array subscripts
2023-07-22 03:46:23.861 UTC [2690984] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 03:46:23.862 UTC [2690984] ERROR:  wrong number of array subscripts
2023-07-22 03:46:23.862 UTC [2690984] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 03:46:23.862 UTC [2690984] ERROR:  null value not allowed for header key
2023-07-22 03:46:23.862 UTC [2690984] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 03:46:23.863 UTC [2690984] ERROR:  null value not allowed for header value
2023-07-22 03:46:23.863 UTC [2690984] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 03:46:23.864 UTC [2690984] ERROR:  header key must not contain newlines
2023-07-22 03:46:23.864 UTC [2690984] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 03:46:23.864 UTC [2690984] ERROR:  header value must not contain newlines
2023-07-22 03:46:23.864 UTC [2690984] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 03:46:23.864 UTC [2690984] ERROR:  header key must not contain ": "
2023-07-22 03:46:23.864 UTC [2690984] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 03:46:23.892 UTC [2690988] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:23.892 UTC [2690988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 03:46:23.926 UTC [2690988] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:23.926 UTC [2690988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:46:23.927 UTC [2690988] ERROR:  Not text data
2023-07-22 03:46:23.927 UTC [2690988] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 03:46:23.928 UTC [2690988] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:23.928 UTC [2690988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:46:23.929 UTC [2690988] ERROR:  Unsupported compression algorithm
2023-07-22 03:46:23.929 UTC [2690988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 03:46:23.945 UTC [2690994] ERROR:  Not text data
2023-07-22 03:46:23.945 UTC [2690994] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 03:46:24.396 UTC [2691002] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:24.396 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 03:46:24.417 UTC [2691002] ERROR:  Wrong key
2023-07-22 03:46:24.417 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 03:46:24.418 UTC [2691002] ERROR:  No encryption key found
2023-07-22 03:46:24.418 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 03:46:24.420 UTC [2691002] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:24.420 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 03:46:24.426 UTC [2691002] ERROR:  Need password for secret key
2023-07-22 03:46:24.426 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:46:24.427 UTC [2691002] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:24.427 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:46:24.432 UTC [2691002] ERROR:  Wrong key or corrupt data
2023-07-22 03:46:24.432 UTC [2691002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 03:46:24.454 UTC [2691008] ERROR:  No encryption key found
2023-07-22 03:46:24.454 UTC [2691008] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 03:46:24.455 UTC [2691008] ERROR:  Refusing to encrypt with secret key
2023-07-22 03:46:24.455 UTC [2691008] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:46:24.456 UTC [2691008] ERROR:  Not text data
2023-07-22 03:46:24.456 UTC [2691008] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:46:24.464 UTC [2691012] ERROR:  No encryption key found
2023-07-22 03:46:24.464 UTC [2691012] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 03:46:24.465 UTC [2691012] ERROR:  No encryption key found
2023-07-22 03:46:24.465 UTC [2691012] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 03:46:55.938 UTC [2690877] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:56.081 UTC [2690877] LOG:  checkpoint complete: wrote 556 buffers (3.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.086 s, total=0.143 s; sync files=260, longest=0.007 s, average=0.001 s; distance=141421 kB, estimate=141421 kB
2023-07-22 03:47:27.424 UTC [2690877] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:27.481 UTC [2690877] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.004 s, total=0.057 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137205 kB, estimate=140999 kB
2023-07-22 03:47:27.519 UTC [2690876] LOG:  received fast shutdown request
2023-07-22 03:47:27.522 UTC [2690876] LOG:  aborting any active transactions
2023-07-22 03:47:27.523 UTC [2690876] LOG:  background worker "logical replication launcher" (PID 2690882) exited with exit code 1
2023-07-22 03:47:27.524 UTC [2690877] LOG:  shutting down
2023-07-22 03:47:27.526 UTC [2690877] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:47:27.543 UTC [2690877] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126899 kB
2023-07-22 03:47:27.597 UTC [2690876] LOG:  database system is shut down
2023-07-22 03:47:28.267 UTC [2691137] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:47:28.267 UTC [2691137] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:47:28.273 UTC [2691137] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:47:28.279 UTC [2691140] LOG:  database system was shut down at 2023-07-22 03:47:28 UTC
2023-07-22 03:47:28.285 UTC [2691137] LOG:  database system is ready to accept connections
2023-07-22 03:47:28.943 UTC [2691163] ERROR:  permission denied for function bt_index_check
2023-07-22 03:47:28.943 UTC [2691163] STATEMENT:  SELECT bt_index_check('bttest_a_idx'::regclass);
2023-07-22 03:47:28.944 UTC [2691163] ERROR:  permission denied for function bt_index_parent_check
2023-07-22 03:47:28.944 UTC [2691163] STATEMENT:  SELECT bt_index_parent_check('bttest_a_idx'::regclass);
2023-07-22 03:47:28.991 UTC [2691163] ERROR:  "bttest_a" is not an index
2023-07-22 03:47:28.991 UTC [2691163] STATEMENT:  SELECT bt_index_check('bttest_a');
2023-07-22 03:47:28.991 UTC [2691163] ERROR:  "bttest_a" is not an index
2023-07-22 03:47:28.991 UTC [2691163] STATEMENT:  SELECT bt_index_parent_check('bttest_a');
2023-07-22 03:47:28.991 UTC [2691163] ERROR:  could not open relation with OID 17
2023-07-22 03:47:28.991 UTC [2691163] STATEMENT:  SELECT bt_index_check(17);
2023-07-22 03:47:28.991 UTC [2691163] ERROR:  could not open relation with OID 17
2023-07-22 03:47:28.991 UTC [2691163] STATEMENT:  SELECT bt_index_parent_check(17);
2023-07-22 03:47:29.005 UTC [2691163] ERROR:  only B-Tree indexes are supported as targets for verification
2023-07-22 03:47:29.005 UTC [2691163] DETAIL:  Relation "bttest_a_brin_idx" is not a B-Tree index.
2023-07-22 03:47:29.005 UTC [2691163] STATEMENT:  SELECT bt_index_parent_check('bttest_a_brin_idx');
2023-07-22 03:47:29.805 UTC [2691167] ERROR:  invalid skip option
2023-07-22 03:47:29.805 UTC [2691167] HINT:  Valid skip options are "all-visible", "all-frozen", and "none".
2023-07-22 03:47:29.805 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'rope');
2023-07-22 03:47:29.810 UTC [2691167] ERROR:  permission denied for function verify_heapam
2023-07-22 03:47:29.810 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest');
2023-07-22 03:47:29.811 UTC [2691167] ERROR:  ending block number must be between 0 and 0
2023-07-22 03:47:29.811 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 10000);
2023-07-22 03:47:29.811 UTC [2691167] ERROR:  starting block number must be between 0 and 0
2023-07-22 03:47:29.811 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 10000, endblock := 11000);
2023-07-22 03:47:29.813 UTC [2691167] ERROR:  cannot check relation "test_partitioned"
2023-07-22 03:47:29.813 UTC [2691167] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 03:47:29.813 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam('test_partitioned',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:47:29.851 UTC [2691167] ERROR:  cannot check relation "test_index"
2023-07-22 03:47:29.851 UTC [2691167] DETAIL:  This operation is not supported for indexes.
2023-07-22 03:47:29.851 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam('test_index',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:47:29.852 UTC [2691167] ERROR:  cannot check relation "test_view"
2023-07-22 03:47:29.852 UTC [2691167] DETAIL:  This operation is not supported for views.
2023-07-22 03:47:29.852 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam('test_view',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:47:29.857 UTC [2691167] ERROR:  cannot check relation "test_foreign_table"
2023-07-22 03:47:29.857 UTC [2691167] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 03:47:29.857 UTC [2691167] STATEMENT:  SELECT * FROM verify_heapam('test_foreign_table',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:48:01.452 UTC [2691138] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:01.599 UTC [2691138] LOG:  checkpoint complete: wrote 536 buffers (3.3%); 0 WAL file(s) added, 0 removed, 12 recycled; write=0.027 s, sync=0.063 s, total=0.148 s; sync files=282, longest=0.004 s, average=0.001 s; distance=198352 kB, estimate=198352 kB
2023-07-22 03:48:33.131 UTC [2691138] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:33.217 UTC [2691138] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.009 s, total=0.087 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133468 kB, estimate=191864 kB
2023-07-22 03:48:33.285 UTC [2691137] LOG:  received fast shutdown request
2023-07-22 03:48:33.290 UTC [2691137] LOG:  aborting any active transactions
2023-07-22 03:48:33.291 UTC [2691137] LOG:  background worker "logical replication launcher" (PID 2691143) exited with exit code 1
2023-07-22 03:48:33.292 UTC [2691138] LOG:  shutting down
2023-07-22 03:48:33.299 UTC [2691138] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:48:33.328 UTC [2691138] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.037 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=172677 kB
2023-07-22 03:48:33.368 UTC [2691137] LOG:  database system is shut down
2023-07-22 03:48:34.114 UTC [2691299] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:48:34.114 UTC [2691299] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:48:34.126 UTC [2691299] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:48:34.136 UTC [2691302] LOG:  database system was shut down at 2023-07-22 03:48:33 UTC
2023-07-22 03:48:34.151 UTC [2691299] LOG:  database system is ready to accept connections
2023-07-22 03:48:34.338 UTC [2691316] ERROR:  extension "auth_delay" is not available
2023-07-22 03:48:34.338 UTC [2691316] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auth_delay.control": No such file or directory.
2023-07-22 03:48:34.338 UTC [2691316] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:48:34.338 UTC [2691316] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auth_delay"
2023-07-22 03:48:34.342 UTC [2691299] LOG:  received fast shutdown request
2023-07-22 03:48:34.347 UTC [2691299] LOG:  aborting any active transactions
2023-07-22 03:48:34.348 UTC [2691299] LOG:  background worker "logical replication launcher" (PID 2691305) exited with exit code 1
2023-07-22 03:48:34.349 UTC [2691300] LOG:  shutting down
2023-07-22 03:48:34.352 UTC [2691300] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:48:34.430 UTC [2691300] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.040 s, sync=0.025 s, total=0.081 s; sync files=252, longest=0.006 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 03:48:34.450 UTC [2691299] LOG:  database system is shut down
2023-07-22 03:48:35.208 UTC [2691345] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:48:35.208 UTC [2691345] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:48:35.214 UTC [2691345] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:48:35.222 UTC [2691348] LOG:  database system was shut down at 2023-07-22 03:48:35 UTC
2023-07-22 03:48:35.228 UTC [2691345] LOG:  database system is ready to accept connections
2023-07-22 03:48:35.342 UTC [2691357] ERROR:  extension "auth_delay" is not available
2023-07-22 03:48:35.342 UTC [2691357] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auth_delay.control": No such file or directory.
2023-07-22 03:48:35.342 UTC [2691357] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:48:35.342 UTC [2691357] STATEMENT:  CREATE EXTENSION auth_delay;
2023-07-22 03:49:06.886 UTC [2691346] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:06.972 UTC [2691346] LOG:  checkpoint complete: wrote 13 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.012 s, total=0.086 s; sync files=5, longest=0.006 s, average=0.003 s; distance=137373 kB, estimate=137373 kB
2023-07-22 03:49:07.095 UTC [2691434] ERROR:  extension "auth_delay" is not available
2023-07-22 03:49:07.095 UTC [2691434] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auth_delay.control": No such file or directory.
2023-07-22 03:49:07.095 UTC [2691434] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:49:07.095 UTC [2691434] STATEMENT:  CREATE EXTENSION auth_delay;
2023-07-22 03:49:38.742 UTC [2691346] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:38.838 UTC [2691346] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.009 s, total=0.097 s; sync files=4, longest=0.005 s, average=0.003 s; distance=133317 kB, estimate=136968 kB
2023-07-22 03:49:38.904 UTC [2691345] LOG:  received fast shutdown request
2023-07-22 03:49:38.909 UTC [2691345] LOG:  aborting any active transactions
2023-07-22 03:49:38.910 UTC [2691345] LOG:  background worker "logical replication launcher" (PID 2691351) exited with exit code 1
2023-07-22 03:49:38.911 UTC [2691346] LOG:  shutting down
2023-07-22 03:49:38.918 UTC [2691346] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:49:38.953 UTC [2691346] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.043 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123271 kB
2023-07-22 03:49:38.976 UTC [2691345] LOG:  database system is shut down
2023-07-22 03:49:39.772 UTC [2691479] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:49:39.772 UTC [2691479] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:49:39.782 UTC [2691479] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:49:39.794 UTC [2691482] LOG:  database system was shut down at 2023-07-22 03:49:39 UTC
2023-07-22 03:49:39.802 UTC [2691479] LOG:  database system is ready to accept connections
2023-07-22 03:49:39.934 UTC [2691496] ERROR:  extension "auto_explain" is not available
2023-07-22 03:49:39.934 UTC [2691496] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auto_explain.control": No such file or directory.
2023-07-22 03:49:39.934 UTC [2691496] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:49:39.934 UTC [2691496] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auto_explain"
2023-07-22 03:49:39.941 UTC [2691479] LOG:  received fast shutdown request
2023-07-22 03:49:39.947 UTC [2691479] LOG:  aborting any active transactions
2023-07-22 03:49:39.949 UTC [2691479] LOG:  background worker "logical replication launcher" (PID 2691485) exited with exit code 1
2023-07-22 03:49:39.949 UTC [2691480] LOG:  shutting down
2023-07-22 03:49:39.956 UTC [2691480] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:49:40.049 UTC [2691480] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.028 s, sync=0.041 s, total=0.100 s; sync files=252, longest=0.018 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 03:49:40.071 UTC [2691479] LOG:  database system is shut down
2023-07-22 03:49:40.919 UTC [2691527] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:49:40.919 UTC [2691527] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:49:40.929 UTC [2691527] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:49:40.941 UTC [2691530] LOG:  database system was shut down at 2023-07-22 03:49:40 UTC
2023-07-22 03:49:40.949 UTC [2691527] LOG:  database system is ready to accept connections
2023-07-22 03:49:41.040 UTC [2691539] ERROR:  extension "auto_explain" is not available
2023-07-22 03:49:41.040 UTC [2691539] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auto_explain.control": No such file or directory.
2023-07-22 03:49:41.040 UTC [2691539] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:49:41.040 UTC [2691539] STATEMENT:  CREATE EXTENSION auto_explain;
2023-07-22 03:50:13.397 UTC [2691528] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:50:13.473 UTC [2691528] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.076 s; sync files=5, longest=0.003 s, average=0.002 s; distance=133513 kB, estimate=133513 kB
2023-07-22 03:50:13.612 UTC [2691617] ERROR:  extension "auto_explain" is not available
2023-07-22 03:50:13.612 UTC [2691617] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auto_explain.control": No such file or directory.
2023-07-22 03:50:13.612 UTC [2691617] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:50:13.612 UTC [2691617] STATEMENT:  CREATE EXTENSION auto_explain;
2023-07-22 03:50:45.156 UTC [2691528] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:50:45.222 UTC [2691528] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.013 s, sync=0.006 s, total=0.066 s; sync files=4, longest=0.003 s, average=0.002 s; distance=135280 kB, estimate=135280 kB
2023-07-22 03:50:45.285 UTC [2691527] LOG:  received fast shutdown request
2023-07-22 03:50:45.290 UTC [2691527] LOG:  aborting any active transactions
2023-07-22 03:50:45.291 UTC [2691527] LOG:  background worker "logical replication launcher" (PID 2691533) exited with exit code 1
2023-07-22 03:50:45.291 UTC [2691528] LOG:  shutting down
2023-07-22 03:50:45.295 UTC [2691528] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:50:45.316 UTC [2691528] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.025 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=121752 kB
2023-07-22 03:50:45.366 UTC [2691527] LOG:  database system is shut down
2023-07-22 03:50:46.148 UTC [2691662] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:50:46.148 UTC [2691662] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:50:46.154 UTC [2691662] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:50:46.166 UTC [2691665] LOG:  database system was shut down at 2023-07-22 03:50:45 UTC
2023-07-22 03:50:46.172 UTC [2691662] LOG:  database system is ready to accept connections
2023-07-22 03:50:46.302 UTC [2691679] ERROR:  extension "basebackup_to_shell" is not available
2023-07-22 03:50:46.302 UTC [2691679] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/basebackup_to_shell.control": No such file or directory.
2023-07-22 03:50:46.302 UTC [2691679] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:50:46.302 UTC [2691679] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "basebackup_to_shell"
2023-07-22 03:50:46.309 UTC [2691662] LOG:  received fast shutdown request
2023-07-22 03:50:46.314 UTC [2691662] LOG:  aborting any active transactions
2023-07-22 03:50:46.318 UTC [2691662] LOG:  background worker "logical replication launcher" (PID 2691668) exited with exit code 1
2023-07-22 03:50:46.319 UTC [2691663] LOG:  shutting down
2023-07-22 03:50:46.325 UTC [2691663] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:50:46.409 UTC [2691663] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.042 s, sync=0.025 s, total=0.090 s; sync files=252, longest=0.006 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 03:50:46.418 UTC [2691662] LOG:  database system is shut down
2023-07-22 03:50:47.233 UTC [2691708] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:50:47.234 UTC [2691708] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:50:47.244 UTC [2691708] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:50:47.251 UTC [2691711] LOG:  database system was shut down at 2023-07-22 03:50:46 UTC
2023-07-22 03:50:47.259 UTC [2691708] LOG:  database system is ready to accept connections
2023-07-22 03:50:47.435 UTC [2691720] ERROR:  extension "basebackup_to_shell" is not available
2023-07-22 03:50:47.435 UTC [2691720] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/basebackup_to_shell.control": No such file or directory.
2023-07-22 03:50:47.435 UTC [2691720] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:50:47.435 UTC [2691720] STATEMENT:  CREATE EXTENSION basebackup_to_shell;
2023-07-22 03:51:19.865 UTC [2691709] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:51:19.930 UTC [2691709] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.066 s; sync files=5, longest=0.003 s, average=0.002 s; distance=134241 kB, estimate=134241 kB
2023-07-22 03:51:20.071 UTC [2691797] ERROR:  extension "basebackup_to_shell" is not available
2023-07-22 03:51:20.071 UTC [2691797] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/basebackup_to_shell.control": No such file or directory.
2023-07-22 03:51:20.071 UTC [2691797] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:51:20.071 UTC [2691797] STATEMENT:  CREATE EXTENSION basebackup_to_shell;
2023-07-22 03:51:51.729 UTC [2691709] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:51:51.814 UTC [2691709] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.005 s, total=0.085 s; sync files=4, longest=0.004 s, average=0.002 s; distance=133583 kB, estimate=134176 kB
2023-07-22 03:51:51.884 UTC [2691708] LOG:  received fast shutdown request
2023-07-22 03:51:51.889 UTC [2691708] LOG:  aborting any active transactions
2023-07-22 03:51:51.891 UTC [2691708] LOG:  background worker "logical replication launcher" (PID 2691714) exited with exit code 1
2023-07-22 03:51:51.891 UTC [2691709] LOG:  shutting down
2023-07-22 03:51:51.896 UTC [2691709] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:51:51.925 UTC [2691709] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.001 s, total=0.035 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=120758 kB
2023-07-22 03:51:51.943 UTC [2691708] LOG:  database system is shut down
2023-07-22 03:51:52.709 UTC [2691844] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:51:52.709 UTC [2691844] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:51:52.720 UTC [2691844] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:51:52.735 UTC [2691847] LOG:  database system was shut down at 2023-07-22 03:51:52 UTC
2023-07-22 03:51:52.748 UTC [2691844] LOG:  database system is ready to accept connections
2023-07-22 03:51:53.181 UTC [2691845] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:51:53.233 UTC [2691845] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.013 s, sync=0.010 s, total=0.053 s; sync files=7, longest=0.006 s, average=0.002 s; distance=11457 kB, estimate=11457 kB
2023-07-22 03:51:53.359 UTC [2691918] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 03:51:53.359 UTC [2691918] STATEMENT:  select gen_salt('foo');
2023-07-22 03:51:53.360 UTC [2691918] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:51:53.360 UTC [2691918] STATEMENT:  select digest('foo', 'foo');
2023-07-22 03:51:53.361 UTC [2691918] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:51:53.361 UTC [2691918] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 03:51:53.361 UTC [2691918] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 03:51:53.361 UTC [2691918] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 03:51:53.506 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.506 UTC [2691938] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:51:53.507 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.507 UTC [2691938] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 03:51:53.507 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.507 UTC [2691938] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:51:53.508 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.508 UTC [2691938] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 03:51:53.508 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.508 UTC [2691938] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:51:53.509 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.509 UTC [2691938] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:51:53.509 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.509 UTC [2691938] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:51:53.510 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.510 UTC [2691938] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 03:51:53.510 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.510 UTC [2691938] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 03:51:53.510 UTC [2691938] ERROR:  encrypt error: Key was too big
2023-07-22 03:51:53.510 UTC [2691938] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 03:51:53.511 UTC [2691938] ERROR:  encrypt error: Key was too big
2023-07-22 03:51:53.511 UTC [2691938] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 03:51:53.511 UTC [2691938] ERROR:  encrypt error: Key was too big
2023-07-22 03:51:53.511 UTC [2691938] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 03:51:53.512 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.512 UTC [2691938] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 03:51:53.512 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.512 UTC [2691938] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 03:51:53.512 UTC [2691938] ERROR:  encrypt error: Key was too big
2023-07-22 03:51:53.512 UTC [2691938] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 03:51:53.513 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.513 UTC [2691938] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 03:51:53.514 UTC [2691938] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:51:53.514 UTC [2691938] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 03:51:53.514 UTC [2691938] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:51:53.514 UTC [2691938] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 03:51:53.515 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.515 UTC [2691938] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 03:51:53.515 UTC [2691938] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.515 UTC [2691938] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 03:51:53.549 UTC [2691944] ERROR:  encrypt error: Encryption failed
2023-07-22 03:51:53.549 UTC [2691944] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 03:51:53.553 UTC [2691944] ERROR:  decrypt error: Decryption failed
2023-07-22 03:51:53.553 UTC [2691944] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 03:51:53.554 UTC [2691944] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 03:51:53.554 UTC [2691944] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 03:51:53.602 UTC [2691952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.602 UTC [2691952] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 03:51:53.602 UTC [2691952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.602 UTC [2691952] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 03:51:53.603 UTC [2691952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.603 UTC [2691952] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 03:51:53.603 UTC [2691952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.603 UTC [2691952] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 03:51:53.604 UTC [2691952] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:51:53.604 UTC [2691952] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 03:51:53.604 UTC [2691952] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:51:53.604 UTC [2691952] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 03:51:53.604 UTC [2691952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.604 UTC [2691952] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 03:51:53.605 UTC [2691952] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.605 UTC [2691952] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 03:51:53.645 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.645 UTC [2691962] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 03:51:53.646 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.646 UTC [2691962] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 03:51:53.646 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.646 UTC [2691962] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 03:51:53.646 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.646 UTC [2691962] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 03:51:53.647 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.647 UTC [2691962] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 03:51:53.647 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.647 UTC [2691962] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 03:51:53.647 UTC [2691962] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:51:53.647 UTC [2691962] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 03:51:53.648 UTC [2691962] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:51:53.648 UTC [2691962] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 03:51:53.648 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.648 UTC [2691962] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 03:51:53.648 UTC [2691962] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:51:53.648 UTC [2691962] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 03:51:53.670 UTC [2691968] ERROR:  invalid salt
2023-07-22 03:51:53.670 UTC [2691968] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 03:51:53.768 UTC [2691976] ERROR:  invalid salt
2023-07-22 03:51:53.768 UTC [2691976] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 03:51:53.769 UTC [2691976] ERROR:  invalid salt
2023-07-22 03:51:53.769 UTC [2691976] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:51:53.769 UTC [2691976] ERROR:  invalid salt
2023-07-22 03:51:53.769 UTC [2691976] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:51:53.848 UTC [2691980] ERROR:  invalid salt
2023-07-22 03:51:53.848 UTC [2691980] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 03:51:53.848 UTC [2691980] ERROR:  crypt(3) returned NULL
2023-07-22 03:51:53.848 UTC [2691980] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 03:51:53.848 UTC [2691980] ERROR:  crypt(3) returned NULL
2023-07-22 03:51:53.848 UTC [2691980] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 03:51:53.877 UTC [2691984] ERROR:  Corrupt ascii-armor
2023-07-22 03:51:53.877 UTC [2691984] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:51:53.877 UTC [2691984] ERROR:  Corrupt ascii-armor
2023-07-22 03:51:53.877 UTC [2691984] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:51:53.877 UTC [2691984] ERROR:  Corrupt ascii-armor
2023-07-22 03:51:53.877 UTC [2691984] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:51:53.878 UTC [2691984] ERROR:  mismatched array dimensions
2023-07-22 03:51:53.878 UTC [2691984] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  mismatched array dimensions
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  wrong number of array subscripts
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  wrong number of array subscripts
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  null value not allowed for header key
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  null value not allowed for header value
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  header key must not contain newlines
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  header value must not contain newlines
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 03:51:53.879 UTC [2691984] ERROR:  header key must not contain ": "
2023-07-22 03:51:53.879 UTC [2691984] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 03:51:53.886 UTC [2691988] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:53.886 UTC [2691988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 03:51:53.898 UTC [2691988] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:53.898 UTC [2691988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:51:53.899 UTC [2691988] ERROR:  Not text data
2023-07-22 03:51:53.899 UTC [2691988] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 03:51:53.900 UTC [2691988] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:53.900 UTC [2691988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:51:53.900 UTC [2691988] ERROR:  Unsupported compression algorithm
2023-07-22 03:51:53.900 UTC [2691988] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 03:51:53.915 UTC [2691994] ERROR:  Not text data
2023-07-22 03:51:53.915 UTC [2691994] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 03:51:54.377 UTC [2692002] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:54.377 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 03:51:54.395 UTC [2692002] ERROR:  Wrong key
2023-07-22 03:51:54.395 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 03:51:54.395 UTC [2692002] ERROR:  No encryption key found
2023-07-22 03:51:54.395 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 03:51:54.396 UTC [2692002] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:54.396 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 03:51:54.401 UTC [2692002] ERROR:  Need password for secret key
2023-07-22 03:51:54.401 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:51:54.402 UTC [2692002] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:54.402 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:51:54.406 UTC [2692002] ERROR:  Wrong key or corrupt data
2023-07-22 03:51:54.406 UTC [2692002] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 03:51:54.427 UTC [2692008] ERROR:  No encryption key found
2023-07-22 03:51:54.427 UTC [2692008] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 03:51:54.427 UTC [2692008] ERROR:  Refusing to encrypt with secret key
2023-07-22 03:51:54.427 UTC [2692008] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:51:54.428 UTC [2692008] ERROR:  Not text data
2023-07-22 03:51:54.428 UTC [2692008] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:51:54.435 UTC [2692012] ERROR:  No encryption key found
2023-07-22 03:51:54.435 UTC [2692012] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 03:51:54.436 UTC [2692012] ERROR:  No encryption key found
2023-07-22 03:51:54.436 UTC [2692012] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 03:52:27.091 UTC [2691845] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:27.220 UTC [2691845] LOG:  checkpoint complete: wrote 708 buffers (4.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.048 s, total=0.130 s; sync files=260, longest=0.014 s, average=0.001 s; distance=140860 kB, estimate=140860 kB
2023-07-22 03:52:59.161 UTC [2691845] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:59.265 UTC [2691845] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.009 s, total=0.105 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133093 kB, estimate=140083 kB
2023-07-22 03:52:59.338 UTC [2691844] LOG:  received fast shutdown request
2023-07-22 03:52:59.344 UTC [2691844] LOG:  aborting any active transactions
2023-07-22 03:52:59.347 UTC [2691844] LOG:  background worker "logical replication launcher" (PID 2691851) exited with exit code 1
2023-07-22 03:52:59.347 UTC [2691845] LOG:  shutting down
2023-07-22 03:52:59.379 UTC [2691845] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:52:59.480 UTC [2691845] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.007 s, sync=0.006 s, total=0.112 s; sync files=1, longest=0.006 s, average=0.006 s; distance=4572 kB, estimate=126532 kB
2023-07-22 03:52:59.532 UTC [2691844] LOG:  database system is shut down
2023-07-22 03:53:00.351 UTC [2692131] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:53:00.352 UTC [2692131] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:53:00.364 UTC [2692131] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:53:00.379 UTC [2692134] LOG:  database system was shut down at 2023-07-22 03:53:00 UTC
2023-07-22 03:53:00.390 UTC [2692131] LOG:  database system is ready to accept connections
2023-07-22 03:53:33.928 UTC [2692132] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:53:34.111 UTC [2692132] LOG:  checkpoint complete: wrote 916 buffers (5.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.050 s, sync=0.030 s, total=0.183 s; sync files=252, longest=0.007 s, average=0.001 s; distance=144195 kB, estimate=144195 kB
2023-07-22 03:54:06.113 UTC [2692132] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:54:06.224 UTC [2692132] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.009 s, total=0.112 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132801 kB, estimate=143055 kB
2023-07-22 03:54:06.269 UTC [2692131] LOG:  received fast shutdown request
2023-07-22 03:54:06.277 UTC [2692131] LOG:  aborting any active transactions
2023-07-22 03:54:06.278 UTC [2692131] LOG:  background worker "logical replication launcher" (PID 2692138) exited with exit code 1
2023-07-22 03:54:06.278 UTC [2692132] LOG:  shutting down
2023-07-22 03:54:06.335 UTC [2692132] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:54:06.436 UTC [2692132] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.008 s, sync=0.008 s, total=0.108 s; sync files=1, longest=0.008 s, average=0.008 s; distance=12987 kB, estimate=130048 kB
2023-07-22 03:54:06.463 UTC [2692131] LOG:  database system is shut down
2023-07-22 03:54:07.284 UTC [2692280] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:54:07.284 UTC [2692280] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:54:07.299 UTC [2692280] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:54:07.313 UTC [2692283] LOG:  database system was shut down at 2023-07-22 03:54:06 UTC
2023-07-22 03:54:07.324 UTC [2692280] LOG:  database system is ready to accept connections
2023-07-22 03:54:07.719 UTC [2692299] ERROR:  value 0 out of bounds for option "length"
2023-07-22 03:54:07.719 UTC [2692299] DETAIL:  Valid values are between "1" and "4096".
2023-07-22 03:54:07.719 UTC [2692299] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (length=0);
2023-07-22 03:54:07.720 UTC [2692299] ERROR:  value 0 out of bounds for option "col1"
2023-07-22 03:54:07.720 UTC [2692299] DETAIL:  Valid values are between "1" and "4095".
2023-07-22 03:54:07.720 UTC [2692299] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (col1=0);
2023-07-22 03:54:07.752 UTC [2692281] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:54:07.822 UTC [2692281] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.030 s, sync=0.015 s, total=0.071 s; sync files=7, longest=0.009 s, average=0.003 s; distance=5357 kB, estimate=5357 kB
2023-07-22 03:54:07.984 UTC [2692314] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 03:54:07.984 UTC [2692314] STATEMENT:  select gen_salt('foo');
2023-07-22 03:54:07.984 UTC [2692314] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:54:07.984 UTC [2692314] STATEMENT:  select digest('foo', 'foo');
2023-07-22 03:54:07.984 UTC [2692314] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:54:07.984 UTC [2692314] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 03:54:07.984 UTC [2692314] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 03:54:07.984 UTC [2692314] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 03:54:08.043 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.043 UTC [2692334] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:54:08.044 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.044 UTC [2692334] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 03:54:08.044 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.044 UTC [2692334] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:54:08.044 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.044 UTC [2692334] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 03:54:08.044 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.044 UTC [2692334] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:54:08.044 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.044 UTC [2692334] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Key was too big
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Key was too big
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Key was too big
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 03:54:08.045 UTC [2692334] ERROR:  encrypt error: Key was too big
2023-07-22 03:54:08.045 UTC [2692334] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 03:54:08.046 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.046 UTC [2692334] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 03:54:08.046 UTC [2692334] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:54:08.046 UTC [2692334] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 03:54:08.046 UTC [2692334] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:54:08.046 UTC [2692334] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 03:54:08.046 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.046 UTC [2692334] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 03:54:08.046 UTC [2692334] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.046 UTC [2692334] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 03:54:08.060 UTC [2692340] ERROR:  encrypt error: Encryption failed
2023-07-22 03:54:08.060 UTC [2692340] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 03:54:08.061 UTC [2692340] ERROR:  decrypt error: Decryption failed
2023-07-22 03:54:08.061 UTC [2692340] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 03:54:08.061 UTC [2692340] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 03:54:08.061 UTC [2692340] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 03:54:08.085 UTC [2692348] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.085 UTC [2692348] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 03:54:08.085 UTC [2692348] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.085 UTC [2692348] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 03:54:08.085 UTC [2692348] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.085 UTC [2692348] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 03:54:08.086 UTC [2692348] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.086 UTC [2692348] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 03:54:08.086 UTC [2692348] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:54:08.086 UTC [2692348] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 03:54:08.086 UTC [2692348] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:54:08.086 UTC [2692348] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 03:54:08.086 UTC [2692348] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.086 UTC [2692348] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 03:54:08.086 UTC [2692348] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.086 UTC [2692348] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 03:54:08.111 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.111 UTC [2692358] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 03:54:08.111 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.111 UTC [2692358] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 03:54:08.111 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.111 UTC [2692358] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 03:54:08.112 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.112 UTC [2692358] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 03:54:08.112 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.112 UTC [2692358] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 03:54:08.112 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.112 UTC [2692358] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 03:54:08.112 UTC [2692358] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:54:08.112 UTC [2692358] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 03:54:08.113 UTC [2692358] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:54:08.113 UTC [2692358] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 03:54:08.113 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.113 UTC [2692358] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 03:54:08.113 UTC [2692358] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:54:08.113 UTC [2692358] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 03:54:08.126 UTC [2692364] ERROR:  invalid salt
2023-07-22 03:54:08.126 UTC [2692364] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 03:54:08.274 UTC [2692372] ERROR:  invalid salt
2023-07-22 03:54:08.274 UTC [2692372] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 03:54:08.274 UTC [2692372] ERROR:  invalid salt
2023-07-22 03:54:08.274 UTC [2692372] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:54:08.275 UTC [2692372] ERROR:  invalid salt
2023-07-22 03:54:08.275 UTC [2692372] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:54:08.349 UTC [2692376] ERROR:  invalid salt
2023-07-22 03:54:08.349 UTC [2692376] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 03:54:08.349 UTC [2692376] ERROR:  crypt(3) returned NULL
2023-07-22 03:54:08.349 UTC [2692376] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 03:54:08.349 UTC [2692376] ERROR:  crypt(3) returned NULL
2023-07-22 03:54:08.349 UTC [2692376] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 03:54:08.405 UTC [2692380] ERROR:  Corrupt ascii-armor
2023-07-22 03:54:08.405 UTC [2692380] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:54:08.405 UTC [2692380] ERROR:  Corrupt ascii-armor
2023-07-22 03:54:08.405 UTC [2692380] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:54:08.406 UTC [2692380] ERROR:  Corrupt ascii-armor
2023-07-22 03:54:08.406 UTC [2692380] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:54:08.416 UTC [2692380] ERROR:  mismatched array dimensions
2023-07-22 03:54:08.416 UTC [2692380] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 03:54:08.416 UTC [2692380] ERROR:  mismatched array dimensions
2023-07-22 03:54:08.416 UTC [2692380] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 03:54:08.416 UTC [2692380] ERROR:  wrong number of array subscripts
2023-07-22 03:54:08.416 UTC [2692380] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 03:54:08.417 UTC [2692380] ERROR:  wrong number of array subscripts
2023-07-22 03:54:08.417 UTC [2692380] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 03:54:08.417 UTC [2692380] ERROR:  null value not allowed for header key
2023-07-22 03:54:08.417 UTC [2692380] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 03:54:08.418 UTC [2692380] ERROR:  null value not allowed for header value
2023-07-22 03:54:08.418 UTC [2692380] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 03:54:08.419 UTC [2692380] ERROR:  header key must not contain newlines
2023-07-22 03:54:08.419 UTC [2692380] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 03:54:08.420 UTC [2692380] ERROR:  header value must not contain newlines
2023-07-22 03:54:08.420 UTC [2692380] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 03:54:08.420 UTC [2692380] ERROR:  header key must not contain ": "
2023-07-22 03:54:08.420 UTC [2692380] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 03:54:08.443 UTC [2692384] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:08.443 UTC [2692384] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 03:54:08.474 UTC [2692384] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:08.474 UTC [2692384] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:54:08.476 UTC [2692384] ERROR:  Not text data
2023-07-22 03:54:08.476 UTC [2692384] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 03:54:08.477 UTC [2692384] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:08.477 UTC [2692384] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:54:08.477 UTC [2692384] ERROR:  Unsupported compression algorithm
2023-07-22 03:54:08.477 UTC [2692384] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 03:54:08.496 UTC [2692390] ERROR:  Not text data
2023-07-22 03:54:08.496 UTC [2692390] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 03:54:08.983 UTC [2692398] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:08.983 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 03:54:08.996 UTC [2692398] ERROR:  Wrong key
2023-07-22 03:54:08.996 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 03:54:08.997 UTC [2692398] ERROR:  No encryption key found
2023-07-22 03:54:08.997 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 03:54:08.999 UTC [2692398] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:08.999 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 03:54:09.006 UTC [2692398] ERROR:  Need password for secret key
2023-07-22 03:54:09.006 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:54:09.007 UTC [2692398] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:09.007 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:54:09.013 UTC [2692398] ERROR:  Wrong key or corrupt data
2023-07-22 03:54:09.013 UTC [2692398] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 03:54:09.037 UTC [2692404] ERROR:  No encryption key found
2023-07-22 03:54:09.037 UTC [2692404] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 03:54:09.037 UTC [2692404] ERROR:  Refusing to encrypt with secret key
2023-07-22 03:54:09.037 UTC [2692404] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:54:09.038 UTC [2692404] ERROR:  Not text data
2023-07-22 03:54:09.038 UTC [2692404] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:54:09.046 UTC [2692408] ERROR:  No encryption key found
2023-07-22 03:54:09.046 UTC [2692408] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 03:54:09.047 UTC [2692408] ERROR:  No encryption key found
2023-07-22 03:54:09.047 UTC [2692408] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 03:54:41.418 UTC [2692281] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:54:41.565 UTC [2692281] LOG:  checkpoint complete: wrote 627 buffers (3.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.085 s, total=0.147 s; sync files=260, longest=0.004 s, average=0.001 s; distance=141221 kB, estimate=141221 kB
2023-07-22 03:55:12.924 UTC [2692281] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:13.002 UTC [2692281] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.079 s; sync files=4, longest=0.006 s, average=0.002 s; distance=135462 kB, estimate=140645 kB
2023-07-22 03:55:13.044 UTC [2692280] LOG:  received fast shutdown request
2023-07-22 03:55:13.050 UTC [2692280] LOG:  aborting any active transactions
2023-07-22 03:55:13.051 UTC [2692280] LOG:  background worker "logical replication launcher" (PID 2692286) exited with exit code 1
2023-07-22 03:55:13.051 UTC [2692281] LOG:  shutting down
2023-07-22 03:55:13.054 UTC [2692281] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:55:13.079 UTC [2692281] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.028 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126581 kB
2023-07-22 03:55:13.119 UTC [2692280] LOG:  database system is shut down
2023-07-22 03:55:13.888 UTC [2692537] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:55:13.888 UTC [2692537] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:55:13.897 UTC [2692537] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:55:13.910 UTC [2692540] LOG:  database system was shut down at 2023-07-22 03:55:13 UTC
2023-07-22 03:55:13.923 UTC [2692537] LOG:  database system is ready to accept connections
2023-07-22 03:55:14.313 UTC [2692559] ERROR:  value 0 out of bounds for option "length"
2023-07-22 03:55:14.313 UTC [2692559] DETAIL:  Valid values are between "1" and "4096".
2023-07-22 03:55:14.313 UTC [2692559] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (length=0);
2023-07-22 03:55:14.313 UTC [2692559] ERROR:  value 0 out of bounds for option "col1"
2023-07-22 03:55:14.313 UTC [2692559] DETAIL:  Valid values are between "1" and "4095".
2023-07-22 03:55:14.313 UTC [2692559] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (col1=0);
2023-07-22 03:55:46.927 UTC [2692538] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:47.058 UTC [2692538] LOG:  checkpoint complete: wrote 922 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.027 s, sync=0.040 s, total=0.131 s; sync files=259, longest=0.014 s, average=0.001 s; distance=138540 kB, estimate=138540 kB
2023-07-22 03:56:18.885 UTC [2692538] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:18.974 UTC [2692538] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.006 s, total=0.089 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133400 kB, estimate=138026 kB
2023-07-22 03:56:19.020 UTC [2692537] LOG:  received fast shutdown request
2023-07-22 03:56:19.025 UTC [2692537] LOG:  aborting any active transactions
2023-07-22 03:56:19.026 UTC [2692537] LOG:  background worker "logical replication launcher" (PID 2692543) exited with exit code 1
2023-07-22 03:56:19.027 UTC [2692538] LOG:  shutting down
2023-07-22 03:56:19.033 UTC [2692538] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:56:19.069 UTC [2692538] LOG:  checkpoint complete: wrote 15 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.007 s, total=0.043 s; sync files=3, longest=0.004 s, average=0.003 s; distance=0 kB, estimate=124223 kB
2023-07-22 03:56:19.092 UTC [2692537] LOG:  database system is shut down
2023-07-22 03:56:19.865 UTC [2692689] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:56:19.865 UTC [2692689] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:56:19.874 UTC [2692689] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:56:19.884 UTC [2692692] LOG:  database system was shut down at 2023-07-22 03:56:19 UTC
2023-07-22 03:56:19.891 UTC [2692689] LOG:  database system is ready to accept connections
2023-07-22 03:56:21.207 UTC [2692690] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:21.339 UTC [2692690] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.010 s, total=0.133 s; sync files=7, longest=0.008 s, average=0.002 s; distance=11164 kB, estimate=11164 kB
2023-07-22 03:56:21.518 UTC [2692841] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 03:56:21.518 UTC [2692841] STATEMENT:  select gen_salt('foo');
2023-07-22 03:56:21.518 UTC [2692841] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:56:21.518 UTC [2692841] STATEMENT:  select digest('foo', 'foo');
2023-07-22 03:56:21.518 UTC [2692841] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:56:21.518 UTC [2692841] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 03:56:21.518 UTC [2692841] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 03:56:21.518 UTC [2692841] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:56:21.561 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.561 UTC [2692861] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Key was too big
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Key was too big
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Key was too big
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Key was too big
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 03:56:21.562 UTC [2692861] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.562 UTC [2692861] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 03:56:21.572 UTC [2692867] ERROR:  encrypt error: Encryption failed
2023-07-22 03:56:21.572 UTC [2692867] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 03:56:21.573 UTC [2692867] ERROR:  decrypt error: Decryption failed
2023-07-22 03:56:21.573 UTC [2692867] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 03:56:21.573 UTC [2692867] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 03:56:21.573 UTC [2692867] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 03:56:21.590 UTC [2692875] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.590 UTC [2692875] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 03:56:21.590 UTC [2692875] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.590 UTC [2692875] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 03:56:21.591 UTC [2692875] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.591 UTC [2692875] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 03:56:21.591 UTC [2692875] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.591 UTC [2692875] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 03:56:21.591 UTC [2692875] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:56:21.591 UTC [2692875] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 03:56:21.591 UTC [2692875] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:56:21.591 UTC [2692875] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 03:56:21.591 UTC [2692875] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.591 UTC [2692875] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 03:56:21.591 UTC [2692875] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.591 UTC [2692875] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 03:56:21.609 UTC [2692885] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:56:21.609 UTC [2692885] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 03:56:21.610 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.610 UTC [2692885] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 03:56:21.610 UTC [2692885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:56:21.610 UTC [2692885] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 03:56:21.619 UTC [2692891] ERROR:  invalid salt
2023-07-22 03:56:21.619 UTC [2692891] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 03:56:21.673 UTC [2692899] ERROR:  invalid salt
2023-07-22 03:56:21.673 UTC [2692899] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 03:56:21.673 UTC [2692899] ERROR:  invalid salt
2023-07-22 03:56:21.673 UTC [2692899] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:56:21.674 UTC [2692899] ERROR:  invalid salt
2023-07-22 03:56:21.674 UTC [2692899] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:56:21.748 UTC [2692903] ERROR:  invalid salt
2023-07-22 03:56:21.748 UTC [2692903] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 03:56:21.748 UTC [2692903] ERROR:  crypt(3) returned NULL
2023-07-22 03:56:21.748 UTC [2692903] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 03:56:21.748 UTC [2692903] ERROR:  crypt(3) returned NULL
2023-07-22 03:56:21.748 UTC [2692903] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 03:56:21.796 UTC [2692907] ERROR:  Corrupt ascii-armor
2023-07-22 03:56:21.796 UTC [2692907] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:56:21.797 UTC [2692907] ERROR:  Corrupt ascii-armor
2023-07-22 03:56:21.797 UTC [2692907] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:56:21.797 UTC [2692907] ERROR:  Corrupt ascii-armor
2023-07-22 03:56:21.797 UTC [2692907] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:56:21.807 UTC [2692907] ERROR:  mismatched array dimensions
2023-07-22 03:56:21.807 UTC [2692907] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 03:56:21.808 UTC [2692907] ERROR:  mismatched array dimensions
2023-07-22 03:56:21.808 UTC [2692907] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 03:56:21.808 UTC [2692907] ERROR:  wrong number of array subscripts
2023-07-22 03:56:21.808 UTC [2692907] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 03:56:21.808 UTC [2692907] ERROR:  wrong number of array subscripts
2023-07-22 03:56:21.808 UTC [2692907] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 03:56:21.809 UTC [2692907] ERROR:  null value not allowed for header key
2023-07-22 03:56:21.809 UTC [2692907] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 03:56:21.809 UTC [2692907] ERROR:  null value not allowed for header value
2023-07-22 03:56:21.809 UTC [2692907] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 03:56:21.811 UTC [2692907] ERROR:  header key must not contain newlines
2023-07-22 03:56:21.811 UTC [2692907] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 03:56:21.811 UTC [2692907] ERROR:  header value must not contain newlines
2023-07-22 03:56:21.811 UTC [2692907] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 03:56:21.811 UTC [2692907] ERROR:  header key must not contain ": "
2023-07-22 03:56:21.811 UTC [2692907] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 03:56:21.839 UTC [2692911] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:21.839 UTC [2692911] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 03:56:21.873 UTC [2692911] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:21.873 UTC [2692911] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:56:21.876 UTC [2692911] ERROR:  Not text data
2023-07-22 03:56:21.876 UTC [2692911] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 03:56:21.876 UTC [2692911] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:21.876 UTC [2692911] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:56:21.877 UTC [2692911] ERROR:  Unsupported compression algorithm
2023-07-22 03:56:21.877 UTC [2692911] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 03:56:21.891 UTC [2692917] ERROR:  Not text data
2023-07-22 03:56:21.891 UTC [2692917] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 03:56:22.339 UTC [2692925] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:22.339 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 03:56:22.354 UTC [2692925] ERROR:  Wrong key
2023-07-22 03:56:22.354 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 03:56:22.355 UTC [2692925] ERROR:  No encryption key found
2023-07-22 03:56:22.355 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 03:56:22.356 UTC [2692925] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:22.356 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 03:56:22.360 UTC [2692925] ERROR:  Need password for secret key
2023-07-22 03:56:22.360 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:56:22.361 UTC [2692925] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:22.361 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:56:22.365 UTC [2692925] ERROR:  Wrong key or corrupt data
2023-07-22 03:56:22.365 UTC [2692925] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 03:56:22.385 UTC [2692931] ERROR:  No encryption key found
2023-07-22 03:56:22.385 UTC [2692931] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 03:56:22.386 UTC [2692931] ERROR:  Refusing to encrypt with secret key
2023-07-22 03:56:22.386 UTC [2692931] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:56:22.387 UTC [2692931] ERROR:  Not text data
2023-07-22 03:56:22.387 UTC [2692931] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:56:22.394 UTC [2692935] ERROR:  No encryption key found
2023-07-22 03:56:22.394 UTC [2692935] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 03:56:22.395 UTC [2692935] ERROR:  No encryption key found
2023-07-22 03:56:22.395 UTC [2692935] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 03:56:54.033 UTC [2692690] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:54.151 UTC [2692690] LOG:  checkpoint complete: wrote 953 buffers (5.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.044 s, sync=0.026 s, total=0.119 s; sync files=260, longest=0.004 s, average=0.001 s; distance=141816 kB, estimate=141816 kB
2023-07-22 03:57:25.882 UTC [2692690] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:57:25.966 UTC [2692690] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.007 s, total=0.085 s; sync files=4, longest=0.004 s, average=0.002 s; distance=133871 kB, estimate=141021 kB
2023-07-22 03:57:26.033 UTC [2692689] LOG:  received fast shutdown request
2023-07-22 03:57:26.039 UTC [2692689] LOG:  aborting any active transactions
2023-07-22 03:57:26.040 UTC [2692689] LOG:  background worker "logical replication launcher" (PID 2692695) exited with exit code 1
2023-07-22 03:57:26.041 UTC [2692690] LOG:  shutting down
2023-07-22 03:57:26.046 UTC [2692690] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:57:26.071 UTC [2692690] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.003 s, total=0.031 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126919 kB
2023-07-22 03:57:26.120 UTC [2692689] LOG:  database system is shut down
2023-07-22 03:57:26.893 UTC [2693060] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:57:26.894 UTC [2693060] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:57:26.906 UTC [2693060] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:57:26.916 UTC [2693063] LOG:  database system was shut down at 2023-07-22 03:57:26 UTC
2023-07-22 03:57:26.924 UTC [2693060] LOG:  database system is ready to accept connections
2023-07-22 03:58:01.183 UTC [2693061] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:58:01.338 UTC [2693061] LOG:  checkpoint complete: wrote 1511 buffers (9.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.048 s, sync=0.038 s, total=0.156 s; sync files=313, longest=0.015 s, average=0.001 s; distance=144786 kB, estimate=144786 kB
2023-07-22 03:58:33.192 UTC [2693061] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:58:33.287 UTC [2693061] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.013 s, sync=0.009 s, total=0.096 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133463 kB, estimate=143654 kB
2023-07-22 03:58:33.355 UTC [2693060] LOG:  received fast shutdown request
2023-07-22 03:58:33.361 UTC [2693060] LOG:  aborting any active transactions
2023-07-22 03:58:33.363 UTC [2693060] LOG:  background worker "logical replication launcher" (PID 2693066) exited with exit code 1
2023-07-22 03:58:33.363 UTC [2693061] LOG:  shutting down
2023-07-22 03:58:33.370 UTC [2693061] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:58:33.399 UTC [2693061] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.001 s, total=0.037 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129289 kB
2023-07-22 03:58:33.452 UTC [2693060] LOG:  database system is shut down
2023-07-22 03:58:34.215 UTC [2693330] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:58:34.215 UTC [2693330] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:58:34.225 UTC [2693330] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:58:34.237 UTC [2693333] LOG:  database system was shut down at 2023-07-22 03:58:33 UTC
2023-07-22 03:58:34.246 UTC [2693330] LOG:  database system is ready to accept connections
2023-07-22 03:58:35.601 UTC [2693453] ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
2023-07-22 03:58:35.601 UTC [2693453] DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
2023-07-22 03:58:35.601 UTC [2693453] STATEMENT:  INSERT INTO zoo VALUES(123, 'lion');
2023-07-22 03:58:35.715 UTC [2693331] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:58:35.770 UTC [2693331] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.013 s, sync=0.010 s, total=0.055 s; sync files=7, longest=0.006 s, average=0.002 s; distance=6478 kB, estimate=6478 kB
2023-07-22 03:58:35.930 UTC [2693476] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 03:58:35.930 UTC [2693476] STATEMENT:  select gen_salt('foo');
2023-07-22 03:58:35.930 UTC [2693476] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:58:35.930 UTC [2693476] STATEMENT:  select digest('foo', 'foo');
2023-07-22 03:58:35.930 UTC [2693476] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 03:58:35.930 UTC [2693476] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 03:58:35.930 UTC [2693476] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 03:58:35.930 UTC [2693476] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 03:58:35.968 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.968 UTC [2693496] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Key was too big
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Key was too big
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Key was too big
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Key was too big
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 03:58:35.969 UTC [2693496] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.969 UTC [2693496] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 03:58:35.978 UTC [2693502] ERROR:  encrypt error: Encryption failed
2023-07-22 03:58:35.978 UTC [2693502] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 03:58:35.979 UTC [2693502] ERROR:  decrypt error: Decryption failed
2023-07-22 03:58:35.979 UTC [2693502] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 03:58:35.979 UTC [2693502] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 03:58:35.979 UTC [2693502] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 03:58:35.995 UTC [2693510] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.995 UTC [2693510] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 03:58:35.995 UTC [2693510] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.995 UTC [2693510] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 03:58:35.995 UTC [2693510] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.995 UTC [2693510] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 03:58:35.995 UTC [2693510] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.995 UTC [2693510] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 03:58:35.995 UTC [2693510] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:58:35.995 UTC [2693510] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 03:58:35.995 UTC [2693510] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:58:35.995 UTC [2693510] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 03:58:35.996 UTC [2693510] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.996 UTC [2693510] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 03:58:35.996 UTC [2693510] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:35.996 UTC [2693510] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 03:58:36.012 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.012 UTC [2693520] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 03:58:36.012 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.012 UTC [2693520] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 03:58:36.012 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.012 UTC [2693520] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 03:58:36.012 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.012 UTC [2693520] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 03:58:36.012 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.012 UTC [2693520] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 03:58:36.012 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.012 UTC [2693520] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 03:58:36.013 UTC [2693520] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 03:58:36.013 UTC [2693520] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 03:58:36.013 UTC [2693520] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 03:58:36.013 UTC [2693520] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 03:58:36.013 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.013 UTC [2693520] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 03:58:36.013 UTC [2693520] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 03:58:36.013 UTC [2693520] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 03:58:36.021 UTC [2693526] ERROR:  invalid salt
2023-07-22 03:58:36.021 UTC [2693526] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 03:58:36.136 UTC [2693534] ERROR:  invalid salt
2023-07-22 03:58:36.136 UTC [2693534] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 03:58:36.137 UTC [2693534] ERROR:  invalid salt
2023-07-22 03:58:36.137 UTC [2693534] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:58:36.137 UTC [2693534] ERROR:  invalid salt
2023-07-22 03:58:36.137 UTC [2693534] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 03:58:36.197 UTC [2693538] ERROR:  invalid salt
2023-07-22 03:58:36.197 UTC [2693538] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 03:58:36.197 UTC [2693538] ERROR:  crypt(3) returned NULL
2023-07-22 03:58:36.197 UTC [2693538] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 03:58:36.198 UTC [2693538] ERROR:  crypt(3) returned NULL
2023-07-22 03:58:36.198 UTC [2693538] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 03:58:36.244 UTC [2693542] ERROR:  Corrupt ascii-armor
2023-07-22 03:58:36.244 UTC [2693542] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:58:36.244 UTC [2693542] ERROR:  Corrupt ascii-armor
2023-07-22 03:58:36.244 UTC [2693542] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:58:36.245 UTC [2693542] ERROR:  Corrupt ascii-armor
2023-07-22 03:58:36.245 UTC [2693542] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 03:58:36.250 UTC [2693542] ERROR:  mismatched array dimensions
2023-07-22 03:58:36.250 UTC [2693542] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 03:58:36.251 UTC [2693542] ERROR:  mismatched array dimensions
2023-07-22 03:58:36.251 UTC [2693542] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 03:58:36.251 UTC [2693542] ERROR:  wrong number of array subscripts
2023-07-22 03:58:36.251 UTC [2693542] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 03:58:36.251 UTC [2693542] ERROR:  wrong number of array subscripts
2023-07-22 03:58:36.251 UTC [2693542] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 03:58:36.251 UTC [2693542] ERROR:  null value not allowed for header key
2023-07-22 03:58:36.251 UTC [2693542] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 03:58:36.252 UTC [2693542] ERROR:  null value not allowed for header value
2023-07-22 03:58:36.252 UTC [2693542] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 03:58:36.252 UTC [2693542] ERROR:  header key must not contain newlines
2023-07-22 03:58:36.252 UTC [2693542] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 03:58:36.252 UTC [2693542] ERROR:  header value must not contain newlines
2023-07-22 03:58:36.252 UTC [2693542] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 03:58:36.252 UTC [2693542] ERROR:  header key must not contain ": "
2023-07-22 03:58:36.252 UTC [2693542] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 03:58:36.270 UTC [2693546] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.270 UTC [2693546] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 03:58:36.298 UTC [2693546] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.298 UTC [2693546] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:58:36.299 UTC [2693546] ERROR:  Not text data
2023-07-22 03:58:36.299 UTC [2693546] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 03:58:36.300 UTC [2693546] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.300 UTC [2693546] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 03:58:36.301 UTC [2693546] ERROR:  Unsupported compression algorithm
2023-07-22 03:58:36.301 UTC [2693546] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 03:58:36.317 UTC [2693552] ERROR:  Not text data
2023-07-22 03:58:36.317 UTC [2693552] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 03:58:36.811 UTC [2693560] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.811 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 03:58:36.829 UTC [2693560] ERROR:  Wrong key
2023-07-22 03:58:36.829 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 03:58:36.830 UTC [2693560] ERROR:  No encryption key found
2023-07-22 03:58:36.830 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 03:58:36.831 UTC [2693560] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.831 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 03:58:36.837 UTC [2693560] ERROR:  Need password for secret key
2023-07-22 03:58:36.837 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:58:36.838 UTC [2693560] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.838 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 03:58:36.842 UTC [2693560] ERROR:  Wrong key or corrupt data
2023-07-22 03:58:36.842 UTC [2693560] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 03:58:36.865 UTC [2693566] ERROR:  No encryption key found
2023-07-22 03:58:36.865 UTC [2693566] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 03:58:36.865 UTC [2693566] ERROR:  Refusing to encrypt with secret key
2023-07-22 03:58:36.865 UTC [2693566] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:58:36.867 UTC [2693566] ERROR:  Not text data
2023-07-22 03:58:36.867 UTC [2693566] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 03:58:36.875 UTC [2693570] ERROR:  No encryption key found
2023-07-22 03:58:36.875 UTC [2693570] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 03:58:36.876 UTC [2693570] ERROR:  No encryption key found
2023-07-22 03:58:36.876 UTC [2693570] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 03:59:09.360 UTC [2693331] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:59:09.508 UTC [2693331] LOG:  checkpoint complete: wrote 970 buffers (5.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.042 s, sync=0.032 s, total=0.148 s; sync files=260, longest=0.010 s, average=0.001 s; distance=139068 kB, estimate=139068 kB
2023-07-22 03:59:41.270 UTC [2693331] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:59:41.358 UTC [2693331] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.007 s, total=0.088 s; sync files=4, longest=0.004 s, average=0.002 s; distance=134065 kB, estimate=138568 kB
2023-07-22 03:59:41.420 UTC [2693330] LOG:  received fast shutdown request
2023-07-22 03:59:41.426 UTC [2693330] LOG:  aborting any active transactions
2023-07-22 03:59:41.427 UTC [2693330] LOG:  background worker "logical replication launcher" (PID 2693336) exited with exit code 1
2023-07-22 03:59:41.427 UTC [2693331] LOG:  shutting down
2023-07-22 03:59:41.432 UTC [2693331] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:59:41.462 UTC [2693331] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.035 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=124711 kB
2023-07-22 03:59:41.482 UTC [2693330] LOG:  database system is shut down
2023-07-22 03:59:42.267 UTC [2693696] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:59:42.267 UTC [2693696] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:59:42.275 UTC [2693696] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:59:42.286 UTC [2693699] LOG:  database system was shut down at 2023-07-22 03:59:41 UTC
2023-07-22 03:59:42.292 UTC [2693696] LOG:  database system is ready to accept connections
2023-07-22 03:59:43.770 UTC [2693822] ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
2023-07-22 03:59:43.770 UTC [2693822] DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
2023-07-22 03:59:43.770 UTC [2693822] STATEMENT:  INSERT INTO zoo VALUES(123, 'lion');
2023-07-22 04:00:16.379 UTC [2693697] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:16.946 UTC [2693697] LOG:  checkpoint complete: wrote 1280 buffers (7.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.028 s, sync=0.482 s, total=0.568 s; sync files=341, longest=0.224 s, average=0.002 s; distance=140574 kB, estimate=140574 kB
2023-07-22 04:00:48.725 UTC [2693697] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:48.815 UTC [2693697] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.014 s, sync=0.009 s, total=0.091 s; sync files=4, longest=0.005 s, average=0.003 s; distance=134061 kB, estimate=139922 kB
2023-07-22 04:00:48.879 UTC [2693696] LOG:  received fast shutdown request
2023-07-22 04:00:48.884 UTC [2693696] LOG:  aborting any active transactions
2023-07-22 04:00:48.886 UTC [2693696] LOG:  background worker "logical replication launcher" (PID 2693702) exited with exit code 1
2023-07-22 04:00:48.886 UTC [2693697] LOG:  shutting down
2023-07-22 04:00:48.893 UTC [2693697] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:00:48.922 UTC [2693697] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.001 s, total=0.036 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=125930 kB
2023-07-22 04:00:48.940 UTC [2693696] LOG:  database system is shut down
2023-07-22 04:00:49.746 UTC [2693974] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:00:49.747 UTC [2693974] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:00:49.757 UTC [2693974] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:00:49.769 UTC [2693977] LOG:  database system was shut down at 2023-07-22 04:00:49 UTC
2023-07-22 04:00:49.777 UTC [2693974] LOG:  database system is ready to accept connections
2023-07-22 04:00:49.992 UTC [2693993] ERROR:  collation "coll" for encoding "UTF8" does not exist
2023-07-22 04:00:49.992 UTC [2693993] STATEMENT:  ALTER TABLE s.x ADD CONSTRAINT underqualified EXCLUDE USING btree
	  ((s.index_this_expr(y, s.const())) COLLATE coll WITH s.=)
	  USING INDEX TABLESPACE regress_create_idx_tblspace
	  WHERE (s.index_row_if(y));
2023-07-22 04:00:49.995 UTC [2693975] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:50.097 UTC [2693975] LOG:  checkpoint complete: wrote 934 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.049 s, sync=0.031 s, total=0.103 s; sync files=266, longest=0.006 s, average=0.001 s; distance=4339 kB, estimate=4339 kB
2023-07-22 04:00:50.165 UTC [2693997] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 04:00:50.165 UTC [2693997] DETAIL:  Key (name)=(a) already exists.
2023-07-22 04:00:50.165 UTC [2693997] STATEMENT:  INSERT INTO try (name) VALUES ('a');
2023-07-22 04:00:50.165 UTC [2693997] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 04:00:50.165 UTC [2693997] DETAIL:  Key (name)=(A) already exists.
2023-07-22 04:00:50.165 UTC [2693997] STATEMENT:  INSERT INTO try (name) VALUES ('A');
2023-07-22 04:00:50.165 UTC [2693997] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 04:00:50.165 UTC [2693997] DETAIL:  Key (name)=(aB) already exists.
2023-07-22 04:00:50.165 UTC [2693997] STATEMENT:  INSERT INTO try (name) VALUES ('aB');
2023-07-22 04:00:50.213 UTC [2693997] ERROR:  column "chr" is of type "char" but expression is of type citext at character 44
2023-07-22 04:00:50.213 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.213 UTC [2693997] STATEMENT:  INSERT INTO caster (chr)           VALUES ('f'::citext);
2023-07-22 04:00:50.220 UTC [2693997] ERROR:  column "bytea" is of type bytea but expression is of type text at character 44
2023-07-22 04:00:50.220 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.220 UTC [2693997] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::text);
2023-07-22 04:00:50.221 UTC [2693997] ERROR:  column "bytea" is of type bytea but expression is of type citext at character 44
2023-07-22 04:00:50.221 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.221 UTC [2693997] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::citext);
2023-07-22 04:00:50.222 UTC [2693997] ERROR:  column "boolean" is of type boolean but expression is of type text at character 44
2023-07-22 04:00:50.222 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.222 UTC [2693997] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::text);
2023-07-22 04:00:50.223 UTC [2693997] ERROR:  column "boolean" is of type boolean but expression is of type citext at character 44
2023-07-22 04:00:50.223 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.223 UTC [2693997] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::citext);
2023-07-22 04:00:50.224 UTC [2693997] ERROR:  column "float8" is of type double precision but expression is of type text at character 44
2023-07-22 04:00:50.224 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.224 UTC [2693997] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::text);
2023-07-22 04:00:50.225 UTC [2693997] ERROR:  column "float8" is of type double precision but expression is of type citext at character 44
2023-07-22 04:00:50.225 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.225 UTC [2693997] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::citext);
2023-07-22 04:00:50.228 UTC [2693997] ERROR:  column "float4" is of type real but expression is of type text at character 44
2023-07-22 04:00:50.228 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.228 UTC [2693997] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::text);
2023-07-22 04:00:50.229 UTC [2693997] ERROR:  column "float4" is of type real but expression is of type citext at character 44
2023-07-22 04:00:50.229 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.229 UTC [2693997] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::citext);
2023-07-22 04:00:50.233 UTC [2693997] ERROR:  column "numeric" is of type numeric but expression is of type text at character 44
2023-07-22 04:00:50.233 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.233 UTC [2693997] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::text);
2023-07-22 04:00:50.237 UTC [2693997] ERROR:  column "numeric" is of type numeric but expression is of type citext at character 44
2023-07-22 04:00:50.237 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.237 UTC [2693997] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::citext);
2023-07-22 04:00:50.241 UTC [2693997] ERROR:  column "int8" is of type bigint but expression is of type text at character 44
2023-07-22 04:00:50.241 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.241 UTC [2693997] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::text);
2023-07-22 04:00:50.243 UTC [2693997] ERROR:  column "int8" is of type bigint but expression is of type citext at character 44
2023-07-22 04:00:50.243 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.243 UTC [2693997] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::citext);
2023-07-22 04:00:50.247 UTC [2693997] ERROR:  column "int4" is of type integer but expression is of type text at character 44
2023-07-22 04:00:50.247 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.247 UTC [2693997] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::text);
2023-07-22 04:00:50.251 UTC [2693997] ERROR:  column "int4" is of type integer but expression is of type citext at character 44
2023-07-22 04:00:50.251 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.251 UTC [2693997] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::citext);
2023-07-22 04:00:50.256 UTC [2693997] ERROR:  column "int2" is of type smallint but expression is of type text at character 44
2023-07-22 04:00:50.256 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.256 UTC [2693997] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::text);
2023-07-22 04:00:50.258 UTC [2693997] ERROR:  column "int2" is of type smallint but expression is of type citext at character 44
2023-07-22 04:00:50.258 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.258 UTC [2693997] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::citext);
2023-07-22 04:00:50.262 UTC [2693997] ERROR:  column "cidr" is of type cidr but expression is of type text at character 44
2023-07-22 04:00:50.262 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.262 UTC [2693997] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::text);
2023-07-22 04:00:50.267 UTC [2693997] ERROR:  column "cidr" is of type cidr but expression is of type citext at character 44
2023-07-22 04:00:50.267 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.267 UTC [2693997] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::citext);
2023-07-22 04:00:50.271 UTC [2693997] ERROR:  column "inet" is of type inet but expression is of type text at character 44
2023-07-22 04:00:50.271 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.271 UTC [2693997] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::text);
2023-07-22 04:00:50.274 UTC [2693997] ERROR:  column "inet" is of type inet but expression is of type citext at character 44
2023-07-22 04:00:50.274 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.274 UTC [2693997] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::citext);
2023-07-22 04:00:50.278 UTC [2693997] ERROR:  column "macaddr" is of type macaddr but expression is of type text at character 44
2023-07-22 04:00:50.278 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.278 UTC [2693997] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::text);
2023-07-22 04:00:50.283 UTC [2693997] ERROR:  column "macaddr" is of type macaddr but expression is of type citext at character 44
2023-07-22 04:00:50.283 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.283 UTC [2693997] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::citext);
2023-07-22 04:00:50.287 UTC [2693997] ERROR:  column "money" is of type money but expression is of type text at character 44
2023-07-22 04:00:50.287 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.287 UTC [2693997] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::text);
2023-07-22 04:00:50.293 UTC [2693997] ERROR:  column "money" is of type money but expression is of type citext at character 44
2023-07-22 04:00:50.293 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.293 UTC [2693997] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::citext);
2023-07-22 04:00:50.297 UTC [2693997] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type text at character 44
2023-07-22 04:00:50.297 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.297 UTC [2693997] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 04:00:50.302 UTC [2693997] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type citext at character 44
2023-07-22 04:00:50.302 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.302 UTC [2693997] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 04:00:50.306 UTC [2693997] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type text at character 44
2023-07-22 04:00:50.306 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.306 UTC [2693997] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 04:00:50.308 UTC [2693997] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type citext at character 44
2023-07-22 04:00:50.308 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.308 UTC [2693997] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 04:00:50.313 UTC [2693997] ERROR:  column "interval" is of type interval but expression is of type text at character 44
2023-07-22 04:00:50.313 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.313 UTC [2693997] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::text);
2023-07-22 04:00:50.317 UTC [2693997] ERROR:  column "interval" is of type interval but expression is of type citext at character 44
2023-07-22 04:00:50.317 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.317 UTC [2693997] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::citext);
2023-07-22 04:00:50.322 UTC [2693997] ERROR:  column "date" is of type date but expression is of type text at character 44
2023-07-22 04:00:50.322 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.322 UTC [2693997] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::text);
2023-07-22 04:00:50.324 UTC [2693997] ERROR:  column "date" is of type date but expression is of type citext at character 44
2023-07-22 04:00:50.324 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.324 UTC [2693997] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::citext);
2023-07-22 04:00:50.328 UTC [2693997] ERROR:  column "time" is of type time without time zone but expression is of type text at character 44
2023-07-22 04:00:50.328 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.328 UTC [2693997] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::text);
2023-07-22 04:00:50.333 UTC [2693997] ERROR:  column "time" is of type time without time zone but expression is of type citext at character 44
2023-07-22 04:00:50.333 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.333 UTC [2693997] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::citext);
2023-07-22 04:00:50.337 UTC [2693997] ERROR:  column "timetz" is of type time with time zone but expression is of type text at character 44
2023-07-22 04:00:50.337 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.337 UTC [2693997] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::text);
2023-07-22 04:00:50.339 UTC [2693997] ERROR:  column "timetz" is of type time with time zone but expression is of type citext at character 44
2023-07-22 04:00:50.339 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.339 UTC [2693997] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::citext);
2023-07-22 04:00:50.344 UTC [2693997] ERROR:  column "point" is of type point but expression is of type text at character 44
2023-07-22 04:00:50.344 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.344 UTC [2693997] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::text);
2023-07-22 04:00:50.348 UTC [2693997] ERROR:  column "point" is of type point but expression is of type citext at character 44
2023-07-22 04:00:50.348 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.348 UTC [2693997] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::citext);
2023-07-22 04:00:50.352 UTC [2693997] ERROR:  column "lseg" is of type lseg but expression is of type text at character 44
2023-07-22 04:00:50.352 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.352 UTC [2693997] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::text);
2023-07-22 04:00:50.355 UTC [2693997] ERROR:  column "lseg" is of type lseg but expression is of type citext at character 44
2023-07-22 04:00:50.355 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.355 UTC [2693997] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::citext);
2023-07-22 04:00:50.359 UTC [2693997] ERROR:  column "box" is of type box but expression is of type text at character 44
2023-07-22 04:00:50.359 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.359 UTC [2693997] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::text);
2023-07-22 04:00:50.364 UTC [2693997] ERROR:  column "box" is of type box but expression is of type citext at character 44
2023-07-22 04:00:50.364 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.364 UTC [2693997] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::citext);
2023-07-22 04:00:50.368 UTC [2693997] ERROR:  column "path" is of type path but expression is of type text at character 44
2023-07-22 04:00:50.368 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.368 UTC [2693997] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::text);
2023-07-22 04:00:50.370 UTC [2693997] ERROR:  column "path" is of type path but expression is of type citext at character 44
2023-07-22 04:00:50.370 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.370 UTC [2693997] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::citext);
2023-07-22 04:00:50.374 UTC [2693997] ERROR:  column "polygon" is of type polygon but expression is of type text at character 44
2023-07-22 04:00:50.374 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.374 UTC [2693997] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::text);
2023-07-22 04:00:50.379 UTC [2693997] ERROR:  column "polygon" is of type polygon but expression is of type citext at character 44
2023-07-22 04:00:50.379 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.379 UTC [2693997] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::citext);
2023-07-22 04:00:50.383 UTC [2693997] ERROR:  column "circle" is of type circle but expression is of type text at character 44
2023-07-22 04:00:50.383 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.383 UTC [2693997] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::text);
2023-07-22 04:00:50.386 UTC [2693997] ERROR:  column "circle" is of type circle but expression is of type citext at character 44
2023-07-22 04:00:50.386 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.386 UTC [2693997] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::citext);
2023-07-22 04:00:50.390 UTC [2693997] ERROR:  column "bit" is of type bit but expression is of type text at character 44
2023-07-22 04:00:50.390 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.390 UTC [2693997] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::text);
2023-07-22 04:00:50.394 UTC [2693997] ERROR:  column "bit" is of type bit but expression is of type citext at character 44
2023-07-22 04:00:50.394 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.394 UTC [2693997] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::citext);
2023-07-22 04:00:50.399 UTC [2693997] ERROR:  column "bitv" is of type bit varying but expression is of type text at character 44
2023-07-22 04:00:50.399 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.399 UTC [2693997] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::text);
2023-07-22 04:00:50.401 UTC [2693997] ERROR:  column "bitv" is of type bit varying but expression is of type citext at character 44
2023-07-22 04:00:50.401 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.401 UTC [2693997] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::citext);
2023-07-22 04:00:50.405 UTC [2693997] ERROR:  column "tsvector" is of type tsvector but expression is of type text at character 44
2023-07-22 04:00:50.405 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.405 UTC [2693997] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::text);
2023-07-22 04:00:50.410 UTC [2693997] ERROR:  column "tsvector" is of type tsvector but expression is of type citext at character 44
2023-07-22 04:00:50.410 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.410 UTC [2693997] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::citext);
2023-07-22 04:00:50.414 UTC [2693997] ERROR:  column "tsquery" is of type tsquery but expression is of type text at character 44
2023-07-22 04:00:50.414 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.414 UTC [2693997] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::text);
2023-07-22 04:00:50.417 UTC [2693997] ERROR:  column "tsquery" is of type tsquery but expression is of type citext at character 44
2023-07-22 04:00:50.417 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.417 UTC [2693997] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::citext);
2023-07-22 04:00:50.421 UTC [2693997] ERROR:  column "uuid" is of type uuid but expression is of type text at character 44
2023-07-22 04:00:50.421 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.421 UTC [2693997] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::text);
2023-07-22 04:00:50.426 UTC [2693997] ERROR:  column "uuid" is of type uuid but expression is of type citext at character 44
2023-07-22 04:00:50.426 UTC [2693997] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:00:50.426 UTC [2693997] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::citext);
2023-07-22 04:00:50.464 UTC [2693997] ERROR:  regexp_match() does not support the "global" option
2023-07-22 04:00:50.464 UTC [2693997] HINT:  Use the regexp_matches function instead.
2023-07-22 04:00:50.464 UTC [2693997] CONTEXT:  SQL function "regexp_match" statement 1
2023-07-22 04:00:50.464 UTC [2693997] STATEMENT:  SELECT regexp_match('foobarbequebazmorebarbequetoo'::citext, '(BAR)(BEQUE)'::citext, 'g') AS "error";
2023-07-22 04:00:50.644 UTC [2693975] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:50.681 UTC [2693975] LOG:  checkpoint complete: wrote 5 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.009 s, total=0.038 s; sync files=5, longest=0.005 s, average=0.002 s; distance=795 kB, estimate=3985 kB
2023-07-22 04:00:50.832 UTC [2694018] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:00:50.832 UTC [2694018] STATEMENT:  select gen_salt('foo');
2023-07-22 04:00:50.832 UTC [2694018] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:00:50.832 UTC [2694018] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:00:50.832 UTC [2694018] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:00:50.832 UTC [2694018] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:00:50.833 UTC [2694018] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:00:50.833 UTC [2694018] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:00:50.872 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.872 UTC [2694038] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:00:50.872 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.872 UTC [2694038] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:00:50.872 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.872 UTC [2694038] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:00:50.872 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.872 UTC [2694038] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Key was too big
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Key was too big
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Key was too big
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Key was too big
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:00:50.873 UTC [2694038] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:00:50.873 UTC [2694038] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:00:50.874 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.874 UTC [2694038] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:00:50.874 UTC [2694038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.874 UTC [2694038] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:00:50.883 UTC [2694044] ERROR:  encrypt error: Encryption failed
2023-07-22 04:00:50.883 UTC [2694044] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:00:50.884 UTC [2694044] ERROR:  decrypt error: Decryption failed
2023-07-22 04:00:50.884 UTC [2694044] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:00:50.884 UTC [2694044] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:00:50.884 UTC [2694044] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:00:50.900 UTC [2694052] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.900 UTC [2694052] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:00:50.900 UTC [2694052] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.900 UTC [2694052] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:00:50.900 UTC [2694052] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.900 UTC [2694052] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:00:50.901 UTC [2694052] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.901 UTC [2694052] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:00:50.901 UTC [2694052] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:00:50.901 UTC [2694052] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:00:50.901 UTC [2694052] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:00:50.901 UTC [2694052] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:00:50.901 UTC [2694052] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.901 UTC [2694052] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:00:50.901 UTC [2694052] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.901 UTC [2694052] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:00:50.918 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.918 UTC [2694062] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:00:50.918 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.918 UTC [2694062] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:00:50.918 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.918 UTC [2694062] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:00:50.918 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.918 UTC [2694062] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:00:50.918 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.918 UTC [2694062] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:00:50.919 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.919 UTC [2694062] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:00:50.919 UTC [2694062] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:00:50.919 UTC [2694062] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:00:50.919 UTC [2694062] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:00:50.919 UTC [2694062] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:00:50.919 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.919 UTC [2694062] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:00:50.919 UTC [2694062] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:00:50.919 UTC [2694062] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:00:50.928 UTC [2694068] ERROR:  invalid salt
2023-07-22 04:00:50.928 UTC [2694068] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:00:51.015 UTC [2694076] ERROR:  invalid salt
2023-07-22 04:00:51.015 UTC [2694076] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:00:51.015 UTC [2694076] ERROR:  invalid salt
2023-07-22 04:00:51.015 UTC [2694076] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:00:51.016 UTC [2694076] ERROR:  invalid salt
2023-07-22 04:00:51.016 UTC [2694076] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:00:51.086 UTC [2694080] ERROR:  invalid salt
2023-07-22 04:00:51.086 UTC [2694080] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:00:51.086 UTC [2694080] ERROR:  crypt(3) returned NULL
2023-07-22 04:00:51.086 UTC [2694080] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:00:51.086 UTC [2694080] ERROR:  crypt(3) returned NULL
2023-07-22 04:00:51.086 UTC [2694080] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:00:51.125 UTC [2694084] ERROR:  Corrupt ascii-armor
2023-07-22 04:00:51.125 UTC [2694084] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:00:51.126 UTC [2694084] ERROR:  Corrupt ascii-armor
2023-07-22 04:00:51.126 UTC [2694084] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:00:51.126 UTC [2694084] ERROR:  Corrupt ascii-armor
2023-07-22 04:00:51.126 UTC [2694084] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:00:51.132 UTC [2694084] ERROR:  mismatched array dimensions
2023-07-22 04:00:51.132 UTC [2694084] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:00:51.132 UTC [2694084] ERROR:  mismatched array dimensions
2023-07-22 04:00:51.132 UTC [2694084] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:00:51.132 UTC [2694084] ERROR:  wrong number of array subscripts
2023-07-22 04:00:51.132 UTC [2694084] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:00:51.132 UTC [2694084] ERROR:  wrong number of array subscripts
2023-07-22 04:00:51.132 UTC [2694084] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:00:51.133 UTC [2694084] ERROR:  null value not allowed for header key
2023-07-22 04:00:51.133 UTC [2694084] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:00:51.133 UTC [2694084] ERROR:  null value not allowed for header value
2023-07-22 04:00:51.133 UTC [2694084] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:00:51.134 UTC [2694084] ERROR:  header key must not contain newlines
2023-07-22 04:00:51.134 UTC [2694084] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:00:51.134 UTC [2694084] ERROR:  header value must not contain newlines
2023-07-22 04:00:51.134 UTC [2694084] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:00:51.134 UTC [2694084] ERROR:  header key must not contain ": "
2023-07-22 04:00:51.134 UTC [2694084] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:00:51.152 UTC [2694088] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.152 UTC [2694088] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:00:51.179 UTC [2694088] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.179 UTC [2694088] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:00:51.181 UTC [2694088] ERROR:  Not text data
2023-07-22 04:00:51.181 UTC [2694088] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:00:51.181 UTC [2694088] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.181 UTC [2694088] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:00:51.182 UTC [2694088] ERROR:  Unsupported compression algorithm
2023-07-22 04:00:51.182 UTC [2694088] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:00:51.205 UTC [2694096] ERROR:  Not text data
2023-07-22 04:00:51.205 UTC [2694096] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:00:51.677 UTC [2694104] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.677 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:00:51.696 UTC [2694104] ERROR:  Wrong key
2023-07-22 04:00:51.696 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:00:51.697 UTC [2694104] ERROR:  No encryption key found
2023-07-22 04:00:51.697 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:00:51.698 UTC [2694104] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.698 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:00:51.704 UTC [2694104] ERROR:  Need password for secret key
2023-07-22 04:00:51.704 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:00:51.704 UTC [2694104] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.704 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:00:51.709 UTC [2694104] ERROR:  Wrong key or corrupt data
2023-07-22 04:00:51.709 UTC [2694104] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:00:51.731 UTC [2694110] ERROR:  No encryption key found
2023-07-22 04:00:51.731 UTC [2694110] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:00:51.731 UTC [2694110] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:00:51.731 UTC [2694110] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:00:51.732 UTC [2694110] ERROR:  Not text data
2023-07-22 04:00:51.732 UTC [2694110] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:00:51.740 UTC [2694114] ERROR:  No encryption key found
2023-07-22 04:00:51.740 UTC [2694114] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:00:51.741 UTC [2694114] ERROR:  No encryption key found
2023-07-22 04:00:51.741 UTC [2694114] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:01:23.411 UTC [2693975] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:23.503 UTC [2693975] LOG:  checkpoint complete: wrote 712 buffers (4.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.028 s, total=0.092 s; sync files=261, longest=0.004 s, average=0.001 s; distance=141336 kB, estimate=141336 kB
2023-07-22 04:01:54.954 UTC [2693975] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:55.047 UTC [2693975] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.007 s, total=0.093 s; sync files=4, longest=0.006 s, average=0.002 s; distance=136642 kB, estimate=140867 kB
2023-07-22 04:01:55.112 UTC [2693974] LOG:  received fast shutdown request
2023-07-22 04:01:55.118 UTC [2693974] LOG:  aborting any active transactions
2023-07-22 04:01:55.119 UTC [2693974] LOG:  background worker "logical replication launcher" (PID 2693980) exited with exit code 1
2023-07-22 04:01:55.119 UTC [2693975] LOG:  shutting down
2023-07-22 04:01:55.124 UTC [2693975] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:01:55.154 UTC [2693975] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.035 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126780 kB
2023-07-22 04:01:55.182 UTC [2693974] LOG:  database system is shut down
2023-07-22 04:01:55.963 UTC [2694280] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:01:55.963 UTC [2694280] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:01:55.978 UTC [2694280] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:01:55.994 UTC [2694283] LOG:  database system was shut down at 2023-07-22 04:01:55 UTC
2023-07-22 04:01:56.010 UTC [2694280] LOG:  database system is ready to accept connections
2023-07-22 04:01:56.312 UTC [2694302] ERROR:  collation "coll" for encoding "UTF8" does not exist
2023-07-22 04:01:56.312 UTC [2694302] STATEMENT:  ALTER TABLE s.x ADD CONSTRAINT underqualified EXCLUDE USING btree
	  ((s.index_this_expr(y, s.const())) COLLATE coll WITH s.=)
	  USING INDEX TABLESPACE regress_create_idx_tblspace
	  WHERE (s.index_row_if(y));
2023-07-22 04:01:56.315 UTC [2694281] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:56.422 UTC [2694281] LOG:  checkpoint complete: wrote 937 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.052 s, sync=0.027 s, total=0.108 s; sync files=266, longest=0.007 s, average=0.001 s; distance=4350 kB, estimate=4350 kB
2023-07-22 04:01:56.503 UTC [2694306] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 04:01:56.503 UTC [2694306] DETAIL:  Key (name)=(a) already exists.
2023-07-22 04:01:56.503 UTC [2694306] STATEMENT:  INSERT INTO try (name) VALUES ('a');
2023-07-22 04:01:56.503 UTC [2694306] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 04:01:56.503 UTC [2694306] DETAIL:  Key (name)=(A) already exists.
2023-07-22 04:01:56.503 UTC [2694306] STATEMENT:  INSERT INTO try (name) VALUES ('A');
2023-07-22 04:01:56.503 UTC [2694306] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 04:01:56.503 UTC [2694306] DETAIL:  Key (name)=(aB) already exists.
2023-07-22 04:01:56.503 UTC [2694306] STATEMENT:  INSERT INTO try (name) VALUES ('aB');
2023-07-22 04:01:56.570 UTC [2694306] ERROR:  column "chr" is of type "char" but expression is of type citext at character 44
2023-07-22 04:01:56.570 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.570 UTC [2694306] STATEMENT:  INSERT INTO caster (chr)           VALUES ('f'::citext);
2023-07-22 04:01:56.584 UTC [2694306] ERROR:  column "bytea" is of type bytea but expression is of type text at character 44
2023-07-22 04:01:56.584 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.584 UTC [2694306] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::text);
2023-07-22 04:01:56.586 UTC [2694306] ERROR:  column "bytea" is of type bytea but expression is of type citext at character 44
2023-07-22 04:01:56.586 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.586 UTC [2694306] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::citext);
2023-07-22 04:01:56.591 UTC [2694306] ERROR:  column "boolean" is of type boolean but expression is of type text at character 44
2023-07-22 04:01:56.591 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.591 UTC [2694306] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::text);
2023-07-22 04:01:56.597 UTC [2694306] ERROR:  column "boolean" is of type boolean but expression is of type citext at character 44
2023-07-22 04:01:56.597 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.597 UTC [2694306] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::citext);
2023-07-22 04:01:56.601 UTC [2694306] ERROR:  column "float8" is of type double precision but expression is of type text at character 44
2023-07-22 04:01:56.601 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.601 UTC [2694306] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::text);
2023-07-22 04:01:56.606 UTC [2694306] ERROR:  column "float8" is of type double precision but expression is of type citext at character 44
2023-07-22 04:01:56.606 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.606 UTC [2694306] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::citext);
2023-07-22 04:01:56.610 UTC [2694306] ERROR:  column "float4" is of type real but expression is of type text at character 44
2023-07-22 04:01:56.610 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.610 UTC [2694306] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::text);
2023-07-22 04:01:56.615 UTC [2694306] ERROR:  column "float4" is of type real but expression is of type citext at character 44
2023-07-22 04:01:56.615 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.615 UTC [2694306] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::citext);
2023-07-22 04:01:56.619 UTC [2694306] ERROR:  column "numeric" is of type numeric but expression is of type text at character 44
2023-07-22 04:01:56.619 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.619 UTC [2694306] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::text);
2023-07-22 04:01:56.623 UTC [2694306] ERROR:  column "numeric" is of type numeric but expression is of type citext at character 44
2023-07-22 04:01:56.623 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.623 UTC [2694306] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::citext);
2023-07-22 04:01:56.628 UTC [2694306] ERROR:  column "int8" is of type bigint but expression is of type text at character 44
2023-07-22 04:01:56.628 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.628 UTC [2694306] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::text);
2023-07-22 04:01:56.632 UTC [2694306] ERROR:  column "int8" is of type bigint but expression is of type citext at character 44
2023-07-22 04:01:56.632 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.632 UTC [2694306] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::citext);
2023-07-22 04:01:56.636 UTC [2694306] ERROR:  column "int4" is of type integer but expression is of type text at character 44
2023-07-22 04:01:56.636 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.636 UTC [2694306] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::text);
2023-07-22 04:01:56.641 UTC [2694306] ERROR:  column "int4" is of type integer but expression is of type citext at character 44
2023-07-22 04:01:56.641 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.641 UTC [2694306] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::citext);
2023-07-22 04:01:56.645 UTC [2694306] ERROR:  column "int2" is of type smallint but expression is of type text at character 44
2023-07-22 04:01:56.645 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.645 UTC [2694306] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::text);
2023-07-22 04:01:56.649 UTC [2694306] ERROR:  column "int2" is of type smallint but expression is of type citext at character 44
2023-07-22 04:01:56.649 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.649 UTC [2694306] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::citext);
2023-07-22 04:01:56.653 UTC [2694306] ERROR:  column "cidr" is of type cidr but expression is of type text at character 44
2023-07-22 04:01:56.653 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.653 UTC [2694306] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::text);
2023-07-22 04:01:56.657 UTC [2694306] ERROR:  column "cidr" is of type cidr but expression is of type citext at character 44
2023-07-22 04:01:56.657 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.657 UTC [2694306] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::citext);
2023-07-22 04:01:56.662 UTC [2694306] ERROR:  column "inet" is of type inet but expression is of type text at character 44
2023-07-22 04:01:56.662 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.662 UTC [2694306] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::text);
2023-07-22 04:01:56.666 UTC [2694306] ERROR:  column "inet" is of type inet but expression is of type citext at character 44
2023-07-22 04:01:56.666 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.666 UTC [2694306] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::citext);
2023-07-22 04:01:56.670 UTC [2694306] ERROR:  column "macaddr" is of type macaddr but expression is of type text at character 44
2023-07-22 04:01:56.670 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.670 UTC [2694306] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::text);
2023-07-22 04:01:56.674 UTC [2694306] ERROR:  column "macaddr" is of type macaddr but expression is of type citext at character 44
2023-07-22 04:01:56.674 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.674 UTC [2694306] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::citext);
2023-07-22 04:01:56.679 UTC [2694306] ERROR:  column "money" is of type money but expression is of type text at character 44
2023-07-22 04:01:56.679 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.679 UTC [2694306] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::text);
2023-07-22 04:01:56.683 UTC [2694306] ERROR:  column "money" is of type money but expression is of type citext at character 44
2023-07-22 04:01:56.683 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.683 UTC [2694306] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::citext);
2023-07-22 04:01:56.687 UTC [2694306] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type text at character 44
2023-07-22 04:01:56.687 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.687 UTC [2694306] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 04:01:56.691 UTC [2694306] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type citext at character 44
2023-07-22 04:01:56.691 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.691 UTC [2694306] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 04:01:56.696 UTC [2694306] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type text at character 44
2023-07-22 04:01:56.696 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.696 UTC [2694306] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 04:01:56.700 UTC [2694306] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type citext at character 44
2023-07-22 04:01:56.700 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.700 UTC [2694306] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 04:01:56.705 UTC [2694306] ERROR:  column "interval" is of type interval but expression is of type text at character 44
2023-07-22 04:01:56.705 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.705 UTC [2694306] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::text);
2023-07-22 04:01:56.709 UTC [2694306] ERROR:  column "interval" is of type interval but expression is of type citext at character 44
2023-07-22 04:01:56.709 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.709 UTC [2694306] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::citext);
2023-07-22 04:01:56.713 UTC [2694306] ERROR:  column "date" is of type date but expression is of type text at character 44
2023-07-22 04:01:56.713 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.713 UTC [2694306] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::text);
2023-07-22 04:01:56.718 UTC [2694306] ERROR:  column "date" is of type date but expression is of type citext at character 44
2023-07-22 04:01:56.718 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.718 UTC [2694306] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::citext);
2023-07-22 04:01:56.722 UTC [2694306] ERROR:  column "time" is of type time without time zone but expression is of type text at character 44
2023-07-22 04:01:56.722 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.722 UTC [2694306] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::text);
2023-07-22 04:01:56.726 UTC [2694306] ERROR:  column "time" is of type time without time zone but expression is of type citext at character 44
2023-07-22 04:01:56.726 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.726 UTC [2694306] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::citext);
2023-07-22 04:01:56.731 UTC [2694306] ERROR:  column "timetz" is of type time with time zone but expression is of type text at character 44
2023-07-22 04:01:56.731 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.731 UTC [2694306] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::text);
2023-07-22 04:01:56.735 UTC [2694306] ERROR:  column "timetz" is of type time with time zone but expression is of type citext at character 44
2023-07-22 04:01:56.735 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.735 UTC [2694306] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::citext);
2023-07-22 04:01:56.740 UTC [2694306] ERROR:  column "point" is of type point but expression is of type text at character 44
2023-07-22 04:01:56.740 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.740 UTC [2694306] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::text);
2023-07-22 04:01:56.743 UTC [2694306] ERROR:  column "point" is of type point but expression is of type citext at character 44
2023-07-22 04:01:56.743 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.743 UTC [2694306] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::citext);
2023-07-22 04:01:56.747 UTC [2694306] ERROR:  column "lseg" is of type lseg but expression is of type text at character 44
2023-07-22 04:01:56.747 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.747 UTC [2694306] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::text);
2023-07-22 04:01:56.752 UTC [2694306] ERROR:  column "lseg" is of type lseg but expression is of type citext at character 44
2023-07-22 04:01:56.752 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.752 UTC [2694306] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::citext);
2023-07-22 04:01:56.756 UTC [2694306] ERROR:  column "box" is of type box but expression is of type text at character 44
2023-07-22 04:01:56.756 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.756 UTC [2694306] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::text);
2023-07-22 04:01:56.759 UTC [2694306] ERROR:  column "box" is of type box but expression is of type citext at character 44
2023-07-22 04:01:56.759 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.759 UTC [2694306] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::citext);
2023-07-22 04:01:56.764 UTC [2694306] ERROR:  column "path" is of type path but expression is of type text at character 44
2023-07-22 04:01:56.764 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.764 UTC [2694306] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::text);
2023-07-22 04:01:56.768 UTC [2694306] ERROR:  column "path" is of type path but expression is of type citext at character 44
2023-07-22 04:01:56.768 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.768 UTC [2694306] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::citext);
2023-07-22 04:01:56.773 UTC [2694306] ERROR:  column "polygon" is of type polygon but expression is of type text at character 44
2023-07-22 04:01:56.773 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.773 UTC [2694306] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::text);
2023-07-22 04:01:56.776 UTC [2694306] ERROR:  column "polygon" is of type polygon but expression is of type citext at character 44
2023-07-22 04:01:56.776 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.776 UTC [2694306] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::citext);
2023-07-22 04:01:56.780 UTC [2694306] ERROR:  column "circle" is of type circle but expression is of type text at character 44
2023-07-22 04:01:56.780 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.780 UTC [2694306] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::text);
2023-07-22 04:01:56.785 UTC [2694306] ERROR:  column "circle" is of type circle but expression is of type citext at character 44
2023-07-22 04:01:56.785 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.785 UTC [2694306] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::citext);
2023-07-22 04:01:56.789 UTC [2694306] ERROR:  column "bit" is of type bit but expression is of type text at character 44
2023-07-22 04:01:56.789 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.789 UTC [2694306] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::text);
2023-07-22 04:01:56.792 UTC [2694306] ERROR:  column "bit" is of type bit but expression is of type citext at character 44
2023-07-22 04:01:56.792 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.792 UTC [2694306] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::citext);
2023-07-22 04:01:56.797 UTC [2694306] ERROR:  column "bitv" is of type bit varying but expression is of type text at character 44
2023-07-22 04:01:56.797 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.797 UTC [2694306] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::text);
2023-07-22 04:01:56.801 UTC [2694306] ERROR:  column "bitv" is of type bit varying but expression is of type citext at character 44
2023-07-22 04:01:56.801 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.801 UTC [2694306] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::citext);
2023-07-22 04:01:56.806 UTC [2694306] ERROR:  column "tsvector" is of type tsvector but expression is of type text at character 44
2023-07-22 04:01:56.806 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.806 UTC [2694306] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::text);
2023-07-22 04:01:56.808 UTC [2694306] ERROR:  column "tsvector" is of type tsvector but expression is of type citext at character 44
2023-07-22 04:01:56.808 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.808 UTC [2694306] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::citext);
2023-07-22 04:01:56.813 UTC [2694306] ERROR:  column "tsquery" is of type tsquery but expression is of type text at character 44
2023-07-22 04:01:56.813 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.813 UTC [2694306] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::text);
2023-07-22 04:01:56.818 UTC [2694306] ERROR:  column "tsquery" is of type tsquery but expression is of type citext at character 44
2023-07-22 04:01:56.818 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.818 UTC [2694306] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::citext);
2023-07-22 04:01:56.822 UTC [2694306] ERROR:  column "uuid" is of type uuid but expression is of type text at character 44
2023-07-22 04:01:56.822 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.822 UTC [2694306] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::text);
2023-07-22 04:01:56.825 UTC [2694306] ERROR:  column "uuid" is of type uuid but expression is of type citext at character 44
2023-07-22 04:01:56.825 UTC [2694306] HINT:  You will need to rewrite or cast the expression.
2023-07-22 04:01:56.825 UTC [2694306] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::citext);
2023-07-22 04:01:56.863 UTC [2694306] ERROR:  regexp_match() does not support the "global" option
2023-07-22 04:01:56.863 UTC [2694306] HINT:  Use the regexp_matches function instead.
2023-07-22 04:01:56.863 UTC [2694306] CONTEXT:  SQL function "regexp_match" statement 1
2023-07-22 04:01:56.863 UTC [2694306] STATEMENT:  SELECT regexp_match('foobarbequebazmorebarbequetoo'::citext, '(BAR)(BEQUE)'::citext, 'g') AS "error";
2023-07-22 04:02:29.606 UTC [2694281] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:02:30.098 UTC [2694281] LOG:  checkpoint complete: wrote 192 buffers (1.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.025 s, sync=0.019 s, total=0.492 s; sync files=91, longest=0.008 s, average=0.001 s; distance=133950 kB, estimate=133950 kB
2023-07-22 04:03:01.955 UTC [2694281] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:02.057 UTC [2694281] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.007 s, total=0.102 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133220 kB, estimate=133877 kB
2023-07-22 04:03:02.124 UTC [2694280] LOG:  received fast shutdown request
2023-07-22 04:03:02.130 UTC [2694280] LOG:  aborting any active transactions
2023-07-22 04:03:02.133 UTC [2694280] LOG:  background worker "logical replication launcher" (PID 2694286) exited with exit code 1
2023-07-22 04:03:02.133 UTC [2694281] LOG:  shutting down
2023-07-22 04:03:02.138 UTC [2694281] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:03:02.166 UTC [2694281] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.033 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=120489 kB
2023-07-22 04:03:02.215 UTC [2694280] LOG:  database system is shut down
2023-07-22 04:03:02.979 UTC [2694444] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:03:02.979 UTC [2694444] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:03:02.992 UTC [2694444] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:03:03.003 UTC [2694447] LOG:  database system was shut down at 2023-07-22 04:03:02 UTC
2023-07-22 04:03:03.011 UTC [2694444] LOG:  database system is ready to accept connections
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at end of input
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT ''::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near "A"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT 'ABC'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near "]"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[]'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near "]"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[()]'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near "]"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[(1)]'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near "]"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[(1),]'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near "2"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[(1),2]'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near ","
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[(1),(2),(3)]'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at end of input
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '1,'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at end of input
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '1,2,'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near ","
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '1,,2'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near ")"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '(1,)'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near ")"
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '(1,2,)'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near ","
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '(1,,2)'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  syntax error at or near ","
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[(1),(2)],'::cube AS cube;
2023-07-22 04:03:03.197 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.197 UTC [2694463] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 04:03:03.197 UTC [2694463] STATEMENT:  SELECT '[(1,2,3),(2,3)]'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '[(1,2),(1,2,3)]'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near ","
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '(1),(2),'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '(1,2,3),(2,3)'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '(1,2),(1,2,3)'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near "a"
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '(1,2,3)ab'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near "a"
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '(1,2,3)a'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near "("
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '(1,2)('::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near "a"
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '1,2ab'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near "e"
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '1 e7'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near "a"
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '1,2a'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.198 UTC [2694463] DETAIL:  syntax error at or near ".2"
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '1..2'::cube AS cube;
2023-07-22 04:03:03.198 UTC [2694463] ERROR:  "-1e-700" is out of range for type double precision at character 8
2023-07-22 04:03:03.198 UTC [2694463] STATEMENT:  SELECT '-1e-700'::cube AS cube;
2023-07-22 04:03:03.199 UTC [2694463] ERROR:  UR and LL arrays must be of same length
2023-07-22 04:03:03.199 UTC [2694463] STATEMENT:  SELECT cube('{0,1,2}'::float[], '{3}'::float[]);
2023-07-22 04:03:03.199 UTC [2694463] ERROR:  Index out of bounds
2023-07-22 04:03:03.199 UTC [2694463] STATEMENT:  SELECT cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[4,0]);
2023-07-22 04:03:03.199 UTC [2694463] ERROR:  Index out of bounds
2023-07-22 04:03:03.199 UTC [2694463] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), ARRAY[4,0]);
2023-07-22 04:03:03.200 UTC [2694463] ERROR:  array is too long
2023-07-22 04:03:03.200 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.200 UTC [2694463] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), array(SELECT 1 as a FROM generate_series(1,101)));
2023-07-22 04:03:03.201 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.201 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.201 UTC [2694463] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 04:03:03.201 UTC [2694463] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:03:03.201 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.201 UTC [2694463] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 04:03:03.201 UTC [2694463] ERROR:  array is too long
2023-07-22 04:03:03.201 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.201 UTC [2694463] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 04:03:03.201 UTC [2694463] ERROR:  can't extend cube
2023-07-22 04:03:03.201 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.201 UTC [2694463] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)),array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 04:03:03.202 UTC [2694463] ERROR:  can't extend cube
2023-07-22 04:03:03.202 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.202 UTC [2694463] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100))), 0);
2023-07-22 04:03:03.202 UTC [2694463] ERROR:  can't extend cube
2023-07-22 04:03:03.202 UTC [2694463] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:03:03.202 UTC [2694463] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100)),array(SELECT 0 as a FROM generate_series(1,100))), 0, 0);
2023-07-22 04:03:03.212 UTC [2694463] ERROR:  cube index 0 is out of bounds
2023-07-22 04:03:03.212 UTC [2694463] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->0;
2023-07-22 04:03:03.212 UTC [2694463] ERROR:  cube index 7 is out of bounds
2023-07-22 04:03:03.212 UTC [2694463] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->7;
2023-07-22 04:03:03.212 UTC [2694463] ERROR:  cube index -1 is out of bounds
2023-07-22 04:03:03.212 UTC [2694463] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-1;
2023-07-22 04:03:03.212 UTC [2694463] ERROR:  cube index -6 is out of bounds
2023-07-22 04:03:03.212 UTC [2694463] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-6;
2023-07-22 04:03:03.213 UTC [2694463] ERROR:  cube index -6 is out of bounds
2023-07-22 04:03:03.213 UTC [2694463] STATEMENT:  SELECT cube(array[10,20,30])->-6;
2023-07-22 04:03:03.213 UTC [2694463] ERROR:  zero cube index is not defined
2023-07-22 04:03:03.213 UTC [2694463] STATEMENT:  SELECT cube(array[40,50,60], array[10,20,30])~>0;
2023-07-22 04:03:03.293 UTC [2694445] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:03.334 UTC [2694445] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.011 s, total=0.042 s; sync files=7, longest=0.005 s, average=0.002 s; distance=4599 kB, estimate=4599 kB
2023-07-22 04:03:03.449 UTC [2694482] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:03:03.449 UTC [2694482] STATEMENT:  select gen_salt('foo');
2023-07-22 04:03:03.449 UTC [2694482] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:03:03.449 UTC [2694482] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:03:03.449 UTC [2694482] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:03:03.449 UTC [2694482] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:03:03.449 UTC [2694482] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:03:03.449 UTC [2694482] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:03:03.488 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.488 UTC [2694502] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:03:03.488 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.488 UTC [2694502] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:03:03.488 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.488 UTC [2694502] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Key was too big
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Key was too big
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Key was too big
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:03:03.489 UTC [2694502] ERROR:  encrypt error: Key was too big
2023-07-22 04:03:03.489 UTC [2694502] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:03:03.490 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.490 UTC [2694502] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:03:03.490 UTC [2694502] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:03:03.490 UTC [2694502] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:03:03.490 UTC [2694502] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:03:03.490 UTC [2694502] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:03:03.490 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.490 UTC [2694502] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:03:03.490 UTC [2694502] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.490 UTC [2694502] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:03:03.499 UTC [2694508] ERROR:  encrypt error: Encryption failed
2023-07-22 04:03:03.499 UTC [2694508] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:03:03.500 UTC [2694508] ERROR:  decrypt error: Decryption failed
2023-07-22 04:03:03.500 UTC [2694508] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:03:03.500 UTC [2694508] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:03:03.500 UTC [2694508] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:03:03.517 UTC [2694516] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.517 UTC [2694516] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:03:03.535 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.535 UTC [2694526] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:03:03.535 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.535 UTC [2694526] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:03:03.536 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.536 UTC [2694526] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:03:03.537 UTC [2694526] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:03:03.537 UTC [2694526] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:03:03.546 UTC [2694532] ERROR:  invalid salt
2023-07-22 04:03:03.546 UTC [2694532] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:03:03.700 UTC [2694540] ERROR:  invalid salt
2023-07-22 04:03:03.700 UTC [2694540] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:03:03.700 UTC [2694540] ERROR:  invalid salt
2023-07-22 04:03:03.700 UTC [2694540] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:03:03.700 UTC [2694540] ERROR:  invalid salt
2023-07-22 04:03:03.700 UTC [2694540] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:03:03.792 UTC [2694544] ERROR:  invalid salt
2023-07-22 04:03:03.792 UTC [2694544] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:03:03.792 UTC [2694544] ERROR:  crypt(3) returned NULL
2023-07-22 04:03:03.792 UTC [2694544] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:03:03.792 UTC [2694544] ERROR:  crypt(3) returned NULL
2023-07-22 04:03:03.792 UTC [2694544] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:03:03.830 UTC [2694548] ERROR:  Corrupt ascii-armor
2023-07-22 04:03:03.830 UTC [2694548] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:03:03.830 UTC [2694548] ERROR:  Corrupt ascii-armor
2023-07-22 04:03:03.830 UTC [2694548] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:03:03.830 UTC [2694548] ERROR:  Corrupt ascii-armor
2023-07-22 04:03:03.830 UTC [2694548] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:03:03.834 UTC [2694548] ERROR:  mismatched array dimensions
2023-07-22 04:03:03.834 UTC [2694548] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:03:03.835 UTC [2694548] ERROR:  mismatched array dimensions
2023-07-22 04:03:03.835 UTC [2694548] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:03:03.835 UTC [2694548] ERROR:  wrong number of array subscripts
2023-07-22 04:03:03.835 UTC [2694548] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:03:03.835 UTC [2694548] ERROR:  wrong number of array subscripts
2023-07-22 04:03:03.835 UTC [2694548] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:03:03.835 UTC [2694548] ERROR:  null value not allowed for header key
2023-07-22 04:03:03.835 UTC [2694548] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:03:03.835 UTC [2694548] ERROR:  null value not allowed for header value
2023-07-22 04:03:03.835 UTC [2694548] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:03:03.836 UTC [2694548] ERROR:  header key must not contain newlines
2023-07-22 04:03:03.836 UTC [2694548] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:03:03.836 UTC [2694548] ERROR:  header value must not contain newlines
2023-07-22 04:03:03.836 UTC [2694548] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:03:03.836 UTC [2694548] ERROR:  header key must not contain ": "
2023-07-22 04:03:03.836 UTC [2694548] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:03:03.848 UTC [2694552] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:03.848 UTC [2694552] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:03:03.870 UTC [2694552] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:03.870 UTC [2694552] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:03:03.872 UTC [2694552] ERROR:  Not text data
2023-07-22 04:03:03.872 UTC [2694552] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:03:03.872 UTC [2694552] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:03.872 UTC [2694552] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:03:03.873 UTC [2694552] ERROR:  Unsupported compression algorithm
2023-07-22 04:03:03.873 UTC [2694552] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:03:03.891 UTC [2694558] ERROR:  Not text data
2023-07-22 04:03:03.891 UTC [2694558] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:03:04.372 UTC [2694566] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:04.372 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:03:04.393 UTC [2694566] ERROR:  Wrong key
2023-07-22 04:03:04.393 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:03:04.393 UTC [2694566] ERROR:  No encryption key found
2023-07-22 04:03:04.393 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:03:04.395 UTC [2694566] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:04.395 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:03:04.401 UTC [2694566] ERROR:  Need password for secret key
2023-07-22 04:03:04.401 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:03:04.402 UTC [2694566] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:04.402 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:03:04.406 UTC [2694566] ERROR:  Wrong key or corrupt data
2023-07-22 04:03:04.406 UTC [2694566] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:03:04.428 UTC [2694572] ERROR:  No encryption key found
2023-07-22 04:03:04.428 UTC [2694572] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:03:04.429 UTC [2694572] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:03:04.429 UTC [2694572] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:03:04.430 UTC [2694572] ERROR:  Not text data
2023-07-22 04:03:04.430 UTC [2694572] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:03:04.437 UTC [2694576] ERROR:  No encryption key found
2023-07-22 04:03:04.437 UTC [2694576] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:03:04.438 UTC [2694576] ERROR:  No encryption key found
2023-07-22 04:03:04.438 UTC [2694576] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:03:36.074 UTC [2694445] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:36.211 UTC [2694445] LOG:  checkpoint complete: wrote 772 buffers (4.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.023 s, sync=0.069 s, total=0.137 s; sync files=260, longest=0.007 s, average=0.001 s; distance=141095 kB, estimate=141095 kB
2023-07-22 04:04:07.662 UTC [2694445] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:07.774 UTC [2694445] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.011 s, total=0.113 s; sync files=4, longest=0.008 s, average=0.003 s; distance=134810 kB, estimate=140466 kB
2023-07-22 04:04:07.841 UTC [2694444] LOG:  received fast shutdown request
2023-07-22 04:04:07.852 UTC [2694444] LOG:  aborting any active transactions
2023-07-22 04:04:07.854 UTC [2694444] LOG:  background worker "logical replication launcher" (PID 2694450) exited with exit code 1
2023-07-22 04:04:07.854 UTC [2694445] LOG:  shutting down
2023-07-22 04:04:07.861 UTC [2694445] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:04:07.901 UTC [2694445] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.048 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126420 kB
2023-07-22 04:04:07.925 UTC [2694444] LOG:  database system is shut down
2023-07-22 04:04:08.680 UTC [2694700] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:04:08.680 UTC [2694700] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:04:08.695 UTC [2694700] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:04:08.712 UTC [2694703] LOG:  database system was shut down at 2023-07-22 04:04:08 UTC
2023-07-22 04:04:08.725 UTC [2694700] LOG:  database system is ready to accept connections
2023-07-22 04:04:08.949 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.949 UTC [2694722] DETAIL:  syntax error at end of input
2023-07-22 04:04:08.949 UTC [2694722] STATEMENT:  SELECT ''::cube AS cube;
2023-07-22 04:04:08.949 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.949 UTC [2694722] DETAIL:  syntax error at or near "A"
2023-07-22 04:04:08.949 UTC [2694722] STATEMENT:  SELECT 'ABC'::cube AS cube;
2023-07-22 04:04:08.949 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.949 UTC [2694722] DETAIL:  syntax error at or near "]"
2023-07-22 04:04:08.949 UTC [2694722] STATEMENT:  SELECT '[]'::cube AS cube;
2023-07-22 04:04:08.950 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.950 UTC [2694722] DETAIL:  syntax error at or near "]"
2023-07-22 04:04:08.950 UTC [2694722] STATEMENT:  SELECT '[()]'::cube AS cube;
2023-07-22 04:04:08.950 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.950 UTC [2694722] DETAIL:  syntax error at or near "]"
2023-07-22 04:04:08.950 UTC [2694722] STATEMENT:  SELECT '[(1)]'::cube AS cube;
2023-07-22 04:04:08.950 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.950 UTC [2694722] DETAIL:  syntax error at or near "]"
2023-07-22 04:04:08.950 UTC [2694722] STATEMENT:  SELECT '[(1),]'::cube AS cube;
2023-07-22 04:04:08.950 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.950 UTC [2694722] DETAIL:  syntax error at or near "2"
2023-07-22 04:04:08.950 UTC [2694722] STATEMENT:  SELECT '[(1),2]'::cube AS cube;
2023-07-22 04:04:08.951 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.951 UTC [2694722] DETAIL:  syntax error at or near ","
2023-07-22 04:04:08.951 UTC [2694722] STATEMENT:  SELECT '[(1),(2),(3)]'::cube AS cube;
2023-07-22 04:04:08.951 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.951 UTC [2694722] DETAIL:  syntax error at end of input
2023-07-22 04:04:08.951 UTC [2694722] STATEMENT:  SELECT '1,'::cube AS cube;
2023-07-22 04:04:08.951 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.951 UTC [2694722] DETAIL:  syntax error at end of input
2023-07-22 04:04:08.951 UTC [2694722] STATEMENT:  SELECT '1,2,'::cube AS cube;
2023-07-22 04:04:08.951 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.951 UTC [2694722] DETAIL:  syntax error at or near ","
2023-07-22 04:04:08.951 UTC [2694722] STATEMENT:  SELECT '1,,2'::cube AS cube;
2023-07-22 04:04:08.952 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.952 UTC [2694722] DETAIL:  syntax error at or near ")"
2023-07-22 04:04:08.952 UTC [2694722] STATEMENT:  SELECT '(1,)'::cube AS cube;
2023-07-22 04:04:08.952 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.952 UTC [2694722] DETAIL:  syntax error at or near ")"
2023-07-22 04:04:08.952 UTC [2694722] STATEMENT:  SELECT '(1,2,)'::cube AS cube;
2023-07-22 04:04:08.952 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.952 UTC [2694722] DETAIL:  syntax error at or near ","
2023-07-22 04:04:08.952 UTC [2694722] STATEMENT:  SELECT '(1,,2)'::cube AS cube;
2023-07-22 04:04:08.952 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.952 UTC [2694722] DETAIL:  syntax error at or near ","
2023-07-22 04:04:08.952 UTC [2694722] STATEMENT:  SELECT '[(1),(2)],'::cube AS cube;
2023-07-22 04:04:08.952 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.952 UTC [2694722] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 04:04:08.952 UTC [2694722] STATEMENT:  SELECT '[(1,2,3),(2,3)]'::cube AS cube;
2023-07-22 04:04:08.953 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.953 UTC [2694722] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 04:04:08.953 UTC [2694722] STATEMENT:  SELECT '[(1,2),(1,2,3)]'::cube AS cube;
2023-07-22 04:04:08.953 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.953 UTC [2694722] DETAIL:  syntax error at or near ","
2023-07-22 04:04:08.953 UTC [2694722] STATEMENT:  SELECT '(1),(2),'::cube AS cube;
2023-07-22 04:04:08.953 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.953 UTC [2694722] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 04:04:08.953 UTC [2694722] STATEMENT:  SELECT '(1,2,3),(2,3)'::cube AS cube;
2023-07-22 04:04:08.953 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.953 UTC [2694722] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 04:04:08.953 UTC [2694722] STATEMENT:  SELECT '(1,2),(1,2,3)'::cube AS cube;
2023-07-22 04:04:08.953 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.953 UTC [2694722] DETAIL:  syntax error at or near "a"
2023-07-22 04:04:08.953 UTC [2694722] STATEMENT:  SELECT '(1,2,3)ab'::cube AS cube;
2023-07-22 04:04:08.954 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.954 UTC [2694722] DETAIL:  syntax error at or near "a"
2023-07-22 04:04:08.954 UTC [2694722] STATEMENT:  SELECT '(1,2,3)a'::cube AS cube;
2023-07-22 04:04:08.954 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.954 UTC [2694722] DETAIL:  syntax error at or near "("
2023-07-22 04:04:08.954 UTC [2694722] STATEMENT:  SELECT '(1,2)('::cube AS cube;
2023-07-22 04:04:08.954 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.954 UTC [2694722] DETAIL:  syntax error at or near "a"
2023-07-22 04:04:08.954 UTC [2694722] STATEMENT:  SELECT '1,2ab'::cube AS cube;
2023-07-22 04:04:08.954 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.954 UTC [2694722] DETAIL:  syntax error at or near "e"
2023-07-22 04:04:08.954 UTC [2694722] STATEMENT:  SELECT '1 e7'::cube AS cube;
2023-07-22 04:04:08.954 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.954 UTC [2694722] DETAIL:  syntax error at or near "a"
2023-07-22 04:04:08.954 UTC [2694722] STATEMENT:  SELECT '1,2a'::cube AS cube;
2023-07-22 04:04:08.954 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.954 UTC [2694722] DETAIL:  syntax error at or near ".2"
2023-07-22 04:04:08.954 UTC [2694722] STATEMENT:  SELECT '1..2'::cube AS cube;
2023-07-22 04:04:08.955 UTC [2694722] ERROR:  "-1e-700" is out of range for type double precision at character 8
2023-07-22 04:04:08.955 UTC [2694722] STATEMENT:  SELECT '-1e-700'::cube AS cube;
2023-07-22 04:04:08.958 UTC [2694722] ERROR:  UR and LL arrays must be of same length
2023-07-22 04:04:08.958 UTC [2694722] STATEMENT:  SELECT cube('{0,1,2}'::float[], '{3}'::float[]);
2023-07-22 04:04:08.960 UTC [2694722] ERROR:  Index out of bounds
2023-07-22 04:04:08.960 UTC [2694722] STATEMENT:  SELECT cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[4,0]);
2023-07-22 04:04:08.961 UTC [2694722] ERROR:  Index out of bounds
2023-07-22 04:04:08.961 UTC [2694722] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), ARRAY[4,0]);
2023-07-22 04:04:08.962 UTC [2694722] ERROR:  array is too long
2023-07-22 04:04:08.962 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.962 UTC [2694722] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), array(SELECT 1 as a FROM generate_series(1,101)));
2023-07-22 04:04:08.968 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.968 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.968 UTC [2694722] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 04:04:08.968 UTC [2694722] ERROR:  invalid input syntax for cube at character 8
2023-07-22 04:04:08.968 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.968 UTC [2694722] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 04:04:08.969 UTC [2694722] ERROR:  array is too long
2023-07-22 04:04:08.969 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.969 UTC [2694722] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 04:04:08.970 UTC [2694722] ERROR:  can't extend cube
2023-07-22 04:04:08.970 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.970 UTC [2694722] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)),array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 04:04:08.972 UTC [2694722] ERROR:  can't extend cube
2023-07-22 04:04:08.972 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.972 UTC [2694722] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100))), 0);
2023-07-22 04:04:08.973 UTC [2694722] ERROR:  can't extend cube
2023-07-22 04:04:08.973 UTC [2694722] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 04:04:08.973 UTC [2694722] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100)),array(SELECT 0 as a FROM generate_series(1,100))), 0, 0);
2023-07-22 04:04:09.036 UTC [2694722] ERROR:  cube index 0 is out of bounds
2023-07-22 04:04:09.036 UTC [2694722] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->0;
2023-07-22 04:04:09.037 UTC [2694722] ERROR:  cube index 7 is out of bounds
2023-07-22 04:04:09.037 UTC [2694722] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->7;
2023-07-22 04:04:09.037 UTC [2694722] ERROR:  cube index -1 is out of bounds
2023-07-22 04:04:09.037 UTC [2694722] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-1;
2023-07-22 04:04:09.037 UTC [2694722] ERROR:  cube index -6 is out of bounds
2023-07-22 04:04:09.037 UTC [2694722] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-6;
2023-07-22 04:04:09.038 UTC [2694722] ERROR:  cube index -6 is out of bounds
2023-07-22 04:04:09.038 UTC [2694722] STATEMENT:  SELECT cube(array[10,20,30])->-6;
2023-07-22 04:04:09.041 UTC [2694722] ERROR:  zero cube index is not defined
2023-07-22 04:04:09.041 UTC [2694722] STATEMENT:  SELECT cube(array[40,50,60], array[10,20,30])~>0;
2023-07-22 04:04:41.824 UTC [2694701] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:42.018 UTC [2694701] LOG:  checkpoint complete: wrote 985 buffers (6.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.052 s, sync=0.042 s, total=0.195 s; sync files=255, longest=0.010 s, average=0.001 s; distance=137467 kB, estimate=137467 kB
2023-07-22 04:05:13.919 UTC [2694701] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:14.186 UTC [2694701] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.011 s, total=0.267 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132813 kB, estimate=137002 kB
2023-07-22 04:05:14.233 UTC [2694700] LOG:  received fast shutdown request
2023-07-22 04:05:14.241 UTC [2694700] LOG:  aborting any active transactions
2023-07-22 04:05:14.244 UTC [2694700] LOG:  background worker "logical replication launcher" (PID 2694706) exited with exit code 1
2023-07-22 04:05:14.245 UTC [2694701] LOG:  shutting down
2023-07-22 04:05:14.252 UTC [2694701] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:05:14.300 UTC [2694701] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.003 s, total=0.055 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123301 kB
2023-07-22 04:05:14.327 UTC [2694700] LOG:  database system is shut down
2023-07-22 04:05:14.956 UTC [2694861] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:05:14.956 UTC [2694861] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:05:14.963 UTC [2694861] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:05:14.974 UTC [2694864] LOG:  database system was shut down at 2023-07-22 04:05:14 UTC
2023-07-22 04:05:14.984 UTC [2694861] LOG:  database system is ready to accept connections
2023-07-22 04:05:15.142 UTC [2694880] ERROR:  invalid attribute number 4
2023-07-22 04:05:15.142 UTC [2694880] STATEMENT:  SELECT dblink_build_sql_insert('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:05:15.144 UTC [2694880] ERROR:  invalid attribute number 4
2023-07-22 04:05:15.144 UTC [2694880] STATEMENT:  SELECT dblink_build_sql_update('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:05:15.145 UTC [2694880] ERROR:  invalid attribute number 4
2023-07-22 04:05:15.145 UTC [2694880] STATEMENT:  SELECT dblink_build_sql_delete('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 04:05:15.174 UTC [2694880] ERROR:  invalid attribute number 4
2023-07-22 04:05:15.174 UTC [2694880] STATEMENT:  SELECT dblink_build_sql_insert('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:05:15.175 UTC [2694880] ERROR:  invalid attribute number 4
2023-07-22 04:05:15.175 UTC [2694880] STATEMENT:  SELECT dblink_build_sql_update('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:05:15.176 UTC [2694880] ERROR:  invalid attribute number 4
2023-07-22 04:05:15.176 UTC [2694880] STATEMENT:  SELECT dblink_build_sql_delete('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 04:05:15.211 UTC [2694880] ERROR:  connection not available
2023-07-22 04:05:15.211 UTC [2694880] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:05:15.225 UTC [2694882] ERROR:  could not establish connection
2023-07-22 04:05:15.225 UTC [2694882] DETAIL:  syntax error in service file "/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/dblink/pg_service.conf", line 7
2023-07-22 04:05:15.225 UTC [2694882] STATEMENT:  
			SELECT pg_backend_pid() FROM dblink(
				'service=test_ldap '||connection_parameters(),
				-- This string concatenation is a hack to shoehorn a
				-- set_pgservicefile call into the SQL statement.
				'SELECT 1' || set_pgservicefile('pg_service.conf')
			) t(c int)
		
2023-07-22 04:05:15.238 UTC [2694883] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 04:05:15.238 UTC [2694883] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 04:05:15.246 UTC [2694883] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 04:05:15.246 UTC [2694883] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 04:05:15.248 UTC [2694883] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 04:05:15.248 UTC [2694883] STATEMENT:  CLOSE rmt_foobar_cursor
2023-07-22 04:05:15.249 UTC [2694883] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:05:15.249 UTC [2694883] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 04:05:15.249 UTC [2694880] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:05:15.249 UTC [2694880] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on unnamed dblink connection
2023-07-22 04:05:15.249 UTC [2694880] STATEMENT:  SELECT *
	FROM dblink_fetch('rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 04:05:15.250 UTC [2694883] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:05:15.250 UTC [2694883] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 04:05:15.251 UTC [2694880] ERROR:  connection not available
2023-07-22 04:05:15.251 UTC [2694880] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:05:15.275 UTC [2694885] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 04:05:15.275 UTC [2694885] STATEMENT:  SELECT * FROM foobar
2023-07-22 04:05:15.280 UTC [2694885] ERROR:  relation "foobar" does not exist at character 8
2023-07-22 04:05:15.280 UTC [2694885] STATEMENT:  UPDATE foobar SET f3[2] = 'b99' WHERE f1 = 11
2023-07-22 04:05:15.284 UTC [2694880] ERROR:  could not establish connection
2023-07-22 04:05:15.284 UTC [2694880] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 04:05:15.284 UTC [2694880] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:05:15.295 UTC [2694886] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 04:05:15.295 UTC [2694886] STATEMENT:  SELECT * FROM foobar
2023-07-22 04:05:15.304 UTC [2694880] ERROR:  duplicate connection name
2023-07-22 04:05:15.304 UTC [2694880] STATEMENT:  SELECT dblink_connect('myconn',connection_parameters());
2023-07-22 04:05:15.316 UTC [2694886] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 04:05:15.316 UTC [2694886] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 04:05:15.326 UTC [2694886] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:05:15.326 UTC [2694886] STATEMENT:  DECLARE xact_test CURSOR FOR SELECT * FROM foo
2023-07-22 04:05:15.326 UTC [2694880] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:05:15.326 UTC [2694880] CONTEXT:  while executing command on dblink connection named "myconn"
2023-07-22 04:05:15.326 UTC [2694880] STATEMENT:  SELECT dblink_exec('myconn','DECLARE xact_test CURSOR FOR SELECT * FROM foo');
2023-07-22 04:05:15.327 UTC [2694886] WARNING:  there is no transaction in progress
WARNING:  there is no transaction in progress
2023-07-22 04:05:15.331 UTC [2694886] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 04:05:15.331 UTC [2694886] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 04:05:15.332 UTC [2694886] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:05:15.332 UTC [2694886] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 04:05:15.332 UTC [2694880] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:05:15.332 UTC [2694880] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on dblink connection named "myconn"
2023-07-22 04:05:15.332 UTC [2694880] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 04:05:15.333 UTC [2694880] ERROR:  could not establish connection
2023-07-22 04:05:15.333 UTC [2694880] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 04:05:15.333 UTC [2694880] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:05:15.353 UTC [2694880] ERROR:  connection "myconn" not available
2023-07-22 04:05:15.353 UTC [2694880] STATEMENT:  SELECT dblink_disconnect('myconn');
2023-07-22 04:05:15.412 UTC [2694880] ERROR:  invalid option "server"
2023-07-22 04:05:15.412 UTC [2694880] HINT:  Valid options in this context are: user, password, sslpassword
2023-07-22 04:05:15.412 UTC [2694880] STATEMENT:  CREATE USER MAPPING FOR public SERVER fdtest
	  OPTIONS (server 'localhost');
2023-07-22 04:05:15.418 UTC [2694880] ERROR:  password is required
2023-07-22 04:05:15.418 UTC [2694880] DETAIL:  Non-superusers must provide a password in the connection string.
2023-07-22 04:05:15.418 UTC [2694880] STATEMENT:  SELECT dblink_connect('myconn', 'fdtest');
2023-07-22 04:05:15.447 UTC [2694896] ERROR:  invalid option "nonexistent"
2023-07-22 04:05:15.447 UTC [2694896] HINT:  There are no valid options in this context.
2023-07-22 04:05:15.447 UTC [2694896] STATEMENT:  ALTER FOREIGN DATA WRAPPER dblink_fdw OPTIONS (nonexistent 'fdw');
2023-07-22 04:05:15.517 UTC [2694896] ERROR:  invalid input syntax for type integer: "not an int"
2023-07-22 04:05:15.517 UTC [2694896] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','error_cursor', 1) AS t(i int);
2023-07-22 04:05:15.551 UTC [2694862] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:15.583 UTC [2694862] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.006 s, total=0.032 s; sync files=14, longest=0.003 s, average=0.001 s; distance=4345 kB, estimate=4345 kB
2023-07-22 04:05:15.711 UTC [2694913] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:05:15.711 UTC [2694913] STATEMENT:  select gen_salt('foo');
2023-07-22 04:05:15.711 UTC [2694913] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:05:15.711 UTC [2694913] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:05:15.711 UTC [2694913] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:05:15.711 UTC [2694913] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:05:15.712 UTC [2694913] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:05:15.712 UTC [2694913] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Key was too big
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:05:15.751 UTC [2694933] ERROR:  encrypt error: Key was too big
2023-07-22 04:05:15.751 UTC [2694933] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Key was too big
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Key was too big
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:05:15.752 UTC [2694933] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.752 UTC [2694933] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:05:15.761 UTC [2694939] ERROR:  encrypt error: Encryption failed
2023-07-22 04:05:15.761 UTC [2694939] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:05:15.762 UTC [2694939] ERROR:  decrypt error: Decryption failed
2023-07-22 04:05:15.762 UTC [2694939] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:05:15.762 UTC [2694939] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:05:15.762 UTC [2694939] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:05:15.778 UTC [2694947] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.778 UTC [2694947] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:05:15.778 UTC [2694947] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.778 UTC [2694947] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:05:15.779 UTC [2694947] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.779 UTC [2694947] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:05:15.779 UTC [2694947] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.779 UTC [2694947] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:05:15.779 UTC [2694947] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:05:15.779 UTC [2694947] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:05:15.779 UTC [2694947] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:05:15.779 UTC [2694947] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:05:15.779 UTC [2694947] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.779 UTC [2694947] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:05:15.779 UTC [2694947] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.779 UTC [2694947] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:05:15.796 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.796 UTC [2694957] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:05:15.796 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.796 UTC [2694957] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:05:15.796 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.796 UTC [2694957] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:05:15.796 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.796 UTC [2694957] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:05:15.797 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.797 UTC [2694957] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:05:15.797 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.797 UTC [2694957] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:05:15.797 UTC [2694957] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:05:15.797 UTC [2694957] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:05:15.797 UTC [2694957] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:05:15.797 UTC [2694957] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:05:15.797 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.797 UTC [2694957] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:05:15.797 UTC [2694957] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:05:15.797 UTC [2694957] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:05:15.806 UTC [2694963] ERROR:  invalid salt
2023-07-22 04:05:15.806 UTC [2694963] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:05:15.894 UTC [2694971] ERROR:  invalid salt
2023-07-22 04:05:15.894 UTC [2694971] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:05:15.895 UTC [2694971] ERROR:  invalid salt
2023-07-22 04:05:15.895 UTC [2694971] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:05:15.895 UTC [2694971] ERROR:  invalid salt
2023-07-22 04:05:15.895 UTC [2694971] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:05:15.941 UTC [2694975] ERROR:  invalid salt
2023-07-22 04:05:15.941 UTC [2694975] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:05:15.941 UTC [2694975] ERROR:  crypt(3) returned NULL
2023-07-22 04:05:15.941 UTC [2694975] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:05:15.941 UTC [2694975] ERROR:  crypt(3) returned NULL
2023-07-22 04:05:15.941 UTC [2694975] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:05:15.958 UTC [2694979] ERROR:  Corrupt ascii-armor
2023-07-22 04:05:15.958 UTC [2694979] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:05:15.958 UTC [2694979] ERROR:  Corrupt ascii-armor
2023-07-22 04:05:15.958 UTC [2694979] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:05:15.958 UTC [2694979] ERROR:  Corrupt ascii-armor
2023-07-22 04:05:15.958 UTC [2694979] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  mismatched array dimensions
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  mismatched array dimensions
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  wrong number of array subscripts
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  wrong number of array subscripts
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  null value not allowed for header key
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  null value not allowed for header value
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  header key must not contain newlines
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  header value must not contain newlines
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:05:15.960 UTC [2694979] ERROR:  header key must not contain ": "
2023-07-22 04:05:15.960 UTC [2694979] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:05:15.967 UTC [2694983] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:15.967 UTC [2694983] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:05:15.978 UTC [2694983] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:15.978 UTC [2694983] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:05:15.979 UTC [2694983] ERROR:  Not text data
2023-07-22 04:05:15.979 UTC [2694983] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:05:15.979 UTC [2694983] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:15.979 UTC [2694983] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:05:15.980 UTC [2694983] ERROR:  Unsupported compression algorithm
2023-07-22 04:05:15.980 UTC [2694983] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:05:15.992 UTC [2694989] ERROR:  Not text data
2023-07-22 04:05:15.992 UTC [2694989] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:05:16.423 UTC [2694997] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:16.423 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:05:16.429 UTC [2694997] ERROR:  Wrong key
2023-07-22 04:05:16.429 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:05:16.429 UTC [2694997] ERROR:  No encryption key found
2023-07-22 04:05:16.429 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:05:16.430 UTC [2694997] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:16.430 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:05:16.433 UTC [2694997] ERROR:  Need password for secret key
2023-07-22 04:05:16.433 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:05:16.433 UTC [2694997] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:16.433 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:05:16.436 UTC [2694997] ERROR:  Wrong key or corrupt data
2023-07-22 04:05:16.436 UTC [2694997] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:05:16.460 UTC [2695003] ERROR:  No encryption key found
2023-07-22 04:05:16.460 UTC [2695003] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:05:16.460 UTC [2695003] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:05:16.460 UTC [2695003] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:05:16.461 UTC [2695003] ERROR:  Not text data
2023-07-22 04:05:16.461 UTC [2695003] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:05:16.470 UTC [2695007] ERROR:  No encryption key found
2023-07-22 04:05:16.470 UTC [2695007] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:05:16.471 UTC [2695007] ERROR:  No encryption key found
2023-07-22 04:05:16.471 UTC [2695007] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:05:48.160 UTC [2694862] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:48.301 UTC [2694862] LOG:  checkpoint complete: wrote 744 buffers (4.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.021 s, sync=0.075 s, total=0.142 s; sync files=261, longest=0.004 s, average=0.001 s; distance=141086 kB, estimate=141086 kB
2023-07-22 04:06:19.682 UTC [2694862] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:06:19.753 UTC [2694862] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.006 s, total=0.071 s; sync files=4, longest=0.005 s, average=0.002 s; distance=135158 kB, estimate=140493 kB
2023-07-22 04:06:19.816 UTC [2694861] LOG:  received fast shutdown request
2023-07-22 04:06:19.822 UTC [2694861] LOG:  aborting any active transactions
2023-07-22 04:06:19.827 UTC [2694861] LOG:  background worker "logical replication launcher" (PID 2694867) exited with exit code 1
2023-07-22 04:06:19.828 UTC [2694862] LOG:  shutting down
2023-07-22 04:06:19.833 UTC [2694862] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:06:19.858 UTC [2694862] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.030 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126444 kB
2023-07-22 04:06:19.908 UTC [2694861] LOG:  database system is shut down
2023-07-22 04:06:20.649 UTC [2695132] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:06:20.649 UTC [2695132] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:06:20.659 UTC [2695132] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:06:20.673 UTC [2695135] LOG:  database system was shut down at 2023-07-22 04:06:20 UTC
2023-07-22 04:06:20.681 UTC [2695132] LOG:  database system is ready to accept connections
2023-07-22 04:06:20.964 UTC [2695154] ERROR:  invalid attribute number 4
2023-07-22 04:06:20.964 UTC [2695154] STATEMENT:  SELECT dblink_build_sql_insert('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:06:20.965 UTC [2695154] ERROR:  invalid attribute number 4
2023-07-22 04:06:20.965 UTC [2695154] STATEMENT:  SELECT dblink_build_sql_update('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:06:20.966 UTC [2695154] ERROR:  invalid attribute number 4
2023-07-22 04:06:20.966 UTC [2695154] STATEMENT:  SELECT dblink_build_sql_delete('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 04:06:21.008 UTC [2695154] ERROR:  invalid attribute number 4
2023-07-22 04:06:21.008 UTC [2695154] STATEMENT:  SELECT dblink_build_sql_insert('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:06:21.010 UTC [2695154] ERROR:  invalid attribute number 4
2023-07-22 04:06:21.010 UTC [2695154] STATEMENT:  SELECT dblink_build_sql_update('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 04:06:21.011 UTC [2695154] ERROR:  invalid attribute number 4
2023-07-22 04:06:21.011 UTC [2695154] STATEMENT:  SELECT dblink_build_sql_delete('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 04:06:21.065 UTC [2695154] ERROR:  connection not available
2023-07-22 04:06:21.065 UTC [2695154] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:06:21.079 UTC [2695156] ERROR:  could not establish connection
2023-07-22 04:06:21.079 UTC [2695156] DETAIL:  syntax error in service file "/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/dblink/pg_service.conf", line 7
2023-07-22 04:06:21.079 UTC [2695156] STATEMENT:  
			SELECT pg_backend_pid() FROM dblink(
				'service=test_ldap '||connection_parameters(),
				-- This string concatenation is a hack to shoehorn a
				-- set_pgservicefile call into the SQL statement.
				'SELECT 1' || set_pgservicefile('pg_service.conf')
			) t(c int)
		
2023-07-22 04:06:21.092 UTC [2695157] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 04:06:21.092 UTC [2695157] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 04:06:21.101 UTC [2695157] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 04:06:21.101 UTC [2695157] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 04:06:21.102 UTC [2695157] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 04:06:21.102 UTC [2695157] STATEMENT:  CLOSE rmt_foobar_cursor
2023-07-22 04:06:21.103 UTC [2695157] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:06:21.103 UTC [2695157] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 04:06:21.103 UTC [2695154] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:06:21.103 UTC [2695154] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on unnamed dblink connection
2023-07-22 04:06:21.103 UTC [2695154] STATEMENT:  SELECT *
	FROM dblink_fetch('rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 04:06:21.104 UTC [2695157] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:06:21.104 UTC [2695157] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 04:06:21.105 UTC [2695154] ERROR:  connection not available
2023-07-22 04:06:21.105 UTC [2695154] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:06:21.134 UTC [2695159] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 04:06:21.134 UTC [2695159] STATEMENT:  SELECT * FROM foobar
2023-07-22 04:06:21.141 UTC [2695159] ERROR:  relation "foobar" does not exist at character 8
2023-07-22 04:06:21.141 UTC [2695159] STATEMENT:  UPDATE foobar SET f3[2] = 'b99' WHERE f1 = 11
2023-07-22 04:06:21.148 UTC [2695154] ERROR:  could not establish connection
2023-07-22 04:06:21.148 UTC [2695154] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 04:06:21.148 UTC [2695154] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:06:21.160 UTC [2695160] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 04:06:21.160 UTC [2695160] STATEMENT:  SELECT * FROM foobar
2023-07-22 04:06:21.168 UTC [2695154] ERROR:  duplicate connection name
2023-07-22 04:06:21.168 UTC [2695154] STATEMENT:  SELECT dblink_connect('myconn',connection_parameters());
2023-07-22 04:06:21.180 UTC [2695160] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 04:06:21.180 UTC [2695160] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 04:06:21.190 UTC [2695160] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:06:21.190 UTC [2695160] STATEMENT:  DECLARE xact_test CURSOR FOR SELECT * FROM foo
2023-07-22 04:06:21.190 UTC [2695154] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:06:21.190 UTC [2695154] CONTEXT:  while executing command on dblink connection named "myconn"
2023-07-22 04:06:21.190 UTC [2695154] STATEMENT:  SELECT dblink_exec('myconn','DECLARE xact_test CURSOR FOR SELECT * FROM foo');
2023-07-22 04:06:21.191 UTC [2695160] WARNING:  there is no transaction in progress
WARNING:  there is no transaction in progress
2023-07-22 04:06:21.196 UTC [2695160] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 04:06:21.196 UTC [2695160] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 04:06:21.197 UTC [2695160] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:06:21.197 UTC [2695160] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 04:06:21.197 UTC [2695154] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 04:06:21.197 UTC [2695154] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on dblink connection named "myconn"
2023-07-22 04:06:21.197 UTC [2695154] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 04:06:21.199 UTC [2695154] ERROR:  could not establish connection
2023-07-22 04:06:21.199 UTC [2695154] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 04:06:21.199 UTC [2695154] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 04:06:21.227 UTC [2695154] ERROR:  connection "myconn" not available
2023-07-22 04:06:21.227 UTC [2695154] STATEMENT:  SELECT dblink_disconnect('myconn');
2023-07-22 04:06:21.291 UTC [2695154] ERROR:  invalid option "server"
2023-07-22 04:06:21.291 UTC [2695154] HINT:  Valid options in this context are: user, password, sslpassword
2023-07-22 04:06:21.291 UTC [2695154] STATEMENT:  CREATE USER MAPPING FOR public SERVER fdtest
	  OPTIONS (server 'localhost');
2023-07-22 04:06:21.304 UTC [2695154] ERROR:  password is required
2023-07-22 04:06:21.304 UTC [2695154] DETAIL:  Non-superusers must provide a password in the connection string.
2023-07-22 04:06:21.304 UTC [2695154] STATEMENT:  SELECT dblink_connect('myconn', 'fdtest');
2023-07-22 04:06:21.339 UTC [2695170] ERROR:  invalid option "nonexistent"
2023-07-22 04:06:21.339 UTC [2695170] HINT:  There are no valid options in this context.
2023-07-22 04:06:21.339 UTC [2695170] STATEMENT:  ALTER FOREIGN DATA WRAPPER dblink_fdw OPTIONS (nonexistent 'fdw');
2023-07-22 04:06:21.426 UTC [2695170] ERROR:  invalid input syntax for type integer: "not an int"
2023-07-22 04:06:21.426 UTC [2695170] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','error_cursor', 1) AS t(i int);
2023-07-22 04:06:54.169 UTC [2695133] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:06:54.340 UTC [2695133] LOG:  checkpoint complete: wrote 951 buffers (5.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.051 s, sync=0.041 s, total=0.172 s; sync files=270, longest=0.007 s, average=0.001 s; distance=137221 kB, estimate=137221 kB
2023-07-22 04:07:26.226 UTC [2695133] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:07:26.328 UTC [2695133] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.013 s, sync=0.009 s, total=0.102 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132871 kB, estimate=136786 kB
2023-07-22 04:07:26.397 UTC [2695132] LOG:  received fast shutdown request
2023-07-22 04:07:26.404 UTC [2695132] LOG:  aborting any active transactions
2023-07-22 04:07:26.406 UTC [2695132] LOG:  background worker "logical replication launcher" (PID 2695138) exited with exit code 1
2023-07-22 04:07:26.406 UTC [2695133] LOG:  shutting down
2023-07-22 04:07:26.411 UTC [2695133] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:07:26.446 UTC [2695133] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.041 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123108 kB
2023-07-22 04:07:26.485 UTC [2695132] LOG:  database system is shut down
2023-07-22 04:07:27.245 UTC [2695305] FATAL:  could not access file "decoderbufs": No such file or directory
2023-07-22 04:07:27.245 UTC [2695305] LOG:  database system is shut down
2023-07-22 04:07:28.061 UTC [2695338] FATAL:  could not access file "decoderbufs": No such file or directory
2023-07-22 04:07:28.062 UTC [2695338] LOG:  database system is shut down
2023-07-22 04:07:28.885 UTC [2695379] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:07:28.885 UTC [2695379] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:07:28.898 UTC [2695379] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:07:28.908 UTC [2695382] LOG:  database system was shut down at 2023-07-22 04:07:28 UTC
2023-07-22 04:07:28.920 UTC [2695379] LOG:  database system is ready to accept connections
2023-07-22 04:07:29.112 UTC [2695398] ERROR:  maxlen value has to be >= 1
2023-07-22 04:07:29.112 UTC [2695398] STATEMENT:  ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = -214783648);
2023-07-22 04:07:29.277 UTC [2695413] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:07:29.277 UTC [2695413] STATEMENT:  select gen_salt('foo');
2023-07-22 04:07:29.278 UTC [2695413] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:07:29.278 UTC [2695413] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:07:29.279 UTC [2695413] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:07:29.279 UTC [2695413] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:07:29.279 UTC [2695413] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:07:29.279 UTC [2695413] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:07:29.382 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.382 UTC [2695433] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:07:29.382 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.382 UTC [2695433] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:07:29.383 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.383 UTC [2695433] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:07:29.383 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.383 UTC [2695433] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:07:29.383 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.383 UTC [2695433] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:07:29.384 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.384 UTC [2695433] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:07:29.384 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.384 UTC [2695433] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:07:29.384 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.384 UTC [2695433] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:07:29.384 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.384 UTC [2695433] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:07:29.385 UTC [2695433] ERROR:  encrypt error: Key was too big
2023-07-22 04:07:29.385 UTC [2695433] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:07:29.385 UTC [2695433] ERROR:  encrypt error: Key was too big
2023-07-22 04:07:29.385 UTC [2695433] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:07:29.385 UTC [2695433] ERROR:  encrypt error: Key was too big
2023-07-22 04:07:29.385 UTC [2695433] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:07:29.385 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.385 UTC [2695433] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:07:29.386 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.386 UTC [2695433] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:07:29.386 UTC [2695433] ERROR:  encrypt error: Key was too big
2023-07-22 04:07:29.386 UTC [2695433] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:07:29.386 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.386 UTC [2695433] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:07:29.387 UTC [2695433] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:07:29.387 UTC [2695433] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:07:29.387 UTC [2695433] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:07:29.387 UTC [2695433] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:07:29.387 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.387 UTC [2695433] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:07:29.388 UTC [2695433] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.388 UTC [2695433] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:07:29.410 UTC [2695439] ERROR:  encrypt error: Encryption failed
2023-07-22 04:07:29.410 UTC [2695439] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:07:29.413 UTC [2695439] ERROR:  decrypt error: Decryption failed
2023-07-22 04:07:29.413 UTC [2695439] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:07:29.413 UTC [2695439] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:07:29.413 UTC [2695439] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:07:29.454 UTC [2695447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.454 UTC [2695447] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:07:29.455 UTC [2695447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.455 UTC [2695447] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:07:29.455 UTC [2695447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.455 UTC [2695447] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:07:29.455 UTC [2695447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.455 UTC [2695447] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:07:29.456 UTC [2695447] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:07:29.456 UTC [2695447] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:07:29.456 UTC [2695447] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:07:29.456 UTC [2695447] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:07:29.457 UTC [2695447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.457 UTC [2695447] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:07:29.457 UTC [2695447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.457 UTC [2695447] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:07:29.498 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.498 UTC [2695457] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:07:29.498 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.498 UTC [2695457] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:07:29.498 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.498 UTC [2695457] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:07:29.499 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.499 UTC [2695457] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:07:29.499 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.499 UTC [2695457] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:07:29.499 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.499 UTC [2695457] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:07:29.500 UTC [2695457] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:07:29.500 UTC [2695457] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:07:29.500 UTC [2695457] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:07:29.500 UTC [2695457] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:07:29.501 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.501 UTC [2695457] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:07:29.501 UTC [2695457] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:07:29.501 UTC [2695457] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:07:29.523 UTC [2695463] ERROR:  invalid salt
2023-07-22 04:07:29.523 UTC [2695463] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:07:29.668 UTC [2695471] ERROR:  invalid salt
2023-07-22 04:07:29.668 UTC [2695471] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:07:29.668 UTC [2695471] ERROR:  invalid salt
2023-07-22 04:07:29.668 UTC [2695471] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:07:29.669 UTC [2695471] ERROR:  invalid salt
2023-07-22 04:07:29.669 UTC [2695471] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:07:29.760 UTC [2695475] ERROR:  invalid salt
2023-07-22 04:07:29.760 UTC [2695475] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:07:29.760 UTC [2695475] ERROR:  crypt(3) returned NULL
2023-07-22 04:07:29.760 UTC [2695475] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:07:29.761 UTC [2695475] ERROR:  crypt(3) returned NULL
2023-07-22 04:07:29.761 UTC [2695475] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:07:29.821 UTC [2695479] ERROR:  Corrupt ascii-armor
2023-07-22 04:07:29.821 UTC [2695479] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:07:29.822 UTC [2695479] ERROR:  Corrupt ascii-armor
2023-07-22 04:07:29.822 UTC [2695479] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:07:29.823 UTC [2695479] ERROR:  Corrupt ascii-armor
2023-07-22 04:07:29.823 UTC [2695479] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:07:29.833 UTC [2695479] ERROR:  mismatched array dimensions
2023-07-22 04:07:29.833 UTC [2695479] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:07:29.833 UTC [2695479] ERROR:  mismatched array dimensions
2023-07-22 04:07:29.833 UTC [2695479] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:07:29.834 UTC [2695479] ERROR:  wrong number of array subscripts
2023-07-22 04:07:29.834 UTC [2695479] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:07:29.834 UTC [2695479] ERROR:  wrong number of array subscripts
2023-07-22 04:07:29.834 UTC [2695479] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:07:29.834 UTC [2695479] ERROR:  null value not allowed for header key
2023-07-22 04:07:29.834 UTC [2695479] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:07:29.835 UTC [2695479] ERROR:  null value not allowed for header value
2023-07-22 04:07:29.835 UTC [2695479] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:07:29.836 UTC [2695479] ERROR:  header key must not contain newlines
2023-07-22 04:07:29.836 UTC [2695479] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:07:29.837 UTC [2695479] ERROR:  header value must not contain newlines
2023-07-22 04:07:29.837 UTC [2695479] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:07:29.837 UTC [2695479] ERROR:  header key must not contain ": "
2023-07-22 04:07:29.837 UTC [2695479] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:07:29.864 UTC [2695483] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:29.864 UTC [2695483] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:07:29.898 UTC [2695483] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:29.898 UTC [2695483] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:07:29.899 UTC [2695483] ERROR:  Not text data
2023-07-22 04:07:29.899 UTC [2695483] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:07:29.900 UTC [2695483] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:29.900 UTC [2695483] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:07:29.901 UTC [2695483] ERROR:  Unsupported compression algorithm
2023-07-22 04:07:29.901 UTC [2695483] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:07:29.915 UTC [2695489] ERROR:  Not text data
2023-07-22 04:07:29.915 UTC [2695489] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:07:30.394 UTC [2695497] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:30.394 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:07:30.400 UTC [2695497] ERROR:  Wrong key
2023-07-22 04:07:30.400 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:07:30.401 UTC [2695497] ERROR:  No encryption key found
2023-07-22 04:07:30.401 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:07:30.401 UTC [2695497] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:30.401 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:07:30.405 UTC [2695497] ERROR:  Need password for secret key
2023-07-22 04:07:30.405 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:07:30.405 UTC [2695497] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:30.405 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:07:30.409 UTC [2695497] ERROR:  Wrong key or corrupt data
2023-07-22 04:07:30.409 UTC [2695497] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:07:30.435 UTC [2695503] ERROR:  No encryption key found
2023-07-22 04:07:30.435 UTC [2695503] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:07:30.435 UTC [2695503] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:07:30.435 UTC [2695503] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:07:30.436 UTC [2695503] ERROR:  Not text data
2023-07-22 04:07:30.436 UTC [2695503] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:07:30.446 UTC [2695507] ERROR:  No encryption key found
2023-07-22 04:07:30.446 UTC [2695507] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:07:30.447 UTC [2695507] ERROR:  No encryption key found
2023-07-22 04:07:30.447 UTC [2695507] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:08:02.121 UTC [2695380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:08:02.279 UTC [2695380] LOG:  checkpoint complete: wrote 1017 buffers (6.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.021 s, sync=0.083 s, total=0.158 s; sync files=506, longest=0.018 s, average=0.001 s; distance=145313 kB, estimate=145313 kB
2023-07-22 04:08:34.022 UTC [2695380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:08:34.118 UTC [2695380] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.009 s, total=0.097 s; sync files=4, longest=0.005 s, average=0.003 s; distance=133253 kB, estimate=144107 kB
2023-07-22 04:08:34.189 UTC [2695379] LOG:  received fast shutdown request
2023-07-22 04:08:34.197 UTC [2695379] LOG:  aborting any active transactions
2023-07-22 04:08:34.199 UTC [2695379] LOG:  background worker "logical replication launcher" (PID 2695385) exited with exit code 1
2023-07-22 04:08:34.200 UTC [2695380] LOG:  shutting down
2023-07-22 04:08:34.207 UTC [2695380] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:08:34.239 UTC [2695380] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.001 s, total=0.039 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129696 kB
2023-07-22 04:08:34.292 UTC [2695379] LOG:  database system is shut down
2023-07-22 04:08:35.174 UTC [2695633] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:08:35.174 UTC [2695633] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:08:35.187 UTC [2695633] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:08:35.202 UTC [2695636] LOG:  database system was shut down at 2023-07-22 04:08:34 UTC
2023-07-22 04:08:35.211 UTC [2695633] LOG:  database system is ready to accept connections
2023-07-22 04:08:35.392 UTC [2695655] ERROR:  maxlen value has to be >= 1
2023-07-22 04:08:35.392 UTC [2695655] STATEMENT:  ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = -214783648);
2023-07-22 04:09:08.087 UTC [2695634] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:09:08.242 UTC [2695634] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.045 s, sync=0.032 s, total=0.156 s; sync files=252, longest=0.007 s, average=0.001 s; distance=137395 kB, estimate=137395 kB
2023-07-22 04:09:40.293 UTC [2695634] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:09:40.435 UTC [2695634] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.009 s, total=0.142 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133169 kB, estimate=136972 kB
2023-07-22 04:09:40.501 UTC [2695633] LOG:  received fast shutdown request
2023-07-22 04:09:40.507 UTC [2695633] LOG:  aborting any active transactions
2023-07-22 04:09:40.509 UTC [2695633] LOG:  background worker "logical replication launcher" (PID 2695639) exited with exit code 1
2023-07-22 04:09:40.509 UTC [2695634] LOG:  shutting down
2023-07-22 04:09:40.517 UTC [2695634] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:09:40.555 UTC [2695634] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.003 s, total=0.047 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123275 kB
2023-07-22 04:09:40.582 UTC [2695633] LOG:  database system is shut down
2023-07-22 04:09:41.357 UTC [2695785] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:09:41.357 UTC [2695785] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:09:41.368 UTC [2695785] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:09:41.385 UTC [2695788] LOG:  database system was shut down at 2023-07-22 04:09:41 UTC
2023-07-22 04:09:41.395 UTC [2695785] LOG:  database system is ready to accept connections
2023-07-22 04:09:41.709 UTC [2695821] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:09:41.709 UTC [2695821] STATEMENT:  select gen_salt('foo');
2023-07-22 04:09:41.709 UTC [2695821] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:09:41.709 UTC [2695821] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:09:41.709 UTC [2695821] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:09:41.709 UTC [2695821] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:09:41.710 UTC [2695821] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:09:41.710 UTC [2695821] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:09:41.750 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.750 UTC [2695841] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:09:41.750 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.750 UTC [2695841] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:09:41.750 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.750 UTC [2695841] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:09:41.750 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.750 UTC [2695841] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Key was too big
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Key was too big
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Key was too big
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Key was too big
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:09:41.751 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.751 UTC [2695841] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:09:41.752 UTC [2695841] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:09:41.752 UTC [2695841] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:09:41.752 UTC [2695841] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:09:41.752 UTC [2695841] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:09:41.752 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.752 UTC [2695841] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:09:41.752 UTC [2695841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.752 UTC [2695841] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:09:41.761 UTC [2695847] ERROR:  encrypt error: Encryption failed
2023-07-22 04:09:41.761 UTC [2695847] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:09:41.762 UTC [2695847] ERROR:  decrypt error: Decryption failed
2023-07-22 04:09:41.762 UTC [2695847] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:09:41.762 UTC [2695847] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:09:41.762 UTC [2695847] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:09:41.778 UTC [2695855] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.778 UTC [2695855] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:09:41.779 UTC [2695855] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.779 UTC [2695855] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:09:41.779 UTC [2695855] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.779 UTC [2695855] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:09:41.779 UTC [2695855] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.779 UTC [2695855] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:09:41.779 UTC [2695855] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:09:41.779 UTC [2695855] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:09:41.779 UTC [2695855] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:09:41.779 UTC [2695855] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:09:41.780 UTC [2695855] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.780 UTC [2695855] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:09:41.780 UTC [2695855] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.780 UTC [2695855] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:09:41.797 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.797 UTC [2695865] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:09:41.798 UTC [2695865] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:09:41.798 UTC [2695865] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:09:41.807 UTC [2695871] ERROR:  invalid salt
2023-07-22 04:09:41.807 UTC [2695871] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:09:41.950 UTC [2695879] ERROR:  invalid salt
2023-07-22 04:09:41.950 UTC [2695879] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:09:41.951 UTC [2695879] ERROR:  invalid salt
2023-07-22 04:09:41.951 UTC [2695879] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:09:41.951 UTC [2695879] ERROR:  invalid salt
2023-07-22 04:09:41.951 UTC [2695879] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:09:42.014 UTC [2695883] ERROR:  invalid salt
2023-07-22 04:09:42.014 UTC [2695883] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:09:42.014 UTC [2695883] ERROR:  crypt(3) returned NULL
2023-07-22 04:09:42.014 UTC [2695883] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:09:42.014 UTC [2695883] ERROR:  crypt(3) returned NULL
2023-07-22 04:09:42.014 UTC [2695883] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:09:42.058 UTC [2695887] ERROR:  Corrupt ascii-armor
2023-07-22 04:09:42.058 UTC [2695887] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:09:42.058 UTC [2695887] ERROR:  Corrupt ascii-armor
2023-07-22 04:09:42.058 UTC [2695887] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:09:42.059 UTC [2695887] ERROR:  Corrupt ascii-armor
2023-07-22 04:09:42.059 UTC [2695887] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:09:42.064 UTC [2695887] ERROR:  mismatched array dimensions
2023-07-22 04:09:42.064 UTC [2695887] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:09:42.064 UTC [2695887] ERROR:  mismatched array dimensions
2023-07-22 04:09:42.064 UTC [2695887] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:09:42.065 UTC [2695887] ERROR:  wrong number of array subscripts
2023-07-22 04:09:42.065 UTC [2695887] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:09:42.065 UTC [2695887] ERROR:  wrong number of array subscripts
2023-07-22 04:09:42.065 UTC [2695887] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:09:42.065 UTC [2695887] ERROR:  null value not allowed for header key
2023-07-22 04:09:42.065 UTC [2695887] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:09:42.065 UTC [2695887] ERROR:  null value not allowed for header value
2023-07-22 04:09:42.065 UTC [2695887] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:09:42.066 UTC [2695887] ERROR:  header key must not contain newlines
2023-07-22 04:09:42.066 UTC [2695887] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:09:42.066 UTC [2695887] ERROR:  header value must not contain newlines
2023-07-22 04:09:42.066 UTC [2695887] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:09:42.066 UTC [2695887] ERROR:  header key must not contain ": "
2023-07-22 04:09:42.066 UTC [2695887] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:09:42.083 UTC [2695891] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.083 UTC [2695891] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:09:42.112 UTC [2695891] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.112 UTC [2695891] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:09:42.115 UTC [2695891] ERROR:  Not text data
2023-07-22 04:09:42.115 UTC [2695891] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:09:42.116 UTC [2695891] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.116 UTC [2695891] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:09:42.117 UTC [2695891] ERROR:  Unsupported compression algorithm
2023-07-22 04:09:42.117 UTC [2695891] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:09:42.137 UTC [2695897] ERROR:  Not text data
2023-07-22 04:09:42.137 UTC [2695897] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:09:42.624 UTC [2695905] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.624 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:09:42.642 UTC [2695905] ERROR:  Wrong key
2023-07-22 04:09:42.642 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:09:42.643 UTC [2695905] ERROR:  No encryption key found
2023-07-22 04:09:42.643 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:09:42.645 UTC [2695905] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.645 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:09:42.652 UTC [2695905] ERROR:  Need password for secret key
2023-07-22 04:09:42.652 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:09:42.653 UTC [2695905] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.653 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:09:42.658 UTC [2695905] ERROR:  Wrong key or corrupt data
2023-07-22 04:09:42.658 UTC [2695905] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:09:42.683 UTC [2695911] ERROR:  No encryption key found
2023-07-22 04:09:42.683 UTC [2695911] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:09:42.683 UTC [2695911] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:09:42.683 UTC [2695911] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:09:42.684 UTC [2695911] ERROR:  Not text data
2023-07-22 04:09:42.684 UTC [2695911] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:09:42.693 UTC [2695915] ERROR:  No encryption key found
2023-07-22 04:09:42.693 UTC [2695915] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:09:42.694 UTC [2695915] ERROR:  No encryption key found
2023-07-22 04:09:42.694 UTC [2695915] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:10:15.268 UTC [2695786] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:10:15.468 UTC [2695786] LOG:  checkpoint complete: wrote 1833 buffers (11.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.068 s, sync=0.054 s, total=0.200 s; sync files=506, longest=0.015 s, average=0.001 s; distance=141556 kB, estimate=141556 kB
2023-07-22 04:10:47.270 UTC [2695786] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:10:47.389 UTC [2695786] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.012 s, total=0.120 s; sync files=4, longest=0.009 s, average=0.003 s; distance=132708 kB, estimate=140671 kB
2023-07-22 04:10:47.457 UTC [2695785] LOG:  received fast shutdown request
2023-07-22 04:10:47.465 UTC [2695785] LOG:  aborting any active transactions
2023-07-22 04:10:47.466 UTC [2695785] LOG:  background worker "logical replication launcher" (PID 2695791) exited with exit code 1
2023-07-22 04:10:47.466 UTC [2695786] LOG:  shutting down
2023-07-22 04:10:47.473 UTC [2695786] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:10:47.511 UTC [2695786] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.002 s, total=0.046 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=126604 kB
2023-07-22 04:10:47.539 UTC [2695785] LOG:  database system is shut down
2023-07-22 04:10:48.332 UTC [2696039] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:10:48.333 UTC [2696039] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:10:48.345 UTC [2696039] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:10:48.361 UTC [2696042] LOG:  database system was shut down at 2023-07-22 04:10:48 UTC
2023-07-22 04:10:48.370 UTC [2696039] LOG:  database system is ready to accept connections
2023-07-22 04:11:21.301 UTC [2696040] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:21.463 UTC [2696040] LOG:  checkpoint complete: wrote 916 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.050 s, sync=0.032 s, total=0.162 s; sync files=252, longest=0.007 s, average=0.001 s; distance=136907 kB, estimate=136907 kB
2023-07-22 04:11:53.426 UTC [2696040] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:53.537 UTC [2696040] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.009 s, total=0.111 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132694 kB, estimate=136486 kB
2023-07-22 04:11:53.584 UTC [2696039] LOG:  received fast shutdown request
2023-07-22 04:11:53.592 UTC [2696039] LOG:  aborting any active transactions
2023-07-22 04:11:53.595 UTC [2696039] LOG:  background worker "logical replication launcher" (PID 2696045) exited with exit code 1
2023-07-22 04:11:53.596 UTC [2696040] LOG:  shutting down
2023-07-22 04:11:53.603 UTC [2696040] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:11:53.641 UTC [2696040] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.003 s, total=0.046 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122837 kB
2023-07-22 04:11:53.668 UTC [2696039] LOG:  database system is shut down
2023-07-22 04:11:54.421 UTC [2696193] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:11:54.421 UTC [2696193] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:11:54.431 UTC [2696193] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:11:54.448 UTC [2696196] LOG:  database system was shut down at 2023-07-22 04:11:54 UTC
2023-07-22 04:11:54.457 UTC [2696193] LOG:  database system is ready to accept connections
2023-07-22 04:11:54.615 UTC [2696212] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:11:54.615 UTC [2696212] STATEMENT:  select gen_salt('foo');
2023-07-22 04:11:54.615 UTC [2696212] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:11:54.615 UTC [2696212] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:11:54.616 UTC [2696212] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:11:54.616 UTC [2696212] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:11:54.616 UTC [2696212] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:11:54.616 UTC [2696212] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:11:54.656 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.656 UTC [2696232] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Key was too big
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Key was too big
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Key was too big
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Key was too big
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:11:54.657 UTC [2696232] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.657 UTC [2696232] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:11:54.667 UTC [2696238] ERROR:  encrypt error: Encryption failed
2023-07-22 04:11:54.667 UTC [2696238] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:11:54.668 UTC [2696238] ERROR:  decrypt error: Decryption failed
2023-07-22 04:11:54.668 UTC [2696238] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:11:54.668 UTC [2696238] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:11:54.668 UTC [2696238] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:11:54.684 UTC [2696246] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.684 UTC [2696246] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:11:54.684 UTC [2696246] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.684 UTC [2696246] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:11:54.685 UTC [2696246] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.685 UTC [2696246] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:11:54.685 UTC [2696246] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.685 UTC [2696246] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:11:54.685 UTC [2696246] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:11:54.685 UTC [2696246] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:11:54.685 UTC [2696246] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:11:54.685 UTC [2696246] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:11:54.685 UTC [2696246] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.685 UTC [2696246] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:11:54.685 UTC [2696246] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.685 UTC [2696246] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:11:54.702 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.702 UTC [2696256] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:11:54.702 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.702 UTC [2696256] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:11:54.702 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.702 UTC [2696256] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:11:54.702 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.702 UTC [2696256] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:11:54.703 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.703 UTC [2696256] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:11:54.703 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.703 UTC [2696256] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:11:54.703 UTC [2696256] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:11:54.703 UTC [2696256] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:11:54.703 UTC [2696256] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:11:54.703 UTC [2696256] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:11:54.703 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.703 UTC [2696256] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:11:54.703 UTC [2696256] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:11:54.703 UTC [2696256] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:11:54.713 UTC [2696262] ERROR:  invalid salt
2023-07-22 04:11:54.713 UTC [2696262] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:11:54.868 UTC [2696270] ERROR:  invalid salt
2023-07-22 04:11:54.868 UTC [2696270] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:11:54.868 UTC [2696270] ERROR:  invalid salt
2023-07-22 04:11:54.868 UTC [2696270] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:11:54.869 UTC [2696270] ERROR:  invalid salt
2023-07-22 04:11:54.869 UTC [2696270] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:11:54.938 UTC [2696274] ERROR:  invalid salt
2023-07-22 04:11:54.938 UTC [2696274] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:11:54.938 UTC [2696274] ERROR:  crypt(3) returned NULL
2023-07-22 04:11:54.938 UTC [2696274] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:11:54.938 UTC [2696274] ERROR:  crypt(3) returned NULL
2023-07-22 04:11:54.938 UTC [2696274] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:11:54.996 UTC [2696278] ERROR:  Corrupt ascii-armor
2023-07-22 04:11:54.996 UTC [2696278] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:11:54.997 UTC [2696278] ERROR:  Corrupt ascii-armor
2023-07-22 04:11:54.997 UTC [2696278] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:11:54.998 UTC [2696278] ERROR:  Corrupt ascii-armor
2023-07-22 04:11:54.998 UTC [2696278] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:11:55.007 UTC [2696278] ERROR:  mismatched array dimensions
2023-07-22 04:11:55.007 UTC [2696278] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:11:55.008 UTC [2696278] ERROR:  mismatched array dimensions
2023-07-22 04:11:55.008 UTC [2696278] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:11:55.008 UTC [2696278] ERROR:  wrong number of array subscripts
2023-07-22 04:11:55.008 UTC [2696278] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:11:55.009 UTC [2696278] ERROR:  wrong number of array subscripts
2023-07-22 04:11:55.009 UTC [2696278] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:11:55.009 UTC [2696278] ERROR:  null value not allowed for header key
2023-07-22 04:11:55.009 UTC [2696278] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:11:55.009 UTC [2696278] ERROR:  null value not allowed for header value
2023-07-22 04:11:55.009 UTC [2696278] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:11:55.011 UTC [2696278] ERROR:  header key must not contain newlines
2023-07-22 04:11:55.011 UTC [2696278] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:11:55.011 UTC [2696278] ERROR:  header value must not contain newlines
2023-07-22 04:11:55.011 UTC [2696278] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:11:55.012 UTC [2696278] ERROR:  header key must not contain ": "
2023-07-22 04:11:55.012 UTC [2696278] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:11:55.035 UTC [2696282] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.035 UTC [2696282] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:11:55.065 UTC [2696282] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.065 UTC [2696282] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:11:55.068 UTC [2696282] ERROR:  Not text data
2023-07-22 04:11:55.068 UTC [2696282] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:11:55.069 UTC [2696282] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.069 UTC [2696282] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:11:55.070 UTC [2696282] ERROR:  Unsupported compression algorithm
2023-07-22 04:11:55.070 UTC [2696282] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:11:55.086 UTC [2696288] ERROR:  Not text data
2023-07-22 04:11:55.086 UTC [2696288] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:11:55.583 UTC [2696296] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.583 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:11:55.604 UTC [2696296] ERROR:  Wrong key
2023-07-22 04:11:55.604 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:11:55.605 UTC [2696296] ERROR:  No encryption key found
2023-07-22 04:11:55.605 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:11:55.607 UTC [2696296] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.607 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:11:55.613 UTC [2696296] ERROR:  Need password for secret key
2023-07-22 04:11:55.613 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:11:55.614 UTC [2696296] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.614 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:11:55.618 UTC [2696296] ERROR:  Wrong key or corrupt data
2023-07-22 04:11:55.618 UTC [2696296] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:11:55.641 UTC [2696302] ERROR:  No encryption key found
2023-07-22 04:11:55.641 UTC [2696302] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:11:55.641 UTC [2696302] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:11:55.641 UTC [2696302] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:11:55.642 UTC [2696302] ERROR:  Not text data
2023-07-22 04:11:55.642 UTC [2696302] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:11:55.650 UTC [2696306] ERROR:  No encryption key found
2023-07-22 04:11:55.650 UTC [2696306] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:11:55.651 UTC [2696306] ERROR:  No encryption key found
2023-07-22 04:11:55.651 UTC [2696306] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:12:27.373 UTC [2696194] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:12:27.499 UTC [2696194] LOG:  checkpoint complete: wrote 599 buffers (3.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.021 s, sync=0.063 s, total=0.127 s; sync files=261, longest=0.007 s, average=0.001 s; distance=141273 kB, estimate=141273 kB
2023-07-22 04:12:59.092 UTC [2696194] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:12:59.187 UTC [2696194] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.008 s, total=0.095 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133767 kB, estimate=140522 kB
2023-07-22 04:12:59.254 UTC [2696193] LOG:  received fast shutdown request
2023-07-22 04:12:59.259 UTC [2696193] LOG:  aborting any active transactions
2023-07-22 04:12:59.260 UTC [2696193] LOG:  background worker "logical replication launcher" (PID 2696199) exited with exit code 1
2023-07-22 04:12:59.261 UTC [2696194] LOG:  shutting down
2023-07-22 04:12:59.265 UTC [2696194] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:12:59.298 UTC [2696194] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.038 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126470 kB
2023-07-22 04:12:59.320 UTC [2696193] LOG:  database system is shut down
2023-07-22 04:13:00.121 UTC [2696472] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:13:00.121 UTC [2696472] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:13:00.135 UTC [2696472] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:13:00.148 UTC [2696475] LOG:  database system was shut down at 2023-07-22 04:12:59 UTC
2023-07-22 04:13:00.160 UTC [2696472] LOG:  database system is ready to accept connections
2023-07-22 04:13:32.718 UTC [2696473] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:13:32.832 UTC [2696473] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.012 s, total=0.115 s; sync files=5, longest=0.006 s, average=0.003 s; distance=132939 kB, estimate=132939 kB
2023-07-22 04:14:04.702 UTC [2696473] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:04.809 UTC [2696473] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.012 s, total=0.107 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132948 kB, estimate=132948 kB
2023-07-22 04:14:04.879 UTC [2696472] LOG:  received fast shutdown request
2023-07-22 04:14:04.885 UTC [2696472] LOG:  aborting any active transactions
2023-07-22 04:14:04.887 UTC [2696472] LOG:  background worker "logical replication launcher" (PID 2696478) exited with exit code 1
2023-07-22 04:14:04.887 UTC [2696473] LOG:  shutting down
2023-07-22 04:14:04.892 UTC [2696473] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:14:04.931 UTC [2696473] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.044 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=119653 kB
2023-07-22 04:14:04.976 UTC [2696472] LOG:  database system is shut down
2023-07-22 04:14:05.713 UTC [2696608] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:14:05.713 UTC [2696608] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:14:05.727 UTC [2696608] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:14:05.743 UTC [2696611] LOG:  database system was shut down at 2023-07-22 04:14:05 UTC
2023-07-22 04:14:05.756 UTC [2696608] LOG:  database system is ready to accept connections
2023-07-22 04:14:05.918 UTC [2696627] ERROR:  required extension "cube" is not installed
2023-07-22 04:14:05.918 UTC [2696627] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 04:14:05.918 UTC [2696627] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 04:14:06.011 UTC [2696627] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 04:14:06.011 UTC [2696627] DETAIL:  extension earthdistance depends on extension cube
2023-07-22 04:14:06.011 UTC [2696627] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:06.011 UTC [2696627] STATEMENT:  drop extension cube;
2023-07-22 04:14:06.014 UTC [2696627] ERROR:  cannot drop type cube because extension cube requires it
2023-07-22 04:14:06.014 UTC [2696627] HINT:  You can drop extension cube instead.
2023-07-22 04:14:06.014 UTC [2696627] STATEMENT:  drop type cube;
2023-07-22 04:14:06.019 UTC [2696627] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 04:14:06.019 UTC [2696627] DETAIL:  column f1 of table foo depends on type cube
2023-07-22 04:14:06.019 UTC [2696627] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:06.019 UTC [2696627] STATEMENT:  drop extension cube;
2023-07-22 04:14:06.108 UTC [2696627] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 04:14:06.108 UTC [2696627] DETAIL:  column f1 of table foo depends on type c.cube
2023-07-22 04:14:06.108 UTC [2696627] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:06.108 UTC [2696627] STATEMENT:  drop extension cube;
2023-07-22 04:14:06.109 UTC [2696627] ERROR:  cannot drop schema c because other objects depend on it
2023-07-22 04:14:06.109 UTC [2696627] DETAIL:  extension cube depends on schema c
	column f1 of table foo depends on type c.cube
2023-07-22 04:14:06.109 UTC [2696627] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:06.109 UTC [2696627] STATEMENT:  drop schema c;
2023-07-22 04:14:06.292 UTC [2696651] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:14:06.292 UTC [2696651] STATEMENT:  select gen_salt('foo');
2023-07-22 04:14:06.293 UTC [2696651] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:14:06.293 UTC [2696651] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:14:06.293 UTC [2696651] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:14:06.293 UTC [2696651] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:14:06.294 UTC [2696651] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:14:06.294 UTC [2696651] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:14:06.406 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.406 UTC [2696671] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:14:06.407 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.407 UTC [2696671] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:14:06.407 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.407 UTC [2696671] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:14:06.407 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.407 UTC [2696671] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:14:06.408 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.408 UTC [2696671] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:14:06.408 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.408 UTC [2696671] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:14:06.408 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.408 UTC [2696671] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:14:06.408 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.408 UTC [2696671] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:14:06.409 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.409 UTC [2696671] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:14:06.409 UTC [2696671] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:06.409 UTC [2696671] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:14:06.409 UTC [2696671] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:06.409 UTC [2696671] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:14:06.409 UTC [2696671] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:06.409 UTC [2696671] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:14:06.410 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.410 UTC [2696671] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:14:06.410 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.410 UTC [2696671] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:14:06.410 UTC [2696671] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:06.410 UTC [2696671] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:14:06.410 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.410 UTC [2696671] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:14:06.411 UTC [2696671] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:06.411 UTC [2696671] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:14:06.411 UTC [2696671] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:06.411 UTC [2696671] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:14:06.411 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.411 UTC [2696671] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:14:06.411 UTC [2696671] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.411 UTC [2696671] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:14:06.433 UTC [2696677] ERROR:  encrypt error: Encryption failed
2023-07-22 04:14:06.433 UTC [2696677] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:14:06.436 UTC [2696677] ERROR:  decrypt error: Decryption failed
2023-07-22 04:14:06.436 UTC [2696677] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:14:06.437 UTC [2696677] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:14:06.437 UTC [2696677] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:14:06.477 UTC [2696685] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.477 UTC [2696685] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:14:06.477 UTC [2696685] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.477 UTC [2696685] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:14:06.477 UTC [2696685] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.477 UTC [2696685] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:14:06.478 UTC [2696685] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.478 UTC [2696685] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:14:06.478 UTC [2696685] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:06.478 UTC [2696685] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:14:06.478 UTC [2696685] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:06.478 UTC [2696685] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:14:06.479 UTC [2696685] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.479 UTC [2696685] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:14:06.479 UTC [2696685] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.479 UTC [2696685] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:14:06.519 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.519 UTC [2696695] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:14:06.520 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.520 UTC [2696695] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:14:06.520 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.520 UTC [2696695] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:14:06.521 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.521 UTC [2696695] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:14:06.521 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.521 UTC [2696695] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:14:06.521 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.521 UTC [2696695] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:14:06.522 UTC [2696695] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:06.522 UTC [2696695] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:14:06.522 UTC [2696695] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:06.522 UTC [2696695] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:14:06.522 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.522 UTC [2696695] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:14:06.522 UTC [2696695] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:06.522 UTC [2696695] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:14:06.544 UTC [2696701] ERROR:  invalid salt
2023-07-22 04:14:06.544 UTC [2696701] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:14:06.680 UTC [2696709] ERROR:  invalid salt
2023-07-22 04:14:06.680 UTC [2696709] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:14:06.680 UTC [2696709] ERROR:  invalid salt
2023-07-22 04:14:06.680 UTC [2696709] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:14:06.680 UTC [2696709] ERROR:  invalid salt
2023-07-22 04:14:06.680 UTC [2696709] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:14:06.768 UTC [2696713] ERROR:  invalid salt
2023-07-22 04:14:06.768 UTC [2696713] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:14:06.768 UTC [2696713] ERROR:  crypt(3) returned NULL
2023-07-22 04:14:06.768 UTC [2696713] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:14:06.768 UTC [2696713] ERROR:  crypt(3) returned NULL
2023-07-22 04:14:06.768 UTC [2696713] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:14:06.805 UTC [2696717] ERROR:  Corrupt ascii-armor
2023-07-22 04:14:06.805 UTC [2696717] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:14:06.805 UTC [2696717] ERROR:  Corrupt ascii-armor
2023-07-22 04:14:06.805 UTC [2696717] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:14:06.805 UTC [2696717] ERROR:  Corrupt ascii-armor
2023-07-22 04:14:06.805 UTC [2696717] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:14:06.807 UTC [2696717] ERROR:  mismatched array dimensions
2023-07-22 04:14:06.807 UTC [2696717] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:14:06.807 UTC [2696717] ERROR:  mismatched array dimensions
2023-07-22 04:14:06.807 UTC [2696717] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:14:06.807 UTC [2696717] ERROR:  wrong number of array subscripts
2023-07-22 04:14:06.807 UTC [2696717] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:14:06.807 UTC [2696717] ERROR:  wrong number of array subscripts
2023-07-22 04:14:06.807 UTC [2696717] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:14:06.807 UTC [2696717] ERROR:  null value not allowed for header key
2023-07-22 04:14:06.807 UTC [2696717] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:14:06.808 UTC [2696717] ERROR:  null value not allowed for header value
2023-07-22 04:14:06.808 UTC [2696717] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:14:06.808 UTC [2696717] ERROR:  header key must not contain newlines
2023-07-22 04:14:06.808 UTC [2696717] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:14:06.808 UTC [2696717] ERROR:  header value must not contain newlines
2023-07-22 04:14:06.808 UTC [2696717] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:14:06.808 UTC [2696717] ERROR:  header key must not contain ": "
2023-07-22 04:14:06.808 UTC [2696717] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:14:06.818 UTC [2696721] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:06.818 UTC [2696721] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:14:06.835 UTC [2696721] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:06.835 UTC [2696721] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:14:06.836 UTC [2696721] ERROR:  Not text data
2023-07-22 04:14:06.836 UTC [2696721] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:14:06.837 UTC [2696721] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:06.837 UTC [2696721] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:14:06.837 UTC [2696721] ERROR:  Unsupported compression algorithm
2023-07-22 04:14:06.837 UTC [2696721] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:14:06.856 UTC [2696727] ERROR:  Not text data
2023-07-22 04:14:06.856 UTC [2696727] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:14:07.365 UTC [2696735] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:07.365 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:14:07.385 UTC [2696735] ERROR:  Wrong key
2023-07-22 04:14:07.385 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:14:07.386 UTC [2696735] ERROR:  No encryption key found
2023-07-22 04:14:07.386 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:14:07.387 UTC [2696735] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:07.387 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:14:07.394 UTC [2696735] ERROR:  Need password for secret key
2023-07-22 04:14:07.394 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:14:07.394 UTC [2696735] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:07.394 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:14:07.399 UTC [2696735] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:07.399 UTC [2696735] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:14:07.422 UTC [2696741] ERROR:  No encryption key found
2023-07-22 04:14:07.422 UTC [2696741] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:14:07.422 UTC [2696741] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:14:07.422 UTC [2696741] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:14:07.423 UTC [2696741] ERROR:  Not text data
2023-07-22 04:14:07.423 UTC [2696741] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:14:07.431 UTC [2696745] ERROR:  No encryption key found
2023-07-22 04:14:07.431 UTC [2696745] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:14:07.432 UTC [2696745] ERROR:  No encryption key found
2023-07-22 04:14:07.432 UTC [2696745] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:14:07.436 UTC [2696608] LOG:  received fast shutdown request
2023-07-22 04:14:07.441 UTC [2696608] LOG:  aborting any active transactions
2023-07-22 04:14:07.442 UTC [2696608] LOG:  background worker "logical replication launcher" (PID 2696614) exited with exit code 1
2023-07-22 04:14:07.442 UTC [2696609] LOG:  shutting down
2023-07-22 04:14:07.449 UTC [2696609] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:14:07.591 UTC [2696609] LOG:  checkpoint complete: wrote 1854 buffers (11.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.063 s, sync=0.054 s, total=0.149 s; sync files=506, longest=0.013 s, average=0.001 s; distance=8913 kB, estimate=8913 kB
2023-07-22 04:14:07.615 UTC [2696608] LOG:  database system is shut down
2023-07-22 04:14:08.374 UTC [2696774] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:14:08.374 UTC [2696774] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:14:08.387 UTC [2696774] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:14:08.398 UTC [2696777] LOG:  database system was shut down at 2023-07-22 04:14:08 UTC
2023-07-22 04:14:08.409 UTC [2696774] LOG:  database system is ready to accept connections
2023-07-22 04:14:08.609 UTC [2696796] ERROR:  required extension "cube" is not installed
2023-07-22 04:14:08.609 UTC [2696796] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 04:14:08.609 UTC [2696796] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 04:14:08.683 UTC [2696796] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 04:14:08.683 UTC [2696796] DETAIL:  extension earthdistance depends on extension cube
2023-07-22 04:14:08.683 UTC [2696796] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:08.683 UTC [2696796] STATEMENT:  drop extension cube;
2023-07-22 04:14:08.684 UTC [2696796] ERROR:  cannot drop type cube because extension cube requires it
2023-07-22 04:14:08.684 UTC [2696796] HINT:  You can drop extension cube instead.
2023-07-22 04:14:08.684 UTC [2696796] STATEMENT:  drop type cube;
2023-07-22 04:14:08.689 UTC [2696796] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 04:14:08.689 UTC [2696796] DETAIL:  column f1 of table foo depends on type cube
2023-07-22 04:14:08.689 UTC [2696796] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:08.689 UTC [2696796] STATEMENT:  drop extension cube;
2023-07-22 04:14:08.771 UTC [2696796] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 04:14:08.771 UTC [2696796] DETAIL:  column f1 of table foo depends on type c.cube
2023-07-22 04:14:08.771 UTC [2696796] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:08.771 UTC [2696796] STATEMENT:  drop extension cube;
2023-07-22 04:14:08.772 UTC [2696796] ERROR:  cannot drop schema c because other objects depend on it
2023-07-22 04:14:08.772 UTC [2696796] DETAIL:  extension cube depends on schema c
	column f1 of table foo depends on type c.cube
2023-07-22 04:14:08.772 UTC [2696796] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:14:08.772 UTC [2696796] STATEMENT:  drop schema c;
2023-07-22 04:14:08.793 UTC [2696774] LOG:  received fast shutdown request
2023-07-22 04:14:08.799 UTC [2696774] LOG:  aborting any active transactions
2023-07-22 04:14:08.800 UTC [2696774] LOG:  background worker "logical replication launcher" (PID 2696780) exited with exit code 1
2023-07-22 04:14:08.800 UTC [2696775] LOG:  shutting down
2023-07-22 04:14:08.805 UTC [2696775] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:14:08.889 UTC [2696775] LOG:  checkpoint complete: wrote 929 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.029 s, sync=0.034 s, total=0.089 s; sync files=252, longest=0.012 s, average=0.001 s; distance=4499 kB, estimate=4499 kB
2023-07-22 04:14:08.910 UTC [2696774] LOG:  database system is shut down
2023-07-22 04:14:09.722 UTC [2696831] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:14:09.723 UTC [2696831] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:14:09.733 UTC [2696831] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:14:09.746 UTC [2696834] LOG:  database system was shut down at 2023-07-22 04:14:09 UTC
2023-07-22 04:14:09.755 UTC [2696831] LOG:  database system is ready to accept connections
2023-07-22 04:14:09.985 UTC [2696850] ERROR:  permission denied to create foreign-data wrapper "file_fdw2"
2023-07-22 04:14:09.985 UTC [2696850] HINT:  Must be superuser to create a foreign-data wrapper.
2023-07-22 04:14:09.985 UTC [2696850] STATEMENT:  CREATE FOREIGN DATA WRAPPER file_fdw2 HANDLER file_fdw_handler VALIDATOR file_fdw_validator;
2023-07-22 04:14:09.985 UTC [2696850] ERROR:  permission denied for foreign-data wrapper file_fdw
2023-07-22 04:14:09.985 UTC [2696850] STATEMENT:  CREATE SERVER file_server2 FOREIGN DATA WRAPPER file_fdw;
2023-07-22 04:14:09.986 UTC [2696850] ERROR:  permission denied for foreign server file_server
2023-07-22 04:14:09.986 UTC [2696850] STATEMENT:  CREATE USER MAPPING FOR regress_file_fdw_user SERVER file_server;
2023-07-22 04:14:09.998 UTC [2696850] ERROR:  COPY format "xml" not recognized
2023-07-22 04:14:09.998 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'xml');
2023-07-22 04:14:09.999 UTC [2696850] ERROR:  COPY quote available only in CSV mode
2023-07-22 04:14:09.999 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', quote ':');
2023-07-22 04:14:10.000 UTC [2696850] ERROR:  COPY escape available only in CSV mode
2023-07-22 04:14:10.000 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape ':');
2023-07-22 04:14:10.002 UTC [2696850] ERROR:  cannot specify HEADER in BINARY mode
2023-07-22 04:14:10.002 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', header 'true');
2023-07-22 04:14:10.003 UTC [2696850] ERROR:  COPY quote available only in CSV mode
2023-07-22 04:14:10.003 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', quote ':');
2023-07-22 04:14:10.004 UTC [2696850] ERROR:  COPY escape available only in CSV mode
2023-07-22 04:14:10.004 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', escape ':');
2023-07-22 04:14:10.004 UTC [2696850] ERROR:  COPY delimiter cannot be "a"
2023-07-22 04:14:10.004 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 04:14:10.005 UTC [2696850] ERROR:  COPY escape available only in CSV mode
2023-07-22 04:14:10.005 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape '-');
2023-07-22 04:14:10.006 UTC [2696850] ERROR:  CSV quote character must not appear in the NULL specification
2023-07-22 04:14:10.006 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '-', null '=-=');
2023-07-22 04:14:10.007 UTC [2696850] ERROR:  COPY delimiter must not appear in the NULL specification
2023-07-22 04:14:10.007 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', null '=-=');
2023-07-22 04:14:10.008 UTC [2696850] ERROR:  COPY delimiter and quote must be different
2023-07-22 04:14:10.008 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', quote '-');
2023-07-22 04:14:10.009 UTC [2696850] ERROR:  COPY delimiter must be a single one-byte character
2023-07-22 04:14:10.009 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '---');
2023-07-22 04:14:10.010 UTC [2696850] ERROR:  COPY quote must be a single one-byte character
2023-07-22 04:14:10.010 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '---');
2023-07-22 04:14:10.011 UTC [2696850] ERROR:  COPY escape must be a single one-byte character
2023-07-22 04:14:10.011 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', escape '---');
2023-07-22 04:14:10.012 UTC [2696850] ERROR:  COPY delimiter cannot be "\"
2023-07-22 04:14:10.012 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '\');
2023-07-22 04:14:10.013 UTC [2696850] ERROR:  COPY delimiter cannot be "."
2023-07-22 04:14:10.013 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '.');
2023-07-22 04:14:10.014 UTC [2696850] ERROR:  COPY delimiter cannot be "1"
2023-07-22 04:14:10.014 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '1');
2023-07-22 04:14:10.016 UTC [2696850] ERROR:  COPY delimiter cannot be "a"
2023-07-22 04:14:10.016 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 04:14:10.017 UTC [2696850] ERROR:  COPY delimiter cannot be newline or carriage return
2023-07-22 04:14:10.017 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '
	');
2023-07-22 04:14:10.017 UTC [2696850] ERROR:  COPY null representation cannot use newline or carriage return
2023-07-22 04:14:10.017 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', null '
	');
2023-07-22 04:14:10.018 UTC [2696850] ERROR:  either filename or program is required for file_fdw foreign tables
2023-07-22 04:14:10.018 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server;
2023-07-22 04:14:10.055 UTC [2696850] ERROR:  column name mismatch in header line field 1: got "1", expected "a"
2023-07-22 04:14:10.055 UTC [2696850] CONTEXT:  COPY header_doesnt_match, line 1: "1,foo"
2023-07-22 04:14:10.055 UTC [2696850] STATEMENT:  SELECT * FROM header_doesnt_match;
2023-07-22 04:14:10.061 UTC [2696850] ERROR:  COPY force not null available only in CSV mode
2023-07-22 04:14:10.061 UTC [2696850] STATEMENT:  SELECT * FROM text_csv;
2023-07-22 04:14:10.067 UTC [2696850] ERROR:  invalid option "force_not_null"
2023-07-22 04:14:10.067 UTC [2696850] HINT:  There are no valid options in this context.
2023-07-22 04:14:10.067 UTC [2696850] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_not_null '*');
2023-07-22 04:14:10.068 UTC [2696850] ERROR:  invalid option "force_not_null"
2023-07-22 04:14:10.068 UTC [2696850] HINT:  There are no valid options in this context.
2023-07-22 04:14:10.068 UTC [2696850] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_not_null '*');
2023-07-22 04:14:10.068 UTC [2696850] ERROR:  invalid option "force_not_null"
2023-07-22 04:14:10.068 UTC [2696850] HINT:  There are no valid options in this context.
2023-07-22 04:14:10.068 UTC [2696850] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 04:14:10.069 UTC [2696850] ERROR:  invalid option "force_not_null"
2023-07-22 04:14:10.069 UTC [2696850] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 04:14:10.069 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 04:14:10.070 UTC [2696850] ERROR:  invalid option "force_null"
2023-07-22 04:14:10.070 UTC [2696850] HINT:  There are no valid options in this context.
2023-07-22 04:14:10.070 UTC [2696850] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_null '*');
2023-07-22 04:14:10.070 UTC [2696850] ERROR:  invalid option "force_null"
2023-07-22 04:14:10.070 UTC [2696850] HINT:  There are no valid options in this context.
2023-07-22 04:14:10.070 UTC [2696850] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_null '*');
2023-07-22 04:14:10.071 UTC [2696850] ERROR:  invalid option "force_null"
2023-07-22 04:14:10.071 UTC [2696850] HINT:  There are no valid options in this context.
2023-07-22 04:14:10.071 UTC [2696850] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_null '*');
2023-07-22 04:14:10.072 UTC [2696850] ERROR:  invalid option "force_null"
2023-07-22 04:14:10.072 UTC [2696850] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 04:14:10.072 UTC [2696850] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_null '*');
2023-07-22 04:14:10.077 UTC [2696850] ERROR:  invalid input syntax for type real: "aaa"
2023-07-22 04:14:10.077 UTC [2696850] CONTEXT:  COPY agg_bad, line 3, column b: "aaa"
2023-07-22 04:14:10.077 UTC [2696850] STATEMENT:  SELECT * FROM agg_bad;
2023-07-22 04:14:10.083 UTC [2696850] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 04:14:10.083 UTC [2696850] STATEMENT:  INSERT INTO agg_csv VALUES(1,2.0);
2023-07-22 04:14:10.083 UTC [2696850] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 04:14:10.083 UTC [2696850] STATEMENT:  UPDATE agg_csv SET a = 1;
2023-07-22 04:14:10.084 UTC [2696850] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 04:14:10.084 UTC [2696850] STATEMENT:  DELETE FROM agg_csv WHERE a = 100;
2023-07-22 04:14:10.085 UTC [2696850] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 04:14:10.085 UTC [2696850] STATEMENT:  COPY agg_csv FROM STDIN;
2023-07-22 04:14:10.100 UTC [2696850] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 04:14:10.100 UTC [2696850] STATEMENT:  UPDATE agg SET a = 1;
2023-07-22 04:14:10.101 UTC [2696850] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 04:14:10.101 UTC [2696850] STATEMENT:  DELETE FROM agg WHERE a = 100;
2023-07-22 04:14:10.133 UTC [2696850] ERROR:  cannot insert into foreign table "p1"
2023-07-22 04:14:10.133 UTC [2696850] CONTEXT:  COPY pt, line 2: "1,qux"
2023-07-22 04:14:10.133 UTC [2696850] STATEMENT:  COPY pt FROM '/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/file_fdw/data/list2.bad' with (format 'csv', delimiter ',');
2023-07-22 04:14:10.139 UTC [2696850] ERROR:  cannot insert into foreign table "p1"
2023-07-22 04:14:10.139 UTC [2696850] STATEMENT:  INSERT INTO pt VALUES (1, 'xyzzy');
2023-07-22 04:14:10.144 UTC [2696850] ERROR:  cannot insert into foreign table "p1"
2023-07-22 04:14:10.144 UTC [2696850] STATEMENT:  UPDATE pt set a = 1 where a = 2;
2023-07-22 04:14:10.166 UTC [2696850] ERROR:  permission denied for foreign table agg_text
2023-07-22 04:14:10.166 UTC [2696850] STATEMENT:  SELECT * FROM agg_text ORDER BY a;
2023-07-22 04:14:10.181 UTC [2696850] ERROR:  only superuser or a role with privileges of the pg_read_server_files role may specify the filename option of a file_fdw foreign table
2023-07-22 04:14:10.181 UTC [2696850] STATEMENT:  ALTER FOREIGN TABLE agg_text OPTIONS (SET format 'text');
2023-07-22 04:14:10.331 UTC [2696865] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:14:10.331 UTC [2696865] STATEMENT:  select gen_salt('foo');
2023-07-22 04:14:10.331 UTC [2696865] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:14:10.331 UTC [2696865] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:14:10.331 UTC [2696865] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:14:10.331 UTC [2696865] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:14:10.331 UTC [2696865] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:14:10.331 UTC [2696865] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:14:10.380 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.380 UTC [2696885] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:14:10.381 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.381 UTC [2696885] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:14:10.381 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.381 UTC [2696885] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:14:10.381 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.381 UTC [2696885] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:14:10.381 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.381 UTC [2696885] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:14:10.381 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.381 UTC [2696885] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:14:10.381 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.381 UTC [2696885] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Key was too big
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:14:10.382 UTC [2696885] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:10.382 UTC [2696885] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:14:10.383 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.383 UTC [2696885] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:14:10.383 UTC [2696885] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.383 UTC [2696885] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:14:10.395 UTC [2696891] ERROR:  encrypt error: Encryption failed
2023-07-22 04:14:10.395 UTC [2696891] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:14:10.396 UTC [2696891] ERROR:  decrypt error: Decryption failed
2023-07-22 04:14:10.396 UTC [2696891] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:14:10.396 UTC [2696891] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:14:10.396 UTC [2696891] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:14:10.418 UTC [2696899] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.418 UTC [2696899] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:14:10.419 UTC [2696899] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.419 UTC [2696899] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:14:10.419 UTC [2696899] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.419 UTC [2696899] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:14:10.419 UTC [2696899] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.419 UTC [2696899] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:14:10.419 UTC [2696899] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:10.419 UTC [2696899] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:14:10.420 UTC [2696899] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:10.420 UTC [2696899] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:14:10.420 UTC [2696899] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.420 UTC [2696899] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:14:10.420 UTC [2696899] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.420 UTC [2696899] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:14:10.442 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.442 UTC [2696909] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:14:10.442 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.442 UTC [2696909] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:14:10.442 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.442 UTC [2696909] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:14:10.443 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.443 UTC [2696909] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:14:10.443 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.443 UTC [2696909] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:14:10.443 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.443 UTC [2696909] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:14:10.443 UTC [2696909] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:10.443 UTC [2696909] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:14:10.443 UTC [2696909] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:14:10.443 UTC [2696909] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:14:10.444 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.444 UTC [2696909] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:14:10.444 UTC [2696909] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:14:10.444 UTC [2696909] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:14:10.456 UTC [2696915] ERROR:  invalid salt
2023-07-22 04:14:10.456 UTC [2696915] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:14:10.585 UTC [2696923] ERROR:  invalid salt
2023-07-22 04:14:10.585 UTC [2696923] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:14:10.585 UTC [2696923] ERROR:  invalid salt
2023-07-22 04:14:10.585 UTC [2696923] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:14:10.586 UTC [2696923] ERROR:  invalid salt
2023-07-22 04:14:10.586 UTC [2696923] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:14:10.653 UTC [2696927] ERROR:  invalid salt
2023-07-22 04:14:10.653 UTC [2696927] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:14:10.653 UTC [2696927] ERROR:  crypt(3) returned NULL
2023-07-22 04:14:10.653 UTC [2696927] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:14:10.653 UTC [2696927] ERROR:  crypt(3) returned NULL
2023-07-22 04:14:10.653 UTC [2696927] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:14:10.712 UTC [2696931] ERROR:  Corrupt ascii-armor
2023-07-22 04:14:10.712 UTC [2696931] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:14:10.713 UTC [2696931] ERROR:  Corrupt ascii-armor
2023-07-22 04:14:10.713 UTC [2696931] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:14:10.714 UTC [2696931] ERROR:  Corrupt ascii-armor
2023-07-22 04:14:10.714 UTC [2696931] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:14:10.723 UTC [2696931] ERROR:  mismatched array dimensions
2023-07-22 04:14:10.723 UTC [2696931] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:14:10.724 UTC [2696931] ERROR:  mismatched array dimensions
2023-07-22 04:14:10.724 UTC [2696931] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:14:10.724 UTC [2696931] ERROR:  wrong number of array subscripts
2023-07-22 04:14:10.724 UTC [2696931] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:14:10.725 UTC [2696931] ERROR:  wrong number of array subscripts
2023-07-22 04:14:10.725 UTC [2696931] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:14:10.725 UTC [2696931] ERROR:  null value not allowed for header key
2023-07-22 04:14:10.725 UTC [2696931] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:14:10.725 UTC [2696931] ERROR:  null value not allowed for header value
2023-07-22 04:14:10.725 UTC [2696931] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:14:10.727 UTC [2696931] ERROR:  header key must not contain newlines
2023-07-22 04:14:10.727 UTC [2696931] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:14:10.727 UTC [2696931] ERROR:  header value must not contain newlines
2023-07-22 04:14:10.727 UTC [2696931] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:14:10.728 UTC [2696931] ERROR:  header key must not contain ": "
2023-07-22 04:14:10.728 UTC [2696931] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:14:10.755 UTC [2696935] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:10.755 UTC [2696935] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:14:10.801 UTC [2696935] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:10.801 UTC [2696935] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:14:10.803 UTC [2696935] ERROR:  Not text data
2023-07-22 04:14:10.803 UTC [2696935] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:14:10.804 UTC [2696935] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:10.804 UTC [2696935] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:14:10.805 UTC [2696935] ERROR:  Unsupported compression algorithm
2023-07-22 04:14:10.805 UTC [2696935] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:14:10.821 UTC [2696941] ERROR:  Not text data
2023-07-22 04:14:10.821 UTC [2696941] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:14:11.298 UTC [2696949] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:11.298 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:14:11.318 UTC [2696949] ERROR:  Wrong key
2023-07-22 04:14:11.318 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:14:11.319 UTC [2696949] ERROR:  No encryption key found
2023-07-22 04:14:11.319 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:14:11.321 UTC [2696949] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:11.321 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:14:11.327 UTC [2696949] ERROR:  Need password for secret key
2023-07-22 04:14:11.327 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:14:11.328 UTC [2696949] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:11.328 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:14:11.332 UTC [2696949] ERROR:  Wrong key or corrupt data
2023-07-22 04:14:11.332 UTC [2696949] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:14:11.355 UTC [2696955] ERROR:  No encryption key found
2023-07-22 04:14:11.355 UTC [2696955] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:14:11.355 UTC [2696955] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:14:11.355 UTC [2696955] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:14:11.356 UTC [2696955] ERROR:  Not text data
2023-07-22 04:14:11.356 UTC [2696955] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:14:11.364 UTC [2696959] ERROR:  No encryption key found
2023-07-22 04:14:11.364 UTC [2696959] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:14:11.365 UTC [2696959] ERROR:  No encryption key found
2023-07-22 04:14:11.365 UTC [2696959] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:14:43.909 UTC [2696832] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:44.090 UTC [2696832] LOG:  checkpoint complete: wrote 1872 buffers (11.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.051 s, sync=0.062 s, total=0.182 s; sync files=522, longest=0.019 s, average=0.001 s; distance=142081 kB, estimate=142081 kB
2023-07-22 04:15:15.823 UTC [2696832] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:15.916 UTC [2696832] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.011 s, sync=0.008 s, total=0.093 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133557 kB, estimate=141228 kB
2023-07-22 04:15:15.983 UTC [2696831] LOG:  received fast shutdown request
2023-07-22 04:15:15.989 UTC [2696831] LOG:  aborting any active transactions
2023-07-22 04:15:15.990 UTC [2696831] LOG:  background worker "logical replication launcher" (PID 2696837) exited with exit code 1
2023-07-22 04:15:15.990 UTC [2696832] LOG:  shutting down
2023-07-22 04:15:15.995 UTC [2696832] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:15:16.024 UTC [2696832] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.035 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=127105 kB
2023-07-22 04:15:16.046 UTC [2696831] LOG:  database system is shut down
2023-07-22 04:15:16.848 UTC [2697089] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:15:16.849 UTC [2697089] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:15:16.860 UTC [2697089] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:15:16.874 UTC [2697092] LOG:  database system was shut down at 2023-07-22 04:15:16 UTC
2023-07-22 04:15:16.883 UTC [2697089] LOG:  database system is ready to accept connections
2023-07-22 04:15:17.133 UTC [2697111] ERROR:  permission denied to create foreign-data wrapper "file_fdw2"
2023-07-22 04:15:17.133 UTC [2697111] HINT:  Must be superuser to create a foreign-data wrapper.
2023-07-22 04:15:17.133 UTC [2697111] STATEMENT:  CREATE FOREIGN DATA WRAPPER file_fdw2 HANDLER file_fdw_handler VALIDATOR file_fdw_validator;
2023-07-22 04:15:17.133 UTC [2697111] ERROR:  permission denied for foreign-data wrapper file_fdw
2023-07-22 04:15:17.133 UTC [2697111] STATEMENT:  CREATE SERVER file_server2 FOREIGN DATA WRAPPER file_fdw;
2023-07-22 04:15:17.134 UTC [2697111] ERROR:  permission denied for foreign server file_server
2023-07-22 04:15:17.134 UTC [2697111] STATEMENT:  CREATE USER MAPPING FOR regress_file_fdw_user SERVER file_server;
2023-07-22 04:15:17.143 UTC [2697111] ERROR:  COPY format "xml" not recognized
2023-07-22 04:15:17.143 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'xml');
2023-07-22 04:15:17.144 UTC [2697111] ERROR:  COPY quote available only in CSV mode
2023-07-22 04:15:17.144 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', quote ':');
2023-07-22 04:15:17.145 UTC [2697111] ERROR:  COPY escape available only in CSV mode
2023-07-22 04:15:17.145 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape ':');
2023-07-22 04:15:17.146 UTC [2697111] ERROR:  cannot specify HEADER in BINARY mode
2023-07-22 04:15:17.146 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', header 'true');
2023-07-22 04:15:17.147 UTC [2697111] ERROR:  COPY quote available only in CSV mode
2023-07-22 04:15:17.147 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', quote ':');
2023-07-22 04:15:17.148 UTC [2697111] ERROR:  COPY escape available only in CSV mode
2023-07-22 04:15:17.148 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', escape ':');
2023-07-22 04:15:17.149 UTC [2697111] ERROR:  COPY delimiter cannot be "a"
2023-07-22 04:15:17.149 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 04:15:17.150 UTC [2697111] ERROR:  COPY escape available only in CSV mode
2023-07-22 04:15:17.150 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape '-');
2023-07-22 04:15:17.150 UTC [2697111] ERROR:  CSV quote character must not appear in the NULL specification
2023-07-22 04:15:17.150 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '-', null '=-=');
2023-07-22 04:15:17.151 UTC [2697111] ERROR:  COPY delimiter must not appear in the NULL specification
2023-07-22 04:15:17.151 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', null '=-=');
2023-07-22 04:15:17.152 UTC [2697111] ERROR:  COPY delimiter and quote must be different
2023-07-22 04:15:17.152 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', quote '-');
2023-07-22 04:15:17.153 UTC [2697111] ERROR:  COPY delimiter must be a single one-byte character
2023-07-22 04:15:17.153 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '---');
2023-07-22 04:15:17.154 UTC [2697111] ERROR:  COPY quote must be a single one-byte character
2023-07-22 04:15:17.154 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '---');
2023-07-22 04:15:17.155 UTC [2697111] ERROR:  COPY escape must be a single one-byte character
2023-07-22 04:15:17.155 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', escape '---');
2023-07-22 04:15:17.156 UTC [2697111] ERROR:  COPY delimiter cannot be "\"
2023-07-22 04:15:17.156 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '\');
2023-07-22 04:15:17.157 UTC [2697111] ERROR:  COPY delimiter cannot be "."
2023-07-22 04:15:17.157 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '.');
2023-07-22 04:15:17.157 UTC [2697111] ERROR:  COPY delimiter cannot be "1"
2023-07-22 04:15:17.157 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '1');
2023-07-22 04:15:17.158 UTC [2697111] ERROR:  COPY delimiter cannot be "a"
2023-07-22 04:15:17.158 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 04:15:17.159 UTC [2697111] ERROR:  COPY delimiter cannot be newline or carriage return
2023-07-22 04:15:17.159 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '
	');
2023-07-22 04:15:17.160 UTC [2697111] ERROR:  COPY null representation cannot use newline or carriage return
2023-07-22 04:15:17.160 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', null '
	');
2023-07-22 04:15:17.161 UTC [2697111] ERROR:  either filename or program is required for file_fdw foreign tables
2023-07-22 04:15:17.161 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server;
2023-07-22 04:15:17.197 UTC [2697111] ERROR:  column name mismatch in header line field 1: got "1", expected "a"
2023-07-22 04:15:17.197 UTC [2697111] CONTEXT:  COPY header_doesnt_match, line 1: "1,foo"
2023-07-22 04:15:17.197 UTC [2697111] STATEMENT:  SELECT * FROM header_doesnt_match;
2023-07-22 04:15:17.202 UTC [2697111] ERROR:  COPY force not null available only in CSV mode
2023-07-22 04:15:17.202 UTC [2697111] STATEMENT:  SELECT * FROM text_csv;
2023-07-22 04:15:17.215 UTC [2697111] ERROR:  invalid option "force_not_null"
2023-07-22 04:15:17.215 UTC [2697111] HINT:  There are no valid options in this context.
2023-07-22 04:15:17.215 UTC [2697111] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_not_null '*');
2023-07-22 04:15:17.215 UTC [2697111] ERROR:  invalid option "force_not_null"
2023-07-22 04:15:17.215 UTC [2697111] HINT:  There are no valid options in this context.
2023-07-22 04:15:17.215 UTC [2697111] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_not_null '*');
2023-07-22 04:15:17.216 UTC [2697111] ERROR:  invalid option "force_not_null"
2023-07-22 04:15:17.216 UTC [2697111] HINT:  There are no valid options in this context.
2023-07-22 04:15:17.216 UTC [2697111] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 04:15:17.217 UTC [2697111] ERROR:  invalid option "force_not_null"
2023-07-22 04:15:17.217 UTC [2697111] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 04:15:17.217 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 04:15:17.217 UTC [2697111] ERROR:  invalid option "force_null"
2023-07-22 04:15:17.217 UTC [2697111] HINT:  There are no valid options in this context.
2023-07-22 04:15:17.217 UTC [2697111] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_null '*');
2023-07-22 04:15:17.217 UTC [2697111] ERROR:  invalid option "force_null"
2023-07-22 04:15:17.217 UTC [2697111] HINT:  There are no valid options in this context.
2023-07-22 04:15:17.217 UTC [2697111] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_null '*');
2023-07-22 04:15:17.218 UTC [2697111] ERROR:  invalid option "force_null"
2023-07-22 04:15:17.218 UTC [2697111] HINT:  There are no valid options in this context.
2023-07-22 04:15:17.218 UTC [2697111] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_null '*');
2023-07-22 04:15:17.219 UTC [2697111] ERROR:  invalid option "force_null"
2023-07-22 04:15:17.219 UTC [2697111] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 04:15:17.219 UTC [2697111] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_null '*');
2023-07-22 04:15:17.224 UTC [2697111] ERROR:  invalid input syntax for type real: "aaa"
2023-07-22 04:15:17.224 UTC [2697111] CONTEXT:  COPY agg_bad, line 3, column b: "aaa"
2023-07-22 04:15:17.224 UTC [2697111] STATEMENT:  SELECT * FROM agg_bad;
2023-07-22 04:15:17.229 UTC [2697111] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 04:15:17.229 UTC [2697111] STATEMENT:  INSERT INTO agg_csv VALUES(1,2.0);
2023-07-22 04:15:17.230 UTC [2697111] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 04:15:17.230 UTC [2697111] STATEMENT:  UPDATE agg_csv SET a = 1;
2023-07-22 04:15:17.231 UTC [2697111] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 04:15:17.231 UTC [2697111] STATEMENT:  DELETE FROM agg_csv WHERE a = 100;
2023-07-22 04:15:17.232 UTC [2697111] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 04:15:17.232 UTC [2697111] STATEMENT:  COPY agg_csv FROM STDIN;
2023-07-22 04:15:17.248 UTC [2697111] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 04:15:17.248 UTC [2697111] STATEMENT:  UPDATE agg SET a = 1;
2023-07-22 04:15:17.249 UTC [2697111] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 04:15:17.249 UTC [2697111] STATEMENT:  DELETE FROM agg WHERE a = 100;
2023-07-22 04:15:17.283 UTC [2697111] ERROR:  cannot insert into foreign table "p1"
2023-07-22 04:15:17.283 UTC [2697111] CONTEXT:  COPY pt, line 2: "1,qux"
2023-07-22 04:15:17.283 UTC [2697111] STATEMENT:  COPY pt FROM '/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/file_fdw/data/list2.bad' with (format 'csv', delimiter ',');
2023-07-22 04:15:17.287 UTC [2697111] ERROR:  cannot insert into foreign table "p1"
2023-07-22 04:15:17.287 UTC [2697111] STATEMENT:  INSERT INTO pt VALUES (1, 'xyzzy');
2023-07-22 04:15:17.289 UTC [2697111] ERROR:  cannot insert into foreign table "p1"
2023-07-22 04:15:17.289 UTC [2697111] STATEMENT:  UPDATE pt set a = 1 where a = 2;
2023-07-22 04:15:17.309 UTC [2697111] ERROR:  permission denied for foreign table agg_text
2023-07-22 04:15:17.309 UTC [2697111] STATEMENT:  SELECT * FROM agg_text ORDER BY a;
2023-07-22 04:15:17.317 UTC [2697111] ERROR:  only superuser or a role with privileges of the pg_read_server_files role may specify the filename option of a file_fdw foreign table
2023-07-22 04:15:17.317 UTC [2697111] STATEMENT:  ALTER FOREIGN TABLE agg_text OPTIONS (SET format 'text');
2023-07-22 04:15:49.854 UTC [2697090] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:49.992 UTC [2697090] LOG:  checkpoint complete: wrote 953 buffers (5.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.036 s, sync=0.031 s, total=0.139 s; sync files=267, longest=0.008 s, average=0.001 s; distance=137585 kB, estimate=137585 kB
2023-07-22 04:16:21.785 UTC [2697090] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:16:21.877 UTC [2697090] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.008 s, total=0.092 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133415 kB, estimate=137168 kB
2023-07-22 04:16:21.922 UTC [2697089] LOG:  received fast shutdown request
2023-07-22 04:16:21.928 UTC [2697089] LOG:  aborting any active transactions
2023-07-22 04:16:21.929 UTC [2697089] LOG:  background worker "logical replication launcher" (PID 2697095) exited with exit code 1
2023-07-22 04:16:21.929 UTC [2697090] LOG:  shutting down
2023-07-22 04:16:21.934 UTC [2697090] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:16:21.962 UTC [2697090] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.034 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123451 kB
2023-07-22 04:16:21.984 UTC [2697089] LOG:  database system is shut down
2023-07-22 04:16:22.781 UTC [2697243] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:16:22.781 UTC [2697243] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:16:22.790 UTC [2697243] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:16:22.803 UTC [2697246] LOG:  database system was shut down at 2023-07-22 04:16:22 UTC
2023-07-22 04:16:22.810 UTC [2697243] LOG:  database system is ready to accept connections
2023-07-22 04:16:23.057 UTC [2697277] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:16:23.057 UTC [2697277] STATEMENT:  select gen_salt('foo');
2023-07-22 04:16:23.057 UTC [2697277] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:16:23.057 UTC [2697277] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:16:23.058 UTC [2697277] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:16:23.058 UTC [2697277] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:16:23.058 UTC [2697277] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:16:23.058 UTC [2697277] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:16:23.108 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.108 UTC [2697297] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:16:23.108 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.108 UTC [2697297] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:16:23.109 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.109 UTC [2697297] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Key was too big
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Key was too big
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Key was too big
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Key was too big
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:16:23.110 UTC [2697297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.110 UTC [2697297] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:16:23.123 UTC [2697303] ERROR:  encrypt error: Encryption failed
2023-07-22 04:16:23.123 UTC [2697303] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:16:23.124 UTC [2697303] ERROR:  decrypt error: Decryption failed
2023-07-22 04:16:23.124 UTC [2697303] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:16:23.124 UTC [2697303] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:16:23.124 UTC [2697303] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:16:23.146 UTC [2697311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.146 UTC [2697311] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:16:23.146 UTC [2697311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.146 UTC [2697311] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:16:23.147 UTC [2697311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.147 UTC [2697311] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:16:23.147 UTC [2697311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.147 UTC [2697311] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:16:23.147 UTC [2697311] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:16:23.147 UTC [2697311] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:16:23.147 UTC [2697311] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:16:23.147 UTC [2697311] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:16:23.148 UTC [2697311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.148 UTC [2697311] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:16:23.148 UTC [2697311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.148 UTC [2697311] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:16:23.170 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.170 UTC [2697321] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:16:23.171 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.171 UTC [2697321] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:16:23.171 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.171 UTC [2697321] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:16:23.171 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.171 UTC [2697321] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:16:23.171 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.171 UTC [2697321] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:16:23.171 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.171 UTC [2697321] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:16:23.172 UTC [2697321] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:16:23.172 UTC [2697321] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:16:23.172 UTC [2697321] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:16:23.172 UTC [2697321] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:16:23.172 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.172 UTC [2697321] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:16:23.172 UTC [2697321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:16:23.172 UTC [2697321] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:16:23.184 UTC [2697327] ERROR:  invalid salt
2023-07-22 04:16:23.184 UTC [2697327] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:16:23.270 UTC [2697335] ERROR:  invalid salt
2023-07-22 04:16:23.270 UTC [2697335] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:16:23.270 UTC [2697335] ERROR:  invalid salt
2023-07-22 04:16:23.270 UTC [2697335] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:16:23.270 UTC [2697335] ERROR:  invalid salt
2023-07-22 04:16:23.270 UTC [2697335] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:16:23.326 UTC [2697339] ERROR:  invalid salt
2023-07-22 04:16:23.326 UTC [2697339] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:16:23.326 UTC [2697339] ERROR:  crypt(3) returned NULL
2023-07-22 04:16:23.326 UTC [2697339] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:16:23.326 UTC [2697339] ERROR:  crypt(3) returned NULL
2023-07-22 04:16:23.326 UTC [2697339] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:16:23.367 UTC [2697343] ERROR:  Corrupt ascii-armor
2023-07-22 04:16:23.367 UTC [2697343] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:16:23.368 UTC [2697343] ERROR:  Corrupt ascii-armor
2023-07-22 04:16:23.368 UTC [2697343] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:16:23.368 UTC [2697343] ERROR:  Corrupt ascii-armor
2023-07-22 04:16:23.368 UTC [2697343] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:16:23.374 UTC [2697343] ERROR:  mismatched array dimensions
2023-07-22 04:16:23.374 UTC [2697343] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:16:23.374 UTC [2697343] ERROR:  mismatched array dimensions
2023-07-22 04:16:23.374 UTC [2697343] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:16:23.375 UTC [2697343] ERROR:  wrong number of array subscripts
2023-07-22 04:16:23.375 UTC [2697343] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:16:23.375 UTC [2697343] ERROR:  wrong number of array subscripts
2023-07-22 04:16:23.375 UTC [2697343] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:16:23.375 UTC [2697343] ERROR:  null value not allowed for header key
2023-07-22 04:16:23.375 UTC [2697343] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:16:23.376 UTC [2697343] ERROR:  null value not allowed for header value
2023-07-22 04:16:23.376 UTC [2697343] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:16:23.376 UTC [2697343] ERROR:  header key must not contain newlines
2023-07-22 04:16:23.376 UTC [2697343] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:16:23.376 UTC [2697343] ERROR:  header value must not contain newlines
2023-07-22 04:16:23.376 UTC [2697343] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:16:23.376 UTC [2697343] ERROR:  header key must not contain ": "
2023-07-22 04:16:23.376 UTC [2697343] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:16:23.395 UTC [2697347] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.395 UTC [2697347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:16:23.422 UTC [2697347] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.422 UTC [2697347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:16:23.423 UTC [2697347] ERROR:  Not text data
2023-07-22 04:16:23.423 UTC [2697347] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:16:23.424 UTC [2697347] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.424 UTC [2697347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:16:23.424 UTC [2697347] ERROR:  Unsupported compression algorithm
2023-07-22 04:16:23.424 UTC [2697347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:16:23.438 UTC [2697353] ERROR:  Not text data
2023-07-22 04:16:23.438 UTC [2697353] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:16:23.933 UTC [2697361] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.933 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:16:23.953 UTC [2697361] ERROR:  Wrong key
2023-07-22 04:16:23.953 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:16:23.954 UTC [2697361] ERROR:  No encryption key found
2023-07-22 04:16:23.954 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:16:23.955 UTC [2697361] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.955 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:16:23.961 UTC [2697361] ERROR:  Need password for secret key
2023-07-22 04:16:23.961 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:16:23.962 UTC [2697361] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.962 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:16:23.966 UTC [2697361] ERROR:  Wrong key or corrupt data
2023-07-22 04:16:23.966 UTC [2697361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:16:23.988 UTC [2697367] ERROR:  No encryption key found
2023-07-22 04:16:23.988 UTC [2697367] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:16:23.989 UTC [2697367] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:16:23.989 UTC [2697367] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:16:23.990 UTC [2697367] ERROR:  Not text data
2023-07-22 04:16:23.990 UTC [2697367] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:16:23.997 UTC [2697371] ERROR:  No encryption key found
2023-07-22 04:16:23.997 UTC [2697371] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:16:23.998 UTC [2697371] ERROR:  No encryption key found
2023-07-22 04:16:23.998 UTC [2697371] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:16:55.675 UTC [2697244] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:16:55.874 UTC [2697244] LOG:  checkpoint complete: wrote 909 buffers (5.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.031 s, sync=0.104 s, total=0.199 s; sync files=506, longest=0.008 s, average=0.001 s; distance=145334 kB, estimate=145334 kB
2023-07-22 04:17:27.691 UTC [2697244] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:27.775 UTC [2697244] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.010 s, total=0.084 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133460 kB, estimate=144147 kB
2023-07-22 04:17:27.817 UTC [2697243] LOG:  received fast shutdown request
2023-07-22 04:17:27.822 UTC [2697243] LOG:  aborting any active transactions
2023-07-22 04:17:27.824 UTC [2697243] LOG:  background worker "logical replication launcher" (PID 2697249) exited with exit code 1
2023-07-22 04:17:27.824 UTC [2697244] LOG:  shutting down
2023-07-22 04:17:27.831 UTC [2697244] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:17:27.859 UTC [2697244] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.004 s, total=0.035 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=129732 kB
2023-07-22 04:17:27.888 UTC [2697243] LOG:  database system is shut down
2023-07-22 04:17:28.665 UTC [2697499] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:17:28.665 UTC [2697499] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:17:28.678 UTC [2697499] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:17:28.690 UTC [2697502] LOG:  database system was shut down at 2023-07-22 04:17:28 UTC
2023-07-22 04:17:28.701 UTC [2697499] LOG:  database system is ready to accept connections
2023-07-22 04:18:01.570 UTC [2697500] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:02.167 UTC [2697500] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.047 s, sync=0.475 s, total=0.597 s; sync files=252, longest=0.275 s, average=0.002 s; distance=137456 kB, estimate=137456 kB
2023-07-22 04:18:33.958 UTC [2697500] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:34.049 UTC [2697500] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.007 s, total=0.091 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133329 kB, estimate=137043 kB
2023-07-22 04:18:34.116 UTC [2697499] LOG:  received fast shutdown request
2023-07-22 04:18:34.121 UTC [2697499] LOG:  aborting any active transactions
2023-07-22 04:18:34.122 UTC [2697499] LOG:  background worker "logical replication launcher" (PID 2697505) exited with exit code 1
2023-07-22 04:18:34.123 UTC [2697500] LOG:  shutting down
2023-07-22 04:18:34.127 UTC [2697500] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:18:34.156 UTC [2697500] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.034 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123339 kB
2023-07-22 04:18:34.189 UTC [2697499] LOG:  database system is shut down
2023-07-22 04:18:34.995 UTC [2697653] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:18:34.995 UTC [2697653] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:18:35.008 UTC [2697653] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:18:35.020 UTC [2697656] LOG:  database system was shut down at 2023-07-22 04:18:34 UTC
2023-07-22 04:18:35.030 UTC [2697653] LOG:  database system is ready to accept connections
2023-07-22 04:18:35.235 UTC [2697676] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 04:18:35.235 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), -1))
	       from test_khvengxf;
2023-07-22 04:18:35.235 UTC [2697676] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 04:18:35.235 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 32))
	       from test_khvengxf;
2023-07-22 04:18:35.236 UTC [2697676] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 04:18:35.236 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, -1))
	       from test_khvengxf;
2023-07-22 04:18:35.237 UTC [2697676] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 04:18:35.237 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 8))
	       from test_khvengxf;
2023-07-22 04:18:35.237 UTC [2697676] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 04:18:35.237 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, -2))
	       from test_khvengxf;
2023-07-22 04:18:35.238 UTC [2697676] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 04:18:35.238 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 8589934592))
	       from test_khvengxf;
2023-07-22 04:18:35.239 UTC [2697676] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 04:18:35.239 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, -1))
	       from test_khvengxf;
2023-07-22 04:18:35.239 UTC [2697676] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 04:18:35.239 UTC [2697676] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, 2))
	       from test_khvengxf;
2023-07-22 04:18:35.385 UTC [2697688] ERROR:  operator does not exist: double precision || hll_hashval at character 31
2023-07-22 04:18:35.385 UTC [2697688] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:18:35.385 UTC [2697688] STATEMENT:  SELECT #hll_empty(11,5,256,1) || hll_hash_integer(1,0);
2023-07-22 04:18:35.406 UTC [2697692] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:35.406 UTC [2697692] STATEMENT:  SELECT E'\\x118b7f'::hll(10,5,-1,1);
2023-07-22 04:18:35.406 UTC [2697692] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:18:35.406 UTC [2697692] STATEMENT:  SELECT E'\\x118b7f'::hll(11,4,-1,1);
2023-07-22 04:18:35.406 UTC [2697692] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:18:35.406 UTC [2697692] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,64,1);
2023-07-22 04:18:35.407 UTC [2697692] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:18:35.407 UTC [2697692] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,-1,0);
2023-07-22 04:18:35.407 UTC [2697692] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:35.407 UTC [2697692] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(10,5,-1,1);
2023-07-22 04:18:35.408 UTC [2697692] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:18:35.408 UTC [2697692] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,4,-1,1);
2023-07-22 04:18:35.408 UTC [2697692] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:18:35.408 UTC [2697692] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,64,1);
2023-07-22 04:18:35.408 UTC [2697692] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:18:35.408 UTC [2697692] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,-1,0);
2023-07-22 04:18:35.409 UTC [2697692] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:35.409 UTC [2697692] STATEMENT:  SELECT E'\\x138b7f0001'::hll(10,5,-1,1);
2023-07-22 04:18:35.409 UTC [2697692] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:18:35.409 UTC [2697692] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,4,-1,1);
2023-07-22 04:18:35.409 UTC [2697692] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:18:35.409 UTC [2697692] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,64,1);
2023-07-22 04:18:35.409 UTC [2697692] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:18:35.409 UTC [2697692] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,-1,0);
2023-07-22 04:18:35.411 UTC [2697692] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:35.411 UTC [2697692] STATEMENT:  SELECT E'\\x148b7fhll(10,5,-1,1);
2023-07-22 04:18:35.412 UTC [2697692] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:18:35.412 UTC [2697692] STATEMENT:  SELECT E'\\x148b7fhll(11,4,-1,1);
2023-07-22 04:18:35.412 UTC [2697692] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:18:35.412 UTC [2697692] STATEMENT:  SELECT E'\\x148b7fhll(11,5,64,1);
2023-07-22 04:18:35.412 UTC [2697692] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:18:35.412 UTC [2697692] STATEMENT:  SELECT E'\\x148b7fhll(11,5,-1,0);
2023-07-22 04:18:52.041 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.041 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.041 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.041 UTC [2697762] ERROR:  function hll_hash_boolean(integer, integer) does not exist at character 8
2023-07-22 04:18:52.041 UTC [2697762] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:18:52.041 UTC [2697762] STATEMENT:  SELECT hll_hash_boolean(0, -1);
2023-07-22 04:18:52.041 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.042 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.042 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.042 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.042 UTC [2697762] WARNING:  negative seed values not compatible
2023-07-22 04:18:52.046 UTC [2697762] ERROR:  operator does not exist: hll || integer at character 20
2023-07-22 04:18:52.046 UTC [2697762] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:18:52.046 UTC [2697762] STATEMENT:  SELECT hll_empty() || 42;
2023-07-22 04:18:52.046 UTC [2697762] ERROR:  operator does not exist: hll || bigint at character 20
2023-07-22 04:18:52.046 UTC [2697762] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:18:52.046 UTC [2697762] STATEMENT:  SELECT hll_empty() || 42::bigint;
2023-07-22 04:18:52.263 UTC [2697804] ERROR:  invalid number of type modifiers at character 32
2023-07-22 04:18:52.263 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(10, 4, 64, 0, 42));
2023-07-22 04:18:52.263 UTC [2697804] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 04:18:52.263 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(-1));
2023-07-22 04:18:52.277 UTC [2697804] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 04:18:52.277 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(31));
2023-07-22 04:18:52.278 UTC [2697804] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 04:18:52.278 UTC [2697804] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 04:18:52.278 UTC [2697804] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 04:18:52.278 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(32));
2023-07-22 04:18:52.278 UTC [2697804] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 04:18:52.278 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, -1));
2023-07-22 04:18:52.306 UTC [2697804] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 04:18:52.306 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 8));
2023-07-22 04:18:52.306 UTC [2697804] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 04:18:52.306 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, -2));
2023-07-22 04:18:52.348 UTC [2697804] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 04:18:52.348 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 4294967296));
2023-07-22 04:18:52.349 UTC [2697804] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 04:18:52.349 UTC [2697804] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 04:18:52.349 UTC [2697804] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 04:18:52.349 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 8589934592));
2023-07-22 04:18:52.349 UTC [2697804] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 04:18:52.349 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, -1));
2023-07-22 04:18:52.377 UTC [2697804] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 04:18:52.377 UTC [2697804] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, 2));
2023-07-22 04:18:52.397 UTC [2697810] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:52.397 UTC [2697810] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (
	E'\\x148b7fhll
	);
2023-07-22 04:18:52.398 UTC [2697810] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:52.398 UTC [2697810] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (hll_empty(11));
2023-07-22 04:18:52.398 UTC [2697810] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:52.398 UTC [2697810] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x118b7f');
2023-07-22 04:18:52.398 UTC [2697810] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:18:52.398 UTC [2697810] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x128b7f1111111111111111');
2023-07-22 04:18:52.436 UTC [2697654] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:52.467 UTC [2697654] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.008 s, sync=0.005 s, total=0.032 s; sync files=7, longest=0.003 s, average=0.001 s; distance=33665 kB, estimate=33665 kB
2023-07-22 04:18:52.596 UTC [2697829] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:18:52.596 UTC [2697829] STATEMENT:  select gen_salt('foo');
2023-07-22 04:18:52.597 UTC [2697829] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:18:52.597 UTC [2697829] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:18:52.597 UTC [2697829] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:18:52.597 UTC [2697829] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:18:52.598 UTC [2697829] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:18:52.598 UTC [2697829] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:18:52.671 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.671 UTC [2697849] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:18:52.671 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.671 UTC [2697849] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:18:52.672 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.672 UTC [2697849] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:18:52.672 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.672 UTC [2697849] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:18:52.672 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.672 UTC [2697849] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:18:52.672 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.672 UTC [2697849] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Key was too big
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Key was too big
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Key was too big
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:18:52.673 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.673 UTC [2697849] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:18:52.674 UTC [2697849] ERROR:  encrypt error: Key was too big
2023-07-22 04:18:52.674 UTC [2697849] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:18:52.674 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.674 UTC [2697849] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:18:52.674 UTC [2697849] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:18:52.674 UTC [2697849] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:18:52.674 UTC [2697849] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:18:52.674 UTC [2697849] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:18:52.674 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.674 UTC [2697849] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:18:52.674 UTC [2697849] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.674 UTC [2697849] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:18:52.690 UTC [2697855] ERROR:  encrypt error: Encryption failed
2023-07-22 04:18:52.690 UTC [2697855] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:18:52.692 UTC [2697855] ERROR:  decrypt error: Decryption failed
2023-07-22 04:18:52.692 UTC [2697855] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:18:52.692 UTC [2697855] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:18:52.692 UTC [2697855] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:18:52.720 UTC [2697863] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.720 UTC [2697863] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:18:52.721 UTC [2697863] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.721 UTC [2697863] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:18:52.721 UTC [2697863] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.721 UTC [2697863] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:18:52.721 UTC [2697863] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.721 UTC [2697863] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:18:52.721 UTC [2697863] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:18:52.721 UTC [2697863] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:18:52.721 UTC [2697863] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:18:52.721 UTC [2697863] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:18:52.721 UTC [2697863] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.721 UTC [2697863] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:18:52.722 UTC [2697863] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.722 UTC [2697863] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:18:52.750 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.750 UTC [2697873] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:18:52.750 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.750 UTC [2697873] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:18:52.750 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.750 UTC [2697873] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:18:52.750 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.750 UTC [2697873] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:18:52.751 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.751 UTC [2697873] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:18:52.751 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.751 UTC [2697873] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:18:52.751 UTC [2697873] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:18:52.751 UTC [2697873] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:18:52.751 UTC [2697873] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:18:52.751 UTC [2697873] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:18:52.752 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.752 UTC [2697873] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:18:52.752 UTC [2697873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:18:52.752 UTC [2697873] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:18:52.767 UTC [2697879] ERROR:  invalid salt
2023-07-22 04:18:52.767 UTC [2697879] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:18:52.856 UTC [2697887] ERROR:  invalid salt
2023-07-22 04:18:52.856 UTC [2697887] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:18:52.856 UTC [2697887] ERROR:  invalid salt
2023-07-22 04:18:52.856 UTC [2697887] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:18:52.857 UTC [2697887] ERROR:  invalid salt
2023-07-22 04:18:52.857 UTC [2697887] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:18:52.916 UTC [2697891] ERROR:  invalid salt
2023-07-22 04:18:52.916 UTC [2697891] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:18:52.916 UTC [2697891] ERROR:  crypt(3) returned NULL
2023-07-22 04:18:52.916 UTC [2697891] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:18:52.917 UTC [2697891] ERROR:  crypt(3) returned NULL
2023-07-22 04:18:52.917 UTC [2697891] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:18:52.933 UTC [2697895] ERROR:  Corrupt ascii-armor
2023-07-22 04:18:52.933 UTC [2697895] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:18:52.933 UTC [2697895] ERROR:  Corrupt ascii-armor
2023-07-22 04:18:52.933 UTC [2697895] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:18:52.933 UTC [2697895] ERROR:  Corrupt ascii-armor
2023-07-22 04:18:52.933 UTC [2697895] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:18:52.934 UTC [2697895] ERROR:  mismatched array dimensions
2023-07-22 04:18:52.934 UTC [2697895] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  mismatched array dimensions
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  wrong number of array subscripts
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  wrong number of array subscripts
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  null value not allowed for header key
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  null value not allowed for header value
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  header key must not contain newlines
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  header value must not contain newlines
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:18:52.935 UTC [2697895] ERROR:  header key must not contain ": "
2023-07-22 04:18:52.935 UTC [2697895] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:18:52.941 UTC [2697899] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:52.941 UTC [2697899] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:18:52.951 UTC [2697899] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:52.951 UTC [2697899] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:18:52.952 UTC [2697899] ERROR:  Not text data
2023-07-22 04:18:52.952 UTC [2697899] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:18:52.952 UTC [2697899] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:52.952 UTC [2697899] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:18:52.953 UTC [2697899] ERROR:  Unsupported compression algorithm
2023-07-22 04:18:52.953 UTC [2697899] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:18:52.965 UTC [2697905] ERROR:  Not text data
2023-07-22 04:18:52.965 UTC [2697905] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:18:53.413 UTC [2697913] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:53.413 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:18:53.428 UTC [2697913] ERROR:  Wrong key
2023-07-22 04:18:53.428 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:18:53.428 UTC [2697913] ERROR:  No encryption key found
2023-07-22 04:18:53.428 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:18:53.429 UTC [2697913] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:53.429 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:18:53.434 UTC [2697913] ERROR:  Need password for secret key
2023-07-22 04:18:53.434 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:18:53.435 UTC [2697913] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:53.435 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:18:53.439 UTC [2697913] ERROR:  Wrong key or corrupt data
2023-07-22 04:18:53.439 UTC [2697913] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:18:53.460 UTC [2697919] ERROR:  No encryption key found
2023-07-22 04:18:53.460 UTC [2697919] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:18:53.460 UTC [2697919] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:18:53.460 UTC [2697919] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:18:53.461 UTC [2697919] ERROR:  Not text data
2023-07-22 04:18:53.461 UTC [2697919] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:18:53.468 UTC [2697923] ERROR:  No encryption key found
2023-07-22 04:18:53.468 UTC [2697923] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:18:53.469 UTC [2697923] ERROR:  No encryption key found
2023-07-22 04:18:53.469 UTC [2697923] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:19:24.969 UTC [2697654] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:19:25.123 UTC [2697654] LOG:  checkpoint complete: wrote 572 buffers (3.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.021 s, sync=0.089 s, total=0.154 s; sync files=260, longest=0.006 s, average=0.001 s; distance=141742 kB, estimate=141742 kB
2023-07-22 04:19:56.452 UTC [2697654] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:19:56.505 UTC [2697654] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.005 s, total=0.054 s; sync files=4, longest=0.004 s, average=0.002 s; distance=138941 kB, estimate=141462 kB
2023-07-22 04:19:56.548 UTC [2697653] LOG:  received fast shutdown request
2023-07-22 04:19:56.551 UTC [2697653] LOG:  aborting any active transactions
2023-07-22 04:19:56.552 UTC [2697653] LOG:  background worker "logical replication launcher" (PID 2697659) exited with exit code 1
2023-07-22 04:19:56.552 UTC [2697654] LOG:  shutting down
2023-07-22 04:19:56.555 UTC [2697654] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:19:56.573 UTC [2697654] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127316 kB
2023-07-22 04:19:56.628 UTC [2697653] LOG:  database system is shut down
2023-07-22 04:19:57.270 UTC [2698090] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:19:57.270 UTC [2698090] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:19:57.276 UTC [2698090] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:19:57.284 UTC [2698093] LOG:  database system was shut down at 2023-07-22 04:19:57 UTC
2023-07-22 04:19:57.291 UTC [2698090] LOG:  database system is ready to accept connections
2023-07-22 04:19:57.521 UTC [2698116] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 04:19:57.521 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), -1))
	       from test_khvengxf;
2023-07-22 04:19:57.521 UTC [2698116] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 04:19:57.521 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 32))
	       from test_khvengxf;
2023-07-22 04:19:57.521 UTC [2698116] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 04:19:57.521 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, -1))
	       from test_khvengxf;
2023-07-22 04:19:57.522 UTC [2698116] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 04:19:57.522 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 8))
	       from test_khvengxf;
2023-07-22 04:19:57.522 UTC [2698116] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 04:19:57.522 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, -2))
	       from test_khvengxf;
2023-07-22 04:19:57.522 UTC [2698116] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 04:19:57.522 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 8589934592))
	       from test_khvengxf;
2023-07-22 04:19:57.523 UTC [2698116] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 04:19:57.523 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, -1))
	       from test_khvengxf;
2023-07-22 04:19:57.523 UTC [2698116] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 04:19:57.523 UTC [2698116] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, 2))
	       from test_khvengxf;
2023-07-22 04:19:57.654 UTC [2698128] ERROR:  operator does not exist: double precision || hll_hashval at character 31
2023-07-22 04:19:57.654 UTC [2698128] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:19:57.654 UTC [2698128] STATEMENT:  SELECT #hll_empty(11,5,256,1) || hll_hash_integer(1,0);
2023-07-22 04:19:57.685 UTC [2698132] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:19:57.685 UTC [2698132] STATEMENT:  SELECT E'\\x118b7f'::hll(10,5,-1,1);
2023-07-22 04:19:57.686 UTC [2698132] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:19:57.686 UTC [2698132] STATEMENT:  SELECT E'\\x118b7f'::hll(11,4,-1,1);
2023-07-22 04:19:57.686 UTC [2698132] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:19:57.686 UTC [2698132] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,64,1);
2023-07-22 04:19:57.687 UTC [2698132] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:19:57.687 UTC [2698132] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,-1,0);
2023-07-22 04:19:57.688 UTC [2698132] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:19:57.688 UTC [2698132] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(10,5,-1,1);
2023-07-22 04:19:57.689 UTC [2698132] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:19:57.689 UTC [2698132] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,4,-1,1);
2023-07-22 04:19:57.689 UTC [2698132] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:19:57.689 UTC [2698132] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,64,1);
2023-07-22 04:19:57.690 UTC [2698132] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:19:57.690 UTC [2698132] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,-1,0);
2023-07-22 04:19:57.691 UTC [2698132] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:19:57.691 UTC [2698132] STATEMENT:  SELECT E'\\x138b7f0001'::hll(10,5,-1,1);
2023-07-22 04:19:57.691 UTC [2698132] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:19:57.691 UTC [2698132] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,4,-1,1);
2023-07-22 04:19:57.692 UTC [2698132] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:19:57.692 UTC [2698132] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,64,1);
2023-07-22 04:19:57.692 UTC [2698132] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:19:57.692 UTC [2698132] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,-1,0);
2023-07-22 04:19:57.695 UTC [2698132] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:19:57.695 UTC [2698132] STATEMENT:  SELECT E'\\x148b7fhll(10,5,-1,1);
2023-07-22 04:19:57.696 UTC [2698132] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 04:19:57.696 UTC [2698132] STATEMENT:  SELECT E'\\x148b7fhll(11,4,-1,1);
2023-07-22 04:19:57.696 UTC [2698132] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 04:19:57.696 UTC [2698132] STATEMENT:  SELECT E'\\x148b7fhll(11,5,64,1);
2023-07-22 04:19:57.697 UTC [2698132] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 04:19:57.697 UTC [2698132] STATEMENT:  SELECT E'\\x148b7fhll(11,5,-1,0);
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] ERROR:  function hll_hash_boolean(integer, integer) does not exist at character 8
2023-07-22 04:20:14.041 UTC [2698205] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:20:14.041 UTC [2698205] STATEMENT:  SELECT hll_hash_boolean(0, -1);
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.041 UTC [2698205] WARNING:  negative seed values not compatible
2023-07-22 04:20:14.043 UTC [2698205] ERROR:  operator does not exist: hll || integer at character 20
2023-07-22 04:20:14.043 UTC [2698205] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:20:14.043 UTC [2698205] STATEMENT:  SELECT hll_empty() || 42;
2023-07-22 04:20:14.043 UTC [2698205] ERROR:  operator does not exist: hll || bigint at character 20
2023-07-22 04:20:14.043 UTC [2698205] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:20:14.043 UTC [2698205] STATEMENT:  SELECT hll_empty() || 42::bigint;
2023-07-22 04:20:14.207 UTC [2698247] ERROR:  invalid number of type modifiers at character 32
2023-07-22 04:20:14.207 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(10, 4, 64, 0, 42));
2023-07-22 04:20:14.208 UTC [2698247] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 04:20:14.208 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(-1));
2023-07-22 04:20:14.215 UTC [2698247] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 04:20:14.215 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(31));
2023-07-22 04:20:14.216 UTC [2698247] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 04:20:14.216 UTC [2698247] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 04:20:14.216 UTC [2698247] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 04:20:14.216 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(32));
2023-07-22 04:20:14.216 UTC [2698247] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 04:20:14.216 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, -1));
2023-07-22 04:20:14.238 UTC [2698247] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 04:20:14.238 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 8));
2023-07-22 04:20:14.239 UTC [2698247] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 04:20:14.239 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, -2));
2023-07-22 04:20:14.284 UTC [2698247] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 04:20:14.284 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 4294967296));
2023-07-22 04:20:14.285 UTC [2698247] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 04:20:14.285 UTC [2698247] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 04:20:14.285 UTC [2698247] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 04:20:14.285 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 8589934592));
2023-07-22 04:20:14.286 UTC [2698247] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 04:20:14.286 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, -1));
2023-07-22 04:20:14.316 UTC [2698247] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 04:20:14.316 UTC [2698247] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, 2));
2023-07-22 04:20:14.337 UTC [2698251] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:20:14.337 UTC [2698251] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (
	E'\\x148b7fhll
	);
2023-07-22 04:20:14.337 UTC [2698251] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:20:14.337 UTC [2698251] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (hll_empty(11));
2023-07-22 04:20:14.337 UTC [2698251] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:20:14.337 UTC [2698251] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x118b7f');
2023-07-22 04:20:14.338 UTC [2698251] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 04:20:14.338 UTC [2698251] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x128b7f1111111111111111');
2023-07-22 04:20:45.958 UTC [2698091] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:20:46.065 UTC [2698091] LOG:  checkpoint complete: wrote 687 buffers (4.2%); 0 WAL file(s) added, 0 removed, 10 recycled; write=0.022 s, sync=0.027 s, total=0.108 s; sync files=296, longest=0.004 s, average=0.001 s; distance=170822 kB, estimate=170822 kB
2023-07-22 04:21:17.467 UTC [2698091] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:17.525 UTC [2698091] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.004 s, total=0.058 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138881 kB, estimate=167628 kB
2023-07-22 04:21:17.590 UTC [2698090] LOG:  received fast shutdown request
2023-07-22 04:21:17.593 UTC [2698090] LOG:  aborting any active transactions
2023-07-22 04:21:17.594 UTC [2698090] LOG:  background worker "logical replication launcher" (PID 2698096) exited with exit code 1
2023-07-22 04:21:17.594 UTC [2698091] LOG:  shutting down
2023-07-22 04:21:17.597 UTC [2698091] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:21:17.614 UTC [2698091] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=150865 kB
2023-07-22 04:21:17.637 UTC [2698090] LOG:  database system is shut down
2023-07-22 04:21:18.358 UTC [2698386] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:21:18.358 UTC [2698386] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:21:18.364 UTC [2698386] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:21:18.372 UTC [2698389] LOG:  database system was shut down at 2023-07-22 04:21:18 UTC
2023-07-22 04:21:18.379 UTC [2698386] LOG:  database system is ready to accept connections
2023-07-22 04:21:18.559 UTC [2698405] ERROR:  array must have even number of elements
2023-07-22 04:21:18.559 UTC [2698405] STATEMENT:  select ARRAY['a','g','b','h','asd']::hstore;
2023-07-22 04:21:18.559 UTC [2698405] ERROR:  array must have two columns
2023-07-22 04:21:18.559 UTC [2698405] STATEMENT:  select ARRAY[['a','g','b'],['h','asd','i']]::hstore;
2023-07-22 04:21:18.559 UTC [2698405] ERROR:  wrong number of array subscripts
2023-07-22 04:21:18.559 UTC [2698405] STATEMENT:  select ARRAY[[['a','g'],['b','h'],['asd','i']]]::hstore;
2023-07-22 04:21:18.559 UTC [2698405] ERROR:  array must have even number of elements
2023-07-22 04:21:18.559 UTC [2698405] STATEMENT:  select hstore(ARRAY['a','g','b','h','asd']);
2023-07-22 04:21:18.559 UTC [2698405] ERROR:  array must have two columns
2023-07-22 04:21:18.559 UTC [2698405] STATEMENT:  select hstore(ARRAY[['a','g','b'],['h','asd','i']]);
2023-07-22 04:21:18.559 UTC [2698405] ERROR:  wrong number of array subscripts
2023-07-22 04:21:18.559 UTC [2698405] STATEMENT:  select hstore(ARRAY[[['a','g'],['b','h'],['asd','i']]]);
2023-07-22 04:21:18.560 UTC [2698405] ERROR:  arrays must have same bounds
2023-07-22 04:21:18.560 UTC [2698405] STATEMENT:  select hstore(ARRAY['a'], '{}'::text[]);
2023-07-22 04:21:18.560 UTC [2698405] ERROR:  arrays must have same bounds
2023-07-22 04:21:18.560 UTC [2698405] STATEMENT:  select hstore('{}'::text[], ARRAY['a']);
2023-07-22 04:21:18.573 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.573 UTC [2698405] STATEMENT:  select populate_record(v, hstore('e', null)) from testhstore1 v;
2023-07-22 04:21:18.573 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.573 UTC [2698405] STATEMENT:  select populate_record(v, hstore('b', 'foo') || hstore('e', null)) from testhstore1 v;
2023-07-22 04:21:18.574 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.574 UTC [2698405] STATEMENT:  select populate_record(null::testhstore1, hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 04:21:18.574 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.574 UTC [2698405] STATEMENT:  select populate_record(null::testhstore1, '');
2023-07-22 04:21:18.574 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.574 UTC [2698405] STATEMENT:  select v #= hstore('e', null) from testhstore1 v;
2023-07-22 04:21:18.575 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.575 UTC [2698405] STATEMENT:  select null::testhstore1 #= (hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 04:21:18.575 UTC [2698405] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:21:18.575 UTC [2698405] STATEMENT:  select null::testhstore1 #= hstore '';
2023-07-22 04:21:18.625 UTC [2698405] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:21:18.625 UTC [2698405] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:21:18.625 UTC [2698405] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=0));
2023-07-22 04:21:18.625 UTC [2698405] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:21:18.625 UTC [2698405] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:21:18.625 UTC [2698405] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=2025));
2023-07-22 04:21:19.114 UTC [2698405] ERROR:  hstore allows only one subscript
2023-07-22 04:21:19.114 UTC [2698405] STATEMENT:  select f2['d']['e'] from test_json_agg;
2023-07-22 04:21:19.114 UTC [2698405] ERROR:  hstore allows only one subscript
2023-07-22 04:21:19.114 UTC [2698405] STATEMENT:  select f2['d':'e'] from test_json_agg;
2023-07-22 04:21:19.124 UTC [2698387] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:19.175 UTC [2698387] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.005 s, total=0.051 s; sync files=7, longest=0.003 s, average=0.001 s; distance=8054 kB, estimate=8054 kB
2023-07-22 04:21:19.278 UTC [2698420] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:21:19.278 UTC [2698420] STATEMENT:  select gen_salt('foo');
2023-07-22 04:21:19.278 UTC [2698420] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:21:19.278 UTC [2698420] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:21:19.278 UTC [2698420] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:21:19.278 UTC [2698420] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:21:19.278 UTC [2698420] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:21:19.278 UTC [2698420] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:21:19.316 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.316 UTC [2698440] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:21:19.316 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.316 UTC [2698440] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:21:19.316 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.316 UTC [2698440] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:21:19.316 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.316 UTC [2698440] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:21:19.316 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.316 UTC [2698440] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Key was too big
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Key was too big
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Key was too big
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Key was too big
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:21:19.317 UTC [2698440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.317 UTC [2698440] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:21:19.326 UTC [2698446] ERROR:  encrypt error: Encryption failed
2023-07-22 04:21:19.326 UTC [2698446] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:21:19.327 UTC [2698446] ERROR:  decrypt error: Decryption failed
2023-07-22 04:21:19.327 UTC [2698446] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:21:19.327 UTC [2698446] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:21:19.327 UTC [2698446] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:21:19.343 UTC [2698454] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.343 UTC [2698454] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:21:19.344 UTC [2698454] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.344 UTC [2698454] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:21:19.360 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.360 UTC [2698464] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:21:19.360 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.360 UTC [2698464] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:21:19.360 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.360 UTC [2698464] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:21:19.360 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.360 UTC [2698464] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:21:19.360 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.360 UTC [2698464] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:21:19.360 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.360 UTC [2698464] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:21:19.361 UTC [2698464] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:21:19.361 UTC [2698464] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:21:19.361 UTC [2698464] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:21:19.361 UTC [2698464] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:21:19.361 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.361 UTC [2698464] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:21:19.361 UTC [2698464] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:21:19.361 UTC [2698464] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:21:19.369 UTC [2698470] ERROR:  invalid salt
2023-07-22 04:21:19.369 UTC [2698470] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:21:19.461 UTC [2698478] ERROR:  invalid salt
2023-07-22 04:21:19.461 UTC [2698478] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:21:19.461 UTC [2698478] ERROR:  invalid salt
2023-07-22 04:21:19.461 UTC [2698478] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:21:19.461 UTC [2698478] ERROR:  invalid salt
2023-07-22 04:21:19.461 UTC [2698478] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:21:19.528 UTC [2698482] ERROR:  invalid salt
2023-07-22 04:21:19.528 UTC [2698482] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:21:19.528 UTC [2698482] ERROR:  crypt(3) returned NULL
2023-07-22 04:21:19.528 UTC [2698482] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:21:19.528 UTC [2698482] ERROR:  crypt(3) returned NULL
2023-07-22 04:21:19.528 UTC [2698482] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:21:19.569 UTC [2698486] ERROR:  Corrupt ascii-armor
2023-07-22 04:21:19.569 UTC [2698486] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:21:19.570 UTC [2698486] ERROR:  Corrupt ascii-armor
2023-07-22 04:21:19.570 UTC [2698486] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:21:19.571 UTC [2698486] ERROR:  Corrupt ascii-armor
2023-07-22 04:21:19.571 UTC [2698486] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:21:19.578 UTC [2698486] ERROR:  mismatched array dimensions
2023-07-22 04:21:19.578 UTC [2698486] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:21:19.578 UTC [2698486] ERROR:  mismatched array dimensions
2023-07-22 04:21:19.578 UTC [2698486] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:21:19.578 UTC [2698486] ERROR:  wrong number of array subscripts
2023-07-22 04:21:19.578 UTC [2698486] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:21:19.579 UTC [2698486] ERROR:  wrong number of array subscripts
2023-07-22 04:21:19.579 UTC [2698486] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:21:19.579 UTC [2698486] ERROR:  null value not allowed for header key
2023-07-22 04:21:19.579 UTC [2698486] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:21:19.579 UTC [2698486] ERROR:  null value not allowed for header value
2023-07-22 04:21:19.579 UTC [2698486] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:21:19.580 UTC [2698486] ERROR:  header key must not contain newlines
2023-07-22 04:21:19.580 UTC [2698486] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:21:19.580 UTC [2698486] ERROR:  header value must not contain newlines
2023-07-22 04:21:19.580 UTC [2698486] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:21:19.581 UTC [2698486] ERROR:  header key must not contain ": "
2023-07-22 04:21:19.581 UTC [2698486] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:21:19.605 UTC [2698490] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:19.605 UTC [2698490] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:21:19.641 UTC [2698490] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:19.641 UTC [2698490] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:21:19.642 UTC [2698490] ERROR:  Not text data
2023-07-22 04:21:19.642 UTC [2698490] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:21:19.643 UTC [2698490] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:19.643 UTC [2698490] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:21:19.643 UTC [2698490] ERROR:  Unsupported compression algorithm
2023-07-22 04:21:19.643 UTC [2698490] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:21:19.660 UTC [2698496] ERROR:  Not text data
2023-07-22 04:21:19.660 UTC [2698496] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:21:20.096 UTC [2698504] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:20.096 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:21:20.101 UTC [2698504] ERROR:  Wrong key
2023-07-22 04:21:20.101 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:21:20.101 UTC [2698504] ERROR:  No encryption key found
2023-07-22 04:21:20.101 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:21:20.101 UTC [2698504] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:20.101 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:21:20.104 UTC [2698504] ERROR:  Need password for secret key
2023-07-22 04:21:20.104 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:21:20.104 UTC [2698504] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:20.104 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:21:20.107 UTC [2698504] ERROR:  Wrong key or corrupt data
2023-07-22 04:21:20.107 UTC [2698504] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:21:20.126 UTC [2698510] ERROR:  No encryption key found
2023-07-22 04:21:20.126 UTC [2698510] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:21:20.126 UTC [2698510] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:21:20.126 UTC [2698510] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:21:20.128 UTC [2698510] ERROR:  Not text data
2023-07-22 04:21:20.128 UTC [2698510] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:21:20.135 UTC [2698514] ERROR:  No encryption key found
2023-07-22 04:21:20.135 UTC [2698514] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:21:20.136 UTC [2698514] ERROR:  No encryption key found
2023-07-22 04:21:20.136 UTC [2698514] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:21:51.672 UTC [2698387] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:51.791 UTC [2698387] LOG:  checkpoint complete: wrote 673 buffers (4.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.037 s, sync=0.040 s, total=0.119 s; sync files=260, longest=0.003 s, average=0.001 s; distance=141618 kB, estimate=141618 kB
2023-07-22 04:22:23.109 UTC [2698387] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:22:23.161 UTC [2698387] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.053 s; sync files=4, longest=0.004 s, average=0.001 s; distance=137018 kB, estimate=141158 kB
2023-07-22 04:22:23.221 UTC [2698386] LOG:  received fast shutdown request
2023-07-22 04:22:23.224 UTC [2698386] LOG:  aborting any active transactions
2023-07-22 04:22:23.225 UTC [2698386] LOG:  background worker "logical replication launcher" (PID 2698392) exited with exit code 1
2023-07-22 04:22:23.225 UTC [2698387] LOG:  shutting down
2023-07-22 04:22:23.228 UTC [2698387] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:22:23.244 UTC [2698387] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127042 kB
2023-07-22 04:22:23.263 UTC [2698386] LOG:  database system is shut down
2023-07-22 04:22:23.988 UTC [2698640] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:22:23.989 UTC [2698640] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:22:23.994 UTC [2698640] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:22:24.002 UTC [2698643] LOG:  database system was shut down at 2023-07-22 04:22:23 UTC
2023-07-22 04:22:24.008 UTC [2698640] LOG:  database system is ready to accept connections
2023-07-22 04:22:24.194 UTC [2698662] ERROR:  array must have even number of elements
2023-07-22 04:22:24.194 UTC [2698662] STATEMENT:  select ARRAY['a','g','b','h','asd']::hstore;
2023-07-22 04:22:24.194 UTC [2698662] ERROR:  array must have two columns
2023-07-22 04:22:24.194 UTC [2698662] STATEMENT:  select ARRAY[['a','g','b'],['h','asd','i']]::hstore;
2023-07-22 04:22:24.194 UTC [2698662] ERROR:  wrong number of array subscripts
2023-07-22 04:22:24.194 UTC [2698662] STATEMENT:  select ARRAY[[['a','g'],['b','h'],['asd','i']]]::hstore;
2023-07-22 04:22:24.194 UTC [2698662] ERROR:  array must have even number of elements
2023-07-22 04:22:24.194 UTC [2698662] STATEMENT:  select hstore(ARRAY['a','g','b','h','asd']);
2023-07-22 04:22:24.194 UTC [2698662] ERROR:  array must have two columns
2023-07-22 04:22:24.194 UTC [2698662] STATEMENT:  select hstore(ARRAY[['a','g','b'],['h','asd','i']]);
2023-07-22 04:22:24.194 UTC [2698662] ERROR:  wrong number of array subscripts
2023-07-22 04:22:24.194 UTC [2698662] STATEMENT:  select hstore(ARRAY[[['a','g'],['b','h'],['asd','i']]]);
2023-07-22 04:22:24.195 UTC [2698662] ERROR:  arrays must have same bounds
2023-07-22 04:22:24.195 UTC [2698662] STATEMENT:  select hstore(ARRAY['a'], '{}'::text[]);
2023-07-22 04:22:24.195 UTC [2698662] ERROR:  arrays must have same bounds
2023-07-22 04:22:24.195 UTC [2698662] STATEMENT:  select hstore('{}'::text[], ARRAY['a']);
2023-07-22 04:22:24.215 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.215 UTC [2698662] STATEMENT:  select populate_record(v, hstore('e', null)) from testhstore1 v;
2023-07-22 04:22:24.216 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.216 UTC [2698662] STATEMENT:  select populate_record(v, hstore('b', 'foo') || hstore('e', null)) from testhstore1 v;
2023-07-22 04:22:24.216 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.216 UTC [2698662] STATEMENT:  select populate_record(null::testhstore1, hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 04:22:24.216 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.216 UTC [2698662] STATEMENT:  select populate_record(null::testhstore1, '');
2023-07-22 04:22:24.217 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.217 UTC [2698662] STATEMENT:  select v #= hstore('e', null) from testhstore1 v;
2023-07-22 04:22:24.217 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.217 UTC [2698662] STATEMENT:  select null::testhstore1 #= (hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 04:22:24.217 UTC [2698662] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 04:22:24.217 UTC [2698662] STATEMENT:  select null::testhstore1 #= hstore '';
2023-07-22 04:22:24.293 UTC [2698662] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:22:24.293 UTC [2698662] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:22:24.293 UTC [2698662] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=0));
2023-07-22 04:22:24.293 UTC [2698662] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:22:24.293 UTC [2698662] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:22:24.293 UTC [2698662] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=2025));
2023-07-22 04:22:24.784 UTC [2698662] ERROR:  hstore allows only one subscript
2023-07-22 04:22:24.784 UTC [2698662] STATEMENT:  select f2['d']['e'] from test_json_agg;
2023-07-22 04:22:24.784 UTC [2698662] ERROR:  hstore allows only one subscript
2023-07-22 04:22:24.784 UTC [2698662] STATEMENT:  select f2['d':'e'] from test_json_agg;
2023-07-22 04:22:56.382 UTC [2698641] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:22:56.499 UTC [2698641] LOG:  checkpoint complete: wrote 556 buffers (3.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.040 s, total=0.117 s; sync files=260, longest=0.004 s, average=0.001 s; distance=145444 kB, estimate=145444 kB
2023-07-22 04:23:27.857 UTC [2698641] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:23:27.920 UTC [2698641] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.004 s, total=0.063 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137167 kB, estimate=144616 kB
2023-07-22 04:23:27.984 UTC [2698640] LOG:  received fast shutdown request
2023-07-22 04:23:27.988 UTC [2698640] LOG:  aborting any active transactions
2023-07-22 04:23:27.989 UTC [2698640] LOG:  background worker "logical replication launcher" (PID 2698646) exited with exit code 1
2023-07-22 04:23:27.989 UTC [2698641] LOG:  shutting down
2023-07-22 04:23:27.992 UTC [2698641] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:23:28.009 UTC [2698641] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130154 kB
2023-07-22 04:23:28.036 UTC [2698640] LOG:  database system is shut down
2023-07-22 04:23:28.724 UTC [2698792] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:23:28.724 UTC [2698792] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:23:28.729 UTC [2698792] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:23:28.738 UTC [2698795] LOG:  database system was shut down at 2023-07-22 04:23:28 UTC
2023-07-22 04:23:28.744 UTC [2698792] LOG:  database system is ready to accept connections
2023-07-22 04:23:29.106 UTC [2698813] WARNING:  hypopg: SQL order #1 is not a CREATE INDEX statement
2023-07-22 04:23:29.107 UTC [2698813] WARNING:  hypopg: SQL order #3 is not a CREATE INDEX statement
2023-07-22 04:23:29.110 UTC [2698813] ERROR:  value 1 out of bounds for option "fillfactor"
2023-07-22 04:23:29.110 UTC [2698813] DETAIL:  Valid values are between "10" and "100".
2023-07-22 04:23:29.110 UTC [2698813] STATEMENT:  SELECT COUNT(*) AS NB
	FROM public.hypopg_create_index('CREATE INDEX ON hypo(id) WITH (fillfactor = 1)');
2023-07-22 04:23:29.110 UTC [2698813] ERROR:  oid 1 is not a hypothetical index
2023-07-22 04:23:29.110 UTC [2698813] STATEMENT:  SELECT hypopg_relation_size(1);
2023-07-22 04:23:29.536 UTC [2698848] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:23:29.536 UTC [2698848] STATEMENT:  select gen_salt('foo');
2023-07-22 04:23:29.537 UTC [2698848] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:23:29.537 UTC [2698848] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:23:29.537 UTC [2698848] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:23:29.537 UTC [2698848] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:23:29.537 UTC [2698848] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:23:29.537 UTC [2698848] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:23:29.575 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.575 UTC [2698868] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:23:29.575 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.575 UTC [2698868] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:23:29.575 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.575 UTC [2698868] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:23:29.575 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.575 UTC [2698868] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Key was too big
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Key was too big
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Key was too big
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Key was too big
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:23:29.576 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.576 UTC [2698868] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:23:29.577 UTC [2698868] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:23:29.577 UTC [2698868] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:23:29.577 UTC [2698868] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:23:29.577 UTC [2698868] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:23:29.577 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.577 UTC [2698868] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:23:29.577 UTC [2698868] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.577 UTC [2698868] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:23:29.585 UTC [2698874] ERROR:  encrypt error: Encryption failed
2023-07-22 04:23:29.585 UTC [2698874] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:23:29.586 UTC [2698874] ERROR:  decrypt error: Decryption failed
2023-07-22 04:23:29.586 UTC [2698874] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:23:29.586 UTC [2698874] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:23:29.586 UTC [2698874] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:23:29.601 UTC [2698882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.601 UTC [2698882] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:23:29.601 UTC [2698882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.601 UTC [2698882] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:23:29.601 UTC [2698882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.601 UTC [2698882] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:23:29.601 UTC [2698882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.601 UTC [2698882] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:23:29.601 UTC [2698882] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:23:29.601 UTC [2698882] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:23:29.601 UTC [2698882] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:23:29.601 UTC [2698882] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:23:29.602 UTC [2698882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.602 UTC [2698882] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:23:29.602 UTC [2698882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.602 UTC [2698882] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:23:29.618 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.618 UTC [2698892] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:23:29.618 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.618 UTC [2698892] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:23:29.618 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.618 UTC [2698892] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:23:29.618 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.618 UTC [2698892] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:23:29.618 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.618 UTC [2698892] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:23:29.618 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.618 UTC [2698892] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:23:29.619 UTC [2698892] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:23:29.619 UTC [2698892] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:23:29.619 UTC [2698892] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:23:29.619 UTC [2698892] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:23:29.619 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.619 UTC [2698892] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:23:29.619 UTC [2698892] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:23:29.619 UTC [2698892] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:23:29.627 UTC [2698898] ERROR:  invalid salt
2023-07-22 04:23:29.627 UTC [2698898] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:23:29.714 UTC [2698906] ERROR:  invalid salt
2023-07-22 04:23:29.714 UTC [2698906] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:23:29.714 UTC [2698906] ERROR:  invalid salt
2023-07-22 04:23:29.714 UTC [2698906] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:23:29.714 UTC [2698906] ERROR:  invalid salt
2023-07-22 04:23:29.714 UTC [2698906] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:23:29.759 UTC [2698910] ERROR:  invalid salt
2023-07-22 04:23:29.759 UTC [2698910] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:23:29.759 UTC [2698910] ERROR:  crypt(3) returned NULL
2023-07-22 04:23:29.759 UTC [2698910] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:23:29.759 UTC [2698910] ERROR:  crypt(3) returned NULL
2023-07-22 04:23:29.759 UTC [2698910] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:23:29.776 UTC [2698914] ERROR:  Corrupt ascii-armor
2023-07-22 04:23:29.776 UTC [2698914] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:23:29.776 UTC [2698914] ERROR:  Corrupt ascii-armor
2023-07-22 04:23:29.776 UTC [2698914] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:23:29.776 UTC [2698914] ERROR:  Corrupt ascii-armor
2023-07-22 04:23:29.776 UTC [2698914] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  mismatched array dimensions
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  mismatched array dimensions
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  wrong number of array subscripts
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  wrong number of array subscripts
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  null value not allowed for header key
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  null value not allowed for header value
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  header key must not contain newlines
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  header value must not contain newlines
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:23:29.778 UTC [2698914] ERROR:  header key must not contain ": "
2023-07-22 04:23:29.778 UTC [2698914] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:23:29.785 UTC [2698918] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:29.785 UTC [2698918] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:23:29.796 UTC [2698918] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:29.796 UTC [2698918] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:23:29.797 UTC [2698918] ERROR:  Not text data
2023-07-22 04:23:29.797 UTC [2698918] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:23:29.797 UTC [2698918] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:29.797 UTC [2698918] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:23:29.797 UTC [2698918] ERROR:  Unsupported compression algorithm
2023-07-22 04:23:29.797 UTC [2698918] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:23:29.809 UTC [2698924] ERROR:  Not text data
2023-07-22 04:23:29.809 UTC [2698924] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:23:30.240 UTC [2698932] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:30.240 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:23:30.244 UTC [2698932] ERROR:  Wrong key
2023-07-22 04:23:30.244 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:23:30.244 UTC [2698932] ERROR:  No encryption key found
2023-07-22 04:23:30.244 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:23:30.245 UTC [2698932] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:30.245 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:23:30.247 UTC [2698932] ERROR:  Need password for secret key
2023-07-22 04:23:30.247 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:23:30.247 UTC [2698932] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:30.247 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:23:30.250 UTC [2698932] ERROR:  Wrong key or corrupt data
2023-07-22 04:23:30.250 UTC [2698932] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:23:30.267 UTC [2698938] ERROR:  No encryption key found
2023-07-22 04:23:30.267 UTC [2698938] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:23:30.268 UTC [2698938] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:23:30.268 UTC [2698938] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:23:30.269 UTC [2698938] ERROR:  Not text data
2023-07-22 04:23:30.269 UTC [2698938] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:23:30.276 UTC [2698942] ERROR:  No encryption key found
2023-07-22 04:23:30.276 UTC [2698942] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:23:30.276 UTC [2698942] ERROR:  No encryption key found
2023-07-22 04:23:30.276 UTC [2698942] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:24:01.914 UTC [2698793] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:24:02.043 UTC [2698793] LOG:  checkpoint complete: wrote 1251 buffers (7.6%); 0 WAL file(s) added, 0 removed, 10 recycled; write=0.019 s, sync=0.064 s, total=0.129 s; sync files=514, longest=0.008 s, average=0.001 s; distance=158971 kB, estimate=158971 kB
2023-07-22 04:24:33.358 UTC [2698793] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:24:33.407 UTC [2698793] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.050 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137160 kB, estimate=156790 kB
2023-07-22 04:24:33.470 UTC [2698792] LOG:  received fast shutdown request
2023-07-22 04:24:33.473 UTC [2698792] LOG:  aborting any active transactions
2023-07-22 04:24:33.474 UTC [2698792] LOG:  background worker "logical replication launcher" (PID 2698798) exited with exit code 1
2023-07-22 04:24:33.475 UTC [2698793] LOG:  shutting down
2023-07-22 04:24:33.477 UTC [2698793] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:24:33.494 UTC [2698793] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=141111 kB
2023-07-22 04:24:33.517 UTC [2698792] LOG:  database system is shut down
2023-07-22 04:24:34.220 UTC [2699068] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:24:34.221 UTC [2699068] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:24:34.226 UTC [2699068] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:24:34.237 UTC [2699071] LOG:  database system was shut down at 2023-07-22 04:24:34 UTC
2023-07-22 04:24:34.247 UTC [2699068] LOG:  database system is ready to accept connections
2023-07-22 04:24:34.609 UTC [2699092] WARNING:  hypopg: SQL order #1 is not a CREATE INDEX statement
2023-07-22 04:24:34.611 UTC [2699092] WARNING:  hypopg: SQL order #3 is not a CREATE INDEX statement
2023-07-22 04:24:34.619 UTC [2699092] ERROR:  value 1 out of bounds for option "fillfactor"
2023-07-22 04:24:34.619 UTC [2699092] DETAIL:  Valid values are between "10" and "100".
2023-07-22 04:24:34.619 UTC [2699092] STATEMENT:  SELECT COUNT(*) AS NB
	FROM public.hypopg_create_index('CREATE INDEX ON hypo(id) WITH (fillfactor = 1)');
2023-07-22 04:24:34.620 UTC [2699092] ERROR:  oid 1 is not a hypothetical index
2023-07-22 04:24:34.620 UTC [2699092] STATEMENT:  SELECT hypopg_relation_size(1);
2023-07-22 04:25:06.559 UTC [2699069] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:25:06.788 UTC [2699069] LOG:  checkpoint complete: wrote 993 buffers (6.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.039 s, sync=0.135 s, total=0.229 s; sync files=260, longest=0.054 s, average=0.001 s; distance=154588 kB, estimate=154588 kB
2023-07-22 04:25:38.112 UTC [2699069] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:25:38.180 UTC [2699069] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.007 s, total=0.068 s; sync files=4, longest=0.004 s, average=0.002 s; distance=136928 kB, estimate=152822 kB
2023-07-22 04:25:38.242 UTC [2699068] LOG:  received fast shutdown request
2023-07-22 04:25:38.248 UTC [2699068] LOG:  aborting any active transactions
2023-07-22 04:25:38.249 UTC [2699068] LOG:  background worker "logical replication launcher" (PID 2699074) exited with exit code 1
2023-07-22 04:25:38.249 UTC [2699069] LOG:  shutting down
2023-07-22 04:25:38.252 UTC [2699069] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:25:38.272 UTC [2699069] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.023 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=137540 kB
2023-07-22 04:25:38.301 UTC [2699068] LOG:  database system is shut down
2023-07-22 04:25:39.105 UTC [2699246] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:25:39.105 UTC [2699246] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:25:39.111 UTC [2699246] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:25:39.121 UTC [2699249] LOG:  database system was shut down at 2023-07-22 04:25:38 UTC
2023-07-22 04:25:39.127 UTC [2699246] LOG:  database system is ready to accept connections
2023-07-22 04:25:39.522 UTC [2699293] ERROR:  Type of sequence element int4 doesn't match with function cs_to_float4_array return type
2023-07-22 04:25:39.522 UTC [2699293] STATEMENT:  select cs_to_float4_array('int4:{1,2,3,4,5}');
2023-07-22 04:25:39.618 UTC [2699369] ERROR:  no matching timestamp in timeseries
2023-07-22 04:25:39.618 UTC [2699369] STATEMENT:  select (Quote_project(Quote_get('IBM'), Quote_join('IBM', 'date:{2-Nov-2013,4-Nov-2013,03-Nov-2013,01-Nov-2013}', 0))).*;
2023-07-22 04:25:39.739 UTC [2699396] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:25:39.739 UTC [2699396] STATEMENT:  select gen_salt('foo');
2023-07-22 04:25:39.739 UTC [2699396] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:25:39.739 UTC [2699396] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:25:39.739 UTC [2699396] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:25:39.739 UTC [2699396] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:25:39.740 UTC [2699396] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:25:39.740 UTC [2699396] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:25:39.779 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.779 UTC [2699416] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:25:39.779 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.779 UTC [2699416] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:25:39.779 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.779 UTC [2699416] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:25:39.779 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.779 UTC [2699416] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Key was too big
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Key was too big
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Key was too big
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Key was too big
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:25:39.780 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.780 UTC [2699416] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:25:39.781 UTC [2699416] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:25:39.781 UTC [2699416] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:25:39.781 UTC [2699416] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:25:39.781 UTC [2699416] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:25:39.781 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.781 UTC [2699416] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:25:39.781 UTC [2699416] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.781 UTC [2699416] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:25:39.790 UTC [2699422] ERROR:  encrypt error: Encryption failed
2023-07-22 04:25:39.790 UTC [2699422] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:25:39.791 UTC [2699422] ERROR:  decrypt error: Decryption failed
2023-07-22 04:25:39.791 UTC [2699422] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:25:39.791 UTC [2699422] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:25:39.791 UTC [2699422] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:25:39.808 UTC [2699430] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.808 UTC [2699430] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:25:39.809 UTC [2699430] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.809 UTC [2699430] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:25:39.826 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.826 UTC [2699440] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:25:39.826 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.826 UTC [2699440] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:25:39.826 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.826 UTC [2699440] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:25:39.826 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.826 UTC [2699440] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:25:39.826 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.826 UTC [2699440] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:25:39.826 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.826 UTC [2699440] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:25:39.827 UTC [2699440] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:25:39.827 UTC [2699440] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:25:39.827 UTC [2699440] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:25:39.827 UTC [2699440] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:25:39.827 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.827 UTC [2699440] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:25:39.827 UTC [2699440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:25:39.827 UTC [2699440] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:25:39.836 UTC [2699446] ERROR:  invalid salt
2023-07-22 04:25:39.836 UTC [2699446] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:25:39.960 UTC [2699454] ERROR:  invalid salt
2023-07-22 04:25:39.960 UTC [2699454] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:25:39.960 UTC [2699454] ERROR:  invalid salt
2023-07-22 04:25:39.960 UTC [2699454] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:25:39.961 UTC [2699454] ERROR:  invalid salt
2023-07-22 04:25:39.961 UTC [2699454] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:25:40.010 UTC [2699458] ERROR:  invalid salt
2023-07-22 04:25:40.010 UTC [2699458] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:25:40.011 UTC [2699458] ERROR:  crypt(3) returned NULL
2023-07-22 04:25:40.011 UTC [2699458] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:25:40.011 UTC [2699458] ERROR:  crypt(3) returned NULL
2023-07-22 04:25:40.011 UTC [2699458] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:25:40.061 UTC [2699462] ERROR:  Corrupt ascii-armor
2023-07-22 04:25:40.061 UTC [2699462] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:25:40.062 UTC [2699462] ERROR:  Corrupt ascii-armor
2023-07-22 04:25:40.062 UTC [2699462] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:25:40.062 UTC [2699462] ERROR:  Corrupt ascii-armor
2023-07-22 04:25:40.062 UTC [2699462] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:25:40.072 UTC [2699462] ERROR:  mismatched array dimensions
2023-07-22 04:25:40.072 UTC [2699462] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:25:40.073 UTC [2699462] ERROR:  mismatched array dimensions
2023-07-22 04:25:40.073 UTC [2699462] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:25:40.073 UTC [2699462] ERROR:  wrong number of array subscripts
2023-07-22 04:25:40.073 UTC [2699462] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:25:40.074 UTC [2699462] ERROR:  wrong number of array subscripts
2023-07-22 04:25:40.074 UTC [2699462] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:25:40.074 UTC [2699462] ERROR:  null value not allowed for header key
2023-07-22 04:25:40.074 UTC [2699462] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:25:40.075 UTC [2699462] ERROR:  null value not allowed for header value
2023-07-22 04:25:40.075 UTC [2699462] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:25:40.076 UTC [2699462] ERROR:  header key must not contain newlines
2023-07-22 04:25:40.076 UTC [2699462] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:25:40.076 UTC [2699462] ERROR:  header value must not contain newlines
2023-07-22 04:25:40.076 UTC [2699462] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:25:40.077 UTC [2699462] ERROR:  header key must not contain ": "
2023-07-22 04:25:40.077 UTC [2699462] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:25:40.105 UTC [2699466] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.105 UTC [2699466] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:25:40.138 UTC [2699466] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.138 UTC [2699466] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:25:40.140 UTC [2699466] ERROR:  Not text data
2023-07-22 04:25:40.140 UTC [2699466] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:25:40.141 UTC [2699466] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.141 UTC [2699466] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:25:40.141 UTC [2699466] ERROR:  Unsupported compression algorithm
2023-07-22 04:25:40.141 UTC [2699466] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:25:40.155 UTC [2699472] ERROR:  Not text data
2023-07-22 04:25:40.155 UTC [2699472] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:25:40.608 UTC [2699480] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.608 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:25:40.627 UTC [2699480] ERROR:  Wrong key
2023-07-22 04:25:40.627 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:25:40.628 UTC [2699480] ERROR:  No encryption key found
2023-07-22 04:25:40.628 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:25:40.629 UTC [2699480] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.629 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:25:40.635 UTC [2699480] ERROR:  Need password for secret key
2023-07-22 04:25:40.635 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:25:40.635 UTC [2699480] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.635 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:25:40.640 UTC [2699480] ERROR:  Wrong key or corrupt data
2023-07-22 04:25:40.640 UTC [2699480] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:25:40.662 UTC [2699486] ERROR:  No encryption key found
2023-07-22 04:25:40.662 UTC [2699486] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:25:40.662 UTC [2699486] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:25:40.662 UTC [2699486] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:25:40.663 UTC [2699486] ERROR:  Not text data
2023-07-22 04:25:40.663 UTC [2699486] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:25:40.671 UTC [2699490] ERROR:  No encryption key found
2023-07-22 04:25:40.671 UTC [2699490] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:25:40.673 UTC [2699490] ERROR:  No encryption key found
2023-07-22 04:25:40.673 UTC [2699490] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:26:12.328 UTC [2699247] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:26:12.558 UTC [2699247] LOG:  checkpoint complete: wrote 1094 buffers (6.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.046 s, sync=0.138 s, total=0.230 s; sync files=511, longest=0.010 s, average=0.001 s; distance=147287 kB, estimate=147287 kB
2023-07-22 04:26:43.917 UTC [2699247] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:26:44.043 UTC [2699247] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.127 s; sync files=4, longest=0.004 s, average=0.002 s; distance=137462 kB, estimate=146304 kB
2023-07-22 04:26:44.107 UTC [2699246] LOG:  received fast shutdown request
2023-07-22 04:26:44.110 UTC [2699246] LOG:  aborting any active transactions
2023-07-22 04:26:44.111 UTC [2699246] LOG:  background worker "logical replication launcher" (PID 2699252) exited with exit code 1
2023-07-22 04:26:44.112 UTC [2699247] LOG:  shutting down
2023-07-22 04:26:44.115 UTC [2699247] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:26:44.132 UTC [2699247] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131674 kB
2023-07-22 04:26:44.159 UTC [2699246] LOG:  database system is shut down
2023-07-22 04:26:44.876 UTC [2699616] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:26:44.876 UTC [2699616] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:26:44.883 UTC [2699616] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:26:44.890 UTC [2699619] LOG:  database system was shut down at 2023-07-22 04:26:44 UTC
2023-07-22 04:26:44.896 UTC [2699616] LOG:  database system is ready to accept connections
2023-07-22 04:26:45.231 UTC [2699666] ERROR:  Type of sequence element int4 doesn't match with function cs_to_float4_array return type
2023-07-22 04:26:45.231 UTC [2699666] STATEMENT:  select cs_to_float4_array('int4:{1,2,3,4,5}');
2023-07-22 04:26:45.328 UTC [2699742] ERROR:  no matching timestamp in timeseries
2023-07-22 04:26:45.328 UTC [2699742] STATEMENT:  select (Quote_project(Quote_get('IBM'), Quote_join('IBM', 'date:{2-Nov-2013,4-Nov-2013,03-Nov-2013,01-Nov-2013}', 0))).*;
2023-07-22 04:27:17.076 UTC [2699617] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:27:17.182 UTC [2699617] LOG:  checkpoint complete: wrote 580 buffers (3.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.042 s, total=0.107 s; sync files=256, longest=0.004 s, average=0.001 s; distance=142471 kB, estimate=142471 kB
2023-07-22 04:27:48.536 UTC [2699617] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:27:48.647 UTC [2699617] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.012 s, sync=0.011 s, total=0.112 s; sync files=4, longest=0.008 s, average=0.003 s; distance=135432 kB, estimate=141767 kB
2023-07-22 04:27:48.696 UTC [2699616] LOG:  received fast shutdown request
2023-07-22 04:27:48.701 UTC [2699616] LOG:  aborting any active transactions
2023-07-22 04:27:48.704 UTC [2699616] LOG:  background worker "logical replication launcher" (PID 2699622) exited with exit code 1
2023-07-22 04:27:48.705 UTC [2699617] LOG:  shutting down
2023-07-22 04:27:48.712 UTC [2699617] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:27:48.750 UTC [2699617] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.002 s, total=0.045 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=127590 kB
2023-07-22 04:27:48.805 UTC [2699616] LOG:  database system is shut down
2023-07-22 04:27:49.635 UTC [2699885] FATAL:  could not access file "intagg": No such file or directory
2023-07-22 04:27:49.635 UTC [2699885] LOG:  database system is shut down
2023-07-22 04:27:50.335 UTC [2699918] FATAL:  could not access file "intagg": No such file or directory
2023-07-22 04:27:50.336 UTC [2699918] LOG:  database system is shut down
2023-07-22 04:27:51.039 UTC [2699959] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:27:51.040 UTC [2699959] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:27:51.045 UTC [2699959] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:27:51.052 UTC [2699962] LOG:  database system was shut down at 2023-07-22 04:27:50 UTC
2023-07-22 04:27:51.058 UTC [2699959] LOG:  database system is ready to accept connections
2023-07-22 04:27:51.535 UTC [2699978] ERROR:  value 0 out of bounds for option "numranges"
2023-07-22 04:27:51.535 UTC [2699978] DETAIL:  Valid values are between "1" and "252".
2023-07-22 04:27:51.535 UTC [2699978] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 0));
2023-07-22 04:27:51.535 UTC [2699978] ERROR:  value 253 out of bounds for option "numranges"
2023-07-22 04:27:51.535 UTC [2699978] DETAIL:  Valid values are between "1" and "252".
2023-07-22 04:27:51.535 UTC [2699978] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 253));
2023-07-22 04:27:51.757 UTC [2699978] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:27:51.757 UTC [2699978] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:27:51.757 UTC [2699978] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 0));
2023-07-22 04:27:51.758 UTC [2699978] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:27:51.758 UTC [2699978] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:27:51.758 UTC [2699978] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 2025));
2023-07-22 04:27:52.393 UTC [2699960] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:27:52.425 UTC [2699960] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.009 s, sync=0.005 s, total=0.032 s; sync files=7, longest=0.003 s, average=0.001 s; distance=29613 kB, estimate=29613 kB
2023-07-22 04:27:52.501 UTC [2699993] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:27:52.501 UTC [2699993] STATEMENT:  select gen_salt('foo');
2023-07-22 04:27:52.501 UTC [2699993] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:27:52.501 UTC [2699993] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:27:52.501 UTC [2699993] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:27:52.501 UTC [2699993] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:27:52.501 UTC [2699993] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:27:52.501 UTC [2699993] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:27:52.538 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.538 UTC [2700013] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:27:52.538 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.538 UTC [2700013] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:27:52.538 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.538 UTC [2700013] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:27:52.538 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.538 UTC [2700013] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Key was too big
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Key was too big
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Key was too big
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Key was too big
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:27:52.539 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.539 UTC [2700013] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:27:52.540 UTC [2700013] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.540 UTC [2700013] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:27:52.548 UTC [2700019] ERROR:  encrypt error: Encryption failed
2023-07-22 04:27:52.548 UTC [2700019] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:27:52.549 UTC [2700019] ERROR:  decrypt error: Decryption failed
2023-07-22 04:27:52.549 UTC [2700019] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:27:52.549 UTC [2700019] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:27:52.549 UTC [2700019] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:27:52.564 UTC [2700027] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.564 UTC [2700027] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:27:52.564 UTC [2700027] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.564 UTC [2700027] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:27:52.564 UTC [2700027] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.564 UTC [2700027] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:27:52.564 UTC [2700027] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.564 UTC [2700027] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:27:52.565 UTC [2700027] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:27:52.565 UTC [2700027] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:27:52.565 UTC [2700027] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:27:52.565 UTC [2700027] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:27:52.565 UTC [2700027] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.565 UTC [2700027] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:27:52.565 UTC [2700027] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.565 UTC [2700027] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:27:52.580 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.580 UTC [2700037] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:27:52.580 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.580 UTC [2700037] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:27:52.580 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.580 UTC [2700037] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:27:52.580 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.580 UTC [2700037] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:27:52.580 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.580 UTC [2700037] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:27:52.580 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.580 UTC [2700037] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:27:52.581 UTC [2700037] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:27:52.581 UTC [2700037] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:27:52.581 UTC [2700037] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:27:52.581 UTC [2700037] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:27:52.581 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.581 UTC [2700037] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:27:52.581 UTC [2700037] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:27:52.581 UTC [2700037] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:27:52.589 UTC [2700043] ERROR:  invalid salt
2023-07-22 04:27:52.589 UTC [2700043] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:27:52.697 UTC [2700053] ERROR:  invalid salt
2023-07-22 04:27:52.697 UTC [2700053] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:27:52.697 UTC [2700053] ERROR:  invalid salt
2023-07-22 04:27:52.697 UTC [2700053] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:27:52.697 UTC [2700053] ERROR:  invalid salt
2023-07-22 04:27:52.697 UTC [2700053] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:27:52.744 UTC [2700057] ERROR:  invalid salt
2023-07-22 04:27:52.744 UTC [2700057] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:27:52.744 UTC [2700057] ERROR:  crypt(3) returned NULL
2023-07-22 04:27:52.744 UTC [2700057] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:27:52.744 UTC [2700057] ERROR:  crypt(3) returned NULL
2023-07-22 04:27:52.744 UTC [2700057] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:27:52.785 UTC [2700061] ERROR:  Corrupt ascii-armor
2023-07-22 04:27:52.785 UTC [2700061] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:27:52.786 UTC [2700061] ERROR:  Corrupt ascii-armor
2023-07-22 04:27:52.786 UTC [2700061] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:27:52.787 UTC [2700061] ERROR:  Corrupt ascii-armor
2023-07-22 04:27:52.787 UTC [2700061] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:27:52.795 UTC [2700061] ERROR:  mismatched array dimensions
2023-07-22 04:27:52.795 UTC [2700061] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:27:52.796 UTC [2700061] ERROR:  mismatched array dimensions
2023-07-22 04:27:52.796 UTC [2700061] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:27:52.796 UTC [2700061] ERROR:  wrong number of array subscripts
2023-07-22 04:27:52.796 UTC [2700061] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:27:52.796 UTC [2700061] ERROR:  wrong number of array subscripts
2023-07-22 04:27:52.796 UTC [2700061] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:27:52.796 UTC [2700061] ERROR:  null value not allowed for header key
2023-07-22 04:27:52.796 UTC [2700061] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:27:52.797 UTC [2700061] ERROR:  null value not allowed for header value
2023-07-22 04:27:52.797 UTC [2700061] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:27:52.798 UTC [2700061] ERROR:  header key must not contain newlines
2023-07-22 04:27:52.798 UTC [2700061] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:27:52.798 UTC [2700061] ERROR:  header value must not contain newlines
2023-07-22 04:27:52.798 UTC [2700061] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:27:52.799 UTC [2700061] ERROR:  header key must not contain ": "
2023-07-22 04:27:52.799 UTC [2700061] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:27:52.823 UTC [2700065] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:52.823 UTC [2700065] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:27:52.855 UTC [2700065] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:52.855 UTC [2700065] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:27:52.857 UTC [2700065] ERROR:  Not text data
2023-07-22 04:27:52.857 UTC [2700065] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:27:52.858 UTC [2700065] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:52.858 UTC [2700065] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:27:52.858 UTC [2700065] ERROR:  Unsupported compression algorithm
2023-07-22 04:27:52.858 UTC [2700065] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:27:52.874 UTC [2700071] ERROR:  Not text data
2023-07-22 04:27:52.874 UTC [2700071] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:27:53.311 UTC [2700079] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:53.311 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:27:53.328 UTC [2700079] ERROR:  Wrong key
2023-07-22 04:27:53.328 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:27:53.328 UTC [2700079] ERROR:  No encryption key found
2023-07-22 04:27:53.328 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:27:53.330 UTC [2700079] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:53.330 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:27:53.335 UTC [2700079] ERROR:  Need password for secret key
2023-07-22 04:27:53.335 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:27:53.335 UTC [2700079] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:53.335 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:27:53.339 UTC [2700079] ERROR:  Wrong key or corrupt data
2023-07-22 04:27:53.339 UTC [2700079] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:27:53.362 UTC [2700085] ERROR:  No encryption key found
2023-07-22 04:27:53.362 UTC [2700085] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:27:53.363 UTC [2700085] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:27:53.363 UTC [2700085] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:27:53.364 UTC [2700085] ERROR:  Not text data
2023-07-22 04:27:53.364 UTC [2700085] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:27:53.373 UTC [2700089] ERROR:  No encryption key found
2023-07-22 04:27:53.373 UTC [2700089] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:27:53.374 UTC [2700089] ERROR:  No encryption key found
2023-07-22 04:27:53.374 UTC [2700089] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:28:24.915 UTC [2699960] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:25.105 UTC [2699960] LOG:  checkpoint complete: wrote 564 buffers (3.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.030 s, sync=0.121 s, total=0.191 s; sync files=260, longest=0.010 s, average=0.001 s; distance=141504 kB, estimate=141504 kB
2023-07-22 04:28:56.463 UTC [2699960] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:56.515 UTC [2699960] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.004 s, total=0.052 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136471 kB, estimate=141001 kB
2023-07-22 04:28:56.581 UTC [2699959] LOG:  received fast shutdown request
2023-07-22 04:28:56.584 UTC [2699959] LOG:  aborting any active transactions
2023-07-22 04:28:56.585 UTC [2699959] LOG:  background worker "logical replication launcher" (PID 2699965) exited with exit code 1
2023-07-22 04:28:56.586 UTC [2699960] LOG:  shutting down
2023-07-22 04:28:56.589 UTC [2699960] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:28:56.604 UTC [2699960] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126901 kB
2023-07-22 04:28:56.623 UTC [2699959] LOG:  database system is shut down
2023-07-22 04:28:57.320 UTC [2700213] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:28:57.320 UTC [2700213] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:28:57.326 UTC [2700213] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:28:57.334 UTC [2700216] LOG:  database system was shut down at 2023-07-22 04:28:57 UTC
2023-07-22 04:28:57.339 UTC [2700213] LOG:  database system is ready to accept connections
2023-07-22 04:28:57.847 UTC [2700235] ERROR:  value 0 out of bounds for option "numranges"
2023-07-22 04:28:57.847 UTC [2700235] DETAIL:  Valid values are between "1" and "252".
2023-07-22 04:28:57.847 UTC [2700235] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 0));
2023-07-22 04:28:57.848 UTC [2700235] ERROR:  value 253 out of bounds for option "numranges"
2023-07-22 04:28:57.848 UTC [2700235] DETAIL:  Valid values are between "1" and "252".
2023-07-22 04:28:57.848 UTC [2700235] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 253));
2023-07-22 04:28:58.066 UTC [2700235] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:28:58.066 UTC [2700235] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:28:58.066 UTC [2700235] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 0));
2023-07-22 04:28:58.067 UTC [2700235] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:28:58.067 UTC [2700235] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:28:58.067 UTC [2700235] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 2025));
2023-07-22 04:29:30.355 UTC [2700214] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:29:30.480 UTC [2700214] LOG:  checkpoint complete: wrote 625 buffers (3.8%); 0 WAL file(s) added, 0 removed, 10 recycled; write=0.021 s, sync=0.047 s, total=0.126 s; sync files=259, longest=0.004 s, average=0.001 s; distance=166850 kB, estimate=166850 kB
2023-07-22 04:30:01.906 UTC [2700214] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:30:01.985 UTC [2700214] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.079 s; sync files=4, longest=0.006 s, average=0.002 s; distance=135120 kB, estimate=163677 kB
2023-07-22 04:30:02.051 UTC [2700213] LOG:  received fast shutdown request
2023-07-22 04:30:02.058 UTC [2700213] LOG:  aborting any active transactions
2023-07-22 04:30:02.062 UTC [2700213] LOG:  background worker "logical replication launcher" (PID 2700219) exited with exit code 1
2023-07-22 04:30:02.062 UTC [2700214] LOG:  shutting down
2023-07-22 04:30:02.065 UTC [2700214] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:30:02.092 UTC [2700214] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.030 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=147310 kB
2023-07-22 04:30:02.144 UTC [2700213] LOG:  database system is shut down
2023-07-22 04:30:02.919 UTC [2700410] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:30:02.919 UTC [2700410] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:30:02.927 UTC [2700410] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:30:02.939 UTC [2700413] LOG:  database system was shut down at 2023-07-22 04:30:02 UTC
2023-07-22 04:30:02.944 UTC [2700410] LOG:  database system is ready to accept connections
2023-07-22 04:30:03.121 UTC [2700429] ERROR:  invalid IP4 value: '1.2.3' at character 8
2023-07-22 04:30:03.121 UTC [2700429] STATEMENT:  select '1.2.3'::ip4;
2023-07-22 04:30:03.122 UTC [2700429] ERROR:  invalid IP4 value: '0' at character 8
2023-07-22 04:30:03.122 UTC [2700429] STATEMENT:  select '0'::ip4;
2023-07-22 04:30:03.122 UTC [2700429] ERROR:  invalid IP4 value: ' 1.2.3.4' at character 8
2023-07-22 04:30:03.122 UTC [2700429] STATEMENT:  select ' 1.2.3.4'::ip4;
2023-07-22 04:30:03.122 UTC [2700429] ERROR:  invalid IP4 value: '1.2.3.4 ' at character 8
2023-07-22 04:30:03.122 UTC [2700429] STATEMENT:  select '1.2.3.4 '::ip4;
2023-07-22 04:30:03.122 UTC [2700429] ERROR:  invalid IP4 value: '0.0.0.256' at character 8
2023-07-22 04:30:03.122 UTC [2700429] STATEMENT:  select '0.0.0.256'::ip4;
2023-07-22 04:30:03.122 UTC [2700429] ERROR:  invalid IP4 value: '0.0.256' at character 8
2023-07-22 04:30:03.122 UTC [2700429] STATEMENT:  select '0.0.256'::ip4;
2023-07-22 04:30:03.122 UTC [2700429] ERROR:  invalid IP4 value: '0..255.0' at character 8
2023-07-22 04:30:03.122 UTC [2700429] STATEMENT:  select '0..255.0'::ip4;
2023-07-22 04:30:03.123 UTC [2700429] ERROR:  invalid IP4 value: '+0.255.0.0' at character 8
2023-07-22 04:30:03.123 UTC [2700429] STATEMENT:  select '+0.255.0.0'::ip4;
2023-07-22 04:30:03.123 UTC [2700429] ERROR:  invalid IP4 value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 04:30:03.123 UTC [2700429] STATEMENT:  select '1.2.3.4-1.2.3.4'::ip4;
2023-07-22 04:30:03.131 UTC [2700429] ERROR:  invalid IP6 value: '' at character 8
2023-07-22 04:30:03.131 UTC [2700429] STATEMENT:  select ''::ip6;
2023-07-22 04:30:03.131 UTC [2700429] ERROR:  invalid IP6 value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:30:03.131 UTC [2700429] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1.2.3.4:1111::5555' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1.2.3.4:1111::5555'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1.2.3.4::' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1.2.3.4::'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1.2.3.4::5555' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1.2.3.4::5555'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1111:' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1111:'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1111:2222:3333:4444::5555:'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1111:2222:3333::5555:' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1111:2222:3333::5555:'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1111:2222::5555:' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1111:2222::5555:'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1111::5555:' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1111::5555:'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '123' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '123'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '12345::6:7:8' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '12345::6:7:8'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '127.0.0.1' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '127.0.0.1'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ip6;
2023-07-22 04:30:03.132 UTC [2700429] ERROR:  invalid IP6 value: '1:2:3::4:5::7:8' at character 8
2023-07-22 04:30:03.132 UTC [2700429] STATEMENT:  select '1:2:3::4:5::7:8'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.2.256.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.2.256.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.2.3.256' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.2.3.256'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.2.3.300' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.2.3.300'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.2.3.900' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.2.3.900'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.2.300.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.2.300.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.2.900.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.2.900.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.256.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.256.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.300.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.300.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::1.900.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::1.900.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::256.2.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::256.2.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::260.2.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::260.2.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::2::3' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::2::3'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::300.2.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::300.2.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::300.300.300.300' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::300.300.300.300'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::3000.30.30.30' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::3000.30.30.30'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::400.2.3.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::400.2.3.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.2.256.4' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::5:1.2.256.4'::ip6;
2023-07-22 04:30:03.133 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.2.3.256' at character 8
2023-07-22 04:30:03.133 UTC [2700429] STATEMENT:  select '1::5:1.2.3.256'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.2.3.300' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.2.3.300'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.2.3.900' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.2.3.900'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.2.300.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.2.300.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.2.900.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.2.900.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.256.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.256.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.300.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.300.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:1.900.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:1.900.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:256.2.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:256.2.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:260.2.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:260.2.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:300.2.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:300.2.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:300.300.300.300' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:300.300.300.300'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:3000.30.30.30' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:3000.30.30.30'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:400.2.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:400.2.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::5:900.2.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::5:900.2.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1::900.2.3.4' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1::900.2.3.4'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '1:::3:4:5' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '1:::3:4:5'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 04:30:03.134 UTC [2700429] ERROR:  invalid IP6 value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 04:30:03.134 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '2001::FFD3::57ab' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '2001::FFD3::57ab'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '3ffe:b00::1::a' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '3ffe:b00::1::a'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: ':' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select ':'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select ':1111:2222:3333:4444::5555'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: ':1111:2222:3333::5555' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select ':1111:2222:3333::5555'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: ':1111:2222::5555' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select ':1111:2222::5555'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: ':1111::5555' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select ':1111::5555'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.2.256.4' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.2.256.4'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.2.3.256' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.2.3.256'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.2.3.300' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.2.3.300'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.2.3.900' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.2.3.900'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.2.300.4' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.2.300.4'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.2.900.4' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.2.900.4'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.256.3.4' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.256.3.4'::ip6;
2023-07-22 04:30:03.135 UTC [2700429] ERROR:  invalid IP6 value: '::1.300.3.4' at character 8
2023-07-22 04:30:03.135 UTC [2700429] STATEMENT:  select '::1.300.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::1.900.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::1.900.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::256.2.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::256.2.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::260.2.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::260.2.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::300.2.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::300.2.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::300.300.300.300' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::300.300.300.300'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::3000.30.30.30' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::3000.30.30.30'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::400.2.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::400.2.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::5555:' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::5555:'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::900.2.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::900.2.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: ':::' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select ':::'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: ':::5555' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select ':::5555'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::ffff:2.3.4' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::ffff:2.3.4'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: '::ffff:257.1.2.3' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select '::ffff:257.1.2.3'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: 'FF01::101::2' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select 'FF01::101::2'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ip6;
2023-07-22 04:30:03.136 UTC [2700429] ERROR:  invalid IP6 value: 'ldkfj' at character 8
2023-07-22 04:30:03.136 UTC [2700429] STATEMENT:  select 'ldkfj'::ip6;
2023-07-22 04:30:03.138 UTC [2700429] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 04:30:03.138 UTC [2700429] STATEMENT:  select '1.2.3'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '255.255.255.255-1.2.3'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/31'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/30'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/29'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/28'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/27'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/26'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/25'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/24'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/23'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/22'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/21'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/20'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/19'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/18'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/17'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/16'::ip4r;
2023-07-22 04:30:03.139 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 04:30:03.139 UTC [2700429] STATEMENT:  select '0.0.0.1/15'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/14'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/13'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/12'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/11'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/10'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/9'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/8'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/7'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/6'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/5'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/4'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/3'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/2'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/1'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.1/0'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.2/30'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.4/29'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.8/28'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.16/27'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.32/26'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.64/25'::ip4r;
2023-07-22 04:30:03.140 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 04:30:03.140 UTC [2700429] STATEMENT:  select '0.0.0.128/24'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.1.0/23'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.2.0/22'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.4.0/21'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.8.0/20'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.16.0/19'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.32.0/18'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.64.0/17'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.128.0/16'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.1.0.0/15'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.2.0.0/14'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.4.0.0/13'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.8.0.0/12'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.16.0.0/11'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.32.0.0/10'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.64.0.0/9'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.128.0.0/8'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '1.0.0.0/7'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '2.0.0.0/6'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '4.0.0.0/5'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '8.0.0.0/4'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '16.0.0.0/3'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '32.0.0.0/2'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '64.0.0.0/1'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '128.0.0.0/0'::ip4r;
2023-07-22 04:30:03.141 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 04:30:03.141 UTC [2700429] STATEMENT:  select '0.0.0.0/33'::ip4r;
2023-07-22 04:30:03.142 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 04:30:03.142 UTC [2700429] STATEMENT:  select '0.0.0.0/3.0'::ip4r;
2023-07-22 04:30:03.142 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 04:30:03.142 UTC [2700429] STATEMENT:  select '0.0.0.0/+33'::ip4r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '::-::-::'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::ip6r;
2023-07-22 04:30:03.144 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 04:30:03.144 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '::/129'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '::/255'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '::/256'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '::/+0'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '::/0-0'::ip6r;
2023-07-22 04:30:03.145 UTC [2700429] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 04:30:03.145 UTC [2700429] STATEMENT:  select '::-::/0'::ip6r;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '1.2.3' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '1.2.3'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '0' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '0'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: ' 1.2.3.4' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select ' 1.2.3.4'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4 ' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '1.2.3.4 '::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '0.0.0.256' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '0.0.0.256'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '0.0.256' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '0.0.256'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '0..255.0' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '0..255.0'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '+0.255.0.0' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '+0.255.0.0'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select '1.2.3.4-1.2.3.4'::ipaddress;
2023-07-22 04:30:03.151 UTC [2700429] ERROR:  invalid IP value: '' at character 8
2023-07-22 04:30:03.151 UTC [2700429] STATEMENT:  select ''::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4:1111::5555' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1.2.3.4:1111::5555'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4::' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1.2.3.4::'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1.2.3.4::5555' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1.2.3.4::5555'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1111:' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1111:'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1111:2222:3333:4444::5555:'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1111:2222:3333::5555:' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1111:2222:3333::5555:'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1111:2222::5555:' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1111:2222::5555:'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1111::5555:' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1111::5555:'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '123' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '123'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '12345::6:7:8' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '12345::6:7:8'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1:2:3::4:5::7:8' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1:2:3::4:5::7:8'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.2.256.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.2.256.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.2.3.256' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.2.3.256'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.2.3.300' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.2.3.300'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.2.3.900' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.2.3.900'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.2.300.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.2.300.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.2.900.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.2.900.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.256.3.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.256.3.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.300.3.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.300.3.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::1.900.3.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::1.900.3.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::256.2.3.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::256.2.3.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::260.2.3.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::260.2.3.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::2::3' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::2::3'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::300.2.3.4' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::300.2.3.4'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::300.300.300.300' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::300.300.300.300'::ipaddress;
2023-07-22 04:30:03.152 UTC [2700429] ERROR:  invalid IP value: '1::3000.30.30.30' at character 8
2023-07-22 04:30:03.152 UTC [2700429] STATEMENT:  select '1::3000.30.30.30'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::400.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::400.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.2.256.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.2.256.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.2.3.256' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.2.3.256'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.2.3.300' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.2.3.300'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.2.3.900' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.2.3.900'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.2.300.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.2.300.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.2.900.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.2.900.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.256.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.256.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.300.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.300.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:1.900.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:1.900.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:256.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:256.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:260.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:260.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:300.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:300.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:300.300.300.300' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:300.300.300.300'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:3000.30.30.30' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:3000.30.30.30'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:400.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:400.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::5:900.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::5:900.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1::900.2.3.4' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1::900.2.3.4'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '1:::3:4:5' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '1:::3:4:5'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001::FFD3::57ab' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001::FFD3::57ab'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: '3ffe:b00::1::a' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select '3ffe:b00::1::a'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: ':' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select ':'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select ':1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: ':1111:2222:3333::5555' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select ':1111:2222:3333::5555'::ipaddress;
2023-07-22 04:30:03.153 UTC [2700429] ERROR:  invalid IP value: ':1111:2222::5555' at character 8
2023-07-22 04:30:03.153 UTC [2700429] STATEMENT:  select ':1111:2222::5555'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: ':1111::5555' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select ':1111::5555'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.2.256.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.2.256.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.2.3.256' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.2.3.256'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.2.3.300' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.2.3.300'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.2.3.900' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.2.3.900'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.2.300.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.2.300.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.2.900.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.2.900.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.256.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.256.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.300.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.300.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1.900.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1.900.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::256.2.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::256.2.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::260.2.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::260.2.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::300.2.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::300.2.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::300.300.300.300' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::300.300.300.300'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::3000.30.30.30' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::3000.30.30.30'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::400.2.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::400.2.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::5555:' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::5555:'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::900.2.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::900.2.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: ':::' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select ':::'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: ':::5555' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select ':::5555'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::ffff:2.3.4' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::ffff:2.3.4'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: '::ffff:257.1.2.3' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select '::ffff:257.1.2.3'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: 'FF01::101::2' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select 'FF01::101::2'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ipaddress;
2023-07-22 04:30:03.154 UTC [2700429] ERROR:  invalid IP value: 'ldkfj' at character 8
2023-07-22 04:30:03.154 UTC [2700429] STATEMENT:  select 'ldkfj'::ipaddress;
2023-07-22 04:30:03.158 UTC [2700429] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 04:30:03.158 UTC [2700429] STATEMENT:  select '1.2.3'::iprange;
2023-07-22 04:30:03.158 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 04:30:03.158 UTC [2700429] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::iprange;
2023-07-22 04:30:03.158 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 04:30:03.158 UTC [2700429] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '255.255.255.255-1.2.3'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/31'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/30'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/29'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/28'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/27'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/26'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/25'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/24'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/23'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/22'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/21'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/20'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/19'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/18'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/17'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/16'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/15'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/14'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/13'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/12'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/11'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/10'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/9'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/8'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/7'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/6'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/5'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/4'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/3'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/2'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/1'::iprange;
2023-07-22 04:30:03.159 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 04:30:03.159 UTC [2700429] STATEMENT:  select '0.0.0.1/0'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.2/30'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.4/29'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.8/28'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.16/27'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.32/26'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.64/25'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.128/24'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.1.0/23'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.2.0/22'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.4.0/21'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.8.0/20'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.16.0/19'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.32.0/18'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.64.0/17'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.128.0/16'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.1.0.0/15'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.2.0.0/14'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.4.0.0/13'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.8.0.0/12'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.16.0.0/11'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.32.0.0/10'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.64.0.0/9'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.128.0.0/8'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '1.0.0.0/7'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '2.0.0.0/6'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '4.0.0.0/5'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '8.0.0.0/4'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '16.0.0.0/3'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '32.0.0.0/2'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '64.0.0.0/1'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '128.0.0.0/0'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.0/33'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.0/3.0'::iprange;
2023-07-22 04:30:03.160 UTC [2700429] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 04:30:03.160 UTC [2700429] STATEMENT:  select '0.0.0.0/+33'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '::-::-::'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '::/129'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '::/255'::iprange;
2023-07-22 04:30:03.161 UTC [2700429] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 04:30:03.161 UTC [2700429] STATEMENT:  select '::/256'::iprange;
2023-07-22 04:30:03.162 UTC [2700429] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 04:30:03.162 UTC [2700429] STATEMENT:  select '::/+0'::iprange;
2023-07-22 04:30:03.162 UTC [2700429] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 04:30:03.162 UTC [2700429] STATEMENT:  select '::/0-0'::iprange;
2023-07-22 04:30:03.162 UTC [2700429] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 04:30:03.162 UTC [2700429] STATEMENT:  select '::-::/0'::iprange;
2023-07-22 04:30:03.162 UTC [2700429] ERROR:  invalid IP6R value: "-::" at character 8
2023-07-22 04:30:03.162 UTC [2700429] STATEMENT:  select '-::'::iprange;
2023-07-22 04:30:03.162 UTC [2700429] ERROR:  invalid IP4R value: "-1.2.3.4" at character 8
2023-07-22 04:30:03.162 UTC [2700429] STATEMENT:  select '-1.2.3.4'::iprange;
2023-07-22 04:30:03.162 UTC [2700429] ERROR:  invalid IP4R value: "1.2.3.4-" at character 8
2023-07-22 04:30:03.162 UTC [2700429] STATEMENT:  select '1.2.3.4-'::iprange;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '1.2.3'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '0'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select ' 1.2.3.4'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '1.2.3.4 '::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '0.0.0.256'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '0.0.256'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '0..255.0'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '+0.255.0.0'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4 value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ip4;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '1.2.3'::text::ip4r;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::text::ip4r;
2023-07-22 04:30:03.176 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.176 UTC [2700429] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '255.255.255.255-1.2.3'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/31'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/30'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/29'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/28'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/27'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/26'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/25'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/24'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/23'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/22'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/21'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/20'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/19'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/18'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/17'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/16'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/15'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/14'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/13'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/12'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/11'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/10'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/9'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/8'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/7'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/6'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/5'::text::ip4r;
2023-07-22 04:30:03.177 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.177 UTC [2700429] STATEMENT:  select '0.0.0.1/4'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.1/3'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.1/2'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.1/1'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.1/0'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.2/30'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.4/29'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.8/28'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.16/27'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.32/26'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.64/25'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.0.128/24'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.1.0/23'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.2.0/22'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.4.0/21'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.8.0/20'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.16.0/19'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.32.0/18'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.64.0/17'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.0.128.0/16'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.1.0.0/15'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.2.0.0/14'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.4.0.0/13'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.8.0.0/12'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.16.0.0/11'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.32.0.0/10'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.64.0.0/9'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '0.128.0.0/8'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '1.0.0.0/7'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '2.0.0.0/6'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '4.0.0.0/5'::text::ip4r;
2023-07-22 04:30:03.178 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.178 UTC [2700429] STATEMENT:  select '8.0.0.0/4'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '16.0.0.0/3'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '32.0.0.0/2'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '64.0.0.0/1'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '128.0.0.0/0'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '0.0.0.0/33'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '0.0.0.0/3.0'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP4R value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '0.0.0.0/+33'::text::ip4r;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select ''::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1.2.3.4:1111::5555'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1.2.3.4::'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1.2.3.4::5555'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1111:'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1111:2222:3333::5555:'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1111:2222::5555:'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1111::5555:'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '123'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '12345::6:7:8'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '127.0.0.1'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1:2:3::4:5::7:8'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1::1.2.256.4'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1::1.2.3.256'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1::1.2.3.300'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1::1.2.3.900'::text::ip6;
2023-07-22 04:30:03.179 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.179 UTC [2700429] STATEMENT:  select '1::1.2.300.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::1.2.900.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::1.256.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::1.300.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::1.900.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::256.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::260.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::2::3'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::300.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::300.300.300.300'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::3000.30.30.30'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::400.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.2.256.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.2.3.256'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.2.3.300'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.2.3.900'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.2.300.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.2.900.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.256.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.300.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:1.900.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:256.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:260.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:300.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:300.300.300.300'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:3000.30.30.30'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:400.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::5:900.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1::900.2.3.4'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '1:::3:4:5'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:30:03.180 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.180 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '2001::FFD3::57ab'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '3ffe:b00::1::a'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select ':'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select ':1111:2222:3333::5555'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select ':1111:2222::5555'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select ':1111::5555'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.2.256.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.2.3.256'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.2.3.300'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.2.3.900'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.2.300.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.2.900.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.256.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.300.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1.900.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::256.2.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::260.2.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::300.2.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::300.300.300.300'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::3000.30.30.30'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::400.2.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::5555:'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select '::900.2.3.4'::text::ip6;
2023-07-22 04:30:03.181 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.181 UTC [2700429] STATEMENT:  select ':::'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select ':::5555'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '::ffff:2.3.4'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '::ffff:257.1.2.3'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select 'FF01::101::2'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6 value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select 'ldkfj'::text::ip6;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '::-::-::'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::text::ip6r;
2023-07-22 04:30:03.182 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.182 UTC [2700429] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '::/129'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '::/255'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '::/256'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '::/+0'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '::/0-0'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP6R value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '::-::/0'::text::ip6r;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select ' 1.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4 '::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0.0.0.256'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0.0.256'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '0..255.0'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '+0.255.0.0'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select ''::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4:1111::5555'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4::'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1.2.3.4::5555'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1111:'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1111:2222:3333::5555:'::text::ipaddress;
2023-07-22 04:30:03.183 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.183 UTC [2700429] STATEMENT:  select '1111:2222::5555:'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1111::5555:'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '123'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '12345::6:7:8'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1:2:3::4:5::7:8'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.2.256.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.2.3.256'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.2.3.300'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.2.3.900'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.2.300.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.2.900.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.256.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.300.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::1.900.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::256.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::260.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::2::3'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::300.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::300.300.300.300'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::3000.30.30.30'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::400.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.2.256.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.2.3.256'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.2.3.300'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.2.3.900'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.2.300.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.2.900.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.256.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.300.3.4'::text::ipaddress;
2023-07-22 04:30:03.184 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.184 UTC [2700429] STATEMENT:  select '1::5:1.900.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:256.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:260.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:300.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:300.300.300.300'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:3000.30.30.30'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:400.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::5:900.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1::900.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '1:::3:4:5'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001::FFD3::57ab'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '3ffe:b00::1::a'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select ':'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select ':1111:2222:3333::5555'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select ':1111:2222::5555'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select ':1111::5555'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.2.256.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.2.3.256'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.2.3.300'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.2.3.900'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.2.300.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.2.900.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.256.3.4'::text::ipaddress;
2023-07-22 04:30:03.185 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.185 UTC [2700429] STATEMENT:  select '::1.300.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::1.900.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::256.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::260.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::300.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::300.300.300.300'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::3000.30.30.30'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::400.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::5555:'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::900.2.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select ':::'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select ':::5555'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::ffff:2.3.4'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select '::ffff:257.1.2.3'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select 'FF01::101::2'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ipaddress;
2023-07-22 04:30:03.186 UTC [2700429] ERROR:  invalid IP value in text
2023-07-22 04:30:03.186 UTC [2700429] STATEMENT:  select 'ldkfj'::text::ipaddress;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (-4294967295::bigint)::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (4294967296::bigint)::ip4;
2023-07-22 04:30:03.189 UTC [2700429] WARNING:  double converted to IP4 is not integral
2023-07-22 04:30:03.189 UTC [2700429] WARNING:  double converted to IP4 is not integral
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (-4294967295::float8)::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (4294967296::float8)::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (-3000000000::float8)::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select 6000000000::float8::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select 6e10::float8::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select 6e30::float8::ip4;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (-1::numeric)::ip6;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  numeric value too large for conversion to IP6
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select 340282366920938463463374607431768211456::numeric::ip6;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select 0.1::numeric::ip6;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select 0.00000000000000000001::numeric::ip6;
2023-07-22 04:30:03.189 UTC [2700429] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:30:03.189 UTC [2700429] STATEMENT:  select (-0.00000000000000000001::numeric)::ip6;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid INET value for conversion to IP4
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '::'::inet::ip4;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid INET value for conversion to IP6
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '0.0.0.0'::inet::ip6;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid CIDR value for conversion to IP4R
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '::/128'::cidr::ip4r;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid CIDR value for conversion to IP6R
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '0.0.0.0/32'::cidr::ip6r;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid IPR value for conversion to IP4R
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '::/0'::iprange::ip4r;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid IPR value for conversion to IP6R
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '0.0.0.0/0'::iprange::ip6r;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid IP value in cast to IP4
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '::'::ipaddress::ip4;
2023-07-22 04:30:03.192 UTC [2700429] ERROR:  invalid IP value in cast to IP4
2023-07-22 04:30:03.192 UTC [2700429] STATEMENT:  select '0.0.0.0'::ipaddress::ip6;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'0102030')::ip4;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'0102030405')::ip4;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ip6;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ip6;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'0102030')::ipaddress;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'0102030405')::ipaddress;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ipaddress;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ipaddress;
2023-07-22 04:30:03.193 UTC [2700429] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:30:03.193 UTC [2700429] STATEMENT:  select (decode('010203','hex'))::ip4;
2023-07-22 04:30:03.194 UTC [2700429] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:30:03.194 UTC [2700429] STATEMENT:  select (decode('0102030405','hex'))::ip4;
2023-07-22 04:30:03.194 UTC [2700429] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:30:03.194 UTC [2700429] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ip6;
2023-07-22 04:30:03.194 UTC [2700429] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:30:03.194 UTC [2700429] STATEMENT:  select (decode('0102030405','hex'))::ipaddress;
2023-07-22 04:30:03.194 UTC [2700429] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:30:03.194 UTC [2700429] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ipaddress;
2023-07-22 04:30:03.194 UTC [2700429] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:30:03.194 UTC [2700429] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ffffff','hex'))::ipaddress;
2023-07-22 04:30:03.195 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.195 UTC [2700429] STATEMENT:  select ip4_netmask(33);
2023-07-22 04:30:03.195 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.195 UTC [2700429] STATEMENT:  select ip4_netmask(-1);
2023-07-22 04:30:03.195 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.195 UTC [2700429] STATEMENT:  select ip6_netmask(129);
2023-07-22 04:30:03.195 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.195 UTC [2700429] STATEMENT:  select ip6_netmask(-1);
2023-07-22 04:30:03.196 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.196 UTC [2700429] STATEMENT:  select ip4_net_lower('255.255.255.255',33);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip4_net_lower('255.255.255.255',-1);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip4_net_upper('0.0.0.0',33);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip4_net_upper('0.0.0.0',-1);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip6_net_upper('::',129);
2023-07-22 04:30:03.197 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.197 UTC [2700429] STATEMENT:  select ip6_net_upper('::',-1);
2023-07-22 04:30:03.198 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.198 UTC [2700429] STATEMENT:  select ipaddress_net_lower('255.255.255.255',33);
2023-07-22 04:30:03.198 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.198 UTC [2700429] STATEMENT:  select ipaddress_net_lower('255.255.255.255',-1);
2023-07-22 04:30:03.198 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.198 UTC [2700429] STATEMENT:  select ipaddress_net_upper('0.0.0.0',33);
2023-07-22 04:30:03.198 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.198 UTC [2700429] STATEMENT:  select ipaddress_net_upper('0.0.0.0',-1);
2023-07-22 04:30:03.198 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.198 UTC [2700429] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 04:30:03.198 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.198 UTC [2700429] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 04:30:03.199 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.199 UTC [2700429] STATEMENT:  select ipaddress_net_upper('::',129);
2023-07-22 04:30:03.199 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.199 UTC [2700429] STATEMENT:  select ipaddress_net_upper('::',-1);
2023-07-22 04:30:03.201 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.201 UTC [2700429] STATEMENT:  select ip4 '255.255.255.255' / 33;
2023-07-22 04:30:03.201 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.201 UTC [2700429] STATEMENT:  select ip4 '255.255.255.255' / -1;
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ip4 '255.255.255.255' / ip4 '0.255.255.255';
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ip4 '255.255.255.255' / ip4 '255.254.255.255';
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff::ffff';
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ipaddress '255.255.255.255' / 33;
2023-07-22 04:30:03.202 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.202 UTC [2700429] STATEMENT:  select ipaddress '255.255.255.255' / -1;
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  prefix length out of range
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '0.255.255.255';
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '255.254.255.255';
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  invalid netmask
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff::ffff';
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  invalid mixing of IP address families
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress '0.0.0.0';
2023-07-22 04:30:03.203 UTC [2700429] ERROR:  invalid mixing of IP address families
2023-07-22 04:30:03.203 UTC [2700429] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '::';
2023-07-22 04:30:03.205 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.205 UTC [2700429] STATEMENT:  select a + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.205 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.205 UTC [2700429] STATEMENT:  select a::ipaddress + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.205 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.205 UTC [2700429] STATEMENT:  select a - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.205 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.205 UTC [2700429] STATEMENT:  select a::ipaddress - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.206 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.206 UTC [2700429] STATEMENT:  select a::ipaddress - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:30:03.207 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.207 UTC [2700429] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:03.207 UTC [2700429] ERROR:  ip address out of range
2023-07-22 04:30:03.207 UTC [2700429] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:30:04.453 UTC [2700435] ERROR:  invalid preceding or following size in window function
2023-07-22 04:30:04.453 UTC [2700435] DETAIL:  Offset value -33 is outside the range -32 to 4294967295
2023-07-22 04:30:04.453 UTC [2700435] STATEMENT:  select a4,
	       array_agg(a4) over (order by a4 range between -33 preceding and -33 following)
	  from ipaddrs
	 where a4 is not null;
2023-07-22 04:30:04.453 UTC [2700435] ERROR:  invalid preceding or following size in window function
2023-07-22 04:30:04.453 UTC [2700435] DETAIL:  Offset value -129 is outside the range -128 to 2^63-1
2023-07-22 04:30:04.453 UTC [2700435] STATEMENT:  select a6,
	       array_agg(a6) over (order by a6 range between -129 preceding and -129 following)
	  from ipaddrs
	 where a6 is not null;
2023-07-22 04:30:04.462 UTC [2700411] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:30:04.573 UTC [2700411] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.007 s, total=0.112 s; sync files=7, longest=0.003 s, average=0.001 s; distance=11412 kB, estimate=11412 kB
2023-07-22 04:30:04.731 UTC [2700450] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:30:04.731 UTC [2700450] STATEMENT:  select gen_salt('foo');
2023-07-22 04:30:04.731 UTC [2700450] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:30:04.731 UTC [2700450] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:30:04.732 UTC [2700450] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:30:04.732 UTC [2700450] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:30:04.732 UTC [2700450] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:30:04.732 UTC [2700450] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:30:04.771 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.771 UTC [2700470] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:30:04.771 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.771 UTC [2700470] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:30:04.771 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.771 UTC [2700470] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:30:04.771 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.771 UTC [2700470] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Key was too big
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Key was too big
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Key was too big
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:30:04.772 UTC [2700470] ERROR:  encrypt error: Key was too big
2023-07-22 04:30:04.772 UTC [2700470] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:30:04.773 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.773 UTC [2700470] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:30:04.773 UTC [2700470] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:30:04.773 UTC [2700470] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:30:04.773 UTC [2700470] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:30:04.773 UTC [2700470] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:30:04.773 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.773 UTC [2700470] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:30:04.773 UTC [2700470] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.773 UTC [2700470] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:30:04.782 UTC [2700476] ERROR:  encrypt error: Encryption failed
2023-07-22 04:30:04.782 UTC [2700476] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:30:04.783 UTC [2700476] ERROR:  decrypt error: Decryption failed
2023-07-22 04:30:04.783 UTC [2700476] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:30:04.783 UTC [2700476] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:30:04.783 UTC [2700476] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:30:04.799 UTC [2700484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.799 UTC [2700484] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:30:04.799 UTC [2700484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.799 UTC [2700484] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:30:04.799 UTC [2700484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.799 UTC [2700484] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:30:04.799 UTC [2700484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.799 UTC [2700484] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:30:04.799 UTC [2700484] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:30:04.799 UTC [2700484] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:30:04.800 UTC [2700484] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:30:04.800 UTC [2700484] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:30:04.800 UTC [2700484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.800 UTC [2700484] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:30:04.800 UTC [2700484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.800 UTC [2700484] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:30:04.816 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.816 UTC [2700494] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:30:04.816 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.816 UTC [2700494] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:30:04.816 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.816 UTC [2700494] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:30:04.816 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.816 UTC [2700494] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:30:04.816 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.816 UTC [2700494] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:30:04.817 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.817 UTC [2700494] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:30:04.817 UTC [2700494] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:30:04.817 UTC [2700494] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:30:04.817 UTC [2700494] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:30:04.817 UTC [2700494] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:30:04.817 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.817 UTC [2700494] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:30:04.817 UTC [2700494] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:30:04.817 UTC [2700494] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:30:04.826 UTC [2700500] ERROR:  invalid salt
2023-07-22 04:30:04.826 UTC [2700500] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:30:04.887 UTC [2700508] ERROR:  invalid salt
2023-07-22 04:30:04.887 UTC [2700508] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:30:04.887 UTC [2700508] ERROR:  invalid salt
2023-07-22 04:30:04.887 UTC [2700508] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:30:04.888 UTC [2700508] ERROR:  invalid salt
2023-07-22 04:30:04.888 UTC [2700508] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:30:04.942 UTC [2700512] ERROR:  invalid salt
2023-07-22 04:30:04.942 UTC [2700512] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:30:04.942 UTC [2700512] ERROR:  crypt(3) returned NULL
2023-07-22 04:30:04.942 UTC [2700512] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:30:04.942 UTC [2700512] ERROR:  crypt(3) returned NULL
2023-07-22 04:30:04.942 UTC [2700512] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:30:04.992 UTC [2700516] ERROR:  Corrupt ascii-armor
2023-07-22 04:30:04.992 UTC [2700516] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:30:04.993 UTC [2700516] ERROR:  Corrupt ascii-armor
2023-07-22 04:30:04.993 UTC [2700516] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:30:04.993 UTC [2700516] ERROR:  Corrupt ascii-armor
2023-07-22 04:30:04.993 UTC [2700516] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:30:05.003 UTC [2700516] ERROR:  mismatched array dimensions
2023-07-22 04:30:05.003 UTC [2700516] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:30:05.003 UTC [2700516] ERROR:  mismatched array dimensions
2023-07-22 04:30:05.003 UTC [2700516] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:30:05.004 UTC [2700516] ERROR:  wrong number of array subscripts
2023-07-22 04:30:05.004 UTC [2700516] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:30:05.004 UTC [2700516] ERROR:  wrong number of array subscripts
2023-07-22 04:30:05.004 UTC [2700516] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:30:05.004 UTC [2700516] ERROR:  null value not allowed for header key
2023-07-22 04:30:05.004 UTC [2700516] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:30:05.005 UTC [2700516] ERROR:  null value not allowed for header value
2023-07-22 04:30:05.005 UTC [2700516] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:30:05.006 UTC [2700516] ERROR:  header key must not contain newlines
2023-07-22 04:30:05.006 UTC [2700516] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:30:05.007 UTC [2700516] ERROR:  header value must not contain newlines
2023-07-22 04:30:05.007 UTC [2700516] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:30:05.007 UTC [2700516] ERROR:  header key must not contain ": "
2023-07-22 04:30:05.007 UTC [2700516] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:30:05.031 UTC [2700520] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.031 UTC [2700520] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:30:05.060 UTC [2700520] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.060 UTC [2700520] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:30:05.062 UTC [2700520] ERROR:  Not text data
2023-07-22 04:30:05.062 UTC [2700520] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:30:05.063 UTC [2700520] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.063 UTC [2700520] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:30:05.064 UTC [2700520] ERROR:  Unsupported compression algorithm
2023-07-22 04:30:05.064 UTC [2700520] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:30:05.084 UTC [2700526] ERROR:  Not text data
2023-07-22 04:30:05.084 UTC [2700526] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:30:05.559 UTC [2700534] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.559 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:30:05.580 UTC [2700534] ERROR:  Wrong key
2023-07-22 04:30:05.580 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:30:05.580 UTC [2700534] ERROR:  No encryption key found
2023-07-22 04:30:05.580 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:30:05.582 UTC [2700534] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.582 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:30:05.588 UTC [2700534] ERROR:  Need password for secret key
2023-07-22 04:30:05.588 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:30:05.589 UTC [2700534] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.589 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:30:05.594 UTC [2700534] ERROR:  Wrong key or corrupt data
2023-07-22 04:30:05.594 UTC [2700534] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:30:05.615 UTC [2700540] ERROR:  No encryption key found
2023-07-22 04:30:05.615 UTC [2700540] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:30:05.616 UTC [2700540] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:30:05.616 UTC [2700540] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:30:05.617 UTC [2700540] ERROR:  Not text data
2023-07-22 04:30:05.617 UTC [2700540] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:30:05.624 UTC [2700544] ERROR:  No encryption key found
2023-07-22 04:30:05.624 UTC [2700544] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:30:05.624 UTC [2700544] ERROR:  No encryption key found
2023-07-22 04:30:05.624 UTC [2700544] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:30:37.648 UTC [2700411] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:30:37.733 UTC [2700411] LOG:  checkpoint complete: wrote 983 buffers (6.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.020 s, sync=0.023 s, total=0.086 s; sync files=260, longest=0.004 s, average=0.001 s; distance=143101 kB, estimate=143101 kB
2023-07-22 04:31:09.439 UTC [2700411] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:31:09.528 UTC [2700411] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.013 s, sync=0.009 s, total=0.089 s; sync files=4, longest=0.008 s, average=0.003 s; distance=134096 kB, estimate=142200 kB
2023-07-22 04:31:09.596 UTC [2700410] LOG:  received fast shutdown request
2023-07-22 04:31:09.601 UTC [2700410] LOG:  aborting any active transactions
2023-07-22 04:31:09.602 UTC [2700410] LOG:  background worker "logical replication launcher" (PID 2700416) exited with exit code 1
2023-07-22 04:31:09.602 UTC [2700411] LOG:  shutting down
2023-07-22 04:31:09.609 UTC [2700411] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:31:09.640 UTC [2700411] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.038 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=127980 kB
2023-07-22 04:31:09.682 UTC [2700410] LOG:  database system is shut down
2023-07-22 04:31:10.433 UTC [2700668] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:31:10.434 UTC [2700668] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:31:10.446 UTC [2700668] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:31:10.461 UTC [2700671] LOG:  database system was shut down at 2023-07-22 04:31:10 UTC
2023-07-22 04:31:10.475 UTC [2700668] LOG:  database system is ready to accept connections
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '1.2.3' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '1.2.3'::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '0' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '0'::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: ' 1.2.3.4' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select ' 1.2.3.4'::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '1.2.3.4 ' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '1.2.3.4 '::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '0.0.0.256' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '0.0.0.256'::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '0.0.256' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '0.0.256'::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '0..255.0' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '0..255.0'::ip4;
2023-07-22 04:31:10.715 UTC [2700690] ERROR:  invalid IP4 value: '+0.255.0.0' at character 8
2023-07-22 04:31:10.715 UTC [2700690] STATEMENT:  select '+0.255.0.0'::ip4;
2023-07-22 04:31:10.716 UTC [2700690] ERROR:  invalid IP4 value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 04:31:10.716 UTC [2700690] STATEMENT:  select '1.2.3.4-1.2.3.4'::ip4;
2023-07-22 04:31:10.719 UTC [2700690] ERROR:  invalid IP6 value: '' at character 8
2023-07-22 04:31:10.719 UTC [2700690] STATEMENT:  select ''::ip6;
2023-07-22 04:31:10.719 UTC [2700690] ERROR:  invalid IP6 value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:31:10.719 UTC [2700690] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 04:31:10.719 UTC [2700690] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 04:31:10.719 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ip6;
2023-07-22 04:31:10.719 UTC [2700690] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 04:31:10.719 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ip6;
2023-07-22 04:31:10.719 UTC [2700690] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 04:31:10.719 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1.2.3.4:1111::5555' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1.2.3.4:1111::5555'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1.2.3.4::' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1.2.3.4::'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1.2.3.4::5555' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1.2.3.4::5555'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1111:' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1111:'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1111:2222:3333:4444::5555:'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1111:2222:3333::5555:' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1111:2222:3333::5555:'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1111:2222::5555:' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1111:2222::5555:'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1111::5555:' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1111::5555:'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '123' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '123'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '12345::6:7:8' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '12345::6:7:8'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '127.0.0.1' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '127.0.0.1'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1:2:3::4:5::7:8' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1:2:3::4:5::7:8'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.2.256.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.2.256.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.2.3.256' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.2.3.256'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.2.3.300' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.2.3.300'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.2.3.900' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.2.3.900'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.2.300.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.2.300.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.2.900.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.2.900.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.256.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.256.3.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.300.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.300.3.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::1.900.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::1.900.3.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::256.2.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::256.2.3.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::260.2.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::260.2.3.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::2::3' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::2::3'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::300.2.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::300.2.3.4'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::300.300.300.300' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::300.300.300.300'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::3000.30.30.30' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::3000.30.30.30'::ip6;
2023-07-22 04:31:10.720 UTC [2700690] ERROR:  invalid IP6 value: '1::400.2.3.4' at character 8
2023-07-22 04:31:10.720 UTC [2700690] STATEMENT:  select '1::400.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.2.256.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.2.256.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.2.3.256' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.2.3.256'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.2.3.300' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.2.3.300'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.2.3.900' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.2.3.900'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.2.300.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.2.300.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.2.900.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.2.900.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.256.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.256.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.300.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.300.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:1.900.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:1.900.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:256.2.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:256.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:260.2.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:260.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:300.2.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:300.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:300.300.300.300' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:300.300.300.300'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:3000.30.30.30' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:3000.30.30.30'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:400.2.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:400.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::5:900.2.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::5:900.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1::900.2.3.4' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1::900.2.3.4'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '1:::3:4:5' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '1:::3:4:5'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001::FFD3::57ab' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001::FFD3::57ab'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: '3ffe:b00::1::a' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select '3ffe:b00::1::a'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: ':' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select ':'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select ':1111:2222:3333:4444::5555'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: ':1111:2222:3333::5555' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select ':1111:2222:3333::5555'::ip6;
2023-07-22 04:31:10.721 UTC [2700690] ERROR:  invalid IP6 value: ':1111:2222::5555' at character 8
2023-07-22 04:31:10.721 UTC [2700690] STATEMENT:  select ':1111:2222::5555'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: ':1111::5555' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select ':1111::5555'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.2.256.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.2.256.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.2.3.256' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.2.3.256'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.2.3.300' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.2.3.300'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.2.3.900' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.2.3.900'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.2.300.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.2.300.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.2.900.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.2.900.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.256.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.256.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.300.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.300.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1.900.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1.900.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::256.2.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::256.2.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::260.2.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::260.2.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::300.2.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::300.2.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::300.300.300.300' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::300.300.300.300'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::3000.30.30.30' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::3000.30.30.30'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::400.2.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::400.2.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::5555:' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::5555:'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::900.2.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::900.2.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: ':::' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select ':::'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: ':::5555' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select ':::5555'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::ffff:2.3.4' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::ffff:2.3.4'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: '::ffff:257.1.2.3' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select '::ffff:257.1.2.3'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: 'FF01::101::2' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select 'FF01::101::2'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ip6;
2023-07-22 04:31:10.722 UTC [2700690] ERROR:  invalid IP6 value: 'ldkfj' at character 8
2023-07-22 04:31:10.722 UTC [2700690] STATEMENT:  select 'ldkfj'::ip6;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '1.2.3'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '255.255.255.255-1.2.3'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/31'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/30'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/29'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/28'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/27'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/26'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/25'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/24'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/23'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/22'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/21'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/20'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/19'::ip4r;
2023-07-22 04:31:10.724 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 04:31:10.724 UTC [2700690] STATEMENT:  select '0.0.0.1/18'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/17'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/16'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/15'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/14'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/13'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/12'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/11'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/10'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/9'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/8'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/7'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/6'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/5'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/4'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/3'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/2'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/1'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.1/0'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.2/30'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.4/29'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.8/28'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.16/27'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.32/26'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.64/25'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.0.128/24'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.1.0/23'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.2.0/22'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.4.0/21'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.8.0/20'::ip4r;
2023-07-22 04:31:10.725 UTC [2700690] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 04:31:10.725 UTC [2700690] STATEMENT:  select '0.0.16.0/19'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.0.32.0/18'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.0.64.0/17'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.0.128.0/16'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.1.0.0/15'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.2.0.0/14'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.4.0.0/13'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.8.0.0/12'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.16.0.0/11'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.32.0.0/10'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.64.0.0/9'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.128.0.0/8'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '1.0.0.0/7'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '2.0.0.0/6'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '4.0.0.0/5'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '8.0.0.0/4'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '16.0.0.0/3'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '32.0.0.0/2'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '64.0.0.0/1'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '128.0.0.0/0'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.0.0.0/33'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.0.0.0/3.0'::ip4r;
2023-07-22 04:31:10.726 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 04:31:10.726 UTC [2700690] STATEMENT:  select '0.0.0.0/+33'::ip4r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '::-::-::'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::ip6r;
2023-07-22 04:31:10.728 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 04:31:10.728 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '::/129'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '::/255'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '::/256'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '::/+0'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '::/0-0'::ip6r;
2023-07-22 04:31:10.729 UTC [2700690] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 04:31:10.729 UTC [2700690] STATEMENT:  select '::-::/0'::ip6r;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '0' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '0'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: ' 1.2.3.4' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select ' 1.2.3.4'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4 ' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3.4 '::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '0.0.0.256' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '0.0.0.256'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '0.0.256' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '0.0.256'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '0..255.0' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '0..255.0'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '+0.255.0.0' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '+0.255.0.0'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3.4-1.2.3.4'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select ''::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ipaddress;
2023-07-22 04:31:10.734 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4:1111::5555' at character 8
2023-07-22 04:31:10.734 UTC [2700690] STATEMENT:  select '1.2.3.4:1111::5555'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4::' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1.2.3.4::'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1.2.3.4::5555' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1.2.3.4::5555'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1111:' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1111:'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1111:2222:3333:4444::5555:'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1111:2222:3333::5555:' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1111:2222:3333::5555:'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1111:2222::5555:' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1111:2222::5555:'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1111::5555:' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1111::5555:'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '123' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '123'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '12345::6:7:8' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '12345::6:7:8'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1:2:3::4:5::7:8' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1:2:3::4:5::7:8'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.2.256.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.2.256.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.2.3.256' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.2.3.256'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.2.3.300' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.2.3.300'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.2.3.900' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.2.3.900'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.2.300.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.2.300.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.2.900.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.2.900.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.256.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.256.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.300.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.300.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::1.900.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::1.900.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::256.2.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::256.2.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::260.2.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::260.2.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::2::3' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::2::3'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::300.2.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::300.2.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::300.300.300.300' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::300.300.300.300'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::3000.30.30.30' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::3000.30.30.30'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::400.2.3.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::400.2.3.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::5:1.2.256.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::5:1.2.256.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::5:1.2.3.256' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::5:1.2.3.256'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::5:1.2.3.300' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::5:1.2.3.300'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::5:1.2.3.900' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::5:1.2.3.900'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::5:1.2.300.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::5:1.2.300.4'::ipaddress;
2023-07-22 04:31:10.735 UTC [2700690] ERROR:  invalid IP value: '1::5:1.2.900.4' at character 8
2023-07-22 04:31:10.735 UTC [2700690] STATEMENT:  select '1::5:1.2.900.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:1.256.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:1.256.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:1.300.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:1.300.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:1.900.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:1.900.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:256.2.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:256.2.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:260.2.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:260.2.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:300.2.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:300.2.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:300.300.300.300' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:300.300.300.300'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:3000.30.30.30' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:3000.30.30.30'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:400.2.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:400.2.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::5:900.2.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::5:900.2.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1::900.2.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1::900.2.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '1:::3:4:5' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '1:::3:4:5'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001::FFD3::57ab' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001::FFD3::57ab'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '3ffe:b00::1::a' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '3ffe:b00::1::a'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: ':' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select ':'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select ':1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: ':1111:2222:3333::5555' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select ':1111:2222:3333::5555'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: ':1111:2222::5555' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select ':1111:2222::5555'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: ':1111::5555' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select ':1111::5555'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.2.256.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.2.256.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.2.3.256' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.2.3.256'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.2.3.300' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.2.3.300'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.2.3.900' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.2.3.900'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.2.300.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.2.300.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.2.900.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.2.900.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.256.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.256.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.300.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.300.3.4'::ipaddress;
2023-07-22 04:31:10.736 UTC [2700690] ERROR:  invalid IP value: '::1.900.3.4' at character 8
2023-07-22 04:31:10.736 UTC [2700690] STATEMENT:  select '::1.900.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::256.2.3.4' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::256.2.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::260.2.3.4' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::260.2.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::300.2.3.4' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::300.2.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::300.300.300.300' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::300.300.300.300'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::3000.30.30.30' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::3000.30.30.30'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::400.2.3.4' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::400.2.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::5555:' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::5555:'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::900.2.3.4' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::900.2.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: ':::' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select ':::'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: ':::5555' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select ':::5555'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::ffff:2.3.4' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::ffff:2.3.4'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: '::ffff:257.1.2.3' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select '::ffff:257.1.2.3'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: 'FF01::101::2' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select 'FF01::101::2'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ipaddress;
2023-07-22 04:31:10.737 UTC [2700690] ERROR:  invalid IP value: 'ldkfj' at character 8
2023-07-22 04:31:10.737 UTC [2700690] STATEMENT:  select 'ldkfj'::ipaddress;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '1.2.3'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '255.255.255.255-1.2.3'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/31'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/30'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/29'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/28'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/27'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/26'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/25'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/24'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/23'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/22'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/21'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/20'::iprange;
2023-07-22 04:31:10.741 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 04:31:10.741 UTC [2700690] STATEMENT:  select '0.0.0.1/19'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/18'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/17'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/16'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/15'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/14'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/13'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/12'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/11'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/10'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/9'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/8'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/7'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/6'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/5'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/4'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/3'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/2'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/1'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.1/0'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.2/30'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.4/29'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.8/28'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.16/27'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.32/26'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.64/25'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.0.128/24'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.1.0/23'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.2.0/22'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.4.0/21'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.8.0/20'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.16.0/19'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.32.0/18'::iprange;
2023-07-22 04:31:10.742 UTC [2700690] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 04:31:10.742 UTC [2700690] STATEMENT:  select '0.0.64.0/17'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.0.128.0/16'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.1.0.0/15'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.2.0.0/14'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.4.0.0/13'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.8.0.0/12'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.16.0.0/11'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.32.0.0/10'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.64.0.0/9'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.128.0.0/8'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '1.0.0.0/7'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '2.0.0.0/6'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '4.0.0.0/5'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '8.0.0.0/4'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '16.0.0.0/3'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '32.0.0.0/2'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '64.0.0.0/1'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '128.0.0.0/0'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.0.0.0/33'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.0.0.0/3.0'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0.0.0.0/+33'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '::-::-::'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::iprange;
2023-07-22 04:31:10.743 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 04:31:10.743 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '::/129'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '::/255'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '::/256'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '::/+0'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '::/0-0'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '::-::/0'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP6R value: "-::" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '-::'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP4R value: "-1.2.3.4" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '-1.2.3.4'::iprange;
2023-07-22 04:31:10.744 UTC [2700690] ERROR:  invalid IP4R value: "1.2.3.4-" at character 8
2023-07-22 04:31:10.744 UTC [2700690] STATEMENT:  select '1.2.3.4-'::iprange;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '1.2.3'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select ' 1.2.3.4'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '1.2.3.4 '::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.256'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.256'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0..255.0'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '+0.255.0.0'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4 value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ip4;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '1.2.3'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '255.255.255.255-1.2.3'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/31'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/30'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/29'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/28'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/27'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/26'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/25'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/24'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/23'::text::ip4r;
2023-07-22 04:31:10.759 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.759 UTC [2700690] STATEMENT:  select '0.0.0.1/22'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/21'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/20'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/19'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/18'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/17'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/16'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/15'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/14'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/13'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/12'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/11'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/10'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/9'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/8'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/7'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/6'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/5'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/4'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/3'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/2'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/1'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.1/0'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.2/30'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.4/29'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.8/28'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.16/27'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.32/26'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.64/25'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.0.128/24'::text::ip4r;
2023-07-22 04:31:10.760 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.760 UTC [2700690] STATEMENT:  select '0.0.1.0/23'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.2.0/22'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.4.0/21'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.8.0/20'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.16.0/19'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.32.0/18'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.64.0/17'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.128.0/16'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.1.0.0/15'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.2.0.0/14'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.4.0.0/13'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.8.0.0/12'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.16.0.0/11'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.32.0.0/10'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.64.0.0/9'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.128.0.0/8'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '1.0.0.0/7'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '2.0.0.0/6'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '4.0.0.0/5'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '8.0.0.0/4'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '16.0.0.0/3'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '32.0.0.0/2'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '64.0.0.0/1'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '128.0.0.0/0'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.0.0/33'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.0.0/3.0'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP4R value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '0.0.0.0/+33'::text::ip4r;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select ''::text::ip6;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 04:31:10.761 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.761 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1.2.3.4:1111::5555'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1.2.3.4::'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1.2.3.4::5555'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1111:'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1111:2222:3333::5555:'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1111:2222::5555:'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1111::5555:'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '123'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '12345::6:7:8'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '127.0.0.1'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1:2:3::4:5::7:8'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.2.256.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.2.3.256'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.2.3.300'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.2.3.900'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.2.300.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.2.900.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.256.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.300.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::1.900.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::256.2.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::260.2.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::2::3'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::300.2.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::300.300.300.300'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::3000.30.30.30'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::400.2.3.4'::text::ip6;
2023-07-22 04:31:10.762 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.762 UTC [2700690] STATEMENT:  select '1::5:1.2.256.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.2.3.256'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.2.3.300'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.2.3.900'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.2.300.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.2.900.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.256.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.300.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:1.900.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:256.2.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:260.2.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:300.2.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:300.300.300.300'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:3000.30.30.30'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:400.2.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::5:900.2.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1::900.2.3.4'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '1:::3:4:5'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001::FFD3::57ab'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select '3ffe:b00::1::a'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select ':'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select ':1111:2222:3333::5555'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select ':1111:2222::5555'::text::ip6;
2023-07-22 04:31:10.763 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.763 UTC [2700690] STATEMENT:  select ':1111::5555'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.2.256.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.2.3.256'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.2.3.300'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.2.3.900'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.2.300.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.2.900.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.256.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.300.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1.900.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::256.2.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::260.2.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::300.2.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::300.300.300.300'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::3000.30.30.30'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::400.2.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::5555:'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::900.2.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select ':::'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select ':::5555'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::ffff:2.3.4'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::ffff:257.1.2.3'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select 'FF01::101::2'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6 value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select 'ldkfj'::text::ip6;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::-::-::'::text::ip6r;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::text::ip6r;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::text::ip6r;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::text::ip6r;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::text::ip6r;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::text::ip6r;
2023-07-22 04:31:10.764 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.764 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '::/129'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '::/255'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '::/256'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '::/+0'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '::/0-0'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP6R value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '::-::/0'::text::ip6r;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '1.2.3'::text::ipaddress;
2023-07-22 04:31:10.765 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.765 UTC [2700690] STATEMENT:  select '0'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select ' 1.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4 '::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '0.0.0.256'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '0.0.256'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '0..255.0'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '+0.255.0.0'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select ''::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4:1111::5555'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4::'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1.2.3.4::5555'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1111:'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1111:2222:3333::5555:'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1111:2222::5555:'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1111::5555:'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '123'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '12345::6:7:8'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1:2:3::4:5::7:8'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.2.256.4'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.2.3.256'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.2.3.300'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.2.3.900'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.2.300.4'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.2.900.4'::text::ipaddress;
2023-07-22 04:31:10.766 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.766 UTC [2700690] STATEMENT:  select '1::1.256.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::1.300.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::1.900.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::256.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::260.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::2::3'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::300.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::300.300.300.300'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::3000.30.30.30'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::400.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.2.256.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.2.3.256'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.2.3.300'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.2.3.900'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.2.300.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.2.900.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.256.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.300.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:1.900.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:256.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:260.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:300.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:300.300.300.300'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:3000.30.30.30'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:400.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::5:900.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1::900.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '1:::3:4:5'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ipaddress;
2023-07-22 04:31:10.767 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.767 UTC [2700690] STATEMENT:  select '2001::FFD3::57ab'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '3ffe:b00::1::a'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':1111:2222:3333::5555'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':1111:2222::5555'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':1111::5555'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.2.256.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.2.3.256'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.2.3.300'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.2.3.900'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.2.300.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.2.900.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.256.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.300.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1.900.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::256.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::260.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::300.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::300.300.300.300'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::3000.30.30.30'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::400.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::5555:'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::900.2.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':::'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select ':::5555'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::ffff:2.3.4'::text::ipaddress;
2023-07-22 04:31:10.768 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.768 UTC [2700690] STATEMENT:  select '::ffff:257.1.2.3'::text::ipaddress;
2023-07-22 04:31:10.769 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.769 UTC [2700690] STATEMENT:  select 'FF01::101::2'::text::ipaddress;
2023-07-22 04:31:10.769 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.769 UTC [2700690] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ipaddress;
2023-07-22 04:31:10.769 UTC [2700690] ERROR:  invalid IP value in text
2023-07-22 04:31:10.769 UTC [2700690] STATEMENT:  select 'ldkfj'::text::ipaddress;
2023-07-22 04:31:10.771 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.771 UTC [2700690] STATEMENT:  select (-4294967295::bigint)::ip4;
2023-07-22 04:31:10.771 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.771 UTC [2700690] STATEMENT:  select (4294967296::bigint)::ip4;
2023-07-22 04:31:10.771 UTC [2700690] WARNING:  double converted to IP4 is not integral
2023-07-22 04:31:10.772 UTC [2700690] WARNING:  double converted to IP4 is not integral
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select (-4294967295::float8)::ip4;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select (4294967296::float8)::ip4;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select (-3000000000::float8)::ip4;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select 6000000000::float8::ip4;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select 6e10::float8::ip4;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select 6e30::float8::ip4;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select (-1::numeric)::ip6;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  numeric value too large for conversion to IP6
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select 340282366920938463463374607431768211456::numeric::ip6;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select 0.1::numeric::ip6;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select 0.00000000000000000001::numeric::ip6;
2023-07-22 04:31:10.772 UTC [2700690] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:31:10.772 UTC [2700690] STATEMENT:  select (-0.00000000000000000001::numeric)::ip6;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid INET value for conversion to IP4
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '::'::inet::ip4;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid INET value for conversion to IP6
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '0.0.0.0'::inet::ip6;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid CIDR value for conversion to IP4R
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '::/128'::cidr::ip4r;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid CIDR value for conversion to IP6R
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '0.0.0.0/32'::cidr::ip6r;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid IPR value for conversion to IP4R
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '::/0'::iprange::ip4r;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid IPR value for conversion to IP6R
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '0.0.0.0/0'::iprange::ip6r;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid IP value in cast to IP4
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '::'::ipaddress::ip4;
2023-07-22 04:31:10.774 UTC [2700690] ERROR:  invalid IP value in cast to IP4
2023-07-22 04:31:10.774 UTC [2700690] STATEMENT:  select '0.0.0.0'::ipaddress::ip6;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'0102030')::ip4;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'0102030405')::ip4;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ip6;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ip6;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'0102030')::ipaddress;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'0102030405')::ipaddress;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ipaddress;
2023-07-22 04:31:10.775 UTC [2700690] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:31:10.775 UTC [2700690] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ipaddress;
2023-07-22 04:31:10.776 UTC [2700690] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:31:10.776 UTC [2700690] STATEMENT:  select (decode('010203','hex'))::ip4;
2023-07-22 04:31:10.776 UTC [2700690] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:31:10.776 UTC [2700690] STATEMENT:  select (decode('0102030405','hex'))::ip4;
2023-07-22 04:31:10.776 UTC [2700690] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:31:10.776 UTC [2700690] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ip6;
2023-07-22 04:31:10.776 UTC [2700690] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:31:10.776 UTC [2700690] STATEMENT:  select (decode('0102030405','hex'))::ipaddress;
2023-07-22 04:31:10.776 UTC [2700690] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:31:10.776 UTC [2700690] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ipaddress;
2023-07-22 04:31:10.776 UTC [2700690] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:31:10.776 UTC [2700690] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ffffff','hex'))::ipaddress;
2023-07-22 04:31:10.777 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.777 UTC [2700690] STATEMENT:  select ip4_netmask(33);
2023-07-22 04:31:10.777 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.777 UTC [2700690] STATEMENT:  select ip4_netmask(-1);
2023-07-22 04:31:10.777 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.777 UTC [2700690] STATEMENT:  select ip6_netmask(129);
2023-07-22 04:31:10.777 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.777 UTC [2700690] STATEMENT:  select ip6_netmask(-1);
2023-07-22 04:31:10.779 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.779 UTC [2700690] STATEMENT:  select ip4_net_lower('255.255.255.255',33);
2023-07-22 04:31:10.779 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.779 UTC [2700690] STATEMENT:  select ip4_net_lower('255.255.255.255',-1);
2023-07-22 04:31:10.779 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.779 UTC [2700690] STATEMENT:  select ip4_net_upper('0.0.0.0',33);
2023-07-22 04:31:10.779 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.779 UTC [2700690] STATEMENT:  select ip4_net_upper('0.0.0.0',-1);
2023-07-22 04:31:10.779 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.779 UTC [2700690] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 04:31:10.779 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.779 UTC [2700690] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 04:31:10.780 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.780 UTC [2700690] STATEMENT:  select ip6_net_upper('::',129);
2023-07-22 04:31:10.780 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.780 UTC [2700690] STATEMENT:  select ip6_net_upper('::',-1);
2023-07-22 04:31:10.780 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.780 UTC [2700690] STATEMENT:  select ipaddress_net_lower('255.255.255.255',33);
2023-07-22 04:31:10.780 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.780 UTC [2700690] STATEMENT:  select ipaddress_net_lower('255.255.255.255',-1);
2023-07-22 04:31:10.780 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.780 UTC [2700690] STATEMENT:  select ipaddress_net_upper('0.0.0.0',33);
2023-07-22 04:31:10.780 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.780 UTC [2700690] STATEMENT:  select ipaddress_net_upper('0.0.0.0',-1);
2023-07-22 04:31:10.781 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.781 UTC [2700690] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 04:31:10.781 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.781 UTC [2700690] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 04:31:10.781 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.781 UTC [2700690] STATEMENT:  select ipaddress_net_upper('::',129);
2023-07-22 04:31:10.781 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.781 UTC [2700690] STATEMENT:  select ipaddress_net_upper('::',-1);
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip4 '255.255.255.255' / 33;
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip4 '255.255.255.255' / -1;
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip4 '255.255.255.255' / ip4 '0.255.255.255';
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip4 '255.255.255.255' / ip4 '255.254.255.255';
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 04:31:10.784 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.784 UTC [2700690] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff::ffff';
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress '255.255.255.255' / 33;
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress '255.255.255.255' / -1;
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  prefix length out of range
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '0.255.255.255';
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '255.254.255.255';
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  invalid netmask
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff::ffff';
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  invalid mixing of IP address families
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress '0.0.0.0';
2023-07-22 04:31:10.785 UTC [2700690] ERROR:  invalid mixing of IP address families
2023-07-22 04:31:10.785 UTC [2700690] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '::';
2023-07-22 04:31:10.787 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.787 UTC [2700690] STATEMENT:  select a + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.787 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.787 UTC [2700690] STATEMENT:  select a::ipaddress + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.788 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.788 UTC [2700690] STATEMENT:  select a::ipaddress + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.789 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.789 UTC [2700690] STATEMENT:  select a - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.789 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.789 UTC [2700690] STATEMENT:  select a::ipaddress - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:31:10.789 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.789 UTC [2700690] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:10.789 UTC [2700690] ERROR:  ip address out of range
2023-07-22 04:31:10.789 UTC [2700690] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:31:12.115 UTC [2700696] ERROR:  invalid preceding or following size in window function
2023-07-22 04:31:12.115 UTC [2700696] DETAIL:  Offset value -33 is outside the range -32 to 4294967295
2023-07-22 04:31:12.115 UTC [2700696] STATEMENT:  select a4,
	       array_agg(a4) over (order by a4 range between -33 preceding and -33 following)
	  from ipaddrs
	 where a4 is not null;
2023-07-22 04:31:12.115 UTC [2700696] ERROR:  invalid preceding or following size in window function
2023-07-22 04:31:12.115 UTC [2700696] DETAIL:  Offset value -129 is outside the range -128 to 2^63-1
2023-07-22 04:31:12.115 UTC [2700696] STATEMENT:  select a6,
	       array_agg(a6) over (order by a6 range between -129 preceding and -129 following)
	  from ipaddrs
	 where a6 is not null;
2023-07-22 04:31:44.688 UTC [2700669] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:31:44.860 UTC [2700669] LOG:  checkpoint complete: wrote 1959 buffers (12.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.042 s, sync=0.053 s, total=0.173 s; sync files=260, longest=0.020 s, average=0.001 s; distance=145510 kB, estimate=145510 kB
2023-07-22 04:32:16.977 UTC [2700669] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:32:17.201 UTC [2700669] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.011 s, total=0.224 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133957 kB, estimate=144355 kB
2023-07-22 04:32:17.242 UTC [2700668] LOG:  received fast shutdown request
2023-07-22 04:32:17.249 UTC [2700668] LOG:  aborting any active transactions
2023-07-22 04:32:17.250 UTC [2700668] LOG:  background worker "logical replication launcher" (PID 2700674) exited with exit code 1
2023-07-22 04:32:17.251 UTC [2700669] LOG:  shutting down
2023-07-22 04:32:17.258 UTC [2700669] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:32:17.290 UTC [2700669] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.002 s, total=0.039 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=129919 kB
2023-07-22 04:32:17.344 UTC [2700668] LOG:  database system is shut down
2023-07-22 04:32:18.238 UTC [2700828] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:32:18.238 UTC [2700828] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:32:18.249 UTC [2700828] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:32:18.264 UTC [2700831] LOG:  database system was shut down at 2023-07-22 04:32:17 UTC
2023-07-22 04:32:18.278 UTC [2700828] LOG:  database system is ready to accept connections
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for ISBN number: "1234567890", should be X at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '1234567890'::ISBN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for ISMN number: "M123456780", should be 5 at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT 'M123456780'::ISMN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for ISSN number: "12345670", should be 9 at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '12345670'::ISSN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for ISBN number: "9780123456780", should be 6 at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9780123456780'::ISBN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for ISBN number: "9791234567890", should be 6 at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9791234567890'::ISBN13;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for UPC number: "0123456789010", should be 2 at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '0123456789010'::UPC;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  invalid check digit for EAN13 number: "1234567890120", should be 8 at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '1234567890120'::EAN13;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9790123456785'::ISBN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9771234567898'::ISBN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '0123456789012'::ISBN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9790123456785'::ISBN13;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9771234567898'::ISBN13;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '0123456789012'::ISBN13;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast ISBN to ISMN for number: "9780123456786" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9780123456786'::ISMN;
2023-07-22 04:32:18.430 UTC [2700847] ERROR:  cannot cast ISSN to ISMN for number: "9771234567898" at character 8
2023-07-22 04:32:18.430 UTC [2700847] STATEMENT:  SELECT '9771234567898'::ISMN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISBN to ISMN for number: "9791234567896" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9791234567896'::ISMN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast UPC to ISMN for number: "0123456789012" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '0123456789012'::ISMN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISBN to ISSN for number: "9780123456786" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9780123456786'::ISSN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISMN to ISSN for number: "9790123456785" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9790123456785'::ISSN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISBN to ISSN for number: "9791234567896" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9791234567896'::ISSN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast UPC to ISSN for number: "0123456789012" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '0123456789012'::ISSN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISBN to UPC for number: "9780123456786" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9780123456786'::UPC;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISSN to UPC for number: "9771234567898" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9771234567898'::UPC;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISMN to UPC for number: "9790123456785" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9790123456785'::UPC;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast ISBN to UPC for number: "9791234567896" at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT '9791234567896'::UPC;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  invalid input syntax for EAN13 number: "postgresql..." at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT 'postgresql...'::EAN13;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  invalid input syntax for ISBN number: "postgresql..." at character 8
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT 'postgresql...'::ISBN;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast type bigint to ean13 at character 21
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT 9780123456786::EAN13;
2023-07-22 04:32:18.431 UTC [2700847] ERROR:  cannot cast type bigint to isbn at character 21
2023-07-22 04:32:18.431 UTC [2700847] STATEMENT:  SELECT 9780123456786::ISBN;
2023-07-22 04:32:18.458 UTC [2700829] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:32:18.503 UTC [2700829] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.013 s, total=0.046 s; sync files=7, longest=0.007 s, average=0.002 s; distance=5411 kB, estimate=5411 kB
2023-07-22 04:32:18.662 UTC [2700862] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:32:18.662 UTC [2700862] STATEMENT:  select gen_salt('foo');
2023-07-22 04:32:18.662 UTC [2700862] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:32:18.662 UTC [2700862] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:32:18.662 UTC [2700862] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:32:18.662 UTC [2700862] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:32:18.662 UTC [2700862] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:32:18.662 UTC [2700862] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:32:18.699 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.699 UTC [2700882] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:32:18.699 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.699 UTC [2700882] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:32:18.699 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.699 UTC [2700882] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:32:18.699 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.699 UTC [2700882] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:32:18.699 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.699 UTC [2700882] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:32:18.699 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.699 UTC [2700882] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Key was too big
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Key was too big
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Key was too big
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Key was too big
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:32:18.700 UTC [2700882] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.700 UTC [2700882] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:32:18.709 UTC [2700888] ERROR:  encrypt error: Encryption failed
2023-07-22 04:32:18.709 UTC [2700888] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:32:18.710 UTC [2700888] ERROR:  decrypt error: Decryption failed
2023-07-22 04:32:18.710 UTC [2700888] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:32:18.710 UTC [2700888] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:32:18.710 UTC [2700888] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:32:18.725 UTC [2700896] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.725 UTC [2700896] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:32:18.725 UTC [2700896] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.725 UTC [2700896] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:32:18.725 UTC [2700896] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.725 UTC [2700896] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:32:18.725 UTC [2700896] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.725 UTC [2700896] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:32:18.725 UTC [2700896] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:32:18.725 UTC [2700896] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:32:18.726 UTC [2700896] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:32:18.726 UTC [2700896] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:32:18.726 UTC [2700896] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.726 UTC [2700896] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:32:18.726 UTC [2700896] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.726 UTC [2700896] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:32:18.741 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.741 UTC [2700906] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:32:18.741 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.741 UTC [2700906] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:32:18.741 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.741 UTC [2700906] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:32:18.741 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.741 UTC [2700906] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:32:18.741 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.741 UTC [2700906] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:32:18.742 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.742 UTC [2700906] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:32:18.742 UTC [2700906] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:32:18.742 UTC [2700906] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:32:18.742 UTC [2700906] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:32:18.742 UTC [2700906] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:32:18.742 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.742 UTC [2700906] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:32:18.742 UTC [2700906] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:32:18.742 UTC [2700906] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:32:18.750 UTC [2700912] ERROR:  invalid salt
2023-07-22 04:32:18.750 UTC [2700912] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:32:18.876 UTC [2700920] ERROR:  invalid salt
2023-07-22 04:32:18.876 UTC [2700920] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:32:18.876 UTC [2700920] ERROR:  invalid salt
2023-07-22 04:32:18.876 UTC [2700920] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:32:18.877 UTC [2700920] ERROR:  invalid salt
2023-07-22 04:32:18.877 UTC [2700920] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:32:18.940 UTC [2700924] ERROR:  invalid salt
2023-07-22 04:32:18.940 UTC [2700924] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:32:18.940 UTC [2700924] ERROR:  crypt(3) returned NULL
2023-07-22 04:32:18.940 UTC [2700924] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:32:18.940 UTC [2700924] ERROR:  crypt(3) returned NULL
2023-07-22 04:32:18.940 UTC [2700924] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:32:18.962 UTC [2700928] ERROR:  Corrupt ascii-armor
2023-07-22 04:32:18.962 UTC [2700928] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:32:18.962 UTC [2700928] ERROR:  Corrupt ascii-armor
2023-07-22 04:32:18.962 UTC [2700928] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:32:18.962 UTC [2700928] ERROR:  Corrupt ascii-armor
2023-07-22 04:32:18.962 UTC [2700928] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  mismatched array dimensions
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  mismatched array dimensions
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  wrong number of array subscripts
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  wrong number of array subscripts
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  null value not allowed for header key
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  null value not allowed for header value
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  header key must not contain newlines
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  header value must not contain newlines
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:32:18.964 UTC [2700928] ERROR:  header key must not contain ": "
2023-07-22 04:32:18.964 UTC [2700928] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:32:18.971 UTC [2700932] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:18.971 UTC [2700932] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:32:18.982 UTC [2700932] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:18.982 UTC [2700932] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:32:18.984 UTC [2700932] ERROR:  Not text data
2023-07-22 04:32:18.984 UTC [2700932] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:32:18.984 UTC [2700932] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:18.984 UTC [2700932] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:32:18.984 UTC [2700932] ERROR:  Unsupported compression algorithm
2023-07-22 04:32:18.984 UTC [2700932] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:32:18.998 UTC [2700938] ERROR:  Not text data
2023-07-22 04:32:18.998 UTC [2700938] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:32:19.482 UTC [2700946] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:19.482 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:32:19.489 UTC [2700946] ERROR:  Wrong key
2023-07-22 04:32:19.489 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:32:19.489 UTC [2700946] ERROR:  No encryption key found
2023-07-22 04:32:19.489 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:32:19.490 UTC [2700946] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:19.490 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:32:19.493 UTC [2700946] ERROR:  Need password for secret key
2023-07-22 04:32:19.493 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:32:19.494 UTC [2700946] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:19.494 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:32:19.497 UTC [2700946] ERROR:  Wrong key or corrupt data
2023-07-22 04:32:19.497 UTC [2700946] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:32:19.523 UTC [2700952] ERROR:  No encryption key found
2023-07-22 04:32:19.523 UTC [2700952] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:32:19.523 UTC [2700952] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:32:19.523 UTC [2700952] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:32:19.525 UTC [2700952] ERROR:  Not text data
2023-07-22 04:32:19.525 UTC [2700952] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:32:19.535 UTC [2700956] ERROR:  No encryption key found
2023-07-22 04:32:19.535 UTC [2700956] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:32:19.536 UTC [2700956] ERROR:  No encryption key found
2023-07-22 04:32:19.536 UTC [2700956] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:32:51.293 UTC [2700829] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:32:51.471 UTC [2700829] LOG:  checkpoint complete: wrote 633 buffers (3.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.113 s, total=0.178 s; sync files=260, longest=0.007 s, average=0.001 s; distance=143431 kB, estimate=143431 kB
2023-07-22 04:33:22.866 UTC [2700829] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:33:22.935 UTC [2700829] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.004 s, total=0.070 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137056 kB, estimate=142793 kB
2023-07-22 04:33:23.002 UTC [2700828] LOG:  received fast shutdown request
2023-07-22 04:33:23.008 UTC [2700828] LOG:  aborting any active transactions
2023-07-22 04:33:23.009 UTC [2700828] LOG:  background worker "logical replication launcher" (PID 2700834) exited with exit code 1
2023-07-22 04:33:23.009 UTC [2700829] LOG:  shutting down
2023-07-22 04:33:23.012 UTC [2700829] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:33:23.034 UTC [2700829] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.004 s, total=0.026 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=128514 kB
2023-07-22 04:33:23.058 UTC [2700828] LOG:  database system is shut down
2023-07-22 04:33:23.860 UTC [2701082] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:33:23.860 UTC [2701082] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:33:23.870 UTC [2701082] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:33:23.879 UTC [2701085] LOG:  database system was shut down at 2023-07-22 04:33:23 UTC
2023-07-22 04:33:23.887 UTC [2701082] LOG:  database system is ready to accept connections
2023-07-22 04:33:24.147 UTC [2701104] ERROR:  invalid check digit for ISBN number: "1234567890", should be X at character 8
2023-07-22 04:33:24.147 UTC [2701104] STATEMENT:  SELECT '1234567890'::ISBN;
2023-07-22 04:33:24.147 UTC [2701104] ERROR:  invalid check digit for ISMN number: "M123456780", should be 5 at character 8
2023-07-22 04:33:24.147 UTC [2701104] STATEMENT:  SELECT 'M123456780'::ISMN;
2023-07-22 04:33:24.147 UTC [2701104] ERROR:  invalid check digit for ISSN number: "12345670", should be 9 at character 8
2023-07-22 04:33:24.147 UTC [2701104] STATEMENT:  SELECT '12345670'::ISSN;
2023-07-22 04:33:24.147 UTC [2701104] ERROR:  invalid check digit for ISBN number: "9780123456780", should be 6 at character 8
2023-07-22 04:33:24.147 UTC [2701104] STATEMENT:  SELECT '9780123456780'::ISBN;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  invalid check digit for ISBN number: "9791234567890", should be 6 at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '9791234567890'::ISBN13;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  invalid check digit for UPC number: "0123456789010", should be 2 at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '0123456789010'::UPC;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  invalid check digit for EAN13 number: "1234567890120", should be 8 at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '1234567890120'::EAN13;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '9790123456785'::ISBN;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '9771234567898'::ISBN;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '0123456789012'::ISBN;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '9790123456785'::ISBN13;
2023-07-22 04:33:24.148 UTC [2701104] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 04:33:24.148 UTC [2701104] STATEMENT:  SELECT '9771234567898'::ISBN13;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '0123456789012'::ISBN13;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISBN to ISMN for number: "9780123456786" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9780123456786'::ISMN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISSN to ISMN for number: "9771234567898" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9771234567898'::ISMN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISBN to ISMN for number: "9791234567896" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9791234567896'::ISMN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast UPC to ISMN for number: "0123456789012" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '0123456789012'::ISMN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISBN to ISSN for number: "9780123456786" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9780123456786'::ISSN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISMN to ISSN for number: "9790123456785" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9790123456785'::ISSN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISBN to ISSN for number: "9791234567896" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9791234567896'::ISSN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast UPC to ISSN for number: "0123456789012" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '0123456789012'::ISSN;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISBN to UPC for number: "9780123456786" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9780123456786'::UPC;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISSN to UPC for number: "9771234567898" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9771234567898'::UPC;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISMN to UPC for number: "9790123456785" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9790123456785'::UPC;
2023-07-22 04:33:24.149 UTC [2701104] ERROR:  cannot cast ISBN to UPC for number: "9791234567896" at character 8
2023-07-22 04:33:24.149 UTC [2701104] STATEMENT:  SELECT '9791234567896'::UPC;
2023-07-22 04:33:24.150 UTC [2701104] ERROR:  invalid input syntax for EAN13 number: "postgresql..." at character 8
2023-07-22 04:33:24.150 UTC [2701104] STATEMENT:  SELECT 'postgresql...'::EAN13;
2023-07-22 04:33:24.150 UTC [2701104] ERROR:  invalid input syntax for ISBN number: "postgresql..." at character 8
2023-07-22 04:33:24.150 UTC [2701104] STATEMENT:  SELECT 'postgresql...'::ISBN;
2023-07-22 04:33:24.150 UTC [2701104] ERROR:  cannot cast type bigint to ean13 at character 21
2023-07-22 04:33:24.150 UTC [2701104] STATEMENT:  SELECT 9780123456786::EAN13;
2023-07-22 04:33:24.150 UTC [2701104] ERROR:  cannot cast type bigint to isbn at character 21
2023-07-22 04:33:24.150 UTC [2701104] STATEMENT:  SELECT 9780123456786::ISBN;
2023-07-22 04:33:56.567 UTC [2701083] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:33:56.671 UTC [2701083] LOG:  checkpoint complete: wrote 982 buffers (6.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.024 s, sync=0.032 s, total=0.104 s; sync files=252, longest=0.015 s, average=0.001 s; distance=142116 kB, estimate=142116 kB
2023-07-22 04:34:28.447 UTC [2701083] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:34:28.535 UTC [2701083] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.011 s, total=0.089 s; sync files=4, longest=0.007 s, average=0.003 s; distance=134469 kB, estimate=141351 kB
2023-07-22 04:34:28.601 UTC [2701082] LOG:  received fast shutdown request
2023-07-22 04:34:28.607 UTC [2701082] LOG:  aborting any active transactions
2023-07-22 04:34:28.608 UTC [2701082] LOG:  background worker "logical replication launcher" (PID 2701088) exited with exit code 1
2023-07-22 04:34:28.608 UTC [2701083] LOG:  shutting down
2023-07-22 04:34:28.613 UTC [2701083] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:34:28.647 UTC [2701083] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.003 s, total=0.039 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=127216 kB
2023-07-22 04:34:28.700 UTC [2701082] LOG:  database system is shut down
2023-07-22 04:34:29.459 UTC [2701234] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:34:29.460 UTC [2701234] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:34:29.473 UTC [2701234] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:34:29.488 UTC [2701237] LOG:  database system was shut down at 2023-07-22 04:34:29 UTC
2023-07-22 04:34:29.501 UTC [2701234] LOG:  database system is ready to accept connections
2023-07-22 04:34:29.708 UTC [2701253] ERROR:  large object 43213 does not exist
2023-07-22 04:34:29.708 UTC [2701253] STATEMENT:  SELECT lo_get(43213);
2023-07-22 04:34:29.718 UTC [2701253] ERROR:  large object 43214 does not exist
2023-07-22 04:34:29.718 UTC [2701253] STATEMENT:  SELECT lo_get(43214);
2023-07-22 04:34:29.756 UTC [2701235] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:34:29.816 UTC [2701235] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.014 s, sync=0.021 s, total=0.061 s; sync files=7, longest=0.008 s, average=0.003 s; distance=4193 kB, estimate=4193 kB
2023-07-22 04:34:29.953 UTC [2701268] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:34:29.953 UTC [2701268] STATEMENT:  select gen_salt('foo');
2023-07-22 04:34:29.953 UTC [2701268] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:34:29.953 UTC [2701268] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:34:29.953 UTC [2701268] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:34:29.953 UTC [2701268] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:34:29.953 UTC [2701268] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:34:29.953 UTC [2701268] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:34:29.992 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.992 UTC [2701288] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:34:29.992 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.992 UTC [2701288] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:34:29.992 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.992 UTC [2701288] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Key was too big
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Key was too big
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Key was too big
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Key was too big
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:34:29.993 UTC [2701288] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:34:29.993 UTC [2701288] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:34:29.994 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.994 UTC [2701288] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:34:29.994 UTC [2701288] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:29.994 UTC [2701288] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:34:30.003 UTC [2701294] ERROR:  encrypt error: Encryption failed
2023-07-22 04:34:30.003 UTC [2701294] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:34:30.004 UTC [2701294] ERROR:  decrypt error: Decryption failed
2023-07-22 04:34:30.004 UTC [2701294] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:34:30.004 UTC [2701294] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:34:30.004 UTC [2701294] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:34:30.020 UTC [2701302] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.020 UTC [2701302] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:34:30.020 UTC [2701302] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.020 UTC [2701302] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:34:30.020 UTC [2701302] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.020 UTC [2701302] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:34:30.021 UTC [2701302] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.021 UTC [2701302] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:34:30.021 UTC [2701302] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:34:30.021 UTC [2701302] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:34:30.021 UTC [2701302] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:34:30.021 UTC [2701302] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:34:30.021 UTC [2701302] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.021 UTC [2701302] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:34:30.021 UTC [2701302] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.021 UTC [2701302] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:34:30.038 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.038 UTC [2701312] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:34:30.038 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.038 UTC [2701312] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:34:30.038 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.038 UTC [2701312] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:34:30.039 UTC [2701312] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:34:30.039 UTC [2701312] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:34:30.049 UTC [2701318] ERROR:  invalid salt
2023-07-22 04:34:30.049 UTC [2701318] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:34:30.200 UTC [2701326] ERROR:  invalid salt
2023-07-22 04:34:30.200 UTC [2701326] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:34:30.200 UTC [2701326] ERROR:  invalid salt
2023-07-22 04:34:30.200 UTC [2701326] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:34:30.200 UTC [2701326] ERROR:  invalid salt
2023-07-22 04:34:30.200 UTC [2701326] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:34:30.268 UTC [2701330] ERROR:  invalid salt
2023-07-22 04:34:30.268 UTC [2701330] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:34:30.268 UTC [2701330] ERROR:  crypt(3) returned NULL
2023-07-22 04:34:30.268 UTC [2701330] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:34:30.268 UTC [2701330] ERROR:  crypt(3) returned NULL
2023-07-22 04:34:30.268 UTC [2701330] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:34:30.298 UTC [2701334] ERROR:  Corrupt ascii-armor
2023-07-22 04:34:30.298 UTC [2701334] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:34:30.299 UTC [2701334] ERROR:  Corrupt ascii-armor
2023-07-22 04:34:30.299 UTC [2701334] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:34:30.299 UTC [2701334] ERROR:  Corrupt ascii-armor
2023-07-22 04:34:30.299 UTC [2701334] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:34:30.300 UTC [2701334] ERROR:  mismatched array dimensions
2023-07-22 04:34:30.300 UTC [2701334] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:34:30.300 UTC [2701334] ERROR:  mismatched array dimensions
2023-07-22 04:34:30.300 UTC [2701334] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:34:30.300 UTC [2701334] ERROR:  wrong number of array subscripts
2023-07-22 04:34:30.300 UTC [2701334] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:34:30.300 UTC [2701334] ERROR:  wrong number of array subscripts
2023-07-22 04:34:30.300 UTC [2701334] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:34:30.300 UTC [2701334] ERROR:  null value not allowed for header key
2023-07-22 04:34:30.300 UTC [2701334] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:34:30.300 UTC [2701334] ERROR:  null value not allowed for header value
2023-07-22 04:34:30.300 UTC [2701334] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:34:30.301 UTC [2701334] ERROR:  header key must not contain newlines
2023-07-22 04:34:30.301 UTC [2701334] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:34:30.301 UTC [2701334] ERROR:  header value must not contain newlines
2023-07-22 04:34:30.301 UTC [2701334] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:34:30.301 UTC [2701334] ERROR:  header key must not contain ": "
2023-07-22 04:34:30.301 UTC [2701334] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:34:30.308 UTC [2701338] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.308 UTC [2701338] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:34:30.320 UTC [2701338] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.320 UTC [2701338] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:34:30.321 UTC [2701338] ERROR:  Not text data
2023-07-22 04:34:30.321 UTC [2701338] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:34:30.321 UTC [2701338] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.321 UTC [2701338] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:34:30.322 UTC [2701338] ERROR:  Unsupported compression algorithm
2023-07-22 04:34:30.322 UTC [2701338] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:34:30.335 UTC [2701344] ERROR:  Not text data
2023-07-22 04:34:30.335 UTC [2701344] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:34:30.779 UTC [2701352] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.779 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:34:30.785 UTC [2701352] ERROR:  Wrong key
2023-07-22 04:34:30.785 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:34:30.785 UTC [2701352] ERROR:  No encryption key found
2023-07-22 04:34:30.785 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:34:30.786 UTC [2701352] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.786 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:34:30.788 UTC [2701352] ERROR:  Need password for secret key
2023-07-22 04:34:30.788 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:34:30.789 UTC [2701352] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.789 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:34:30.791 UTC [2701352] ERROR:  Wrong key or corrupt data
2023-07-22 04:34:30.791 UTC [2701352] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:34:30.811 UTC [2701358] ERROR:  No encryption key found
2023-07-22 04:34:30.811 UTC [2701358] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:34:30.811 UTC [2701358] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:34:30.811 UTC [2701358] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:34:30.812 UTC [2701358] ERROR:  Not text data
2023-07-22 04:34:30.812 UTC [2701358] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:34:30.820 UTC [2701362] ERROR:  No encryption key found
2023-07-22 04:34:30.820 UTC [2701362] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:34:30.821 UTC [2701362] ERROR:  No encryption key found
2023-07-22 04:34:30.821 UTC [2701362] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:35:02.435 UTC [2701235] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:35:02.524 UTC [2701235] LOG:  checkpoint complete: wrote 516 buffers (3.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.030 s, total=0.089 s; sync files=260, longest=0.004 s, average=0.001 s; distance=141536 kB, estimate=141536 kB
2023-07-22 04:35:33.877 UTC [2701235] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:35:33.945 UTC [2701235] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.069 s; sync files=4, longest=0.005 s, average=0.002 s; distance=136250 kB, estimate=141007 kB
2023-07-22 04:35:34.010 UTC [2701234] LOG:  received fast shutdown request
2023-07-22 04:35:34.015 UTC [2701234] LOG:  aborting any active transactions
2023-07-22 04:35:34.017 UTC [2701234] LOG:  background worker "logical replication launcher" (PID 2701240) exited with exit code 1
2023-07-22 04:35:34.017 UTC [2701235] LOG:  shutting down
2023-07-22 04:35:34.026 UTC [2701235] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:35:34.052 UTC [2701235] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.003 s, total=0.035 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126907 kB
2023-07-22 04:35:34.079 UTC [2701234] LOG:  database system is shut down
2023-07-22 04:35:34.843 UTC [2701492] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:35:34.843 UTC [2701492] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:35:34.853 UTC [2701492] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:35:34.866 UTC [2701495] LOG:  database system was shut down at 2023-07-22 04:35:34 UTC
2023-07-22 04:35:34.874 UTC [2701492] LOG:  database system is ready to accept connections
2023-07-22 04:35:35.127 UTC [2701514] ERROR:  large object 43213 does not exist
2023-07-22 04:35:35.127 UTC [2701514] STATEMENT:  SELECT lo_get(43213);
2023-07-22 04:35:35.132 UTC [2701514] ERROR:  large object 43214 does not exist
2023-07-22 04:35:35.132 UTC [2701514] STATEMENT:  SELECT lo_get(43214);
2023-07-22 04:36:07.804 UTC [2701493] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:36:07.930 UTC [2701493] LOG:  checkpoint complete: wrote 923 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.027 s, sync=0.044 s, total=0.127 s; sync files=255, longest=0.018 s, average=0.001 s; distance=137606 kB, estimate=137606 kB
2023-07-22 04:36:39.818 UTC [2701493] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:36:39.896 UTC [2701493] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.013 s, sync=0.008 s, total=0.079 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133530 kB, estimate=137198 kB
2023-07-22 04:36:39.961 UTC [2701492] LOG:  received fast shutdown request
2023-07-22 04:36:39.966 UTC [2701492] LOG:  aborting any active transactions
2023-07-22 04:36:39.968 UTC [2701492] LOG:  background worker "logical replication launcher" (PID 2701498) exited with exit code 1
2023-07-22 04:36:39.968 UTC [2701493] LOG:  shutting down
2023-07-22 04:36:39.972 UTC [2701493] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:36:39.998 UTC [2701493] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.030 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123479 kB
2023-07-22 04:36:40.024 UTC [2701492] LOG:  database system is shut down
2023-07-22 04:36:40.838 UTC [2701644] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:36:40.839 UTC [2701644] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:36:40.844 UTC [2701644] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:36:40.856 UTC [2701647] LOG:  database system was shut down at 2023-07-22 04:36:40 UTC
2023-07-22 04:36:40.863 UTC [2701644] LOG:  database system is ready to accept connections
2023-07-22 04:36:41.095 UTC [2701673] ERROR:  function blah() does not exist at character 8
2023-07-22 04:36:41.095 UTC [2701673] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:36:41.095 UTC [2701673] STATEMENT:  SELECT blah();
2023-07-22 04:36:51.100 UTC [2701673] ERROR:  XXXXX
2023-07-22 04:36:51.100 UTC [2701673] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:36:51.100 UTC [2701673] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXX';
	END;
	$$;
2023-07-22 04:36:51.100 UTC [2701673] ERROR:  XXXXY
2023-07-22 04:36:51.100 UTC [2701673] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:36:51.100 UTC [2701673] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXY';
	END;
	$$;
2023-07-22 04:36:56.136 UTC [2701645] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:36:56.161 UTC [2701645] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.006 s, total=0.025 s; sync files=14, longest=0.003 s, average=0.001 s; distance=4183 kB, estimate=4183 kB
2023-07-22 04:36:56.257 UTC [2701692] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:36:56.257 UTC [2701692] STATEMENT:  select gen_salt('foo');
2023-07-22 04:36:56.257 UTC [2701692] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:36:56.257 UTC [2701692] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:36:56.257 UTC [2701692] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:36:56.257 UTC [2701692] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:36:56.258 UTC [2701692] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:36:56.258 UTC [2701692] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:36:56.344 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.344 UTC [2701712] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:36:56.344 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.344 UTC [2701712] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:36:56.344 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.344 UTC [2701712] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:36:56.344 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.344 UTC [2701712] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:36:56.345 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.345 UTC [2701712] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:36:56.345 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.345 UTC [2701712] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:36:56.345 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.345 UTC [2701712] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:36:56.345 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.345 UTC [2701712] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:36:56.346 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.346 UTC [2701712] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:36:56.346 UTC [2701712] ERROR:  encrypt error: Key was too big
2023-07-22 04:36:56.346 UTC [2701712] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:36:56.346 UTC [2701712] ERROR:  encrypt error: Key was too big
2023-07-22 04:36:56.346 UTC [2701712] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:36:56.346 UTC [2701712] ERROR:  encrypt error: Key was too big
2023-07-22 04:36:56.346 UTC [2701712] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:36:56.347 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.347 UTC [2701712] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:36:56.347 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.347 UTC [2701712] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:36:56.347 UTC [2701712] ERROR:  encrypt error: Key was too big
2023-07-22 04:36:56.347 UTC [2701712] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:36:56.348 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.348 UTC [2701712] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:36:56.348 UTC [2701712] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:36:56.348 UTC [2701712] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:36:56.348 UTC [2701712] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:36:56.348 UTC [2701712] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:36:56.348 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.348 UTC [2701712] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:36:56.348 UTC [2701712] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.348 UTC [2701712] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:36:56.367 UTC [2701718] ERROR:  encrypt error: Encryption failed
2023-07-22 04:36:56.367 UTC [2701718] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:36:56.369 UTC [2701718] ERROR:  decrypt error: Decryption failed
2023-07-22 04:36:56.369 UTC [2701718] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:36:56.369 UTC [2701718] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:36:56.369 UTC [2701718] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:36:56.403 UTC [2701726] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.403 UTC [2701726] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:36:56.403 UTC [2701726] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.403 UTC [2701726] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:36:56.404 UTC [2701726] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.404 UTC [2701726] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:36:56.404 UTC [2701726] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.404 UTC [2701726] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:36:56.404 UTC [2701726] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:36:56.404 UTC [2701726] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:36:56.405 UTC [2701726] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:36:56.405 UTC [2701726] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:36:56.405 UTC [2701726] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.405 UTC [2701726] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:36:56.405 UTC [2701726] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.405 UTC [2701726] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:36:56.438 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.438 UTC [2701736] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:36:56.438 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.438 UTC [2701736] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:36:56.439 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.439 UTC [2701736] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:36:56.439 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.439 UTC [2701736] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:36:56.439 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.439 UTC [2701736] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:36:56.440 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.440 UTC [2701736] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:36:56.440 UTC [2701736] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:36:56.440 UTC [2701736] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:36:56.440 UTC [2701736] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:36:56.440 UTC [2701736] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:36:56.440 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.440 UTC [2701736] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:36:56.441 UTC [2701736] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:36:56.441 UTC [2701736] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:36:56.458 UTC [2701742] ERROR:  invalid salt
2023-07-22 04:36:56.458 UTC [2701742] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:36:56.563 UTC [2701750] ERROR:  invalid salt
2023-07-22 04:36:56.563 UTC [2701750] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:36:56.563 UTC [2701750] ERROR:  invalid salt
2023-07-22 04:36:56.563 UTC [2701750] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:36:56.563 UTC [2701750] ERROR:  invalid salt
2023-07-22 04:36:56.563 UTC [2701750] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:36:56.612 UTC [2701754] ERROR:  invalid salt
2023-07-22 04:36:56.612 UTC [2701754] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:36:56.612 UTC [2701754] ERROR:  crypt(3) returned NULL
2023-07-22 04:36:56.612 UTC [2701754] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:36:56.612 UTC [2701754] ERROR:  crypt(3) returned NULL
2023-07-22 04:36:56.612 UTC [2701754] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:36:56.629 UTC [2701758] ERROR:  Corrupt ascii-armor
2023-07-22 04:36:56.629 UTC [2701758] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:36:56.629 UTC [2701758] ERROR:  Corrupt ascii-armor
2023-07-22 04:36:56.629 UTC [2701758] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:36:56.629 UTC [2701758] ERROR:  Corrupt ascii-armor
2023-07-22 04:36:56.629 UTC [2701758] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:36:56.630 UTC [2701758] ERROR:  mismatched array dimensions
2023-07-22 04:36:56.630 UTC [2701758] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:36:56.630 UTC [2701758] ERROR:  mismatched array dimensions
2023-07-22 04:36:56.630 UTC [2701758] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  wrong number of array subscripts
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  wrong number of array subscripts
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  null value not allowed for header key
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  null value not allowed for header value
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  header key must not contain newlines
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  header value must not contain newlines
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:36:56.631 UTC [2701758] ERROR:  header key must not contain ": "
2023-07-22 04:36:56.631 UTC [2701758] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:36:56.637 UTC [2701762] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:56.637 UTC [2701762] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:36:56.647 UTC [2701762] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:56.647 UTC [2701762] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:36:56.648 UTC [2701762] ERROR:  Not text data
2023-07-22 04:36:56.648 UTC [2701762] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:36:56.648 UTC [2701762] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:56.648 UTC [2701762] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:36:56.649 UTC [2701762] ERROR:  Unsupported compression algorithm
2023-07-22 04:36:56.649 UTC [2701762] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:36:56.662 UTC [2701768] ERROR:  Not text data
2023-07-22 04:36:56.662 UTC [2701768] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:36:57.095 UTC [2701776] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:57.095 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:36:57.101 UTC [2701776] ERROR:  Wrong key
2023-07-22 04:36:57.101 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:36:57.101 UTC [2701776] ERROR:  No encryption key found
2023-07-22 04:36:57.101 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:36:57.102 UTC [2701776] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:57.102 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:36:57.104 UTC [2701776] ERROR:  Need password for secret key
2023-07-22 04:36:57.104 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:36:57.105 UTC [2701776] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:57.105 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:36:57.108 UTC [2701776] ERROR:  Wrong key or corrupt data
2023-07-22 04:36:57.108 UTC [2701776] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:36:57.129 UTC [2701782] ERROR:  No encryption key found
2023-07-22 04:36:57.129 UTC [2701782] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:36:57.130 UTC [2701782] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:36:57.130 UTC [2701782] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:36:57.131 UTC [2701782] ERROR:  Not text data
2023-07-22 04:36:57.131 UTC [2701782] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:36:57.139 UTC [2701786] ERROR:  No encryption key found
2023-07-22 04:36:57.139 UTC [2701786] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:36:57.140 UTC [2701786] ERROR:  No encryption key found
2023-07-22 04:36:57.140 UTC [2701786] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:37:28.766 UTC [2701645] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:37:28.868 UTC [2701645] LOG:  checkpoint complete: wrote 521 buffers (3.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.037 s, total=0.103 s; sync files=260, longest=0.004 s, average=0.001 s; distance=141550 kB, estimate=141550 kB
2023-07-22 04:38:00.288 UTC [2701645] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:38:00.340 UTC [2701645] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.052 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138336 kB, estimate=141229 kB
2023-07-22 04:38:00.377 UTC [2701644] LOG:  received fast shutdown request
2023-07-22 04:38:00.381 UTC [2701644] LOG:  aborting any active transactions
2023-07-22 04:38:00.382 UTC [2701644] LOG:  background worker "logical replication launcher" (PID 2701651) exited with exit code 1
2023-07-22 04:38:00.382 UTC [2701645] LOG:  shutting down
2023-07-22 04:38:00.385 UTC [2701645] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:38:00.402 UTC [2701645] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.002 s, total=0.020 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=127106 kB
2023-07-22 04:38:00.428 UTC [2701644] LOG:  database system is shut down
2023-07-22 04:38:01.126 UTC [2701954] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:38:01.126 UTC [2701954] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:38:01.132 UTC [2701954] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:38:01.139 UTC [2701957] LOG:  database system was shut down at 2023-07-22 04:38:00 UTC
2023-07-22 04:38:01.145 UTC [2701954] LOG:  database system is ready to accept connections
2023-07-22 04:38:01.391 UTC [2701986] ERROR:  function blah() does not exist at character 8
2023-07-22 04:38:01.391 UTC [2701986] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:38:01.391 UTC [2701986] STATEMENT:  SELECT blah();
2023-07-22 04:38:11.397 UTC [2701986] ERROR:  XXXXX
2023-07-22 04:38:11.397 UTC [2701986] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:38:11.397 UTC [2701986] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXX';
	END;
	$$;
2023-07-22 04:38:11.398 UTC [2701986] ERROR:  XXXXY
2023-07-22 04:38:11.398 UTC [2701986] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:38:11.398 UTC [2701986] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXY';
	END;
	$$;
2023-07-22 04:38:48.107 UTC [2701955] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:38:48.235 UTC [2701955] LOG:  checkpoint complete: wrote 724 buffers (4.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.068 s, total=0.128 s; sync files=259, longest=0.004 s, average=0.001 s; distance=140984 kB, estimate=140984 kB
2023-07-22 04:39:19.642 UTC [2701955] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:39:19.703 UTC [2701955] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.012 s, sync=0.005 s, total=0.062 s; sync files=4, longest=0.004 s, average=0.002 s; distance=138866 kB, estimate=140773 kB
2023-07-22 04:39:19.771 UTC [2701954] LOG:  received fast shutdown request
2023-07-22 04:39:19.774 UTC [2701954] LOG:  aborting any active transactions
2023-07-22 04:39:19.776 UTC [2701954] LOG:  background worker "logical replication launcher" (PID 2701961) exited with exit code 1
2023-07-22 04:39:19.776 UTC [2701955] LOG:  shutting down
2023-07-22 04:39:19.779 UTC [2701955] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:39:19.795 UTC [2701955] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126695 kB
2023-07-22 04:39:19.823 UTC [2701954] LOG:  database system is shut down
2023-07-22 04:39:20.491 UTC [2702121] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:39:20.491 UTC [2702121] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:39:20.498 UTC [2702121] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:39:20.505 UTC [2702124] LOG:  database system was shut down at 2023-07-22 04:39:20 UTC
2023-07-22 04:39:20.511 UTC [2702121] LOG:  database system is ready to accept connections
2023-07-22 04:39:20.730 UTC [2702140] LOG:  lsm3_build lsm3_index
2023-07-22 04:39:20.730 UTC [2702140] STATEMENT:  create index lsm3_index on t using lsm3(k);
2023-07-22 04:39:22.214 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:39:22.215 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:39:22.802 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 04:39:22.803 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:39:23.813 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:39:23.813 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:39:24.823 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 04:39:24.823 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:39:25.833 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:39:25.834 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:39:26.979 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 04:39:27.075 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:39:27.148 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top0 with size 250 blocks
2023-07-22 04:39:27.255 UTC [2702141] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:39:27.316 UTC [2702141] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 04:39:27.394 UTC [2702140] LOG:  lsm3_build lsm3_index
2023-07-22 04:39:27.394 UTC [2702140] STATEMENT:  truncate table t;
2023-07-22 04:39:28.394 UTC [2702141] ERROR:  deadlock detected
2023-07-22 04:39:28.394 UTC [2702141] DETAIL:  Process 2702141 waits for AccessShareLock on relation 17067 of database 16384; blocked by process 2702140.
	Process 2702140 waits for AccessExclusiveLock on relation 17072 of database 16384; blocked by process 2702141.
	Process 2702141: truncate
	Process 2702140: truncate table t;
2023-07-22 04:39:28.394 UTC [2702141] HINT:  See server log for query details.
2023-07-22 04:39:28.399 UTC [2702121] LOG:  background worker "lsm3-merger-17070" (PID 2702141) exited with exit code 1
2023-07-22 04:39:30.316 UTC [2702140] LOG:  lsm3_build lsm3_index
2023-07-22 04:39:30.316 UTC [2702140] STATEMENT:  reindex table t;
2023-07-22 04:39:31.436 UTC [2702140] LOG:  lsm3_build lsm_k_idx
2023-07-22 04:39:31.436 UTC [2702140] STATEMENT:  create index concurrently on lsm using lsm3(k);
2023-07-22 04:39:32.083 UTC [2702158] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:39:32.083 UTC [2702158] STATEMENT:  select gen_salt('foo');
2023-07-22 04:39:32.083 UTC [2702158] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:39:32.083 UTC [2702158] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:39:32.083 UTC [2702158] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:39:32.083 UTC [2702158] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:39:32.084 UTC [2702158] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:39:32.084 UTC [2702158] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:39:32.142 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.142 UTC [2702178] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:39:32.142 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.142 UTC [2702178] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:39:32.142 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.142 UTC [2702178] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:39:32.142 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.142 UTC [2702178] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:39:32.142 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.142 UTC [2702178] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Key was too big
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Key was too big
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Key was too big
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:39:32.143 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.143 UTC [2702178] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:39:32.144 UTC [2702178] ERROR:  encrypt error: Key was too big
2023-07-22 04:39:32.144 UTC [2702178] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:39:32.144 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.144 UTC [2702178] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:39:32.144 UTC [2702178] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:39:32.144 UTC [2702178] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:39:32.144 UTC [2702178] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:39:32.144 UTC [2702178] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:39:32.144 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.144 UTC [2702178] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:39:32.144 UTC [2702178] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.144 UTC [2702178] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:39:32.158 UTC [2702184] ERROR:  encrypt error: Encryption failed
2023-07-22 04:39:32.158 UTC [2702184] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:39:32.159 UTC [2702184] ERROR:  decrypt error: Decryption failed
2023-07-22 04:39:32.159 UTC [2702184] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:39:32.159 UTC [2702184] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:39:32.159 UTC [2702184] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:39:32.183 UTC [2702192] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.183 UTC [2702192] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:39:32.183 UTC [2702192] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.183 UTC [2702192] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:39:32.183 UTC [2702192] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.183 UTC [2702192] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:39:32.184 UTC [2702192] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.184 UTC [2702192] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:39:32.184 UTC [2702192] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:39:32.184 UTC [2702192] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:39:32.184 UTC [2702192] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:39:32.184 UTC [2702192] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:39:32.184 UTC [2702192] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.184 UTC [2702192] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:39:32.184 UTC [2702192] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.184 UTC [2702192] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:39:32.209 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.209 UTC [2702202] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:39:32.209 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.209 UTC [2702202] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:39:32.209 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.209 UTC [2702202] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:39:32.209 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.209 UTC [2702202] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:39:32.209 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.209 UTC [2702202] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:39:32.210 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.210 UTC [2702202] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:39:32.210 UTC [2702202] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:39:32.210 UTC [2702202] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:39:32.210 UTC [2702202] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:39:32.210 UTC [2702202] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:39:32.210 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.210 UTC [2702202] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:39:32.210 UTC [2702202] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:39:32.210 UTC [2702202] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:39:32.224 UTC [2702208] ERROR:  invalid salt
2023-07-22 04:39:32.224 UTC [2702208] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:39:32.357 UTC [2702216] ERROR:  invalid salt
2023-07-22 04:39:32.357 UTC [2702216] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:39:32.358 UTC [2702216] ERROR:  invalid salt
2023-07-22 04:39:32.358 UTC [2702216] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:39:32.358 UTC [2702216] ERROR:  invalid salt
2023-07-22 04:39:32.358 UTC [2702216] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:39:32.424 UTC [2702220] ERROR:  invalid salt
2023-07-22 04:39:32.424 UTC [2702220] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:39:32.424 UTC [2702220] ERROR:  crypt(3) returned NULL
2023-07-22 04:39:32.424 UTC [2702220] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:39:32.424 UTC [2702220] ERROR:  crypt(3) returned NULL
2023-07-22 04:39:32.424 UTC [2702220] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:39:32.455 UTC [2702224] ERROR:  Corrupt ascii-armor
2023-07-22 04:39:32.455 UTC [2702224] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:39:32.455 UTC [2702224] ERROR:  Corrupt ascii-armor
2023-07-22 04:39:32.455 UTC [2702224] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:39:32.455 UTC [2702224] ERROR:  Corrupt ascii-armor
2023-07-22 04:39:32.455 UTC [2702224] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:39:32.459 UTC [2702224] ERROR:  mismatched array dimensions
2023-07-22 04:39:32.459 UTC [2702224] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:39:32.459 UTC [2702224] ERROR:  mismatched array dimensions
2023-07-22 04:39:32.459 UTC [2702224] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  wrong number of array subscripts
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  wrong number of array subscripts
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  null value not allowed for header key
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  null value not allowed for header value
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  header key must not contain newlines
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  header value must not contain newlines
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:39:32.460 UTC [2702224] ERROR:  header key must not contain ": "
2023-07-22 04:39:32.460 UTC [2702224] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:39:32.474 UTC [2702228] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:32.474 UTC [2702228] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:39:32.499 UTC [2702228] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:32.499 UTC [2702228] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:39:32.501 UTC [2702228] ERROR:  Not text data
2023-07-22 04:39:32.501 UTC [2702228] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:39:32.502 UTC [2702228] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:32.502 UTC [2702228] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:39:32.502 UTC [2702228] ERROR:  Unsupported compression algorithm
2023-07-22 04:39:32.502 UTC [2702228] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:39:32.529 UTC [2702234] ERROR:  Not text data
2023-07-22 04:39:32.529 UTC [2702234] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:39:32.991 UTC [2702242] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:32.991 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:39:33.007 UTC [2702242] ERROR:  Wrong key
2023-07-22 04:39:33.007 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:39:33.008 UTC [2702242] ERROR:  No encryption key found
2023-07-22 04:39:33.008 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:39:33.009 UTC [2702242] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:33.009 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:39:33.013 UTC [2702242] ERROR:  Need password for secret key
2023-07-22 04:39:33.013 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:39:33.014 UTC [2702242] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:33.014 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:39:33.018 UTC [2702242] ERROR:  Wrong key or corrupt data
2023-07-22 04:39:33.018 UTC [2702242] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:39:33.039 UTC [2702248] ERROR:  No encryption key found
2023-07-22 04:39:33.039 UTC [2702248] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:39:33.040 UTC [2702248] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:39:33.040 UTC [2702248] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:39:33.041 UTC [2702248] ERROR:  Not text data
2023-07-22 04:39:33.041 UTC [2702248] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:39:33.049 UTC [2702252] ERROR:  No encryption key found
2023-07-22 04:39:33.049 UTC [2702252] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:39:33.050 UTC [2702252] ERROR:  No encryption key found
2023-07-22 04:39:33.050 UTC [2702252] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:40:04.633 UTC [2702122] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:40:04.801 UTC [2702122] LOG:  checkpoint complete: wrote 1312 buffers (8.0%); 0 WAL file(s) added, 0 removed, 26 recycled; write=0.029 s, sync=0.043 s, total=0.169 s; sync files=513, longest=0.004 s, average=0.001 s; distance=425892 kB, estimate=425892 kB
2023-07-22 04:40:36.193 UTC [2702122] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:40:36.242 UTC [2702122] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.050 s; sync files=4, longest=0.003 s, average=0.002 s; distance=139319 kB, estimate=397235 kB
2023-07-22 04:40:36.305 UTC [2702121] LOG:  received fast shutdown request
2023-07-22 04:40:36.308 UTC [2702121] LOG:  aborting any active transactions
2023-07-22 04:40:36.310 UTC [2702121] LOG:  background worker "logical replication launcher" (PID 2702127) exited with exit code 1
2023-07-22 04:40:36.310 UTC [2702122] LOG:  shutting down
2023-07-22 04:40:36.313 UTC [2702122] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:40:36.328 UTC [2702122] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=357511 kB
2023-07-22 04:40:36.347 UTC [2702121] LOG:  database system is shut down
2023-07-22 04:40:37.114 UTC [2702380] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:40:37.115 UTC [2702380] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:40:37.121 UTC [2702380] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:40:37.129 UTC [2702383] LOG:  database system was shut down at 2023-07-22 04:40:36 UTC
2023-07-22 04:40:37.136 UTC [2702380] LOG:  database system is ready to accept connections
2023-07-22 04:40:37.310 UTC [2702402] LOG:  lsm3_build lsm3_index
2023-07-22 04:40:37.310 UTC [2702402] STATEMENT:  create index lsm3_index on t using lsm3(k);
2023-07-22 04:40:38.717 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:40:38.718 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:40:39.390 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 04:40:39.390 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:40:40.400 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:40:40.401 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:40:41.410 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 04:40:41.411 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:40:42.421 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:40:42.421 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:40:43.547 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 04:40:43.673 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:40:43.755 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top0 with size 250 blocks
2023-07-22 04:40:43.867 UTC [2702403] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:40:43.944 UTC [2702403] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 04:40:44.019 UTC [2702402] LOG:  lsm3_build lsm3_index
2023-07-22 04:40:44.019 UTC [2702402] STATEMENT:  truncate table t;
2023-07-22 04:40:45.020 UTC [2702403] ERROR:  deadlock detected
2023-07-22 04:40:45.020 UTC [2702403] DETAIL:  Process 2702403 waits for AccessShareLock on relation 17074 of database 16384; blocked by process 2702402.
	Process 2702402 waits for AccessExclusiveLock on relation 17079 of database 16384; blocked by process 2702403.
	Process 2702403: truncate
	Process 2702402: truncate table t;
2023-07-22 04:40:45.020 UTC [2702403] HINT:  See server log for query details.
2023-07-22 04:40:45.026 UTC [2702380] LOG:  background worker "lsm3-merger-17077" (PID 2702403) exited with exit code 1
2023-07-22 04:40:47.042 UTC [2702402] LOG:  lsm3_build lsm3_index
2023-07-22 04:40:47.042 UTC [2702402] STATEMENT:  reindex table t;
2023-07-22 04:40:48.163 UTC [2702402] LOG:  lsm3_build lsm_k_idx
2023-07-22 04:40:48.163 UTC [2702402] STATEMENT:  create index concurrently on lsm using lsm3(k);
2023-07-22 04:41:20.343 UTC [2702381] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:41:20.539 UTC [2702381] LOG:  checkpoint complete: wrote 530 buffers (3.2%); 0 WAL file(s) added, 0 removed, 26 recycled; write=0.029 s, sync=0.063 s, total=0.196 s; sync files=259, longest=0.004 s, average=0.001 s; distance=421417 kB, estimate=421417 kB
2023-07-22 04:41:51.908 UTC [2702381] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:41:51.961 UTC [2702381] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137012 kB, estimate=392977 kB
2023-07-22 04:41:52.025 UTC [2702380] LOG:  received fast shutdown request
2023-07-22 04:41:52.032 UTC [2702380] LOG:  aborting any active transactions
2023-07-22 04:41:52.033 UTC [2702380] LOG:  background worker "logical replication launcher" (PID 2702386) exited with exit code 1
2023-07-22 04:41:52.033 UTC [2702381] LOG:  shutting down
2023-07-22 04:41:52.037 UTC [2702381] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:41:52.052 UTC [2702381] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=353679 kB
2023-07-22 04:41:52.074 UTC [2702380] LOG:  database system is shut down
2023-07-22 04:41:52.803 UTC [2702535] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:41:52.803 UTC [2702535] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:41:52.810 UTC [2702535] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:41:52.819 UTC [2702538] LOG:  database system was shut down at 2023-07-22 04:41:52 UTC
2023-07-22 04:41:52.827 UTC [2702535] LOG:  database system is ready to accept connections
2023-07-22 04:41:52.996 UTC [2702554] ERROR:  ltree syntax error at character 1 at character 8
2023-07-22 04:41:52.996 UTC [2702554] STATEMENT:  SELECT '.2.3'::ltree;
2023-07-22 04:41:52.996 UTC [2702554] ERROR:  ltree syntax error at character 3 at character 8
2023-07-22 04:41:52.996 UTC [2702554] STATEMENT:  SELECT '1..3'::ltree;
2023-07-22 04:41:52.996 UTC [2702554] ERROR:  ltree syntax error at character 8
2023-07-22 04:41:52.996 UTC [2702554] DETAIL:  Unexpected end of input.
2023-07-22 04:41:52.996 UTC [2702554] STATEMENT:  SELECT '1.2.'::ltree;
2023-07-22 04:41:52.996 UTC [2702554] ERROR:  label string is too long
2023-07-22 04:41:52.996 UTC [2702554] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 04:41:52.996 UTC [2702554] STATEMENT:  SELECT repeat('x', 256)::ltree;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '.2.3'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1..3'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 8
2023-07-22 04:41:53.000 UTC [2702554] DETAIL:  Unexpected end of input.
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1.2.'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '@.2.3'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1.@.3'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 5 at character 8
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1.2.@'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 2 at character 8
2023-07-22 04:41:53.000 UTC [2702554] DETAIL:  Empty labels are not allowed.
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '!.2.3'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 4 at character 8
2023-07-22 04:41:53.000 UTC [2702554] DETAIL:  Empty labels are not allowed.
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1.!.3'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 6 at character 8
2023-07-22 04:41:53.000 UTC [2702554] DETAIL:  Empty labels are not allowed.
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1.2.!'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  lquery syntax error at character 7 at character 8
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT '1.2.3|@.4'::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  label string is too long
2023-07-22 04:41:53.000 UTC [2702554] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT (repeat('x', 256) || '*@@*')::lquery;
2023-07-22 04:41:53.000 UTC [2702554] ERROR:  label string is too long
2023-07-22 04:41:53.000 UTC [2702554] DETAIL:  Label length is 256, must be at most 255, at character 258.
2023-07-22 04:41:53.000 UTC [2702554] STATEMENT:  SELECT ('!' || repeat('x', 256))::lquery;
2023-07-22 04:41:53.005 UTC [2702554] ERROR:  number of ltree labels (65536) exceeds the maximum allowed (65535)
2023-07-22 04:41:53.005 UTC [2702554] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65535))::ltree);
2023-07-22 04:41:53.009 UTC [2702554] ERROR:  number of ltree levels (65536) exceeds the maximum allowed (65535)
2023-07-22 04:41:53.009 UTC [2702554] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65534))::ltree || '1');
2023-07-22 04:41:53.018 UTC [2702554] ERROR:  number of lquery items (65536) exceeds the maximum allowed (65535)
2023-07-22 04:41:53.018 UTC [2702554] STATEMENT:  SELECT ('1' || repeat('.1', 65535))::lquery IS NULL;
2023-07-22 04:41:53.018 UTC [2702554] ERROR:  lquery syntax error at character 8
2023-07-22 04:41:53.018 UTC [2702554] DETAIL:  Low limit (65536) exceeds the maximum allowed (65535), at character 3.
2023-07-22 04:41:53.018 UTC [2702554] STATEMENT:  SELECT '*{65536}'::lquery;
2023-07-22 04:41:53.019 UTC [2702554] ERROR:  lquery syntax error at character 8
2023-07-22 04:41:53.019 UTC [2702554] DETAIL:  High limit (65536) exceeds the maximum allowed (65535), at character 4.
2023-07-22 04:41:53.019 UTC [2702554] STATEMENT:  SELECT '*{,65536}'::lquery;
2023-07-22 04:41:53.019 UTC [2702554] ERROR:  lquery syntax error at character 8
2023-07-22 04:41:53.019 UTC [2702554] DETAIL:  Low limit (4) is greater than high limit (3), at character 5.
2023-07-22 04:41:53.019 UTC [2702554] STATEMENT:  SELECT '*{4,3}'::lquery;
2023-07-22 04:41:53.063 UTC [2702554] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:41:53.063 UTC [2702554] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:41:53.063 UTC [2702554] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=0));
2023-07-22 04:41:53.063 UTC [2702554] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:41:53.063 UTC [2702554] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:41:53.063 UTC [2702554] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2025));
2023-07-22 04:41:53.064 UTC [2702554] ERROR:  value 2028 out of bounds for option "siglen"
2023-07-22 04:41:53.064 UTC [2702554] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:41:53.064 UTC [2702554] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2028));
2023-07-22 04:41:53.064 UTC [2702554] ERROR:  siglen value must be a multiple of 4
2023-07-22 04:41:53.064 UTC [2702554] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2019));
2023-07-22 04:41:53.119 UTC [2702554] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:41:53.119 UTC [2702554] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:41:53.119 UTC [2702554] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=0));
2023-07-22 04:41:53.120 UTC [2702554] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:41:53.120 UTC [2702554] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:41:53.120 UTC [2702554] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=2025));
2023-07-22 04:41:53.224 UTC [2702536] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:41:53.285 UTC [2702536] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.005 s, total=0.062 s; sync files=7, longest=0.003 s, average=0.001 s; distance=9013 kB, estimate=9013 kB
2023-07-22 04:41:53.419 UTC [2702571] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:41:53.419 UTC [2702571] STATEMENT:  select gen_salt('foo');
2023-07-22 04:41:53.419 UTC [2702571] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:41:53.419 UTC [2702571] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:41:53.420 UTC [2702571] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:41:53.420 UTC [2702571] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:41:53.420 UTC [2702571] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:41:53.420 UTC [2702571] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:41:53.459 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.459 UTC [2702591] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:41:53.459 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.459 UTC [2702591] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:41:53.459 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.459 UTC [2702591] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:41:53.459 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.459 UTC [2702591] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Key was too big
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Key was too big
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Key was too big
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Key was too big
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:41:53.460 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.460 UTC [2702591] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:41:53.461 UTC [2702591] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:41:53.461 UTC [2702591] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:41:53.461 UTC [2702591] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:41:53.461 UTC [2702591] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:41:53.461 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.461 UTC [2702591] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:41:53.461 UTC [2702591] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.461 UTC [2702591] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:41:53.470 UTC [2702597] ERROR:  encrypt error: Encryption failed
2023-07-22 04:41:53.470 UTC [2702597] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:41:53.471 UTC [2702597] ERROR:  decrypt error: Decryption failed
2023-07-22 04:41:53.471 UTC [2702597] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:41:53.471 UTC [2702597] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:41:53.471 UTC [2702597] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:41:53.487 UTC [2702605] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.487 UTC [2702605] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:41:53.487 UTC [2702605] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.487 UTC [2702605] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:41:53.487 UTC [2702605] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.487 UTC [2702605] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:41:53.488 UTC [2702605] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.488 UTC [2702605] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:41:53.488 UTC [2702605] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:41:53.488 UTC [2702605] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:41:53.488 UTC [2702605] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:41:53.488 UTC [2702605] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:41:53.488 UTC [2702605] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.488 UTC [2702605] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:41:53.488 UTC [2702605] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.488 UTC [2702605] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:41:53.504 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.504 UTC [2702615] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:41:53.505 UTC [2702615] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:41:53.505 UTC [2702615] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:41:53.514 UTC [2702621] ERROR:  invalid salt
2023-07-22 04:41:53.514 UTC [2702621] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:41:53.613 UTC [2702629] ERROR:  invalid salt
2023-07-22 04:41:53.613 UTC [2702629] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:41:53.614 UTC [2702629] ERROR:  invalid salt
2023-07-22 04:41:53.614 UTC [2702629] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:41:53.614 UTC [2702629] ERROR:  invalid salt
2023-07-22 04:41:53.614 UTC [2702629] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:41:53.677 UTC [2702633] ERROR:  invalid salt
2023-07-22 04:41:53.677 UTC [2702633] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:41:53.677 UTC [2702633] ERROR:  crypt(3) returned NULL
2023-07-22 04:41:53.677 UTC [2702633] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:41:53.677 UTC [2702633] ERROR:  crypt(3) returned NULL
2023-07-22 04:41:53.677 UTC [2702633] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:41:53.695 UTC [2702637] ERROR:  Corrupt ascii-armor
2023-07-22 04:41:53.695 UTC [2702637] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:41:53.695 UTC [2702637] ERROR:  Corrupt ascii-armor
2023-07-22 04:41:53.695 UTC [2702637] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:41:53.695 UTC [2702637] ERROR:  Corrupt ascii-armor
2023-07-22 04:41:53.695 UTC [2702637] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  mismatched array dimensions
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  mismatched array dimensions
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  wrong number of array subscripts
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  wrong number of array subscripts
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  null value not allowed for header key
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  null value not allowed for header value
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  header key must not contain newlines
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  header value must not contain newlines
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:41:53.697 UTC [2702637] ERROR:  header key must not contain ": "
2023-07-22 04:41:53.697 UTC [2702637] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:41:53.704 UTC [2702641] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:53.704 UTC [2702641] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:41:53.715 UTC [2702641] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:53.715 UTC [2702641] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:41:53.716 UTC [2702641] ERROR:  Not text data
2023-07-22 04:41:53.716 UTC [2702641] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:41:53.716 UTC [2702641] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:53.716 UTC [2702641] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:41:53.717 UTC [2702641] ERROR:  Unsupported compression algorithm
2023-07-22 04:41:53.717 UTC [2702641] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:41:53.729 UTC [2702647] ERROR:  Not text data
2023-07-22 04:41:53.729 UTC [2702647] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:41:54.163 UTC [2702655] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:54.163 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:41:54.168 UTC [2702655] ERROR:  Wrong key
2023-07-22 04:41:54.168 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:41:54.168 UTC [2702655] ERROR:  No encryption key found
2023-07-22 04:41:54.168 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:41:54.168 UTC [2702655] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:54.168 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:41:54.171 UTC [2702655] ERROR:  Need password for secret key
2023-07-22 04:41:54.171 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:41:54.171 UTC [2702655] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:54.171 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:41:54.173 UTC [2702655] ERROR:  Wrong key or corrupt data
2023-07-22 04:41:54.173 UTC [2702655] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:41:54.191 UTC [2702661] ERROR:  No encryption key found
2023-07-22 04:41:54.191 UTC [2702661] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:41:54.191 UTC [2702661] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:41:54.191 UTC [2702661] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:41:54.192 UTC [2702661] ERROR:  Not text data
2023-07-22 04:41:54.192 UTC [2702661] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:41:54.199 UTC [2702665] ERROR:  No encryption key found
2023-07-22 04:41:54.199 UTC [2702665] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:41:54.200 UTC [2702665] ERROR:  No encryption key found
2023-07-22 04:41:54.200 UTC [2702665] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:42:25.889 UTC [2702536] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:42:26.125 UTC [2702536] LOG:  checkpoint complete: wrote 948 buffers (5.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.037 s, sync=0.155 s, total=0.237 s; sync files=260, longest=0.060 s, average=0.001 s; distance=141828 kB, estimate=141828 kB
2023-07-22 04:42:57.476 UTC [2702536] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:42:57.521 UTC [2702536] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.046 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137317 kB, estimate=141377 kB
2023-07-22 04:42:57.557 UTC [2702535] LOG:  received fast shutdown request
2023-07-22 04:42:57.560 UTC [2702535] LOG:  aborting any active transactions
2023-07-22 04:42:57.565 UTC [2702535] LOG:  background worker "logical replication launcher" (PID 2702541) exited with exit code 1
2023-07-22 04:42:57.566 UTC [2702536] LOG:  shutting down
2023-07-22 04:42:57.569 UTC [2702536] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:42:57.587 UTC [2702536] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127240 kB
2023-07-22 04:42:57.608 UTC [2702535] LOG:  database system is shut down
2023-07-22 04:42:58.308 UTC [2702789] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:42:58.309 UTC [2702789] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:42:58.315 UTC [2702789] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:42:58.322 UTC [2702792] LOG:  database system was shut down at 2023-07-22 04:42:58 UTC
2023-07-22 04:42:58.327 UTC [2702789] LOG:  database system is ready to accept connections
2023-07-22 04:42:58.555 UTC [2702811] ERROR:  ltree syntax error at character 1 at character 8
2023-07-22 04:42:58.555 UTC [2702811] STATEMENT:  SELECT '.2.3'::ltree;
2023-07-22 04:42:58.556 UTC [2702811] ERROR:  ltree syntax error at character 3 at character 8
2023-07-22 04:42:58.556 UTC [2702811] STATEMENT:  SELECT '1..3'::ltree;
2023-07-22 04:42:58.556 UTC [2702811] ERROR:  ltree syntax error at character 8
2023-07-22 04:42:58.556 UTC [2702811] DETAIL:  Unexpected end of input.
2023-07-22 04:42:58.556 UTC [2702811] STATEMENT:  SELECT '1.2.'::ltree;
2023-07-22 04:42:58.557 UTC [2702811] ERROR:  label string is too long
2023-07-22 04:42:58.557 UTC [2702811] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 04:42:58.557 UTC [2702811] STATEMENT:  SELECT repeat('x', 256)::ltree;
2023-07-22 04:42:58.577 UTC [2702811] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 04:42:58.577 UTC [2702811] STATEMENT:  SELECT '.2.3'::lquery;
2023-07-22 04:42:58.577 UTC [2702811] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 04:42:58.577 UTC [2702811] STATEMENT:  SELECT '1..3'::lquery;
2023-07-22 04:42:58.577 UTC [2702811] ERROR:  lquery syntax error at character 8
2023-07-22 04:42:58.577 UTC [2702811] DETAIL:  Unexpected end of input.
2023-07-22 04:42:58.577 UTC [2702811] STATEMENT:  SELECT '1.2.'::lquery;
2023-07-22 04:42:58.577 UTC [2702811] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 04:42:58.577 UTC [2702811] STATEMENT:  SELECT '@.2.3'::lquery;
2023-07-22 04:42:58.577 UTC [2702811] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 04:42:58.577 UTC [2702811] STATEMENT:  SELECT '1.@.3'::lquery;
2023-07-22 04:42:58.578 UTC [2702811] ERROR:  lquery syntax error at character 5 at character 8
2023-07-22 04:42:58.578 UTC [2702811] STATEMENT:  SELECT '1.2.@'::lquery;
2023-07-22 04:42:58.578 UTC [2702811] ERROR:  lquery syntax error at character 2 at character 8
2023-07-22 04:42:58.578 UTC [2702811] DETAIL:  Empty labels are not allowed.
2023-07-22 04:42:58.578 UTC [2702811] STATEMENT:  SELECT '!.2.3'::lquery;
2023-07-22 04:42:58.578 UTC [2702811] ERROR:  lquery syntax error at character 4 at character 8
2023-07-22 04:42:58.578 UTC [2702811] DETAIL:  Empty labels are not allowed.
2023-07-22 04:42:58.578 UTC [2702811] STATEMENT:  SELECT '1.!.3'::lquery;
2023-07-22 04:42:58.578 UTC [2702811] ERROR:  lquery syntax error at character 6 at character 8
2023-07-22 04:42:58.578 UTC [2702811] DETAIL:  Empty labels are not allowed.
2023-07-22 04:42:58.578 UTC [2702811] STATEMENT:  SELECT '1.2.!'::lquery;
2023-07-22 04:42:58.578 UTC [2702811] ERROR:  lquery syntax error at character 7 at character 8
2023-07-22 04:42:58.578 UTC [2702811] STATEMENT:  SELECT '1.2.3|@.4'::lquery;
2023-07-22 04:42:58.579 UTC [2702811] ERROR:  label string is too long
2023-07-22 04:42:58.579 UTC [2702811] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 04:42:58.579 UTC [2702811] STATEMENT:  SELECT (repeat('x', 256) || '*@@*')::lquery;
2023-07-22 04:42:58.579 UTC [2702811] ERROR:  label string is too long
2023-07-22 04:42:58.579 UTC [2702811] DETAIL:  Label length is 256, must be at most 255, at character 258.
2023-07-22 04:42:58.579 UTC [2702811] STATEMENT:  SELECT ('!' || repeat('x', 256))::lquery;
2023-07-22 04:42:58.594 UTC [2702811] ERROR:  number of ltree labels (65536) exceeds the maximum allowed (65535)
2023-07-22 04:42:58.594 UTC [2702811] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65535))::ltree);
2023-07-22 04:42:58.600 UTC [2702811] ERROR:  number of ltree levels (65536) exceeds the maximum allowed (65535)
2023-07-22 04:42:58.600 UTC [2702811] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65534))::ltree || '1');
2023-07-22 04:42:58.610 UTC [2702811] ERROR:  number of lquery items (65536) exceeds the maximum allowed (65535)
2023-07-22 04:42:58.610 UTC [2702811] STATEMENT:  SELECT ('1' || repeat('.1', 65535))::lquery IS NULL;
2023-07-22 04:42:58.611 UTC [2702811] ERROR:  lquery syntax error at character 8
2023-07-22 04:42:58.611 UTC [2702811] DETAIL:  Low limit (65536) exceeds the maximum allowed (65535), at character 3.
2023-07-22 04:42:58.611 UTC [2702811] STATEMENT:  SELECT '*{65536}'::lquery;
2023-07-22 04:42:58.611 UTC [2702811] ERROR:  lquery syntax error at character 8
2023-07-22 04:42:58.611 UTC [2702811] DETAIL:  High limit (65536) exceeds the maximum allowed (65535), at character 4.
2023-07-22 04:42:58.611 UTC [2702811] STATEMENT:  SELECT '*{,65536}'::lquery;
2023-07-22 04:42:58.611 UTC [2702811] ERROR:  lquery syntax error at character 8
2023-07-22 04:42:58.611 UTC [2702811] DETAIL:  Low limit (4) is greater than high limit (3), at character 5.
2023-07-22 04:42:58.611 UTC [2702811] STATEMENT:  SELECT '*{4,3}'::lquery;
2023-07-22 04:42:58.652 UTC [2702811] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:42:58.652 UTC [2702811] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:42:58.652 UTC [2702811] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=0));
2023-07-22 04:42:58.653 UTC [2702811] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:42:58.653 UTC [2702811] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:42:58.653 UTC [2702811] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2025));
2023-07-22 04:42:58.653 UTC [2702811] ERROR:  value 2028 out of bounds for option "siglen"
2023-07-22 04:42:58.653 UTC [2702811] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:42:58.653 UTC [2702811] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2028));
2023-07-22 04:42:58.653 UTC [2702811] ERROR:  siglen value must be a multiple of 4
2023-07-22 04:42:58.653 UTC [2702811] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2019));
2023-07-22 04:42:58.683 UTC [2702811] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:42:58.683 UTC [2702811] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:42:58.683 UTC [2702811] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=0));
2023-07-22 04:42:58.683 UTC [2702811] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:42:58.683 UTC [2702811] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:42:58.683 UTC [2702811] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=2025));
2023-07-22 04:43:30.343 UTC [2702790] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:43:30.451 UTC [2702790] LOG:  checkpoint complete: wrote 1327 buffers (8.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.023 s, sync=0.043 s, total=0.108 s; sync files=260, longest=0.007 s, average=0.001 s; distance=146627 kB, estimate=146627 kB
2023-07-22 04:44:01.806 UTC [2702790] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:44:01.854 UTC [2702790] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137542 kB, estimate=145719 kB
2023-07-22 04:44:01.922 UTC [2702789] LOG:  received fast shutdown request
2023-07-22 04:44:01.926 UTC [2702789] LOG:  aborting any active transactions
2023-07-22 04:44:01.927 UTC [2702789] LOG:  background worker "logical replication launcher" (PID 2702795) exited with exit code 1
2023-07-22 04:44:01.927 UTC [2702790] LOG:  shutting down
2023-07-22 04:44:01.930 UTC [2702790] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:44:01.945 UTC [2702790] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131147 kB
2023-07-22 04:44:01.965 UTC [2702789] LOG:  database system is shut down
2023-07-22 04:44:02.648 UTC [2702983] FATAL:  could not access file "oid2name": No such file or directory
2023-07-22 04:44:02.648 UTC [2702983] LOG:  database system is shut down
2023-07-22 04:44:03.337 UTC [2703016] FATAL:  could not access file "oid2name": No such file or directory
2023-07-22 04:44:03.337 UTC [2703016] LOG:  database system is shut down
2023-07-22 04:44:04.111 UTC [2703059] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:44:04.111 UTC [2703059] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:44:04.118 UTC [2703059] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:44:04.126 UTC [2703062] LOG:  database system was shut down at 2023-07-22 04:44:03 UTC
2023-07-22 04:44:04.133 UTC [2703059] LOG:  database system is ready to accept connections
2023-07-22 04:44:04.289 UTC [2703078] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:44:04.289 UTC [2703078] STATEMENT:  select gen_salt('foo');
2023-07-22 04:44:04.289 UTC [2703078] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:44:04.289 UTC [2703078] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:44:04.289 UTC [2703078] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:44:04.289 UTC [2703078] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:44:04.289 UTC [2703078] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:44:04.289 UTC [2703078] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:44:04.328 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.328 UTC [2703098] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Key was too big
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Key was too big
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Key was too big
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Key was too big
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:44:04.329 UTC [2703098] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:44:04.329 UTC [2703098] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:44:04.330 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.330 UTC [2703098] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:44:04.330 UTC [2703098] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.330 UTC [2703098] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:44:04.339 UTC [2703104] ERROR:  encrypt error: Encryption failed
2023-07-22 04:44:04.339 UTC [2703104] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:44:04.340 UTC [2703104] ERROR:  decrypt error: Decryption failed
2023-07-22 04:44:04.340 UTC [2703104] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:44:04.340 UTC [2703104] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:44:04.340 UTC [2703104] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:44:04.356 UTC [2703112] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.356 UTC [2703112] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:44:04.357 UTC [2703112] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.357 UTC [2703112] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:44:04.373 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.373 UTC [2703122] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:44:04.373 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.373 UTC [2703122] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:44:04.373 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.373 UTC [2703122] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:44:04.373 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.373 UTC [2703122] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:44:04.373 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.373 UTC [2703122] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:44:04.374 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.374 UTC [2703122] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:44:04.374 UTC [2703122] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:44:04.374 UTC [2703122] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:44:04.374 UTC [2703122] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:44:04.374 UTC [2703122] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:44:04.374 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.374 UTC [2703122] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:44:04.374 UTC [2703122] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:44:04.374 UTC [2703122] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:44:04.383 UTC [2703128] ERROR:  invalid salt
2023-07-22 04:44:04.383 UTC [2703128] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:44:04.482 UTC [2703136] ERROR:  invalid salt
2023-07-22 04:44:04.482 UTC [2703136] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:44:04.482 UTC [2703136] ERROR:  invalid salt
2023-07-22 04:44:04.482 UTC [2703136] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:44:04.482 UTC [2703136] ERROR:  invalid salt
2023-07-22 04:44:04.482 UTC [2703136] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:44:04.536 UTC [2703140] ERROR:  invalid salt
2023-07-22 04:44:04.536 UTC [2703140] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:44:04.537 UTC [2703140] ERROR:  crypt(3) returned NULL
2023-07-22 04:44:04.537 UTC [2703140] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:44:04.537 UTC [2703140] ERROR:  crypt(3) returned NULL
2023-07-22 04:44:04.537 UTC [2703140] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:44:04.554 UTC [2703144] ERROR:  Corrupt ascii-armor
2023-07-22 04:44:04.554 UTC [2703144] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:44:04.554 UTC [2703144] ERROR:  Corrupt ascii-armor
2023-07-22 04:44:04.554 UTC [2703144] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:44:04.554 UTC [2703144] ERROR:  Corrupt ascii-armor
2023-07-22 04:44:04.554 UTC [2703144] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:44:04.555 UTC [2703144] ERROR:  mismatched array dimensions
2023-07-22 04:44:04.555 UTC [2703144] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:44:04.555 UTC [2703144] ERROR:  mismatched array dimensions
2023-07-22 04:44:04.555 UTC [2703144] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:44:04.555 UTC [2703144] ERROR:  wrong number of array subscripts
2023-07-22 04:44:04.555 UTC [2703144] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:44:04.556 UTC [2703144] ERROR:  wrong number of array subscripts
2023-07-22 04:44:04.556 UTC [2703144] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:44:04.556 UTC [2703144] ERROR:  null value not allowed for header key
2023-07-22 04:44:04.556 UTC [2703144] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:44:04.556 UTC [2703144] ERROR:  null value not allowed for header value
2023-07-22 04:44:04.556 UTC [2703144] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:44:04.556 UTC [2703144] ERROR:  header key must not contain newlines
2023-07-22 04:44:04.556 UTC [2703144] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:44:04.556 UTC [2703144] ERROR:  header value must not contain newlines
2023-07-22 04:44:04.556 UTC [2703144] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:44:04.556 UTC [2703144] ERROR:  header key must not contain ": "
2023-07-22 04:44:04.556 UTC [2703144] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:44:04.563 UTC [2703148] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:04.563 UTC [2703148] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:44:04.574 UTC [2703148] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:04.574 UTC [2703148] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:44:04.575 UTC [2703148] ERROR:  Not text data
2023-07-22 04:44:04.575 UTC [2703148] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:44:04.576 UTC [2703148] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:04.576 UTC [2703148] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:44:04.576 UTC [2703148] ERROR:  Unsupported compression algorithm
2023-07-22 04:44:04.576 UTC [2703148] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:44:04.590 UTC [2703154] ERROR:  Not text data
2023-07-22 04:44:04.590 UTC [2703154] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:44:05.022 UTC [2703162] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:05.022 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:44:05.027 UTC [2703162] ERROR:  Wrong key
2023-07-22 04:44:05.027 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:44:05.027 UTC [2703162] ERROR:  No encryption key found
2023-07-22 04:44:05.027 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:44:05.027 UTC [2703162] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:05.027 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:44:05.030 UTC [2703162] ERROR:  Need password for secret key
2023-07-22 04:44:05.030 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:44:05.030 UTC [2703162] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:05.030 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:44:05.032 UTC [2703162] ERROR:  Wrong key or corrupt data
2023-07-22 04:44:05.032 UTC [2703162] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:44:05.050 UTC [2703168] ERROR:  No encryption key found
2023-07-22 04:44:05.050 UTC [2703168] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:44:05.050 UTC [2703168] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:44:05.050 UTC [2703168] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:44:05.052 UTC [2703168] ERROR:  Not text data
2023-07-22 04:44:05.052 UTC [2703168] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:44:05.058 UTC [2703172] ERROR:  No encryption key found
2023-07-22 04:44:05.058 UTC [2703172] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:44:05.059 UTC [2703172] ERROR:  No encryption key found
2023-07-22 04:44:05.059 UTC [2703172] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:44:36.718 UTC [2703060] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:44:36.820 UTC [2703060] LOG:  checkpoint complete: wrote 657 buffers (4.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.043 s, total=0.102 s; sync files=261, longest=0.004 s, average=0.001 s; distance=141228 kB, estimate=141228 kB
2023-07-22 04:45:08.195 UTC [2703060] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:45:08.244 UTC [2703060] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.007 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137157 kB, estimate=140821 kB
2023-07-22 04:45:08.312 UTC [2703059] LOG:  received fast shutdown request
2023-07-22 04:45:08.316 UTC [2703059] LOG:  aborting any active transactions
2023-07-22 04:45:08.317 UTC [2703059] LOG:  background worker "logical replication launcher" (PID 2703065) exited with exit code 1
2023-07-22 04:45:08.317 UTC [2703060] LOG:  shutting down
2023-07-22 04:45:08.320 UTC [2703060] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:45:08.337 UTC [2703060] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126739 kB
2023-07-22 04:45:08.361 UTC [2703059] LOG:  database system is shut down
2023-07-22 04:45:09.100 UTC [2703300] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:45:09.100 UTC [2703300] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:45:09.106 UTC [2703300] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:45:09.114 UTC [2703303] LOG:  database system was shut down at 2023-07-22 04:45:08 UTC
2023-07-22 04:45:09.120 UTC [2703300] LOG:  database system is ready to accept connections
2023-07-22 04:45:40.790 UTC [2703301] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:45:40.842 UTC [2703301] LOG:  checkpoint complete: wrote 13 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.053 s; sync files=5, longest=0.003 s, average=0.001 s; distance=137155 kB, estimate=137155 kB
2023-07-22 04:46:12.168 UTC [2703301] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:46:12.258 UTC [2703301] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.004 s, total=0.090 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136619 kB, estimate=137102 kB
2023-07-22 04:46:12.299 UTC [2703300] LOG:  received fast shutdown request
2023-07-22 04:46:12.305 UTC [2703300] LOG:  aborting any active transactions
2023-07-22 04:46:12.306 UTC [2703300] LOG:  background worker "logical replication launcher" (PID 2703306) exited with exit code 1
2023-07-22 04:46:12.306 UTC [2703301] LOG:  shutting down
2023-07-22 04:46:12.312 UTC [2703301] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:46:12.335 UTC [2703301] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.029 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123392 kB
2023-07-22 04:46:12.384 UTC [2703300] LOG:  database system is shut down
2023-07-22 04:46:13.099 UTC [2703434] FATAL:  could not access file "oracle_fdw": No such file or directory
2023-07-22 04:46:13.099 UTC [2703434] LOG:  database system is shut down
2023-07-22 04:46:13.820 UTC [2703469] FATAL:  could not access file "oracle_fdw": No such file or directory
2023-07-22 04:46:13.820 UTC [2703469] LOG:  database system is shut down
2023-07-22 04:46:14.543 UTC [2703510] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:46:14.543 UTC [2703510] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:46:14.549 UTC [2703510] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:46:14.555 UTC [2703513] LOG:  database system was shut down at 2023-07-22 04:46:14 UTC
2023-07-22 04:46:14.561 UTC [2703510] LOG:  database system is ready to accept connections
2023-07-22 04:46:19.008 UTC [2703535] ERROR:  insufficient privilege
2023-07-22 04:46:19.008 UTC [2703535] DETAIL:  Insufficient privilege to access pipe
2023-07-22 04:46:19.008 UTC [2703535] CONTEXT:  SQL statement "SELECT dbms_pipe.receive_message(pipename,2)"
	PL/pgSQL function receivefrom(text) line 6 at PERFORM
2023-07-22 04:46:19.008 UTC [2703535] STATEMENT:  SELECT receiveFrom('private_pipe_2');
2023-07-22 04:46:38.320 UTC [2703557] ERROR:  too few parameters specified for template string
2023-07-22 04:46:38.320 UTC [2703557] STATEMENT:  select plvsubst.string('My name is %s.', '');
2023-07-22 04:46:38.347 UTC [2703557] ERROR:  string is not qualified SQL name
2023-07-22 04:46:38.347 UTC [2703557] STATEMENT:  select dbms_assert.qualified_sql_name('aaa.bbb.cc%c."aaaa""aaa"');
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  invalid schema name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.schema_name('jabadabado');
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  string is not simple SQL name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.simple_sql_name('ajajaj -- ajaj');
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  invalid object name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.object_name('dbms_assert.fooo');
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  string is not qualified SQL name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  string is not qualified SQL name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  invalid schema name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  invalid schema name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  string is not simple SQL name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  string is not simple SQL name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  invalid object name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  invalid object name
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 04:46:38.348 UTC [2703557] ERROR:  plunit.assert_true exception
2023-07-22 04:46:38.348 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:46:38.348 UTC [2703557] STATEMENT:  select plunit.assert_true(NULL);
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  plunit.assert_true exception
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_true(1 = 2);
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  one is not two
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_true(1 = 2, 'one is not two');
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  plunit.assert_false exception
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_false(1 = 1);
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  trap is open
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_false(1 = 1, 'trap is open');
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  plunit.assert_false exception
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_false(NULL);
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  plunit.assert_null exception
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_null).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_null(current_date);
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  plunit.assert_not_null exception
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_not_null).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_not_null(NULL::date);
2023-07-22 04:46:38.349 UTC [2703557] ERROR:  diff dates
2023-07-22 04:46:38.349 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 04:46:38.349 UTC [2703557] STATEMENT:  select plunit.assert_equals(current_date, current_date + 1, 'diff dates');
2023-07-22 04:46:38.350 UTC [2703557] ERROR:  attention some diff
2023-07-22 04:46:38.350 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 04:46:38.350 UTC [2703557] STATEMENT:  select plunit.assert_equals(10.2, 10.3, 0.01, 'attention some diff');
2023-07-22 04:46:38.350 UTC [2703557] ERROR:  plunit.assert_fail exception
2023-07-22 04:46:38.350 UTC [2703557] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 04:46:38.350 UTC [2703557] STATEMENT:  select plunit.fail();
2023-07-22 04:46:38.350 UTC [2703557] ERROR:  custom exception
2023-07-22 04:46:38.350 UTC [2703557] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 04:46:38.350 UTC [2703557] STATEMENT:  select plunit.fail('custom exception');
2023-07-22 04:46:38.371 UTC [2703557] ERROR:  an argument is NULL
2023-07-22 04:46:38.371 UTC [2703557] STATEMENT:  select dbms_random.string(null, 42);
2023-07-22 04:46:38.371 UTC [2703557] ERROR:  pipe name is NULL
2023-07-22 04:46:38.371 UTC [2703557] DETAIL:  Pipename may not be NULL.
2023-07-22 04:46:38.371 UTC [2703557] STATEMENT:  select dbms_pipe.create_pipe(null);
2023-07-22 04:46:38.371 UTC [2703557] ERROR:  plunit.assert_not_equal exception
2023-07-22 04:46:38.371 UTC [2703557] DETAIL:  Plunit.assertation fails (assert_not_equals).
2023-07-22 04:46:38.371 UTC [2703557] STATEMENT:  select plunit.assert_not_equals(1,2,3);
2023-07-22 04:46:38.376 UTC [2703557] WARNING:  Field "a" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 04:46:38.377 UTC [2703557] WARNING:  Field "c" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 04:46:38.389 UTC [2703557] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:46:38.389 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \db99');
2023-07-22 04:46:38.389 UTC [2703557] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:46:38.389 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \db99\0061');
2023-07-22 04:46:38.389 UTC [2703557] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:46:38.389 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \+00db99\+000061');
2023-07-22 04:46:38.389 UTC [2703557] ERROR:  invalid Unicode escape value
2023-07-22 04:46:38.389 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \+2FFFFF');
2023-07-22 04:46:38.390 UTC [2703557] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:46:38.390 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \udb99\u0061');
2023-07-22 04:46:38.390 UTC [2703557] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:46:38.390 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \U0000db99\U00000061');
2023-07-22 04:46:38.390 UTC [2703557] ERROR:  invalid Unicode escape value
2023-07-22 04:46:38.390 UTC [2703557] STATEMENT:  SELECT oracle.unistr('wrong: \U002FFFFF');
2023-07-22 04:46:38.434 UTC [2703561] ERROR:  could not determine polymorphic type because input has type unknown
2023-07-22 04:46:38.434 UTC [2703561] STATEMENT:  select oracle.decode('2012-01-01', '2012-01-01', 23, '2012-01-02', 24);
2023-07-22 04:46:38.452 UTC [2703565] ERROR:  function dbms_output_test() does not exist
2023-07-22 04:46:38.452 UTC [2703565] STATEMENT:  DROP FUNCTION dbms_output_test();
2023-07-22 04:46:38.452 UTC [2703565] ERROR:  table "dbms_output_test" does not exist
2023-07-22 04:46:38.452 UTC [2703565] STATEMENT:  DROP TABLE dbms_output_test;
2023-07-22 04:46:40.809 UTC [2703573] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:46:40.809 UTC [2703573] DETAIL:  you cannot access locality
2023-07-22 04:46:40.809 UTC [2703573] HINT:  locality is not found in utl_file_dir table
2023-07-22 04:46:40.809 UTC [2703573] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'sample.txt','r');
2023-07-22 04:46:40.812 UTC [2703573] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:46:40.812 UTC [2703573] DETAIL:  No such file or directory
2023-07-22 04:46:40.812 UTC [2703573] STATEMENT:  SELECT utl_file.fopen('test_tmp_dir','file.txt.','w');
2023-07-22 04:46:40.816 UTC [2703573] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:46:40.816 UTC [2703573] DETAIL:  No such file or directory
2023-07-22 04:46:40.816 UTC [2703573] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'non_existent_file.txt','r');
2023-07-22 04:46:40.818 UTC [2703573] ERROR:  permission denied for table utl_file_dir
2023-07-22 04:46:40.818 UTC [2703573] STATEMENT:  INSERT INTO utl_file.utl_file_dir(dir) VALUES('test_tmp_dir');
2023-07-22 04:46:40.863 UTC [2703577] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 04:46:40.863 UTC [2703577] STATEMENT:  CREATE TABLE foo (a VARCHAR2(0));
2023-07-22 04:46:40.863 UTC [2703577] ERROR:  invalid type modifier at character 21
2023-07-22 04:46:40.863 UTC [2703577] STATEMENT:  CREATE TABLE foo (a VARCHAR2(10, 1));
2023-07-22 04:46:40.887 UTC [2703577] ERROR:  input value length is 6; too long for type varchar2(5)
2023-07-22 04:46:40.887 UTC [2703577] STATEMENT:  INSERT INTO foo VALUES ('abcdef');
2023-07-22 04:46:40.888 UTC [2703577] ERROR:  input value length is 7; too long for type varchar2(5)
2023-07-22 04:46:40.888 UTC [2703577] STATEMENT:  INSERT INTO foo VALUES ('abcde  ');
2023-07-22 04:46:40.920 UTC [2703581] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 04:46:40.920 UTC [2703581] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(0));
2023-07-22 04:46:40.920 UTC [2703581] ERROR:  invalid type modifier at character 21
2023-07-22 04:46:40.920 UTC [2703581] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(10, 1));
2023-07-22 04:46:40.936 UTC [2703581] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 04:46:40.936 UTC [2703581] STATEMENT:  INSERT INTO bar VALUES ('abcdef');
2023-07-22 04:46:40.936 UTC [2703581] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 04:46:40.936 UTC [2703581] STATEMENT:  INSERT INTO bar VALUES ('abcde  ');
2023-07-22 04:46:41.113 UTC [2703590] ERROR:  failed to set the requested LC_COLLATE value [invalid]
2023-07-22 04:46:41.113 UTC [2703590] CONTEXT:  SQL function "nlssort" statement 1
2023-07-22 04:46:41.113 UTC [2703590] STATEMENT:  SELECT * FROM test_sort ORDER BY NLSSORT(name);
2023-07-22 04:46:41.140 UTC [2703598] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:46:41.140 UTC [2703598] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 04:46:41.140 UTC [2703598] STATEMENT:  SELECT REGEXP_COUNT('foo' || chr(10) || 'bar' || chr(10) || 'bequq' || chr(10) || 'baz', '^bar', 0, 'm');
2023-07-22 04:46:41.142 UTC [2703598] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:46:41.142 UTC [2703598] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 04:46:41.142 UTC [2703598] STATEMENT:  SELECT REGEXP_COUNT('ORANGE' || chr(10) || 'GREEN', '^..([aeiou])\1', -1, 'i');
2023-07-22 04:46:41.148 UTC [2703598] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:46:41.148 UTC [2703598] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', -1, 3, 1, 'i', 4);
2023-07-22 04:46:41.148 UTC [2703598] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 04:46:41.148 UTC [2703598] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, -3, 1, 'i', 4);
2023-07-22 04:46:41.148 UTC [2703598] ERROR:  argument 'return_opt' must be 0 or 1
2023-07-22 04:46:41.148 UTC [2703598] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, -1, 'i', 4);
2023-07-22 04:46:41.148 UTC [2703598] ERROR:  argument 'group' must be a positive number
2023-07-22 04:46:41.148 UTC [2703598] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, 1, 'i', -4);
2023-07-22 04:46:41.152 UTC [2703598] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:46:41.152 UTC [2703598] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 15 at RAISE
2023-07-22 04:46:41.152 UTC [2703598] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', -1, 1, 'i', 0);
2023-07-22 04:46:41.152 UTC [2703598] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 04:46:41.152 UTC [2703598] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 18 at RAISE
2023-07-22 04:46:41.152 UTC [2703598] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, -1, 'i', 0);
2023-07-22 04:46:41.152 UTC [2703598] ERROR:  argument 'group' must be a positive number
2023-07-22 04:46:41.152 UTC [2703598] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 21 at RAISE
2023-07-22 04:46:41.152 UTC [2703598] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, 1, 'i', -1);
2023-07-22 04:46:41.154 UTC [2703598] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:46:41.154 UTC [2703598] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', -1, 0, 'i');
2023-07-22 04:46:41.154 UTC [2703598] ERROR:  argument 'occurrence' must be a positive number
2023-07-22 04:46:41.154 UTC [2703598] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, -1, 'i');
2023-07-22 04:46:41.154 UTC [2703598] ERROR:  modifier 'g' is not supported by this function
2023-07-22 04:46:41.154 UTC [2703598] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, 1, 'g');
2023-07-22 04:46:41.408 UTC [2703617] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:46:41.408 UTC [2703617] STATEMENT:  select gen_salt('foo');
2023-07-22 04:46:41.408 UTC [2703617] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:46:41.408 UTC [2703617] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:46:41.408 UTC [2703617] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:46:41.408 UTC [2703617] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:46:41.408 UTC [2703617] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:46:41.408 UTC [2703617] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:46:41.443 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.443 UTC [2703637] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:46:41.443 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.443 UTC [2703637] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:46:41.443 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.443 UTC [2703637] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:46:41.443 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.443 UTC [2703637] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Key was too big
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Key was too big
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Key was too big
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Key was too big
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:46:41.444 UTC [2703637] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.444 UTC [2703637] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:46:41.453 UTC [2703643] ERROR:  encrypt error: Encryption failed
2023-07-22 04:46:41.453 UTC [2703643] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:46:41.454 UTC [2703643] ERROR:  decrypt error: Decryption failed
2023-07-22 04:46:41.454 UTC [2703643] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:46:41.454 UTC [2703643] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:46:41.454 UTC [2703643] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:46:41.468 UTC [2703651] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.468 UTC [2703651] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:46:41.468 UTC [2703651] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.468 UTC [2703651] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:46:41.468 UTC [2703651] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.468 UTC [2703651] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:46:41.468 UTC [2703651] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.468 UTC [2703651] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:46:41.468 UTC [2703651] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:46:41.468 UTC [2703651] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:46:41.469 UTC [2703651] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:46:41.469 UTC [2703651] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:46:41.469 UTC [2703651] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.469 UTC [2703651] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:46:41.469 UTC [2703651] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.469 UTC [2703651] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:46:41.483 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.483 UTC [2703661] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:46:41.484 UTC [2703661] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:46:41.484 UTC [2703661] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:46:41.485 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.485 UTC [2703661] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:46:41.485 UTC [2703661] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:46:41.485 UTC [2703661] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:46:41.493 UTC [2703667] ERROR:  invalid salt
2023-07-22 04:46:41.493 UTC [2703667] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:46:41.590 UTC [2703675] ERROR:  invalid salt
2023-07-22 04:46:41.590 UTC [2703675] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:46:41.590 UTC [2703675] ERROR:  invalid salt
2023-07-22 04:46:41.590 UTC [2703675] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:46:41.590 UTC [2703675] ERROR:  invalid salt
2023-07-22 04:46:41.590 UTC [2703675] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:46:41.646 UTC [2703679] ERROR:  invalid salt
2023-07-22 04:46:41.646 UTC [2703679] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:46:41.646 UTC [2703679] ERROR:  crypt(3) returned NULL
2023-07-22 04:46:41.646 UTC [2703679] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:46:41.646 UTC [2703679] ERROR:  crypt(3) returned NULL
2023-07-22 04:46:41.646 UTC [2703679] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:46:41.662 UTC [2703683] ERROR:  Corrupt ascii-armor
2023-07-22 04:46:41.662 UTC [2703683] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:46:41.662 UTC [2703683] ERROR:  Corrupt ascii-armor
2023-07-22 04:46:41.662 UTC [2703683] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:46:41.662 UTC [2703683] ERROR:  Corrupt ascii-armor
2023-07-22 04:46:41.662 UTC [2703683] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:46:41.663 UTC [2703683] ERROR:  mismatched array dimensions
2023-07-22 04:46:41.663 UTC [2703683] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:46:41.663 UTC [2703683] ERROR:  mismatched array dimensions
2023-07-22 04:46:41.663 UTC [2703683] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  wrong number of array subscripts
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  wrong number of array subscripts
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  null value not allowed for header key
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  null value not allowed for header value
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  header key must not contain newlines
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  header value must not contain newlines
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:46:41.664 UTC [2703683] ERROR:  header key must not contain ": "
2023-07-22 04:46:41.664 UTC [2703683] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:46:41.670 UTC [2703687] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:41.670 UTC [2703687] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:46:41.681 UTC [2703687] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:41.681 UTC [2703687] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:46:41.682 UTC [2703687] ERROR:  Not text data
2023-07-22 04:46:41.682 UTC [2703687] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:46:41.682 UTC [2703687] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:41.682 UTC [2703687] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:46:41.683 UTC [2703687] ERROR:  Unsupported compression algorithm
2023-07-22 04:46:41.683 UTC [2703687] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:46:41.695 UTC [2703693] ERROR:  Not text data
2023-07-22 04:46:41.695 UTC [2703693] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:46:42.152 UTC [2703701] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:42.152 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:46:42.168 UTC [2703701] ERROR:  Wrong key
2023-07-22 04:46:42.168 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:46:42.168 UTC [2703701] ERROR:  No encryption key found
2023-07-22 04:46:42.168 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:46:42.170 UTC [2703701] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:42.170 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:46:42.175 UTC [2703701] ERROR:  Need password for secret key
2023-07-22 04:46:42.175 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:46:42.175 UTC [2703701] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:42.175 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:46:42.180 UTC [2703701] ERROR:  Wrong key or corrupt data
2023-07-22 04:46:42.180 UTC [2703701] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:46:42.202 UTC [2703707] ERROR:  No encryption key found
2023-07-22 04:46:42.202 UTC [2703707] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:46:42.203 UTC [2703707] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:46:42.203 UTC [2703707] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:46:42.204 UTC [2703707] ERROR:  Not text data
2023-07-22 04:46:42.204 UTC [2703707] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:46:42.213 UTC [2703711] ERROR:  No encryption key found
2023-07-22 04:46:42.213 UTC [2703711] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:46:42.214 UTC [2703711] ERROR:  No encryption key found
2023-07-22 04:46:42.214 UTC [2703711] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:47:13.925 UTC [2703511] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:47:14.076 UTC [2703511] LOG:  checkpoint complete: wrote 1476 buffers (9.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.033 s, sync=0.068 s, total=0.152 s; sync files=798, longest=0.004 s, average=0.001 s; distance=153788 kB, estimate=153788 kB
2023-07-22 04:47:45.477 UTC [2703511] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:47:45.541 UTC [2703511] LOG:  checkpoint complete: wrote 227 buffers (1.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.010 s, sync=0.008 s, total=0.064 s; sync files=35, longest=0.003 s, average=0.001 s; distance=139175 kB, estimate=152326 kB
2023-07-22 04:47:45.607 UTC [2703510] LOG:  received fast shutdown request
2023-07-22 04:47:45.610 UTC [2703510] LOG:  aborting any active transactions
2023-07-22 04:47:45.611 UTC [2703510] LOG:  background worker "logical replication launcher" (PID 2703516) exited with exit code 1
2023-07-22 04:47:45.613 UTC [2703511] LOG:  shutting down
2023-07-22 04:47:45.616 UTC [2703511] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:47:45.634 UTC [2703511] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=137094 kB
2023-07-22 04:47:45.660 UTC [2703510] LOG:  database system is shut down
2023-07-22 04:47:46.373 UTC [2703841] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:47:46.373 UTC [2703841] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:47:46.379 UTC [2703841] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:47:46.389 UTC [2703844] LOG:  database system was shut down at 2023-07-22 04:47:46 UTC
2023-07-22 04:47:46.398 UTC [2703841] LOG:  database system is ready to accept connections
2023-07-22 04:47:50.812 UTC [2703869] ERROR:  insufficient privilege
2023-07-22 04:47:50.812 UTC [2703869] DETAIL:  Insufficient privilege to access pipe
2023-07-22 04:47:50.812 UTC [2703869] CONTEXT:  SQL statement "SELECT dbms_pipe.receive_message(pipename,2)"
	PL/pgSQL function receivefrom(text) line 6 at PERFORM
2023-07-22 04:47:50.812 UTC [2703869] STATEMENT:  SELECT receiveFrom('private_pipe_2');
2023-07-22 04:48:10.135 UTC [2703933] ERROR:  too few parameters specified for template string
2023-07-22 04:48:10.135 UTC [2703933] STATEMENT:  select plvsubst.string('My name is %s.', '');
2023-07-22 04:48:10.172 UTC [2703933] ERROR:  string is not qualified SQL name
2023-07-22 04:48:10.172 UTC [2703933] STATEMENT:  select dbms_assert.qualified_sql_name('aaa.bbb.cc%c."aaaa""aaa"');
2023-07-22 04:48:10.172 UTC [2703933] ERROR:  invalid schema name
2023-07-22 04:48:10.172 UTC [2703933] STATEMENT:  select dbms_assert.schema_name('jabadabado');
2023-07-22 04:48:10.172 UTC [2703933] ERROR:  string is not simple SQL name
2023-07-22 04:48:10.172 UTC [2703933] STATEMENT:  select dbms_assert.simple_sql_name('ajajaj -- ajaj');
2023-07-22 04:48:10.172 UTC [2703933] ERROR:  invalid object name
2023-07-22 04:48:10.172 UTC [2703933] STATEMENT:  select dbms_assert.object_name('dbms_assert.fooo');
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  string is not qualified SQL name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  string is not qualified SQL name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  invalid schema name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  invalid schema name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  string is not simple SQL name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  string is not simple SQL name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  invalid object name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  invalid object name
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  plunit.assert_true exception
2023-07-22 04:48:10.173 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select plunit.assert_true(NULL);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  plunit.assert_true exception
2023-07-22 04:48:10.173 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select plunit.assert_true(1 = 2);
2023-07-22 04:48:10.173 UTC [2703933] ERROR:  one is not two
2023-07-22 04:48:10.173 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:48:10.173 UTC [2703933] STATEMENT:  select plunit.assert_true(1 = 2, 'one is not two');
2023-07-22 04:48:10.174 UTC [2703933] ERROR:  plunit.assert_false exception
2023-07-22 04:48:10.174 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:48:10.174 UTC [2703933] STATEMENT:  select plunit.assert_false(1 = 1);
2023-07-22 04:48:10.174 UTC [2703933] ERROR:  trap is open
2023-07-22 04:48:10.174 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:48:10.174 UTC [2703933] STATEMENT:  select plunit.assert_false(1 = 1, 'trap is open');
2023-07-22 04:48:10.174 UTC [2703933] ERROR:  plunit.assert_false exception
2023-07-22 04:48:10.174 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:48:10.174 UTC [2703933] STATEMENT:  select plunit.assert_false(NULL);
2023-07-22 04:48:10.174 UTC [2703933] ERROR:  plunit.assert_null exception
2023-07-22 04:48:10.174 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_null).
2023-07-22 04:48:10.174 UTC [2703933] STATEMENT:  select plunit.assert_null(current_date);
2023-07-22 04:48:10.174 UTC [2703933] ERROR:  plunit.assert_not_null exception
2023-07-22 04:48:10.174 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_not_null).
2023-07-22 04:48:10.174 UTC [2703933] STATEMENT:  select plunit.assert_not_null(NULL::date);
2023-07-22 04:48:10.174 UTC [2703933] ERROR:  diff dates
2023-07-22 04:48:10.174 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 04:48:10.174 UTC [2703933] STATEMENT:  select plunit.assert_equals(current_date, current_date + 1, 'diff dates');
2023-07-22 04:48:10.175 UTC [2703933] ERROR:  attention some diff
2023-07-22 04:48:10.175 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 04:48:10.175 UTC [2703933] STATEMENT:  select plunit.assert_equals(10.2, 10.3, 0.01, 'attention some diff');
2023-07-22 04:48:10.175 UTC [2703933] ERROR:  plunit.assert_fail exception
2023-07-22 04:48:10.175 UTC [2703933] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 04:48:10.175 UTC [2703933] STATEMENT:  select plunit.fail();
2023-07-22 04:48:10.175 UTC [2703933] ERROR:  custom exception
2023-07-22 04:48:10.175 UTC [2703933] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 04:48:10.175 UTC [2703933] STATEMENT:  select plunit.fail('custom exception');
2023-07-22 04:48:10.201 UTC [2703933] ERROR:  an argument is NULL
2023-07-22 04:48:10.201 UTC [2703933] STATEMENT:  select dbms_random.string(null, 42);
2023-07-22 04:48:10.201 UTC [2703933] ERROR:  pipe name is NULL
2023-07-22 04:48:10.201 UTC [2703933] DETAIL:  Pipename may not be NULL.
2023-07-22 04:48:10.201 UTC [2703933] STATEMENT:  select dbms_pipe.create_pipe(null);
2023-07-22 04:48:10.201 UTC [2703933] ERROR:  plunit.assert_not_equal exception
2023-07-22 04:48:10.201 UTC [2703933] DETAIL:  Plunit.assertation fails (assert_not_equals).
2023-07-22 04:48:10.201 UTC [2703933] STATEMENT:  select plunit.assert_not_equals(1,2,3);
2023-07-22 04:48:10.210 UTC [2703933] WARNING:  Field "a" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 04:48:10.211 UTC [2703933] WARNING:  Field "c" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \db99');
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \db99\0061');
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \+00db99\+000061');
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode escape value
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \+2FFFFF');
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \udb99\u0061');
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \U0000db99\U00000061');
2023-07-22 04:48:10.218 UTC [2703933] ERROR:  invalid Unicode escape value
2023-07-22 04:48:10.218 UTC [2703933] STATEMENT:  SELECT oracle.unistr('wrong: \U002FFFFF');
2023-07-22 04:48:10.253 UTC [2703937] ERROR:  could not determine polymorphic type because input has type unknown
2023-07-22 04:48:10.253 UTC [2703937] STATEMENT:  select oracle.decode('2012-01-01', '2012-01-01', 23, '2012-01-02', 24);
2023-07-22 04:48:10.273 UTC [2703941] ERROR:  function dbms_output_test() does not exist
2023-07-22 04:48:10.273 UTC [2703941] STATEMENT:  DROP FUNCTION dbms_output_test();
2023-07-22 04:48:10.273 UTC [2703941] ERROR:  table "dbms_output_test" does not exist
2023-07-22 04:48:10.273 UTC [2703941] STATEMENT:  DROP TABLE dbms_output_test;
2023-07-22 04:48:12.608 UTC [2703949] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:48:12.608 UTC [2703949] DETAIL:  you cannot access locality
2023-07-22 04:48:12.608 UTC [2703949] HINT:  locality is not found in utl_file_dir table
2023-07-22 04:48:12.608 UTC [2703949] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'sample.txt','r');
2023-07-22 04:48:12.610 UTC [2703949] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:48:12.610 UTC [2703949] DETAIL:  No such file or directory
2023-07-22 04:48:12.610 UTC [2703949] STATEMENT:  SELECT utl_file.fopen('test_tmp_dir','file.txt.','w');
2023-07-22 04:48:12.613 UTC [2703949] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:48:12.613 UTC [2703949] DETAIL:  No such file or directory
2023-07-22 04:48:12.613 UTC [2703949] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'non_existent_file.txt','r');
2023-07-22 04:48:12.615 UTC [2703949] ERROR:  permission denied for table utl_file_dir
2023-07-22 04:48:12.615 UTC [2703949] STATEMENT:  INSERT INTO utl_file.utl_file_dir(dir) VALUES('test_tmp_dir');
2023-07-22 04:48:12.654 UTC [2703953] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 04:48:12.654 UTC [2703953] STATEMENT:  CREATE TABLE foo (a VARCHAR2(0));
2023-07-22 04:48:12.654 UTC [2703953] ERROR:  invalid type modifier at character 21
2023-07-22 04:48:12.654 UTC [2703953] STATEMENT:  CREATE TABLE foo (a VARCHAR2(10, 1));
2023-07-22 04:48:12.679 UTC [2703953] ERROR:  input value length is 6; too long for type varchar2(5)
2023-07-22 04:48:12.679 UTC [2703953] STATEMENT:  INSERT INTO foo VALUES ('abcdef');
2023-07-22 04:48:12.679 UTC [2703953] ERROR:  input value length is 7; too long for type varchar2(5)
2023-07-22 04:48:12.679 UTC [2703953] STATEMENT:  INSERT INTO foo VALUES ('abcde  ');
2023-07-22 04:48:12.708 UTC [2703957] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 04:48:12.708 UTC [2703957] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(0));
2023-07-22 04:48:12.708 UTC [2703957] ERROR:  invalid type modifier at character 21
2023-07-22 04:48:12.708 UTC [2703957] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(10, 1));
2023-07-22 04:48:12.730 UTC [2703957] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 04:48:12.730 UTC [2703957] STATEMENT:  INSERT INTO bar VALUES ('abcdef');
2023-07-22 04:48:12.730 UTC [2703957] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 04:48:12.730 UTC [2703957] STATEMENT:  INSERT INTO bar VALUES ('abcde  ');
2023-07-22 04:48:12.922 UTC [2703966] ERROR:  failed to set the requested LC_COLLATE value [invalid]
2023-07-22 04:48:12.922 UTC [2703966] CONTEXT:  SQL function "nlssort" statement 1
2023-07-22 04:48:12.922 UTC [2703966] STATEMENT:  SELECT * FROM test_sort ORDER BY NLSSORT(name);
2023-07-22 04:48:12.943 UTC [2703974] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:48:12.943 UTC [2703974] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 04:48:12.943 UTC [2703974] STATEMENT:  SELECT REGEXP_COUNT('foo' || chr(10) || 'bar' || chr(10) || 'bequq' || chr(10) || 'baz', '^bar', 0, 'm');
2023-07-22 04:48:12.944 UTC [2703974] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:48:12.944 UTC [2703974] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 04:48:12.944 UTC [2703974] STATEMENT:  SELECT REGEXP_COUNT('ORANGE' || chr(10) || 'GREEN', '^..([aeiou])\1', -1, 'i');
2023-07-22 04:48:12.949 UTC [2703974] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:48:12.949 UTC [2703974] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', -1, 3, 1, 'i', 4);
2023-07-22 04:48:12.949 UTC [2703974] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 04:48:12.949 UTC [2703974] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, -3, 1, 'i', 4);
2023-07-22 04:48:12.949 UTC [2703974] ERROR:  argument 'return_opt' must be 0 or 1
2023-07-22 04:48:12.949 UTC [2703974] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, -1, 'i', 4);
2023-07-22 04:48:12.949 UTC [2703974] ERROR:  argument 'group' must be a positive number
2023-07-22 04:48:12.949 UTC [2703974] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, 1, 'i', -4);
2023-07-22 04:48:12.952 UTC [2703974] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:48:12.952 UTC [2703974] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 15 at RAISE
2023-07-22 04:48:12.952 UTC [2703974] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', -1, 1, 'i', 0);
2023-07-22 04:48:12.952 UTC [2703974] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 04:48:12.952 UTC [2703974] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 18 at RAISE
2023-07-22 04:48:12.952 UTC [2703974] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, -1, 'i', 0);
2023-07-22 04:48:12.953 UTC [2703974] ERROR:  argument 'group' must be a positive number
2023-07-22 04:48:12.953 UTC [2703974] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 21 at RAISE
2023-07-22 04:48:12.953 UTC [2703974] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, 1, 'i', -1);
2023-07-22 04:48:12.954 UTC [2703974] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:48:12.954 UTC [2703974] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', -1, 0, 'i');
2023-07-22 04:48:12.954 UTC [2703974] ERROR:  argument 'occurrence' must be a positive number
2023-07-22 04:48:12.954 UTC [2703974] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, -1, 'i');
2023-07-22 04:48:12.954 UTC [2703974] ERROR:  modifier 'g' is not supported by this function
2023-07-22 04:48:12.954 UTC [2703974] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, 1, 'g');
2023-07-22 04:48:44.712 UTC [2703842] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:48:44.978 UTC [2703842] LOG:  checkpoint complete: wrote 1020 buffers (6.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.022 s, sync=0.072 s, total=0.266 s; sync files=544, longest=0.004 s, average=0.001 s; distance=148749 kB, estimate=148749 kB
2023-07-22 04:49:16.432 UTC [2703842] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:49:16.495 UTC [2703842] LOG:  checkpoint complete: wrote 116 buffers (0.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.006 s, total=0.063 s; sync files=20, longest=0.004 s, average=0.001 s; distance=139385 kB, estimate=147813 kB
2023-07-22 04:49:16.555 UTC [2703841] LOG:  received fast shutdown request
2023-07-22 04:49:16.558 UTC [2703841] LOG:  aborting any active transactions
2023-07-22 04:49:16.560 UTC [2703841] LOG:  background worker "logical replication launcher" (PID 2703847) exited with exit code 1
2023-07-22 04:49:16.560 UTC [2703842] LOG:  shutting down
2023-07-22 04:49:16.563 UTC [2703842] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:49:16.580 UTC [2703842] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=133031 kB
2023-07-22 04:49:16.630 UTC [2703841] LOG:  database system is shut down
2023-07-22 04:49:17.281 UTC [2704112] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:49:17.281 UTC [2704112] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:49:17.287 UTC [2704112] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:49:17.295 UTC [2704115] LOG:  database system was shut down at 2023-07-22 04:49:17 UTC
2023-07-22 04:49:17.301 UTC [2704112] LOG:  database system is ready to accept connections
2023-07-22 04:49:17.481 UTC [2704131] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 04:49:17.481 UTC [2704131] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', 1)) AS main_1;
2023-07-22 04:49:17.481 UTC [2704131] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 04:49:17.481 UTC [2704131] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'vm', 1)) AS vm_1;
2023-07-22 04:49:17.481 UTC [2704131] ERROR:  invalid block number
2023-07-22 04:49:17.481 UTC [2704131] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', -1));
2023-07-22 04:49:17.482 UTC [2704131] ERROR:  relation "xxx" does not exist
2023-07-22 04:49:17.482 UTC [2704131] STATEMENT:  SELECT octet_length(get_raw_page('xxx', 'main', 0));
2023-07-22 04:49:17.482 UTC [2704131] ERROR:  invalid fork name
2023-07-22 04:49:17.482 UTC [2704131] HINT:  Valid fork names are "main", "fsm", "vm", and "init".
2023-07-22 04:49:17.482 UTC [2704131] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'xxx', 0));
2023-07-22 04:49:17.482 UTC [2704131] ERROR:  invalid block number
2023-07-22 04:49:17.482 UTC [2704131] STATEMENT:  SELECT page_checksum(get_raw_page('test1', 0), -1);
2023-07-22 04:49:17.488 UTC [2704131] ERROR:  cannot get raw page from relation "test_partitioned"
2023-07-22 04:49:17.488 UTC [2704131] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:49:17.488 UTC [2704131] STATEMENT:  select get_raw_page('test_partitioned', 0);
2023-07-22 04:49:17.488 UTC [2704131] ERROR:  cannot get raw page from relation "test_partitioned_index"
2023-07-22 04:49:17.488 UTC [2704131] DETAIL:  This operation is not supported for partitioned indexes.
2023-07-22 04:49:17.488 UTC [2704131] STATEMENT:  select get_raw_page('test_partitioned_index', 0);
2023-07-22 04:49:17.494 UTC [2704131] ERROR:  block number 0 is out of range for relation "test_part1"
2023-07-22 04:49:17.494 UTC [2704131] STATEMENT:  select get_raw_page('test_part1', 0);
2023-07-22 04:49:17.499 UTC [2704131] ERROR:  invalid page size
2023-07-22 04:49:17.499 UTC [2704131] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.499 UTC [2704131] STATEMENT:  SELECT fsm_page_contents('aaa'::bytea);
2023-07-22 04:49:17.499 UTC [2704131] ERROR:  invalid page size
2023-07-22 04:49:17.499 UTC [2704131] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.499 UTC [2704131] STATEMENT:  SELECT page_checksum('bbb'::bytea, 0);
2023-07-22 04:49:17.499 UTC [2704131] ERROR:  invalid page size
2023-07-22 04:49:17.499 UTC [2704131] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.499 UTC [2704131] STATEMENT:  SELECT page_header('ccc'::bytea);
2023-07-22 04:49:17.522 UTC [2704135] ERROR:  invalid block number
2023-07-22 04:49:17.522 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', -1);
2023-07-22 04:49:17.522 UTC [2704135] ERROR:  block 0 is a meta page
2023-07-22 04:49:17.522 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 0);
2023-07-22 04:49:17.523 UTC [2704135] ERROR:  block number out of range
2023-07-22 04:49:17.523 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 2);
2023-07-22 04:49:17.523 UTC [2704135] ERROR:  invalid block number
2023-07-22 04:49:17.523 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', -1);
2023-07-22 04:49:17.523 UTC [2704135] ERROR:  block 0 is a meta page
2023-07-22 04:49:17.523 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 0);
2023-07-22 04:49:17.524 UTC [2704135] ERROR:  block number out of range
2023-07-22 04:49:17.524 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 2);
2023-07-22 04:49:17.524 UTC [2704135] ERROR:  invalid block number
2023-07-22 04:49:17.524 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', -1));
2023-07-22 04:49:17.524 UTC [2704135] ERROR:  block is a meta page
2023-07-22 04:49:17.524 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 0));
2023-07-22 04:49:17.524 UTC [2704135] ERROR:  block number 2 is out of range for relation "test1_a_idx"
2023-07-22 04:49:17.524 UTC [2704135] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 2));
2023-07-22 04:49:17.526 UTC [2704135] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:49:17.526 UTC [2704135] STATEMENT:  SELECT bt_metap('test1_a_hash');
2023-07-22 04:49:17.526 UTC [2704135] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:49:17.526 UTC [2704135] STATEMENT:  SELECT bt_page_stats('test1_a_hash', 0);
2023-07-22 04:49:17.526 UTC [2704135] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:49:17.526 UTC [2704135] STATEMENT:  SELECT bt_page_items('test1_a_hash', 0);
2023-07-22 04:49:17.526 UTC [2704135] ERROR:  block is a meta page
2023-07-22 04:49:17.526 UTC [2704135] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_hash', 0));
2023-07-22 04:49:17.528 UTC [2704135] ERROR:  block is not a valid btree leaf page
2023-07-22 04:49:17.528 UTC [2704135] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_b_gist', 0));
2023-07-22 04:49:17.528 UTC [2704135] ERROR:  invalid page size
2023-07-22 04:49:17.528 UTC [2704135] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.528 UTC [2704135] STATEMENT:  SELECT bt_page_items('aaa'::bytea);
2023-07-22 04:49:17.529 UTC [2704135] ERROR:  input page is not a valid btree page
2023-07-22 04:49:17.529 UTC [2704135] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.529 UTC [2704135] STATEMENT:  SELECT bt_page_items(get_raw_page('test1', 0));
2023-07-22 04:49:17.530 UTC [2704135] ERROR:  input page is not a valid btree page
2023-07-22 04:49:17.530 UTC [2704135] DETAIL:  Expected special size 16, got 8.
2023-07-22 04:49:17.530 UTC [2704135] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_brin', 0));
2023-07-22 04:49:17.553 UTC [2704139] ERROR:  page is not a BRIN page of type "metapage"
2023-07-22 04:49:17.553 UTC [2704139] DETAIL:  Expected special type 0000f091, got 0000f092.
2023-07-22 04:49:17.553 UTC [2704139] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1_a_idx', 1));
2023-07-22 04:49:17.554 UTC [2704139] ERROR:  page is not a BRIN page of type "revmap"
2023-07-22 04:49:17.554 UTC [2704139] DETAIL:  Expected special type 0000f092, got 0000f091.
2023-07-22 04:49:17.554 UTC [2704139] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1_a_idx', 0)) LIMIT 5;
2023-07-22 04:49:17.564 UTC [2704139] ERROR:  "test1_a_btree" is not a BRIN index
2023-07-22 04:49:17.564 UTC [2704139] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_btree');
2023-07-22 04:49:17.564 UTC [2704139] ERROR:  input page is not a valid BRIN page
2023-07-22 04:49:17.564 UTC [2704139] DETAIL:  Expected special size 8, got 16.
2023-07-22 04:49:17.564 UTC [2704139] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_idx');
2023-07-22 04:49:17.565 UTC [2704139] ERROR:  input page is not a valid BRIN page
2023-07-22 04:49:17.565 UTC [2704139] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:49:17.565 UTC [2704139] STATEMENT:  SELECT brin_page_type(get_raw_page('test1', 0));
2023-07-22 04:49:17.565 UTC [2704139] ERROR:  input page is not a valid BRIN page
2023-07-22 04:49:17.565 UTC [2704139] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:49:17.565 UTC [2704139] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1', 0));
2023-07-22 04:49:17.566 UTC [2704139] ERROR:  input page is not a valid BRIN page
2023-07-22 04:49:17.566 UTC [2704139] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:49:17.566 UTC [2704139] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1', 0));
2023-07-22 04:49:17.615 UTC [2704143] ERROR:  input page is not a GIN metapage
2023-07-22 04:49:17.615 UTC [2704143] DETAIL:  Flags 0002, expected 0008
2023-07-22 04:49:17.615 UTC [2704143] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1_y_idx', 1));
2023-07-22 04:49:17.617 UTC [2704143] ERROR:  input page is not a compressed GIN data leaf page
2023-07-22 04:49:17.617 UTC [2704143] DETAIL:  Flags 0002, expected 0083
2023-07-22 04:49:17.617 UTC [2704143] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1_y_idx', 1));
2023-07-22 04:49:17.757 UTC [2704143] ERROR:  invalid page size
2023-07-22 04:49:17.757 UTC [2704143] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.757 UTC [2704143] STATEMENT:  SELECT gin_leafpage_items('aaa'::bytea);
2023-07-22 04:49:17.757 UTC [2704143] ERROR:  invalid page size
2023-07-22 04:49:17.757 UTC [2704143] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.757 UTC [2704143] STATEMENT:  SELECT gin_metapage_info('bbb'::bytea);
2023-07-22 04:49:17.757 UTC [2704143] ERROR:  invalid page size
2023-07-22 04:49:17.757 UTC [2704143] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.757 UTC [2704143] STATEMENT:  SELECT gin_page_opaque_info('ccc'::bytea);
2023-07-22 04:49:17.758 UTC [2704143] ERROR:  input page is not a valid GIN metapage
2023-07-22 04:49:17.758 UTC [2704143] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:49:17.758 UTC [2704143] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1', 0));
2023-07-22 04:49:17.758 UTC [2704143] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 04:49:17.758 UTC [2704143] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:49:17.758 UTC [2704143] STATEMENT:  SELECT * FROM gin_page_opaque_info(get_raw_page('test1', 0));
2023-07-22 04:49:17.758 UTC [2704143] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 04:49:17.758 UTC [2704143] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:49:17.758 UTC [2704143] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1', 0));
2023-07-22 04:49:17.813 UTC [2704147] ERROR:  "test_gist_btree" is not a GiST index
2023-07-22 04:49:17.813 UTC [2704147] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_btree');
2023-07-22 04:49:17.814 UTC [2704147] ERROR:  input page is not a valid GiST page
2023-07-22 04:49:17.814 UTC [2704147] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 04:49:17.814 UTC [2704147] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_idx');
2023-07-22 04:49:17.814 UTC [2704147] ERROR:  invalid page size
2023-07-22 04:49:17.814 UTC [2704147] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.814 UTC [2704147] STATEMENT:  SELECT gist_page_items_bytea('aaa'::bytea);
2023-07-22 04:49:17.815 UTC [2704147] ERROR:  invalid page size
2023-07-22 04:49:17.815 UTC [2704147] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.815 UTC [2704147] STATEMENT:  SELECT gist_page_items('aaa'::bytea, 'test_gist_idx'::regclass);
2023-07-22 04:49:17.815 UTC [2704147] ERROR:  invalid page size
2023-07-22 04:49:17.815 UTC [2704147] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.815 UTC [2704147] STATEMENT:  SELECT gist_page_opaque_info('aaa'::bytea);
2023-07-22 04:49:17.815 UTC [2704147] ERROR:  input page is not a valid GiST page
2023-07-22 04:49:17.815 UTC [2704147] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.815 UTC [2704147] STATEMENT:  SELECT * FROM gist_page_opaque_info(get_raw_page('test_gist', 0));
2023-07-22 04:49:17.816 UTC [2704147] ERROR:  input page is not a valid GiST page
2023-07-22 04:49:17.816 UTC [2704147] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.816 UTC [2704147] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist', 0));
2023-07-22 04:49:17.816 UTC [2704147] ERROR:  input page is not a valid GiST page
2023-07-22 04:49:17.816 UTC [2704147] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 04:49:17.816 UTC [2704147] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist_btree', 0));
2023-07-22 04:49:17.848 UTC [2704151] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 04:49:17.848 UTC [2704151] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash_a_idx', 6));
2023-07-22 04:49:17.849 UTC [2704151] ERROR:  invalid block number
2023-07-22 04:49:17.849 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', -1);
2023-07-22 04:49:17.849 UTC [2704151] ERROR:  invalid overflow block number 0
2023-07-22 04:49:17.849 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 0);
2023-07-22 04:49:17.849 UTC [2704151] ERROR:  invalid overflow block number 1
2023-07-22 04:49:17.849 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 1);
2023-07-22 04:49:17.849 UTC [2704151] ERROR:  invalid overflow block number 2
2023-07-22 04:49:17.849 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 2);
2023-07-22 04:49:17.849 UTC [2704151] ERROR:  invalid overflow block number 3
2023-07-22 04:49:17.849 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 3);
2023-07-22 04:49:17.850 UTC [2704151] ERROR:  invalid overflow block number 4
2023-07-22 04:49:17.850 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 4);
2023-07-22 04:49:17.850 UTC [2704151] ERROR:  invalid overflow block number 5
2023-07-22 04:49:17.850 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 5);
2023-07-22 04:49:17.850 UTC [2704151] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 04:49:17.850 UTC [2704151] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 6);
2023-07-22 04:49:17.852 UTC [2704151] ERROR:  page is not a hash meta page
2023-07-22 04:49:17.852 UTC [2704151] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 1));
2023-07-22 04:49:17.852 UTC [2704151] ERROR:  page is not a hash meta page
2023-07-22 04:49:17.852 UTC [2704151] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 2));
2023-07-22 04:49:17.852 UTC [2704151] ERROR:  page is not a hash meta page
2023-07-22 04:49:17.852 UTC [2704151] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 3));
2023-07-22 04:49:17.853 UTC [2704151] ERROR:  page is not a hash meta page
2023-07-22 04:49:17.853 UTC [2704151] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 4));
2023-07-22 04:49:17.853 UTC [2704151] ERROR:  page is not a hash meta page
2023-07-22 04:49:17.853 UTC [2704151] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:49:17.854 UTC [2704151] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:49:17.854 UTC [2704151] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 0));
2023-07-22 04:49:17.855 UTC [2704151] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:49:17.855 UTC [2704151] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:49:17.856 UTC [2704151] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:49:17.856 UTC [2704151] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 0));
2023-07-22 04:49:17.857 UTC [2704151] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:49:17.857 UTC [2704151] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:49:17.862 UTC [2704151] ERROR:  "test_hash_a_btree" is not a hash index
2023-07-22 04:49:17.862 UTC [2704151] STATEMENT:  SELECT hash_bitmap_info('test_hash_a_btree', 0);
2023-07-22 04:49:17.862 UTC [2704151] ERROR:  invalid page size
2023-07-22 04:49:17.862 UTC [2704151] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.862 UTC [2704151] STATEMENT:  SELECT hash_metapage_info('aaa'::bytea);
2023-07-22 04:49:17.862 UTC [2704151] ERROR:  invalid page size
2023-07-22 04:49:17.862 UTC [2704151] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.862 UTC [2704151] STATEMENT:  SELECT hash_page_items('bbb'::bytea);
2023-07-22 04:49:17.863 UTC [2704151] ERROR:  invalid page size
2023-07-22 04:49:17.863 UTC [2704151] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.863 UTC [2704151] STATEMENT:  SELECT hash_page_stats('ccc'::bytea);
2023-07-22 04:49:17.863 UTC [2704151] ERROR:  invalid page size
2023-07-22 04:49:17.863 UTC [2704151] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:49:17.863 UTC [2704151] STATEMENT:  SELECT hash_page_type('ddd'::bytea);
2023-07-22 04:49:17.863 UTC [2704151] ERROR:  input page is not a valid hash page
2023-07-22 04:49:17.863 UTC [2704151] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.863 UTC [2704151] STATEMENT:  SELECT hash_metapage_info(get_raw_page('test_hash', 0));
2023-07-22 04:49:17.864 UTC [2704151] ERROR:  input page is not a valid hash page
2023-07-22 04:49:17.864 UTC [2704151] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.864 UTC [2704151] STATEMENT:  SELECT hash_page_items(get_raw_page('test_hash', 0));
2023-07-22 04:49:17.864 UTC [2704151] ERROR:  input page is not a valid hash page
2023-07-22 04:49:17.864 UTC [2704151] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.864 UTC [2704151] STATEMENT:  SELECT hash_page_stats(get_raw_page('test_hash', 0));
2023-07-22 04:49:17.864 UTC [2704151] ERROR:  input page is not a valid hash page
2023-07-22 04:49:17.864 UTC [2704151] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:49:17.864 UTC [2704151] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash', 0));
2023-07-22 04:49:17.865 UTC [2704151] ERROR:  page is not a hash meta page
2023-07-22 04:49:17.865 UTC [2704151] STATEMENT:  SELECT hash_metapage_info(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:49:17.865 UTC [2704151] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:49:17.865 UTC [2704151] STATEMENT:  SELECT hash_page_items(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:49:17.865 UTC [2704151] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:49:17.865 UTC [2704151] STATEMENT:  SELECT hash_page_stats(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:49:17.967 UTC [2704113] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:49:17.999 UTC [2704113] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.008 s, sync=0.008 s, total=0.032 s; sync files=7, longest=0.007 s, average=0.002 s; distance=13853 kB, estimate=13853 kB
2023-07-22 04:49:18.088 UTC [2704174] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:49:18.088 UTC [2704174] STATEMENT:  select gen_salt('foo');
2023-07-22 04:49:18.088 UTC [2704174] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:49:18.088 UTC [2704174] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:49:18.089 UTC [2704174] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:49:18.089 UTC [2704174] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:49:18.089 UTC [2704174] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:49:18.089 UTC [2704174] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:49:18.146 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.146 UTC [2704194] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:49:18.147 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.147 UTC [2704194] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:49:18.147 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.147 UTC [2704194] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:49:18.147 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.147 UTC [2704194] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:49:18.147 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.147 UTC [2704194] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:49:18.147 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.147 UTC [2704194] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:49:18.147 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.147 UTC [2704194] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Key was too big
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Key was too big
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Key was too big
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Key was too big
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:49:18.148 UTC [2704194] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:49:18.148 UTC [2704194] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:49:18.149 UTC [2704194] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:49:18.149 UTC [2704194] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:49:18.149 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.149 UTC [2704194] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:49:18.149 UTC [2704194] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.149 UTC [2704194] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:49:18.162 UTC [2704200] ERROR:  encrypt error: Encryption failed
2023-07-22 04:49:18.162 UTC [2704200] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:49:18.164 UTC [2704200] ERROR:  decrypt error: Decryption failed
2023-07-22 04:49:18.164 UTC [2704200] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:49:18.164 UTC [2704200] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:49:18.164 UTC [2704200] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:49:18.187 UTC [2704208] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.187 UTC [2704208] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:49:18.188 UTC [2704208] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.188 UTC [2704208] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:49:18.188 UTC [2704208] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.188 UTC [2704208] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:49:18.188 UTC [2704208] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.188 UTC [2704208] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:49:18.188 UTC [2704208] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:49:18.188 UTC [2704208] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:49:18.189 UTC [2704208] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:49:18.189 UTC [2704208] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:49:18.189 UTC [2704208] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.189 UTC [2704208] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:49:18.189 UTC [2704208] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.189 UTC [2704208] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:49:18.213 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.213 UTC [2704218] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:49:18.213 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.213 UTC [2704218] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:49:18.213 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.213 UTC [2704218] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:49:18.214 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.214 UTC [2704218] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:49:18.214 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.214 UTC [2704218] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:49:18.214 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.214 UTC [2704218] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:49:18.214 UTC [2704218] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:49:18.214 UTC [2704218] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:49:18.214 UTC [2704218] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:49:18.214 UTC [2704218] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:49:18.215 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.215 UTC [2704218] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:49:18.215 UTC [2704218] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:49:18.215 UTC [2704218] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:49:18.228 UTC [2704224] ERROR:  invalid salt
2023-07-22 04:49:18.228 UTC [2704224] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:49:18.288 UTC [2704232] ERROR:  invalid salt
2023-07-22 04:49:18.288 UTC [2704232] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:49:18.288 UTC [2704232] ERROR:  invalid salt
2023-07-22 04:49:18.288 UTC [2704232] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:49:18.288 UTC [2704232] ERROR:  invalid salt
2023-07-22 04:49:18.288 UTC [2704232] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:49:18.349 UTC [2704236] ERROR:  invalid salt
2023-07-22 04:49:18.349 UTC [2704236] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:49:18.349 UTC [2704236] ERROR:  crypt(3) returned NULL
2023-07-22 04:49:18.349 UTC [2704236] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:49:18.349 UTC [2704236] ERROR:  crypt(3) returned NULL
2023-07-22 04:49:18.349 UTC [2704236] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:49:18.376 UTC [2704240] ERROR:  Corrupt ascii-armor
2023-07-22 04:49:18.376 UTC [2704240] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:49:18.376 UTC [2704240] ERROR:  Corrupt ascii-armor
2023-07-22 04:49:18.376 UTC [2704240] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:49:18.376 UTC [2704240] ERROR:  Corrupt ascii-armor
2023-07-22 04:49:18.376 UTC [2704240] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:49:18.379 UTC [2704240] ERROR:  mismatched array dimensions
2023-07-22 04:49:18.379 UTC [2704240] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:49:18.379 UTC [2704240] ERROR:  mismatched array dimensions
2023-07-22 04:49:18.379 UTC [2704240] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:49:18.379 UTC [2704240] ERROR:  wrong number of array subscripts
2023-07-22 04:49:18.379 UTC [2704240] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:49:18.379 UTC [2704240] ERROR:  wrong number of array subscripts
2023-07-22 04:49:18.379 UTC [2704240] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:49:18.379 UTC [2704240] ERROR:  null value not allowed for header key
2023-07-22 04:49:18.379 UTC [2704240] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:49:18.379 UTC [2704240] ERROR:  null value not allowed for header value
2023-07-22 04:49:18.379 UTC [2704240] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:49:18.380 UTC [2704240] ERROR:  header key must not contain newlines
2023-07-22 04:49:18.380 UTC [2704240] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:49:18.380 UTC [2704240] ERROR:  header value must not contain newlines
2023-07-22 04:49:18.380 UTC [2704240] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:49:18.380 UTC [2704240] ERROR:  header key must not contain ": "
2023-07-22 04:49:18.380 UTC [2704240] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:49:18.391 UTC [2704244] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.391 UTC [2704244] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:49:18.407 UTC [2704244] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.407 UTC [2704244] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:49:18.409 UTC [2704244] ERROR:  Not text data
2023-07-22 04:49:18.409 UTC [2704244] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:49:18.409 UTC [2704244] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.409 UTC [2704244] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:49:18.410 UTC [2704244] ERROR:  Unsupported compression algorithm
2023-07-22 04:49:18.410 UTC [2704244] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:49:18.423 UTC [2704250] ERROR:  Not text data
2023-07-22 04:49:18.423 UTC [2704250] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:49:18.878 UTC [2704258] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.878 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:49:18.896 UTC [2704258] ERROR:  Wrong key
2023-07-22 04:49:18.896 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:49:18.896 UTC [2704258] ERROR:  No encryption key found
2023-07-22 04:49:18.896 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:49:18.898 UTC [2704258] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.898 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:49:18.902 UTC [2704258] ERROR:  Need password for secret key
2023-07-22 04:49:18.902 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:49:18.903 UTC [2704258] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.903 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:49:18.907 UTC [2704258] ERROR:  Wrong key or corrupt data
2023-07-22 04:49:18.907 UTC [2704258] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:49:18.929 UTC [2704264] ERROR:  No encryption key found
2023-07-22 04:49:18.929 UTC [2704264] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:49:18.929 UTC [2704264] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:49:18.929 UTC [2704264] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:49:18.930 UTC [2704264] ERROR:  Not text data
2023-07-22 04:49:18.930 UTC [2704264] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:49:18.938 UTC [2704268] ERROR:  No encryption key found
2023-07-22 04:49:18.938 UTC [2704268] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:49:18.939 UTC [2704268] ERROR:  No encryption key found
2023-07-22 04:49:18.939 UTC [2704268] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:49:50.516 UTC [2704113] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:49:50.659 UTC [2704113] LOG:  checkpoint complete: wrote 598 buffers (3.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.037 s, sync=0.066 s, total=0.144 s; sync files=260, longest=0.004 s, average=0.001 s; distance=141529 kB, estimate=141529 kB
2023-07-22 04:50:22.039 UTC [2704113] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:50:22.094 UTC [2704113] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.004 s, total=0.056 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137270 kB, estimate=141103 kB
2023-07-22 04:50:22.152 UTC [2704112] LOG:  received fast shutdown request
2023-07-22 04:50:22.156 UTC [2704112] LOG:  aborting any active transactions
2023-07-22 04:50:22.159 UTC [2704112] LOG:  background worker "logical replication launcher" (PID 2704118) exited with exit code 1
2023-07-22 04:50:22.160 UTC [2704113] LOG:  shutting down
2023-07-22 04:50:22.163 UTC [2704113] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:50:22.180 UTC [2704113] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126992 kB
2023-07-22 04:50:22.229 UTC [2704112] LOG:  database system is shut down
2023-07-22 04:50:22.878 UTC [2704393] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:50:22.879 UTC [2704393] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:50:22.885 UTC [2704393] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:50:22.893 UTC [2704396] LOG:  database system was shut down at 2023-07-22 04:50:22 UTC
2023-07-22 04:50:22.899 UTC [2704393] LOG:  database system is ready to accept connections
2023-07-22 04:50:23.063 UTC [2704415] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 04:50:23.063 UTC [2704415] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', 1)) AS main_1;
2023-07-22 04:50:23.064 UTC [2704415] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 04:50:23.064 UTC [2704415] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'vm', 1)) AS vm_1;
2023-07-22 04:50:23.064 UTC [2704415] ERROR:  invalid block number
2023-07-22 04:50:23.064 UTC [2704415] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', -1));
2023-07-22 04:50:23.064 UTC [2704415] ERROR:  relation "xxx" does not exist
2023-07-22 04:50:23.064 UTC [2704415] STATEMENT:  SELECT octet_length(get_raw_page('xxx', 'main', 0));
2023-07-22 04:50:23.064 UTC [2704415] ERROR:  invalid fork name
2023-07-22 04:50:23.064 UTC [2704415] HINT:  Valid fork names are "main", "fsm", "vm", and "init".
2023-07-22 04:50:23.064 UTC [2704415] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'xxx', 0));
2023-07-22 04:50:23.065 UTC [2704415] ERROR:  invalid block number
2023-07-22 04:50:23.065 UTC [2704415] STATEMENT:  SELECT page_checksum(get_raw_page('test1', 0), -1);
2023-07-22 04:50:23.073 UTC [2704415] ERROR:  cannot get raw page from relation "test_partitioned"
2023-07-22 04:50:23.073 UTC [2704415] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:50:23.073 UTC [2704415] STATEMENT:  select get_raw_page('test_partitioned', 0);
2023-07-22 04:50:23.073 UTC [2704415] ERROR:  cannot get raw page from relation "test_partitioned_index"
2023-07-22 04:50:23.073 UTC [2704415] DETAIL:  This operation is not supported for partitioned indexes.
2023-07-22 04:50:23.073 UTC [2704415] STATEMENT:  select get_raw_page('test_partitioned_index', 0);
2023-07-22 04:50:23.082 UTC [2704415] ERROR:  block number 0 is out of range for relation "test_part1"
2023-07-22 04:50:23.082 UTC [2704415] STATEMENT:  select get_raw_page('test_part1', 0);
2023-07-22 04:50:23.093 UTC [2704415] ERROR:  invalid page size
2023-07-22 04:50:23.093 UTC [2704415] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.093 UTC [2704415] STATEMENT:  SELECT fsm_page_contents('aaa'::bytea);
2023-07-22 04:50:23.093 UTC [2704415] ERROR:  invalid page size
2023-07-22 04:50:23.093 UTC [2704415] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.093 UTC [2704415] STATEMENT:  SELECT page_checksum('bbb'::bytea, 0);
2023-07-22 04:50:23.094 UTC [2704415] ERROR:  invalid page size
2023-07-22 04:50:23.094 UTC [2704415] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.094 UTC [2704415] STATEMENT:  SELECT page_header('ccc'::bytea);
2023-07-22 04:50:23.145 UTC [2704419] ERROR:  invalid block number
2023-07-22 04:50:23.145 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', -1);
2023-07-22 04:50:23.145 UTC [2704419] ERROR:  block 0 is a meta page
2023-07-22 04:50:23.145 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 0);
2023-07-22 04:50:23.147 UTC [2704419] ERROR:  block number out of range
2023-07-22 04:50:23.147 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 2);
2023-07-22 04:50:23.147 UTC [2704419] ERROR:  invalid block number
2023-07-22 04:50:23.147 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', -1);
2023-07-22 04:50:23.148 UTC [2704419] ERROR:  block 0 is a meta page
2023-07-22 04:50:23.148 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 0);
2023-07-22 04:50:23.149 UTC [2704419] ERROR:  block number out of range
2023-07-22 04:50:23.149 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 2);
2023-07-22 04:50:23.150 UTC [2704419] ERROR:  invalid block number
2023-07-22 04:50:23.150 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', -1));
2023-07-22 04:50:23.150 UTC [2704419] ERROR:  block is a meta page
2023-07-22 04:50:23.150 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 0));
2023-07-22 04:50:23.151 UTC [2704419] ERROR:  block number 2 is out of range for relation "test1_a_idx"
2023-07-22 04:50:23.151 UTC [2704419] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 2));
2023-07-22 04:50:23.155 UTC [2704419] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:50:23.155 UTC [2704419] STATEMENT:  SELECT bt_metap('test1_a_hash');
2023-07-22 04:50:23.155 UTC [2704419] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:50:23.155 UTC [2704419] STATEMENT:  SELECT bt_page_stats('test1_a_hash', 0);
2023-07-22 04:50:23.155 UTC [2704419] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:50:23.155 UTC [2704419] STATEMENT:  SELECT bt_page_items('test1_a_hash', 0);
2023-07-22 04:50:23.156 UTC [2704419] ERROR:  block is a meta page
2023-07-22 04:50:23.156 UTC [2704419] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_hash', 0));
2023-07-22 04:50:23.160 UTC [2704419] ERROR:  block is not a valid btree leaf page
2023-07-22 04:50:23.160 UTC [2704419] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_b_gist', 0));
2023-07-22 04:50:23.160 UTC [2704419] ERROR:  invalid page size
2023-07-22 04:50:23.160 UTC [2704419] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.160 UTC [2704419] STATEMENT:  SELECT bt_page_items('aaa'::bytea);
2023-07-22 04:50:23.163 UTC [2704419] ERROR:  input page is not a valid btree page
2023-07-22 04:50:23.163 UTC [2704419] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.163 UTC [2704419] STATEMENT:  SELECT bt_page_items(get_raw_page('test1', 0));
2023-07-22 04:50:23.164 UTC [2704419] ERROR:  input page is not a valid btree page
2023-07-22 04:50:23.164 UTC [2704419] DETAIL:  Expected special size 16, got 8.
2023-07-22 04:50:23.164 UTC [2704419] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_brin', 0));
2023-07-22 04:50:23.200 UTC [2704423] ERROR:  page is not a BRIN page of type "metapage"
2023-07-22 04:50:23.200 UTC [2704423] DETAIL:  Expected special type 0000f091, got 0000f092.
2023-07-22 04:50:23.200 UTC [2704423] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1_a_idx', 1));
2023-07-22 04:50:23.201 UTC [2704423] ERROR:  page is not a BRIN page of type "revmap"
2023-07-22 04:50:23.201 UTC [2704423] DETAIL:  Expected special type 0000f092, got 0000f091.
2023-07-22 04:50:23.201 UTC [2704423] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1_a_idx', 0)) LIMIT 5;
2023-07-22 04:50:23.208 UTC [2704423] ERROR:  "test1_a_btree" is not a BRIN index
2023-07-22 04:50:23.208 UTC [2704423] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_btree');
2023-07-22 04:50:23.208 UTC [2704423] ERROR:  input page is not a valid BRIN page
2023-07-22 04:50:23.208 UTC [2704423] DETAIL:  Expected special size 8, got 16.
2023-07-22 04:50:23.208 UTC [2704423] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_idx');
2023-07-22 04:50:23.209 UTC [2704423] ERROR:  input page is not a valid BRIN page
2023-07-22 04:50:23.209 UTC [2704423] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:50:23.209 UTC [2704423] STATEMENT:  SELECT brin_page_type(get_raw_page('test1', 0));
2023-07-22 04:50:23.209 UTC [2704423] ERROR:  input page is not a valid BRIN page
2023-07-22 04:50:23.209 UTC [2704423] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:50:23.209 UTC [2704423] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1', 0));
2023-07-22 04:50:23.210 UTC [2704423] ERROR:  input page is not a valid BRIN page
2023-07-22 04:50:23.210 UTC [2704423] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:50:23.210 UTC [2704423] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1', 0));
2023-07-22 04:50:23.244 UTC [2704427] ERROR:  input page is not a GIN metapage
2023-07-22 04:50:23.244 UTC [2704427] DETAIL:  Flags 0002, expected 0008
2023-07-22 04:50:23.244 UTC [2704427] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1_y_idx', 1));
2023-07-22 04:50:23.245 UTC [2704427] ERROR:  input page is not a compressed GIN data leaf page
2023-07-22 04:50:23.245 UTC [2704427] DETAIL:  Flags 0002, expected 0083
2023-07-22 04:50:23.245 UTC [2704427] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1_y_idx', 1));
2023-07-22 04:50:23.372 UTC [2704427] ERROR:  invalid page size
2023-07-22 04:50:23.372 UTC [2704427] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.372 UTC [2704427] STATEMENT:  SELECT gin_leafpage_items('aaa'::bytea);
2023-07-22 04:50:23.372 UTC [2704427] ERROR:  invalid page size
2023-07-22 04:50:23.372 UTC [2704427] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.372 UTC [2704427] STATEMENT:  SELECT gin_metapage_info('bbb'::bytea);
2023-07-22 04:50:23.373 UTC [2704427] ERROR:  invalid page size
2023-07-22 04:50:23.373 UTC [2704427] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.373 UTC [2704427] STATEMENT:  SELECT gin_page_opaque_info('ccc'::bytea);
2023-07-22 04:50:23.373 UTC [2704427] ERROR:  input page is not a valid GIN metapage
2023-07-22 04:50:23.373 UTC [2704427] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:50:23.373 UTC [2704427] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1', 0));
2023-07-22 04:50:23.373 UTC [2704427] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 04:50:23.373 UTC [2704427] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:50:23.373 UTC [2704427] STATEMENT:  SELECT * FROM gin_page_opaque_info(get_raw_page('test1', 0));
2023-07-22 04:50:23.373 UTC [2704427] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 04:50:23.373 UTC [2704427] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:50:23.373 UTC [2704427] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1', 0));
2023-07-22 04:50:23.415 UTC [2704431] ERROR:  "test_gist_btree" is not a GiST index
2023-07-22 04:50:23.415 UTC [2704431] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_btree');
2023-07-22 04:50:23.415 UTC [2704431] ERROR:  input page is not a valid GiST page
2023-07-22 04:50:23.415 UTC [2704431] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 04:50:23.415 UTC [2704431] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_idx');
2023-07-22 04:50:23.416 UTC [2704431] ERROR:  invalid page size
2023-07-22 04:50:23.416 UTC [2704431] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.416 UTC [2704431] STATEMENT:  SELECT gist_page_items_bytea('aaa'::bytea);
2023-07-22 04:50:23.416 UTC [2704431] ERROR:  invalid page size
2023-07-22 04:50:23.416 UTC [2704431] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.416 UTC [2704431] STATEMENT:  SELECT gist_page_items('aaa'::bytea, 'test_gist_idx'::regclass);
2023-07-22 04:50:23.417 UTC [2704431] ERROR:  invalid page size
2023-07-22 04:50:23.417 UTC [2704431] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.417 UTC [2704431] STATEMENT:  SELECT gist_page_opaque_info('aaa'::bytea);
2023-07-22 04:50:23.417 UTC [2704431] ERROR:  input page is not a valid GiST page
2023-07-22 04:50:23.417 UTC [2704431] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.417 UTC [2704431] STATEMENT:  SELECT * FROM gist_page_opaque_info(get_raw_page('test_gist', 0));
2023-07-22 04:50:23.418 UTC [2704431] ERROR:  input page is not a valid GiST page
2023-07-22 04:50:23.418 UTC [2704431] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.418 UTC [2704431] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist', 0));
2023-07-22 04:50:23.418 UTC [2704431] ERROR:  input page is not a valid GiST page
2023-07-22 04:50:23.418 UTC [2704431] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 04:50:23.418 UTC [2704431] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist_btree', 0));
2023-07-22 04:50:23.467 UTC [2704435] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 04:50:23.467 UTC [2704435] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash_a_idx', 6));
2023-07-22 04:50:23.468 UTC [2704435] ERROR:  invalid block number
2023-07-22 04:50:23.468 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', -1);
2023-07-22 04:50:23.468 UTC [2704435] ERROR:  invalid overflow block number 0
2023-07-22 04:50:23.468 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 0);
2023-07-22 04:50:23.469 UTC [2704435] ERROR:  invalid overflow block number 1
2023-07-22 04:50:23.469 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 1);
2023-07-22 04:50:23.469 UTC [2704435] ERROR:  invalid overflow block number 2
2023-07-22 04:50:23.469 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 2);
2023-07-22 04:50:23.469 UTC [2704435] ERROR:  invalid overflow block number 3
2023-07-22 04:50:23.469 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 3);
2023-07-22 04:50:23.470 UTC [2704435] ERROR:  invalid overflow block number 4
2023-07-22 04:50:23.470 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 4);
2023-07-22 04:50:23.470 UTC [2704435] ERROR:  invalid overflow block number 5
2023-07-22 04:50:23.470 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 5);
2023-07-22 04:50:23.471 UTC [2704435] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 04:50:23.471 UTC [2704435] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 6);
2023-07-22 04:50:23.473 UTC [2704435] ERROR:  page is not a hash meta page
2023-07-22 04:50:23.473 UTC [2704435] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 1));
2023-07-22 04:50:23.474 UTC [2704435] ERROR:  page is not a hash meta page
2023-07-22 04:50:23.474 UTC [2704435] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 2));
2023-07-22 04:50:23.475 UTC [2704435] ERROR:  page is not a hash meta page
2023-07-22 04:50:23.475 UTC [2704435] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 3));
2023-07-22 04:50:23.475 UTC [2704435] ERROR:  page is not a hash meta page
2023-07-22 04:50:23.475 UTC [2704435] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 4));
2023-07-22 04:50:23.476 UTC [2704435] ERROR:  page is not a hash meta page
2023-07-22 04:50:23.476 UTC [2704435] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:50:23.477 UTC [2704435] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:50:23.477 UTC [2704435] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 0));
2023-07-22 04:50:23.480 UTC [2704435] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:50:23.480 UTC [2704435] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:50:23.480 UTC [2704435] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:50:23.480 UTC [2704435] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 0));
2023-07-22 04:50:23.483 UTC [2704435] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:50:23.483 UTC [2704435] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:50:23.489 UTC [2704435] ERROR:  "test_hash_a_btree" is not a hash index
2023-07-22 04:50:23.489 UTC [2704435] STATEMENT:  SELECT hash_bitmap_info('test_hash_a_btree', 0);
2023-07-22 04:50:23.490 UTC [2704435] ERROR:  invalid page size
2023-07-22 04:50:23.490 UTC [2704435] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.490 UTC [2704435] STATEMENT:  SELECT hash_metapage_info('aaa'::bytea);
2023-07-22 04:50:23.490 UTC [2704435] ERROR:  invalid page size
2023-07-22 04:50:23.490 UTC [2704435] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.490 UTC [2704435] STATEMENT:  SELECT hash_page_items('bbb'::bytea);
2023-07-22 04:50:23.491 UTC [2704435] ERROR:  invalid page size
2023-07-22 04:50:23.491 UTC [2704435] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.491 UTC [2704435] STATEMENT:  SELECT hash_page_stats('ccc'::bytea);
2023-07-22 04:50:23.491 UTC [2704435] ERROR:  invalid page size
2023-07-22 04:50:23.491 UTC [2704435] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:50:23.491 UTC [2704435] STATEMENT:  SELECT hash_page_type('ddd'::bytea);
2023-07-22 04:50:23.492 UTC [2704435] ERROR:  input page is not a valid hash page
2023-07-22 04:50:23.492 UTC [2704435] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.492 UTC [2704435] STATEMENT:  SELECT hash_metapage_info(get_raw_page('test_hash', 0));
2023-07-22 04:50:23.492 UTC [2704435] ERROR:  input page is not a valid hash page
2023-07-22 04:50:23.492 UTC [2704435] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.492 UTC [2704435] STATEMENT:  SELECT hash_page_items(get_raw_page('test_hash', 0));
2023-07-22 04:50:23.493 UTC [2704435] ERROR:  input page is not a valid hash page
2023-07-22 04:50:23.493 UTC [2704435] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.493 UTC [2704435] STATEMENT:  SELECT hash_page_stats(get_raw_page('test_hash', 0));
2023-07-22 04:50:23.493 UTC [2704435] ERROR:  input page is not a valid hash page
2023-07-22 04:50:23.493 UTC [2704435] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:50:23.493 UTC [2704435] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash', 0));
2023-07-22 04:50:23.494 UTC [2704435] ERROR:  page is not a hash meta page
2023-07-22 04:50:23.494 UTC [2704435] STATEMENT:  SELECT hash_metapage_info(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:50:23.495 UTC [2704435] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:50:23.495 UTC [2704435] STATEMENT:  SELECT hash_page_items(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:50:23.496 UTC [2704435] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:50:23.496 UTC [2704435] STATEMENT:  SELECT hash_page_stats(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:50:55.281 UTC [2704394] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:50:55.453 UTC [2704394] LOG:  checkpoint complete: wrote 674 buffers (4.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.022 s, sync=0.106 s, total=0.173 s; sync files=267, longest=0.004 s, average=0.001 s; distance=150935 kB, estimate=150935 kB
2023-07-22 04:51:26.875 UTC [2704394] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:51:26.928 UTC [2704394] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.004 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137205 kB, estimate=149562 kB
2023-07-22 04:51:26.992 UTC [2704393] LOG:  received fast shutdown request
2023-07-22 04:51:26.995 UTC [2704393] LOG:  aborting any active transactions
2023-07-22 04:51:26.996 UTC [2704393] LOG:  background worker "logical replication launcher" (PID 2704399) exited with exit code 1
2023-07-22 04:51:26.997 UTC [2704394] LOG:  shutting down
2023-07-22 04:51:26.999 UTC [2704394] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:51:27.015 UTC [2704394] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.018 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=134606 kB
2023-07-22 04:51:27.034 UTC [2704393] LOG:  database system is shut down
2023-07-22 04:51:27.742 UTC [2704575] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:51:27.742 UTC [2704575] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:51:27.749 UTC [2704575] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:51:27.760 UTC [2704578] LOG:  database system was shut down at 2023-07-22 04:51:27 UTC
2023-07-22 04:51:27.770 UTC [2704575] LOG:  database system is ready to accept connections
2023-07-22 04:51:27.978 UTC [2704594] ERROR:  password is too short
2023-07-22 04:51:27.978 UTC [2704594] STATEMENT:  ALTER USER regress_user1 PASSWORD 'tooshrt';
2023-07-22 04:51:27.978 UTC [2704594] ERROR:  password must not contain user name
2023-07-22 04:51:27.978 UTC [2704594] STATEMENT:  ALTER USER regress_user1 PASSWORD 'xyzregress_user1';
2023-07-22 04:51:27.979 UTC [2704594] ERROR:  password must contain both letters and nonletters
2023-07-22 04:51:27.979 UTC [2704594] STATEMENT:  ALTER USER regress_user1 PASSWORD 'alessnicelongpassword';
2023-07-22 04:51:27.980 UTC [2704594] ERROR:  password must not equal user name
2023-07-22 04:51:27.980 UTC [2704594] STATEMENT:  ALTER USER regress_user1 PASSWORD 'md5e589150ae7d28f93333afae92b36ef48';
2023-07-22 04:51:28.043 UTC [2704606] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:51:28.043 UTC [2704606] STATEMENT:  select gen_salt('foo');
2023-07-22 04:51:28.044 UTC [2704606] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:51:28.044 UTC [2704606] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:51:28.044 UTC [2704606] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:51:28.044 UTC [2704606] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:51:28.044 UTC [2704606] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:51:28.044 UTC [2704606] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:51:28.084 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.084 UTC [2704626] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Key was too big
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Key was too big
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Key was too big
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:51:28.085 UTC [2704626] ERROR:  encrypt error: Key was too big
2023-07-22 04:51:28.085 UTC [2704626] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:51:28.086 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.086 UTC [2704626] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:51:28.086 UTC [2704626] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:51:28.086 UTC [2704626] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:51:28.086 UTC [2704626] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:51:28.086 UTC [2704626] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:51:28.086 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.086 UTC [2704626] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:51:28.086 UTC [2704626] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.086 UTC [2704626] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:51:28.095 UTC [2704632] ERROR:  encrypt error: Encryption failed
2023-07-22 04:51:28.095 UTC [2704632] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:51:28.096 UTC [2704632] ERROR:  decrypt error: Decryption failed
2023-07-22 04:51:28.096 UTC [2704632] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:51:28.096 UTC [2704632] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:51:28.096 UTC [2704632] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:51:28.113 UTC [2704640] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.113 UTC [2704640] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:51:28.113 UTC [2704640] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.113 UTC [2704640] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:51:28.113 UTC [2704640] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.113 UTC [2704640] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:51:28.114 UTC [2704640] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.114 UTC [2704640] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:51:28.114 UTC [2704640] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:51:28.114 UTC [2704640] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:51:28.114 UTC [2704640] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:51:28.114 UTC [2704640] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:51:28.114 UTC [2704640] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.114 UTC [2704640] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:51:28.114 UTC [2704640] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.114 UTC [2704640] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:51:28.131 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.131 UTC [2704650] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:51:28.132 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.132 UTC [2704650] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:51:28.132 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.132 UTC [2704650] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:51:28.132 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.132 UTC [2704650] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:51:28.132 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.132 UTC [2704650] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:51:28.132 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.132 UTC [2704650] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:51:28.132 UTC [2704650] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:51:28.132 UTC [2704650] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:51:28.133 UTC [2704650] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:51:28.133 UTC [2704650] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:51:28.133 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.133 UTC [2704650] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:51:28.133 UTC [2704650] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:51:28.133 UTC [2704650] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:51:28.142 UTC [2704656] ERROR:  invalid salt
2023-07-22 04:51:28.142 UTC [2704656] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:51:28.255 UTC [2704664] ERROR:  invalid salt
2023-07-22 04:51:28.255 UTC [2704664] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:51:28.255 UTC [2704664] ERROR:  invalid salt
2023-07-22 04:51:28.255 UTC [2704664] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:51:28.255 UTC [2704664] ERROR:  invalid salt
2023-07-22 04:51:28.255 UTC [2704664] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:51:28.319 UTC [2704668] ERROR:  invalid salt
2023-07-22 04:51:28.319 UTC [2704668] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:51:28.319 UTC [2704668] ERROR:  crypt(3) returned NULL
2023-07-22 04:51:28.319 UTC [2704668] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:51:28.319 UTC [2704668] ERROR:  crypt(3) returned NULL
2023-07-22 04:51:28.319 UTC [2704668] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:51:28.346 UTC [2704672] ERROR:  Corrupt ascii-armor
2023-07-22 04:51:28.346 UTC [2704672] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:51:28.347 UTC [2704672] ERROR:  Corrupt ascii-armor
2023-07-22 04:51:28.347 UTC [2704672] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:51:28.347 UTC [2704672] ERROR:  Corrupt ascii-armor
2023-07-22 04:51:28.347 UTC [2704672] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:51:28.350 UTC [2704672] ERROR:  mismatched array dimensions
2023-07-22 04:51:28.350 UTC [2704672] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:51:28.350 UTC [2704672] ERROR:  mismatched array dimensions
2023-07-22 04:51:28.350 UTC [2704672] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:51:28.350 UTC [2704672] ERROR:  wrong number of array subscripts
2023-07-22 04:51:28.350 UTC [2704672] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:51:28.350 UTC [2704672] ERROR:  wrong number of array subscripts
2023-07-22 04:51:28.350 UTC [2704672] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:51:28.350 UTC [2704672] ERROR:  null value not allowed for header key
2023-07-22 04:51:28.350 UTC [2704672] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:51:28.350 UTC [2704672] ERROR:  null value not allowed for header value
2023-07-22 04:51:28.350 UTC [2704672] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:51:28.351 UTC [2704672] ERROR:  header key must not contain newlines
2023-07-22 04:51:28.351 UTC [2704672] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:51:28.351 UTC [2704672] ERROR:  header value must not contain newlines
2023-07-22 04:51:28.351 UTC [2704672] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:51:28.351 UTC [2704672] ERROR:  header key must not contain ": "
2023-07-22 04:51:28.351 UTC [2704672] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:51:28.362 UTC [2704676] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.362 UTC [2704676] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:51:28.380 UTC [2704676] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.380 UTC [2704676] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:51:28.381 UTC [2704676] ERROR:  Not text data
2023-07-22 04:51:28.381 UTC [2704676] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:51:28.381 UTC [2704676] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.381 UTC [2704676] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:51:28.382 UTC [2704676] ERROR:  Unsupported compression algorithm
2023-07-22 04:51:28.382 UTC [2704676] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:51:28.395 UTC [2704682] ERROR:  Not text data
2023-07-22 04:51:28.395 UTC [2704682] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:51:28.838 UTC [2704690] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.838 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:51:28.848 UTC [2704690] ERROR:  Wrong key
2023-07-22 04:51:28.848 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:51:28.848 UTC [2704690] ERROR:  No encryption key found
2023-07-22 04:51:28.848 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:51:28.849 UTC [2704690] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.849 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:51:28.853 UTC [2704690] ERROR:  Need password for secret key
2023-07-22 04:51:28.853 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:51:28.854 UTC [2704690] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.854 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:51:28.857 UTC [2704690] ERROR:  Wrong key or corrupt data
2023-07-22 04:51:28.857 UTC [2704690] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:51:28.878 UTC [2704696] ERROR:  No encryption key found
2023-07-22 04:51:28.878 UTC [2704696] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:51:28.878 UTC [2704696] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:51:28.878 UTC [2704696] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:51:28.879 UTC [2704696] ERROR:  Not text data
2023-07-22 04:51:28.879 UTC [2704696] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:51:28.887 UTC [2704700] ERROR:  No encryption key found
2023-07-22 04:51:28.887 UTC [2704700] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:51:28.888 UTC [2704700] ERROR:  No encryption key found
2023-07-22 04:51:28.888 UTC [2704700] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:52:00.506 UTC [2704576] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:52:00.656 UTC [2704576] LOG:  checkpoint complete: wrote 1030 buffers (6.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.040 s, sync=0.064 s, total=0.150 s; sync files=510, longest=0.004 s, average=0.001 s; distance=145488 kB, estimate=145488 kB
2023-07-22 04:52:31.937 UTC [2704576] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:52:31.983 UTC [2704576] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.047 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137441 kB, estimate=144684 kB
2023-07-22 04:52:32.039 UTC [2704575] LOG:  received fast shutdown request
2023-07-22 04:52:32.042 UTC [2704575] LOG:  aborting any active transactions
2023-07-22 04:52:32.044 UTC [2704575] LOG:  background worker "logical replication launcher" (PID 2704581) exited with exit code 1
2023-07-22 04:52:32.044 UTC [2704576] LOG:  shutting down
2023-07-22 04:52:32.047 UTC [2704576] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:52:32.063 UTC [2704576] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130215 kB
2023-07-22 04:52:32.083 UTC [2704575] LOG:  database system is shut down
2023-07-22 04:52:32.799 UTC [2704818] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:52:32.800 UTC [2704818] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:52:32.806 UTC [2704818] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:52:32.815 UTC [2704821] LOG:  database system was shut down at 2023-07-22 04:52:32 UTC
2023-07-22 04:52:32.823 UTC [2704818] LOG:  database system is ready to accept connections
2023-07-22 04:52:33.004 UTC [2704840] ERROR:  password is too short
2023-07-22 04:52:33.004 UTC [2704840] STATEMENT:  ALTER USER regress_user1 PASSWORD 'tooshrt';
2023-07-22 04:52:33.005 UTC [2704840] ERROR:  password must not contain user name
2023-07-22 04:52:33.005 UTC [2704840] STATEMENT:  ALTER USER regress_user1 PASSWORD 'xyzregress_user1';
2023-07-22 04:52:33.005 UTC [2704840] ERROR:  password must contain both letters and nonletters
2023-07-22 04:52:33.005 UTC [2704840] STATEMENT:  ALTER USER regress_user1 PASSWORD 'alessnicelongpassword';
2023-07-22 04:52:33.006 UTC [2704840] ERROR:  password must not equal user name
2023-07-22 04:52:33.006 UTC [2704840] STATEMENT:  ALTER USER regress_user1 PASSWORD 'md5e589150ae7d28f93333afae92b36ef48';
2023-07-22 04:53:04.686 UTC [2704819] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:53:04.780 UTC [2704819] LOG:  checkpoint complete: wrote 436 buffers (2.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.029 s, total=0.094 s; sync files=256, longest=0.004 s, average=0.001 s; distance=141503 kB, estimate=141503 kB
2023-07-22 04:53:36.233 UTC [2704819] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:53:36.338 UTC [2704819] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.009 s, total=0.106 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133220 kB, estimate=140675 kB
2023-07-22 04:53:36.402 UTC [2704818] LOG:  received fast shutdown request
2023-07-22 04:53:36.408 UTC [2704818] LOG:  aborting any active transactions
2023-07-22 04:53:36.410 UTC [2704818] LOG:  background worker "logical replication launcher" (PID 2704824) exited with exit code 1
2023-07-22 04:53:36.410 UTC [2704819] LOG:  shutting down
2023-07-22 04:53:36.418 UTC [2704819] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:53:36.454 UTC [2704819] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.044 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126607 kB
2023-07-22 04:53:36.483 UTC [2704818] LOG:  database system is shut down
2023-07-22 04:53:37.290 UTC [2704966] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:53:37.290 UTC [2704966] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:53:37.301 UTC [2704966] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:53:37.316 UTC [2704969] LOG:  database system was shut down at 2023-07-22 04:53:36 UTC
2023-07-22 04:53:37.325 UTC [2704966] LOG:  database system is ready to accept connections
2023-07-22 04:53:37.495 UTC [2704985] ERROR:  parameter "pg_bigm.last_update" cannot be changed
2023-07-22 04:53:37.495 UTC [2704985] STATEMENT:  SET pg_bigm.last_update = '2013.09.18';
2023-07-22 04:53:37.556 UTC [2704985] ERROR:  relation "test_bigm" is not a GIN index
2023-07-22 04:53:37.556 UTC [2704985] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm');
2023-07-22 04:53:37.567 UTC [2704985] ERROR:  relation "test_bigm_btree" is not a GIN index
2023-07-22 04:53:37.567 UTC [2704985] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm_btree');
2023-07-22 04:53:37.651 UTC [2704985] ERROR:  function likequery(unknown) does not exist at character 8
2023-07-22 04:53:37.651 UTC [2704985] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:53:37.651 UTC [2704985] STATEMENT:  SELECT likequery('test');
2023-07-22 04:53:37.783 UTC [2705004] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:53:37.783 UTC [2705004] STATEMENT:  select gen_salt('foo');
2023-07-22 04:53:37.783 UTC [2705004] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:53:37.783 UTC [2705004] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:53:37.783 UTC [2705004] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:53:37.783 UTC [2705004] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:53:37.784 UTC [2705004] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:53:37.784 UTC [2705004] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:53:37.824 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.824 UTC [2705024] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:53:37.824 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.824 UTC [2705024] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:53:37.824 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.824 UTC [2705024] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:53:37.824 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.824 UTC [2705024] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:53:37.824 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.824 UTC [2705024] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Key was too big
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Key was too big
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Key was too big
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Key was too big
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:53:37.825 UTC [2705024] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:53:37.825 UTC [2705024] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:53:37.826 UTC [2705024] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:53:37.826 UTC [2705024] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:53:37.826 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.826 UTC [2705024] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:53:37.826 UTC [2705024] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.826 UTC [2705024] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:53:37.835 UTC [2705030] ERROR:  encrypt error: Encryption failed
2023-07-22 04:53:37.835 UTC [2705030] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:53:37.836 UTC [2705030] ERROR:  decrypt error: Decryption failed
2023-07-22 04:53:37.836 UTC [2705030] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:53:37.836 UTC [2705030] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:53:37.836 UTC [2705030] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:53:37.852 UTC [2705038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.852 UTC [2705038] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:53:37.853 UTC [2705038] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.853 UTC [2705038] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:53:37.870 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.870 UTC [2705048] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:53:37.870 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.870 UTC [2705048] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:53:37.870 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.870 UTC [2705048] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:53:37.870 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.870 UTC [2705048] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:53:37.871 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.871 UTC [2705048] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:53:37.871 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.871 UTC [2705048] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:53:37.871 UTC [2705048] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:53:37.871 UTC [2705048] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:53:37.871 UTC [2705048] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:53:37.871 UTC [2705048] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:53:37.871 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.871 UTC [2705048] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:53:37.871 UTC [2705048] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:53:37.871 UTC [2705048] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:53:37.881 UTC [2705054] ERROR:  invalid salt
2023-07-22 04:53:37.881 UTC [2705054] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:53:37.992 UTC [2705062] ERROR:  invalid salt
2023-07-22 04:53:37.992 UTC [2705062] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:53:37.992 UTC [2705062] ERROR:  invalid salt
2023-07-22 04:53:37.992 UTC [2705062] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:53:37.993 UTC [2705062] ERROR:  invalid salt
2023-07-22 04:53:37.993 UTC [2705062] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:53:38.055 UTC [2705066] ERROR:  invalid salt
2023-07-22 04:53:38.055 UTC [2705066] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:53:38.055 UTC [2705066] ERROR:  crypt(3) returned NULL
2023-07-22 04:53:38.055 UTC [2705066] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:53:38.055 UTC [2705066] ERROR:  crypt(3) returned NULL
2023-07-22 04:53:38.055 UTC [2705066] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:53:38.115 UTC [2705070] ERROR:  Corrupt ascii-armor
2023-07-22 04:53:38.115 UTC [2705070] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:53:38.116 UTC [2705070] ERROR:  Corrupt ascii-armor
2023-07-22 04:53:38.116 UTC [2705070] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:53:38.116 UTC [2705070] ERROR:  Corrupt ascii-armor
2023-07-22 04:53:38.116 UTC [2705070] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:53:38.126 UTC [2705070] ERROR:  mismatched array dimensions
2023-07-22 04:53:38.126 UTC [2705070] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:53:38.126 UTC [2705070] ERROR:  mismatched array dimensions
2023-07-22 04:53:38.126 UTC [2705070] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:53:38.127 UTC [2705070] ERROR:  wrong number of array subscripts
2023-07-22 04:53:38.127 UTC [2705070] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:53:38.127 UTC [2705070] ERROR:  wrong number of array subscripts
2023-07-22 04:53:38.127 UTC [2705070] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:53:38.128 UTC [2705070] ERROR:  null value not allowed for header key
2023-07-22 04:53:38.128 UTC [2705070] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:53:38.128 UTC [2705070] ERROR:  null value not allowed for header value
2023-07-22 04:53:38.128 UTC [2705070] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:53:38.129 UTC [2705070] ERROR:  header key must not contain newlines
2023-07-22 04:53:38.129 UTC [2705070] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:53:38.130 UTC [2705070] ERROR:  header value must not contain newlines
2023-07-22 04:53:38.130 UTC [2705070] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:53:38.130 UTC [2705070] ERROR:  header key must not contain ": "
2023-07-22 04:53:38.130 UTC [2705070] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:53:38.158 UTC [2705074] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.158 UTC [2705074] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:53:38.195 UTC [2705074] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.195 UTC [2705074] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:53:38.198 UTC [2705074] ERROR:  Not text data
2023-07-22 04:53:38.198 UTC [2705074] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:53:38.198 UTC [2705074] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.198 UTC [2705074] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:53:38.199 UTC [2705074] ERROR:  Unsupported compression algorithm
2023-07-22 04:53:38.199 UTC [2705074] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:53:38.216 UTC [2705080] ERROR:  Not text data
2023-07-22 04:53:38.216 UTC [2705080] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:53:38.671 UTC [2705088] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.671 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:53:38.690 UTC [2705088] ERROR:  Wrong key
2023-07-22 04:53:38.690 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:53:38.691 UTC [2705088] ERROR:  No encryption key found
2023-07-22 04:53:38.691 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:53:38.692 UTC [2705088] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.692 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:53:38.698 UTC [2705088] ERROR:  Need password for secret key
2023-07-22 04:53:38.698 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:53:38.698 UTC [2705088] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.698 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:53:38.703 UTC [2705088] ERROR:  Wrong key or corrupt data
2023-07-22 04:53:38.703 UTC [2705088] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:53:38.725 UTC [2705094] ERROR:  No encryption key found
2023-07-22 04:53:38.725 UTC [2705094] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:53:38.725 UTC [2705094] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:53:38.725 UTC [2705094] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:53:38.726 UTC [2705094] ERROR:  Not text data
2023-07-22 04:53:38.726 UTC [2705094] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:53:38.734 UTC [2705098] ERROR:  No encryption key found
2023-07-22 04:53:38.734 UTC [2705098] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:53:38.735 UTC [2705098] ERROR:  No encryption key found
2023-07-22 04:53:38.735 UTC [2705098] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:54:10.399 UTC [2704967] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:54:10.545 UTC [2704967] LOG:  checkpoint complete: wrote 1004 buffers (6.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.025 s, sync=0.075 s, total=0.147 s; sync files=518, longest=0.004 s, average=0.001 s; distance=146494 kB, estimate=146494 kB
2023-07-22 04:54:41.882 UTC [2704967] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:54:41.933 UTC [2704967] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.051 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137256 kB, estimate=145570 kB
2023-07-22 04:54:41.998 UTC [2704966] LOG:  received fast shutdown request
2023-07-22 04:54:42.001 UTC [2704966] LOG:  aborting any active transactions
2023-07-22 04:54:42.002 UTC [2704966] LOG:  background worker "logical replication launcher" (PID 2704972) exited with exit code 1
2023-07-22 04:54:42.003 UTC [2704967] LOG:  shutting down
2023-07-22 04:54:42.006 UTC [2704967] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:54:42.023 UTC [2704967] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131013 kB
2023-07-22 04:54:42.051 UTC [2704966] LOG:  database system is shut down
2023-07-22 04:54:42.751 UTC [2705222] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:54:42.751 UTC [2705222] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:54:42.758 UTC [2705222] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:54:42.766 UTC [2705225] LOG:  database system was shut down at 2023-07-22 04:54:42 UTC
2023-07-22 04:54:42.773 UTC [2705222] LOG:  database system is ready to accept connections
2023-07-22 04:54:42.966 UTC [2705244] ERROR:  parameter "pg_bigm.last_update" cannot be changed
2023-07-22 04:54:42.966 UTC [2705244] STATEMENT:  SET pg_bigm.last_update = '2013.09.18';
2023-07-22 04:54:42.999 UTC [2705244] ERROR:  relation "test_bigm" is not a GIN index
2023-07-22 04:54:42.999 UTC [2705244] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm');
2023-07-22 04:54:43.008 UTC [2705244] ERROR:  relation "test_bigm_btree" is not a GIN index
2023-07-22 04:54:43.008 UTC [2705244] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm_btree');
2023-07-22 04:54:43.096 UTC [2705244] ERROR:  function likequery(unknown) does not exist at character 8
2023-07-22 04:54:43.096 UTC [2705244] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:54:43.096 UTC [2705244] STATEMENT:  SELECT likequery('test');
2023-07-22 04:55:14.811 UTC [2705223] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:55:14.919 UTC [2705223] LOG:  checkpoint complete: wrote 922 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.023 s, sync=0.036 s, total=0.109 s; sync files=264, longest=0.007 s, average=0.001 s; distance=141502 kB, estimate=141502 kB
2023-07-22 04:55:46.658 UTC [2705223] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:55:46.744 UTC [2705223] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.013 s, sync=0.007 s, total=0.086 s; sync files=4, longest=0.004 s, average=0.002 s; distance=133671 kB, estimate=140719 kB
2023-07-22 04:55:46.817 UTC [2705222] LOG:  received fast shutdown request
2023-07-22 04:55:46.825 UTC [2705222] LOG:  aborting any active transactions
2023-07-22 04:55:46.827 UTC [2705222] LOG:  background worker "logical replication launcher" (PID 2705228) exited with exit code 1
2023-07-22 04:55:46.827 UTC [2705223] LOG:  shutting down
2023-07-22 04:55:46.832 UTC [2705223] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:55:46.864 UTC [2705223] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.037 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126647 kB
2023-07-22 04:55:46.917 UTC [2705222] LOG:  database system is shut down
2023-07-22 04:55:47.680 UTC [2705384] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:55:47.680 UTC [2705384] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:55:47.690 UTC [2705384] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:55:47.700 UTC [2705387] LOG:  database system was shut down at 2023-07-22 04:55:47 UTC
2023-07-22 04:55:47.711 UTC [2705384] LOG:  database system is ready to accept connections
2023-07-22 04:55:47.851 UTC [2705403] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:55:47.851 UTC [2705403] STATEMENT:  select gen_salt('foo');
2023-07-22 04:55:47.852 UTC [2705403] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:55:47.852 UTC [2705403] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:55:47.852 UTC [2705403] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:55:47.852 UTC [2705403] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:55:47.852 UTC [2705403] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:55:47.852 UTC [2705403] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:55:47.892 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.892 UTC [2705423] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:55:47.892 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.892 UTC [2705423] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:55:47.892 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.892 UTC [2705423] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Key was too big
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Key was too big
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Key was too big
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Key was too big
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:55:47.893 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.893 UTC [2705423] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:55:47.894 UTC [2705423] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:55:47.894 UTC [2705423] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:55:47.894 UTC [2705423] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:55:47.894 UTC [2705423] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:55:47.894 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.894 UTC [2705423] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:55:47.894 UTC [2705423] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.894 UTC [2705423] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:55:47.903 UTC [2705429] ERROR:  encrypt error: Encryption failed
2023-07-22 04:55:47.903 UTC [2705429] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:55:47.904 UTC [2705429] ERROR:  decrypt error: Decryption failed
2023-07-22 04:55:47.904 UTC [2705429] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:55:47.904 UTC [2705429] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:55:47.904 UTC [2705429] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:55:47.920 UTC [2705437] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.920 UTC [2705437] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:55:47.920 UTC [2705437] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.920 UTC [2705437] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:55:47.921 UTC [2705437] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.921 UTC [2705437] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:55:47.921 UTC [2705437] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.921 UTC [2705437] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:55:47.921 UTC [2705437] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:55:47.921 UTC [2705437] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:55:47.921 UTC [2705437] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:55:47.921 UTC [2705437] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:55:47.921 UTC [2705437] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.921 UTC [2705437] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:55:47.921 UTC [2705437] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.921 UTC [2705437] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:55:47.938 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.938 UTC [2705447] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:55:47.938 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.938 UTC [2705447] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:55:47.938 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.938 UTC [2705447] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:55:47.938 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.938 UTC [2705447] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:55:47.939 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.939 UTC [2705447] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:55:47.939 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.939 UTC [2705447] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:55:47.939 UTC [2705447] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:55:47.939 UTC [2705447] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:55:47.939 UTC [2705447] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:55:47.939 UTC [2705447] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:55:47.939 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.939 UTC [2705447] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:55:47.939 UTC [2705447] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:55:47.939 UTC [2705447] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:55:47.948 UTC [2705453] ERROR:  invalid salt
2023-07-22 04:55:47.948 UTC [2705453] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:55:48.065 UTC [2705461] ERROR:  invalid salt
2023-07-22 04:55:48.065 UTC [2705461] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:55:48.065 UTC [2705461] ERROR:  invalid salt
2023-07-22 04:55:48.065 UTC [2705461] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:55:48.065 UTC [2705461] ERROR:  invalid salt
2023-07-22 04:55:48.065 UTC [2705461] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:55:48.164 UTC [2705465] ERROR:  invalid salt
2023-07-22 04:55:48.164 UTC [2705465] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:55:48.164 UTC [2705465] ERROR:  crypt(3) returned NULL
2023-07-22 04:55:48.164 UTC [2705465] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:55:48.164 UTC [2705465] ERROR:  crypt(3) returned NULL
2023-07-22 04:55:48.164 UTC [2705465] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:55:48.213 UTC [2705469] ERROR:  Corrupt ascii-armor
2023-07-22 04:55:48.213 UTC [2705469] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:55:48.214 UTC [2705469] ERROR:  Corrupt ascii-armor
2023-07-22 04:55:48.214 UTC [2705469] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:55:48.215 UTC [2705469] ERROR:  Corrupt ascii-armor
2023-07-22 04:55:48.215 UTC [2705469] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:55:48.224 UTC [2705469] ERROR:  mismatched array dimensions
2023-07-22 04:55:48.224 UTC [2705469] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:55:48.225 UTC [2705469] ERROR:  mismatched array dimensions
2023-07-22 04:55:48.225 UTC [2705469] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:55:48.225 UTC [2705469] ERROR:  wrong number of array subscripts
2023-07-22 04:55:48.225 UTC [2705469] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:55:48.226 UTC [2705469] ERROR:  wrong number of array subscripts
2023-07-22 04:55:48.226 UTC [2705469] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:55:48.226 UTC [2705469] ERROR:  null value not allowed for header key
2023-07-22 04:55:48.226 UTC [2705469] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:55:48.227 UTC [2705469] ERROR:  null value not allowed for header value
2023-07-22 04:55:48.227 UTC [2705469] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:55:48.228 UTC [2705469] ERROR:  header key must not contain newlines
2023-07-22 04:55:48.228 UTC [2705469] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:55:48.228 UTC [2705469] ERROR:  header value must not contain newlines
2023-07-22 04:55:48.228 UTC [2705469] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:55:48.229 UTC [2705469] ERROR:  header key must not contain ": "
2023-07-22 04:55:48.229 UTC [2705469] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:55:48.256 UTC [2705473] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.256 UTC [2705473] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:55:48.287 UTC [2705473] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.287 UTC [2705473] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:55:48.289 UTC [2705473] ERROR:  Not text data
2023-07-22 04:55:48.289 UTC [2705473] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:55:48.290 UTC [2705473] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.290 UTC [2705473] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:55:48.290 UTC [2705473] ERROR:  Unsupported compression algorithm
2023-07-22 04:55:48.290 UTC [2705473] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:55:48.305 UTC [2705479] ERROR:  Not text data
2023-07-22 04:55:48.305 UTC [2705479] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:55:48.746 UTC [2705487] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.746 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:55:48.753 UTC [2705487] ERROR:  Wrong key
2023-07-22 04:55:48.753 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:55:48.753 UTC [2705487] ERROR:  No encryption key found
2023-07-22 04:55:48.753 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:55:48.754 UTC [2705487] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.754 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:55:48.757 UTC [2705487] ERROR:  Need password for secret key
2023-07-22 04:55:48.757 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:55:48.758 UTC [2705487] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.758 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:55:48.761 UTC [2705487] ERROR:  Wrong key or corrupt data
2023-07-22 04:55:48.761 UTC [2705487] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:55:48.787 UTC [2705493] ERROR:  No encryption key found
2023-07-22 04:55:48.787 UTC [2705493] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:55:48.787 UTC [2705493] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:55:48.787 UTC [2705493] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:55:48.789 UTC [2705493] ERROR:  Not text data
2023-07-22 04:55:48.789 UTC [2705493] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:55:48.797 UTC [2705497] ERROR:  No encryption key found
2023-07-22 04:55:48.797 UTC [2705497] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:55:48.798 UTC [2705497] ERROR:  No encryption key found
2023-07-22 04:55:48.798 UTC [2705497] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:56:20.448 UTC [2705385] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:56:20.677 UTC [2705385] LOG:  checkpoint complete: wrote 591 buffers (3.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.021 s, sync=0.164 s, total=0.229 s; sync files=261, longest=0.060 s, average=0.001 s; distance=141380 kB, estimate=141380 kB
2023-07-22 04:56:51.977 UTC [2705385] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:56:52.056 UTC [2705385] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.008 s, total=0.079 s; sync files=4, longest=0.007 s, average=0.002 s; distance=136493 kB, estimate=140891 kB
2023-07-22 04:56:52.119 UTC [2705384] LOG:  received fast shutdown request
2023-07-22 04:56:52.125 UTC [2705384] LOG:  aborting any active transactions
2023-07-22 04:56:52.126 UTC [2705384] LOG:  background worker "logical replication launcher" (PID 2705390) exited with exit code 1
2023-07-22 04:56:52.126 UTC [2705385] LOG:  shutting down
2023-07-22 04:56:52.129 UTC [2705385] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:56:52.156 UTC [2705385] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.003 s, total=0.030 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126802 kB
2023-07-22 04:56:52.177 UTC [2705384] LOG:  database system is shut down
2023-07-22 04:56:52.995 UTC [2705621] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:56:52.996 UTC [2705621] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:56:53.006 UTC [2705621] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:56:53.018 UTC [2705624] LOG:  database system was shut down at 2023-07-22 04:56:52 UTC
2023-07-22 04:56:53.024 UTC [2705621] LOG:  database system is ready to accept connections
2023-07-22 04:57:25.628 UTC [2705622] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:57:25.709 UTC [2705622] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.012 s, total=0.082 s; sync files=5, longest=0.006 s, average=0.003 s; distance=133566 kB, estimate=133566 kB
2023-07-22 04:57:57.460 UTC [2705622] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:57:57.565 UTC [2705622] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.011 s, total=0.106 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133006 kB, estimate=133510 kB
2023-07-22 04:57:57.610 UTC [2705621] LOG:  received fast shutdown request
2023-07-22 04:57:57.618 UTC [2705621] LOG:  aborting any active transactions
2023-07-22 04:57:57.619 UTC [2705621] LOG:  background worker "logical replication launcher" (PID 2705627) exited with exit code 1
2023-07-22 04:57:57.620 UTC [2705622] LOG:  shutting down
2023-07-22 04:57:57.627 UTC [2705622] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:57:57.669 UTC [2705622] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.049 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=120159 kB
2023-07-22 04:57:57.691 UTC [2705621] LOG:  database system is shut down
2023-07-22 04:57:58.444 UTC [2705758] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:57:58.444 UTC [2705758] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:57:58.459 UTC [2705758] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:57:58.471 UTC [2705761] LOG:  database system was shut down at 2023-07-22 04:57:58 UTC
2023-07-22 04:57:58.481 UTC [2705758] LOG:  database system is ready to accept connections
2023-07-22 04:57:58.492 UTC [2705764] LOG:  pg_cron scheduler started
2023-07-22 04:57:58.732 UTC [2705778] LOG:  failed to parse schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:57:58.732 UTC [2705778] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:57:58.732 UTC [2705778] ERROR:  invalid schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:57:58.732 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.732 UTC [2705778] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:57:58.733 UTC [2705778] LOG:  failed to parse schedule: * * * *
2023-07-22 04:57:58.733 UTC [2705778] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:57:58.733 UTC [2705778] ERROR:  invalid schedule: * * * *
2023-07-22 04:57:58.733 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.733 UTC [2705778] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:57:58.733 UTC [2705778] LOG:  failed to parse schedule: 5 secondc
2023-07-22 04:57:58.733 UTC [2705778] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:57:58.734 UTC [2705778] ERROR:  invalid schedule: 5 secondc
2023-07-22 04:57:58.734 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.734 UTC [2705778] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:57:58.734 UTC [2705778] LOG:  failed to parse schedule: 50 seconds c
2023-07-22 04:57:58.734 UTC [2705778] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:57:58.734 UTC [2705778] ERROR:  invalid schedule: 50 seconds c
2023-07-22 04:57:58.734 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.734 UTC [2705778] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:57:58.735 UTC [2705778] LOG:  failed to parse schedule: -1 seconds
2023-07-22 04:57:58.735 UTC [2705778] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:57:58.735 UTC [2705778] ERROR:  invalid schedule: -1 seconds
2023-07-22 04:57:58.735 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.735 UTC [2705778] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:57:58.735 UTC [2705778] LOG:  failed to parse schedule: 0 seconds
2023-07-22 04:57:58.735 UTC [2705778] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:57:58.735 UTC [2705778] ERROR:  invalid schedule: 0 seconds
2023-07-22 04:57:58.735 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.735 UTC [2705778] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:57:58.736 UTC [2705778] LOG:  failed to parse schedule: 60 seconds
2023-07-22 04:57:58.736 UTC [2705778] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:57:58.736 UTC [2705778] ERROR:  invalid schedule: 60 seconds
2023-07-22 04:57:58.736 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.736 UTC [2705778] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:57:58.736 UTC [2705778] LOG:  failed to parse schedule: 10000000000 seconds
2023-07-22 04:57:58.736 UTC [2705778] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:57:58.736 UTC [2705778] ERROR:  invalid schedule: 10000000000 seconds
2023-07-22 04:57:58.736 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.736 UTC [2705778] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:57:58.737 UTC [2705778] LOG:  failed to parse schedule: @restar
2023-07-22 04:57:58.737 UTC [2705778] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:57:58.737 UTC [2705778] ERROR:  invalid schedule: @restar
2023-07-22 04:57:58.737 UTC [2705778] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:57:58.737 UTC [2705778] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:57:58.758 UTC [2705778] ERROR:  no updates specified
2023-07-22 04:57:58.758 UTC [2705778] HINT:  You must specify at least one job attribute to change when calling alter_job
2023-07-22 04:57:58.758 UTC [2705778] STATEMENT:  SELECT cron.alter_job(2);
2023-07-22 04:57:58.759 UTC [2705778] ERROR:  database "hopedoesnotexist" does not exist
2023-07-22 04:57:58.759 UTC [2705778] STATEMENT:  select cron.alter_job(job_id:=2,database:='hopedoesnotexist');
2023-07-22 04:57:58.868 UTC [2705778] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:57:58.868 UTC [2705778] STATEMENT:  SELECT cron.schedule_in_database(job_name:='can not connect', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:57:59.008 UTC [2705778] ERROR:  role "pgcron_useraqwxszedc" does not exist
2023-07-22 04:57:59.008 UTC [2705778] STATEMENT:  SELECT cron.schedule_in_database(job_name:='user does not exist', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbyes',username:='pgcron_useraqwxszedc');
2023-07-22 04:57:59.008 UTC [2705778] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:57:59.008 UTC [2705778] STATEMENT:  SELECT cron.alter_job(job_id:=2,database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:57:59.015 UTC [2705778] ERROR:  permission denied for function schedule_in_database
2023-07-22 04:57:59.015 UTC [2705778] STATEMENT:  SELECT cron.schedule_in_database(job_name:='his vacuum', schedule:='0 11 * * *', command:='VACUUM',database:=current_database(),username:='anotheruser');
2023-07-22 04:57:59.016 UTC [2705778] ERROR:  must be superuser to alter username
2023-07-22 04:57:59.016 UTC [2705778] STATEMENT:  select cron.alter_job(job_id:=6,username:='anotheruser');
2023-07-22 04:57:59.017 UTC [2705778] ERROR:  Job 2 does not exist or you don't own it
2023-07-22 04:57:59.017 UTC [2705778] STATEMENT:  select cron.alter_job(job_id:=2,database:='pgcron_dbyes');
2023-07-22 04:57:59.023 UTC [2705778] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:57:59.023 UTC [2705778] STATEMENT:  select cron.alter_job(job_id:=6,database:='pgcron_dbno');
2023-07-22 04:57:59.184 UTC [2705759] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:57:59.330 UTC [2705759] LOG:  checkpoint complete: wrote 1846 buffers (11.3%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.060 s, sync=0.051 s, total=0.147 s; sync files=519, longest=0.014 s, average=0.001 s; distance=12651 kB, estimate=12651 kB
2023-07-22 04:57:59.354 UTC [2705759] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:57:59.400 UTC [2705759] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.010 s, total=0.046 s; sync files=2, longest=0.008 s, average=0.005 s; distance=1 kB, estimate=11386 kB
2023-07-22 04:57:59.450 UTC [2705759] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:57:59.501 UTC [2705759] LOG:  checkpoint complete: wrote 4 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.011 s, total=0.051 s; sync files=4, longest=0.008 s, average=0.003 s; distance=2 kB, estimate=10247 kB
2023-07-22 04:57:59.712 UTC [2705793] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 04:57:59.712 UTC [2705793] STATEMENT:  select gen_salt('foo');
2023-07-22 04:57:59.712 UTC [2705793] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:57:59.712 UTC [2705793] STATEMENT:  select digest('foo', 'foo');
2023-07-22 04:57:59.712 UTC [2705793] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 04:57:59.712 UTC [2705793] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 04:57:59.712 UTC [2705793] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 04:57:59.712 UTC [2705793] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 04:57:59.770 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.770 UTC [2705813] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:57:59.770 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.770 UTC [2705813] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 04:57:59.771 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.771 UTC [2705813] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:57:59.771 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.771 UTC [2705813] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 04:57:59.771 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.771 UTC [2705813] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:57:59.771 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.771 UTC [2705813] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 04:57:59.771 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.771 UTC [2705813] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Key was too big
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Key was too big
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Key was too big
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Key was too big
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 04:57:59.772 UTC [2705813] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:57:59.772 UTC [2705813] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 04:57:59.773 UTC [2705813] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:57:59.773 UTC [2705813] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 04:57:59.773 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.773 UTC [2705813] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 04:57:59.773 UTC [2705813] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.773 UTC [2705813] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 04:57:59.786 UTC [2705819] ERROR:  encrypt error: Encryption failed
2023-07-22 04:57:59.786 UTC [2705819] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 04:57:59.788 UTC [2705819] ERROR:  decrypt error: Decryption failed
2023-07-22 04:57:59.788 UTC [2705819] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 04:57:59.788 UTC [2705819] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 04:57:59.788 UTC [2705819] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 04:57:59.812 UTC [2705827] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.812 UTC [2705827] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 04:57:59.812 UTC [2705827] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.812 UTC [2705827] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 04:57:59.812 UTC [2705827] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.812 UTC [2705827] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 04:57:59.813 UTC [2705827] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.813 UTC [2705827] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 04:57:59.813 UTC [2705827] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:57:59.813 UTC [2705827] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 04:57:59.813 UTC [2705827] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:57:59.813 UTC [2705827] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 04:57:59.813 UTC [2705827] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.813 UTC [2705827] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 04:57:59.813 UTC [2705827] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.813 UTC [2705827] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 04:57:59.838 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.838 UTC [2705837] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 04:57:59.838 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.838 UTC [2705837] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 04:57:59.838 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.838 UTC [2705837] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 04:57:59.839 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.839 UTC [2705837] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 04:57:59.839 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.839 UTC [2705837] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 04:57:59.839 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.839 UTC [2705837] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 04:57:59.839 UTC [2705837] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 04:57:59.839 UTC [2705837] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 04:57:59.840 UTC [2705837] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 04:57:59.840 UTC [2705837] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 04:57:59.840 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.840 UTC [2705837] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 04:57:59.840 UTC [2705837] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 04:57:59.840 UTC [2705837] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 04:57:59.853 UTC [2705843] ERROR:  invalid salt
2023-07-22 04:57:59.853 UTC [2705843] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 04:57:59.934 UTC [2705851] ERROR:  invalid salt
2023-07-22 04:57:59.934 UTC [2705851] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 04:57:59.934 UTC [2705851] ERROR:  invalid salt
2023-07-22 04:57:59.934 UTC [2705851] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:57:59.934 UTC [2705851] ERROR:  invalid salt
2023-07-22 04:57:59.934 UTC [2705851] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 04:58:00.005 UTC [2705855] ERROR:  invalid salt
2023-07-22 04:58:00.005 UTC [2705855] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 04:58:00.005 UTC [2705855] ERROR:  crypt(3) returned NULL
2023-07-22 04:58:00.005 UTC [2705855] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 04:58:00.005 UTC [2705855] ERROR:  crypt(3) returned NULL
2023-07-22 04:58:00.005 UTC [2705855] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 04:58:00.057 UTC [2705859] ERROR:  Corrupt ascii-armor
2023-07-22 04:58:00.057 UTC [2705859] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:58:00.058 UTC [2705859] ERROR:  Corrupt ascii-armor
2023-07-22 04:58:00.058 UTC [2705859] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:58:00.058 UTC [2705859] ERROR:  Corrupt ascii-armor
2023-07-22 04:58:00.058 UTC [2705859] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 04:58:00.068 UTC [2705859] ERROR:  mismatched array dimensions
2023-07-22 04:58:00.068 UTC [2705859] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 04:58:00.069 UTC [2705859] ERROR:  mismatched array dimensions
2023-07-22 04:58:00.069 UTC [2705859] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 04:58:00.069 UTC [2705859] ERROR:  wrong number of array subscripts
2023-07-22 04:58:00.069 UTC [2705859] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 04:58:00.069 UTC [2705859] ERROR:  wrong number of array subscripts
2023-07-22 04:58:00.069 UTC [2705859] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 04:58:00.070 UTC [2705859] ERROR:  null value not allowed for header key
2023-07-22 04:58:00.070 UTC [2705859] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 04:58:00.070 UTC [2705859] ERROR:  null value not allowed for header value
2023-07-22 04:58:00.070 UTC [2705859] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 04:58:00.072 UTC [2705859] ERROR:  header key must not contain newlines
2023-07-22 04:58:00.072 UTC [2705859] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 04:58:00.072 UTC [2705859] ERROR:  header value must not contain newlines
2023-07-22 04:58:00.072 UTC [2705859] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 04:58:00.072 UTC [2705859] ERROR:  header key must not contain ": "
2023-07-22 04:58:00.072 UTC [2705859] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 04:58:00.100 UTC [2705863] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.100 UTC [2705863] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 04:58:00.142 UTC [2705863] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.142 UTC [2705863] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:58:00.145 UTC [2705863] ERROR:  Not text data
2023-07-22 04:58:00.145 UTC [2705863] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 04:58:00.146 UTC [2705863] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.146 UTC [2705863] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 04:58:00.146 UTC [2705863] ERROR:  Unsupported compression algorithm
2023-07-22 04:58:00.146 UTC [2705863] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 04:58:00.165 UTC [2705869] ERROR:  Not text data
2023-07-22 04:58:00.165 UTC [2705869] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 04:58:00.642 UTC [2705877] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.642 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 04:58:00.661 UTC [2705877] ERROR:  Wrong key
2023-07-22 04:58:00.661 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 04:58:00.661 UTC [2705877] ERROR:  No encryption key found
2023-07-22 04:58:00.661 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 04:58:00.663 UTC [2705877] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.663 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 04:58:00.668 UTC [2705877] ERROR:  Need password for secret key
2023-07-22 04:58:00.668 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:58:00.669 UTC [2705877] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.669 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 04:58:00.673 UTC [2705877] ERROR:  Wrong key or corrupt data
2023-07-22 04:58:00.673 UTC [2705877] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 04:58:00.695 UTC [2705883] ERROR:  No encryption key found
2023-07-22 04:58:00.695 UTC [2705883] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 04:58:00.695 UTC [2705883] ERROR:  Refusing to encrypt with secret key
2023-07-22 04:58:00.695 UTC [2705883] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:58:00.696 UTC [2705883] ERROR:  Not text data
2023-07-22 04:58:00.696 UTC [2705883] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 04:58:00.704 UTC [2705887] ERROR:  No encryption key found
2023-07-22 04:58:00.704 UTC [2705887] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 04:58:00.705 UTC [2705887] ERROR:  No encryption key found
2023-07-22 04:58:00.705 UTC [2705887] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 04:58:00.784 UTC [2705895] ERROR:  can only create extension in database postgres
2023-07-22 04:58:00.784 UTC [2705895] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:58:00.784 UTC [2705895] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:58:00.784 UTC [2705895] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:58:00.784 UTC [2705895] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:58:32.373 UTC [2705759] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:58:32.480 UTC [2705759] LOG:  checkpoint complete: wrote 713 buffers (4.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.021 s, sync=0.044 s, total=0.108 s; sync files=266, longest=0.004 s, average=0.001 s; distance=141076 kB, estimate=141076 kB
2023-07-22 04:58:32.624 UTC [2705966] ERROR:  can only create extension in database postgres
2023-07-22 04:58:32.624 UTC [2705966] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:58:32.624 UTC [2705966] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:58:32.624 UTC [2705966] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:58:32.624 UTC [2705966] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:59:03.847 UTC [2705759] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:59:03.930 UTC [2705759] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.010 s, total=0.083 s; sync files=4, longest=0.006 s, average=0.003 s; distance=135283 kB, estimate=140497 kB
2023-07-22 04:59:03.995 UTC [2705758] LOG:  received fast shutdown request
2023-07-22 04:59:04.000 UTC [2705758] LOG:  aborting any active transactions
2023-07-22 04:59:04.000 UTC [2705764] LOG:  pg_cron scheduler shutting down
2023-07-22 04:59:04.001 UTC [2705758] LOG:  background worker "logical replication launcher" (PID 2705765) exited with exit code 1
2023-07-22 04:59:04.002 UTC [2705759] LOG:  shutting down
2023-07-22 04:59:04.005 UTC [2705759] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:59:04.032 UTC [2705759] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.002 s, total=0.030 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=126447 kB
2023-07-22 04:59:04.062 UTC [2705758] LOG:  database system is shut down
2023-07-22 04:59:04.834 UTC [2706055] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:59:04.834 UTC [2706055] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:59:04.845 UTC [2706055] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:59:04.854 UTC [2706058] LOG:  database system was shut down at 2023-07-22 04:59:04 UTC
2023-07-22 04:59:04.864 UTC [2706055] LOG:  database system is ready to accept connections
2023-07-22 04:59:04.870 UTC [2706061] LOG:  pg_cron scheduler started
2023-07-22 04:59:05.107 UTC [2706078] LOG:  failed to parse schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:59:05.107 UTC [2706078] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:59:05.107 UTC [2706078] ERROR:  invalid schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:59:05.107 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.107 UTC [2706078] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:59:05.108 UTC [2706078] LOG:  failed to parse schedule: * * * *
2023-07-22 04:59:05.108 UTC [2706078] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:59:05.108 UTC [2706078] ERROR:  invalid schedule: * * * *
2023-07-22 04:59:05.108 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.108 UTC [2706078] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:59:05.108 UTC [2706078] LOG:  failed to parse schedule: 5 secondc
2023-07-22 04:59:05.108 UTC [2706078] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:59:05.108 UTC [2706078] ERROR:  invalid schedule: 5 secondc
2023-07-22 04:59:05.108 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.108 UTC [2706078] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:59:05.109 UTC [2706078] LOG:  failed to parse schedule: 50 seconds c
2023-07-22 04:59:05.109 UTC [2706078] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:59:05.109 UTC [2706078] ERROR:  invalid schedule: 50 seconds c
2023-07-22 04:59:05.109 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.109 UTC [2706078] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:59:05.109 UTC [2706078] LOG:  failed to parse schedule: -1 seconds
2023-07-22 04:59:05.109 UTC [2706078] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:59:05.109 UTC [2706078] ERROR:  invalid schedule: -1 seconds
2023-07-22 04:59:05.109 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.109 UTC [2706078] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:59:05.110 UTC [2706078] LOG:  failed to parse schedule: 0 seconds
2023-07-22 04:59:05.110 UTC [2706078] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:59:05.110 UTC [2706078] ERROR:  invalid schedule: 0 seconds
2023-07-22 04:59:05.110 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.110 UTC [2706078] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:59:05.110 UTC [2706078] LOG:  failed to parse schedule: 60 seconds
2023-07-22 04:59:05.110 UTC [2706078] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:59:05.110 UTC [2706078] ERROR:  invalid schedule: 60 seconds
2023-07-22 04:59:05.110 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.110 UTC [2706078] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:59:05.110 UTC [2706078] LOG:  failed to parse schedule: 10000000000 seconds
2023-07-22 04:59:05.110 UTC [2706078] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:59:05.110 UTC [2706078] ERROR:  invalid schedule: 10000000000 seconds
2023-07-22 04:59:05.110 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.110 UTC [2706078] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:59:05.111 UTC [2706078] LOG:  failed to parse schedule: @restar
2023-07-22 04:59:05.111 UTC [2706078] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:59:05.111 UTC [2706078] ERROR:  invalid schedule: @restar
2023-07-22 04:59:05.111 UTC [2706078] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:59:05.111 UTC [2706078] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:59:05.128 UTC [2706078] ERROR:  no updates specified
2023-07-22 04:59:05.128 UTC [2706078] HINT:  You must specify at least one job attribute to change when calling alter_job
2023-07-22 04:59:05.128 UTC [2706078] STATEMENT:  SELECT cron.alter_job(2);
2023-07-22 04:59:05.129 UTC [2706078] ERROR:  database "hopedoesnotexist" does not exist
2023-07-22 04:59:05.129 UTC [2706078] STATEMENT:  select cron.alter_job(job_id:=2,database:='hopedoesnotexist');
2023-07-22 04:59:05.235 UTC [2706078] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:59:05.235 UTC [2706078] STATEMENT:  SELECT cron.schedule_in_database(job_name:='can not connect', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:59:05.351 UTC [2706078] ERROR:  role "pgcron_useraqwxszedc" does not exist
2023-07-22 04:59:05.351 UTC [2706078] STATEMENT:  SELECT cron.schedule_in_database(job_name:='user does not exist', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbyes',username:='pgcron_useraqwxszedc');
2023-07-22 04:59:05.351 UTC [2706078] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:59:05.351 UTC [2706078] STATEMENT:  SELECT cron.alter_job(job_id:=2,database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:59:05.360 UTC [2706078] ERROR:  permission denied for function schedule_in_database
2023-07-22 04:59:05.360 UTC [2706078] STATEMENT:  SELECT cron.schedule_in_database(job_name:='his vacuum', schedule:='0 11 * * *', command:='VACUUM',database:=current_database(),username:='anotheruser');
2023-07-22 04:59:05.360 UTC [2706078] ERROR:  must be superuser to alter username
2023-07-22 04:59:05.360 UTC [2706078] STATEMENT:  select cron.alter_job(job_id:=6,username:='anotheruser');
2023-07-22 04:59:05.362 UTC [2706078] ERROR:  Job 2 does not exist or you don't own it
2023-07-22 04:59:05.362 UTC [2706078] STATEMENT:  select cron.alter_job(job_id:=2,database:='pgcron_dbyes');
2023-07-22 04:59:05.365 UTC [2706078] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:59:05.365 UTC [2706078] STATEMENT:  select cron.alter_job(job_id:=6,database:='pgcron_dbno');
2023-07-22 04:59:05.509 UTC [2706056] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:59:05.652 UTC [2706056] LOG:  checkpoint complete: wrote 1847 buffers (11.3%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.071 s, sync=0.043 s, total=0.143 s; sync files=519, longest=0.007 s, average=0.001 s; distance=12662 kB, estimate=12662 kB
2023-07-22 04:59:05.666 UTC [2706056] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:59:05.700 UTC [2706056] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.007 s, total=0.035 s; sync files=2, longest=0.004 s, average=0.004 s; distance=1 kB, estimate=11396 kB
2023-07-22 04:59:05.811 UTC [2706086] ERROR:  can only create extension in database postgres
2023-07-22 04:59:05.811 UTC [2706086] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:59:05.811 UTC [2706086] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:59:05.811 UTC [2706086] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:59:05.811 UTC [2706086] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:59:38.124 UTC [2706056] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:59:38.217 UTC [2706056] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.007 s, total=0.093 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133138 kB, estimate=133138 kB
2023-07-22 04:59:38.362 UTC [2706121] ERROR:  can only create extension in database postgres
2023-07-22 04:59:38.362 UTC [2706121] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:59:38.362 UTC [2706121] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:59:38.362 UTC [2706121] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:59:38.362 UTC [2706121] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 05:00:10.013 UTC [2706056] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:00:10.118 UTC [2706056] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.009 s, total=0.105 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133096 kB, estimate=133133 kB
2023-07-22 05:00:10.186 UTC [2706055] LOG:  received fast shutdown request
2023-07-22 05:00:10.194 UTC [2706055] LOG:  aborting any active transactions
2023-07-22 05:00:10.194 UTC [2706061] LOG:  pg_cron scheduler shutting down
2023-07-22 05:00:10.196 UTC [2706055] LOG:  background worker "logical replication launcher" (PID 2706062) exited with exit code 1
2023-07-22 05:00:10.196 UTC [2706056] LOG:  shutting down
2023-07-22 05:00:10.201 UTC [2706056] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:00:10.235 UTC [2706056] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.040 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=119820 kB
2023-07-22 05:00:10.261 UTC [2706055] LOG:  database system is shut down
2023-07-22 05:00:11.061 UTC [2706209] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:00:11.061 UTC [2706209] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:00:11.074 UTC [2706209] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:00:11.087 UTC [2706212] LOG:  database system was shut down at 2023-07-22 05:00:10 UTC
2023-07-22 05:00:11.095 UTC [2706209] LOG:  database system is ready to accept connections
2023-07-22 05:00:11.325 UTC [2706228] ERROR:  invalid block number
2023-07-22 05:00:11.325 UTC [2706228] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', -1);
2023-07-22 05:00:11.326 UTC [2706228] ERROR:  invalid block number
2023-07-22 05:00:11.326 UTC [2706228] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', 4294967295);
2023-07-22 05:00:11.364 UTC [2706210] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:00:11.423 UTC [2706210] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.014 s, sync=0.012 s, total=0.059 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4202 kB, estimate=4202 kB
2023-07-22 05:00:11.578 UTC [2706243] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:00:11.578 UTC [2706243] STATEMENT:  select gen_salt('foo');
2023-07-22 05:00:11.578 UTC [2706243] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:00:11.578 UTC [2706243] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:00:11.578 UTC [2706243] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:00:11.578 UTC [2706243] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:00:11.579 UTC [2706243] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:00:11.579 UTC [2706243] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:00:11.627 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.627 UTC [2706263] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:00:11.627 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.627 UTC [2706263] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:00:11.627 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.627 UTC [2706263] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Key was too big
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Key was too big
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Key was too big
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:00:11.628 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.628 UTC [2706263] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  encrypt error: Key was too big
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:00:11.629 UTC [2706263] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.629 UTC [2706263] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:00:11.640 UTC [2706269] ERROR:  encrypt error: Encryption failed
2023-07-22 05:00:11.640 UTC [2706269] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:00:11.641 UTC [2706269] ERROR:  decrypt error: Decryption failed
2023-07-22 05:00:11.641 UTC [2706269] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:00:11.642 UTC [2706269] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:00:11.642 UTC [2706269] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:00:11.662 UTC [2706277] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.662 UTC [2706277] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:00:11.662 UTC [2706277] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.662 UTC [2706277] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:00:11.662 UTC [2706277] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.662 UTC [2706277] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:00:11.662 UTC [2706277] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.662 UTC [2706277] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:00:11.662 UTC [2706277] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:00:11.662 UTC [2706277] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:00:11.663 UTC [2706277] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:00:11.663 UTC [2706277] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:00:11.663 UTC [2706277] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.663 UTC [2706277] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:00:11.663 UTC [2706277] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.663 UTC [2706277] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:00:11.684 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.684 UTC [2706287] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:00:11.684 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.684 UTC [2706287] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:00:11.684 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.684 UTC [2706287] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:00:11.684 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.684 UTC [2706287] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:00:11.684 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.684 UTC [2706287] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:00:11.685 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.685 UTC [2706287] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:00:11.685 UTC [2706287] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:00:11.685 UTC [2706287] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:00:11.685 UTC [2706287] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:00:11.685 UTC [2706287] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:00:11.685 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.685 UTC [2706287] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:00:11.685 UTC [2706287] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:00:11.685 UTC [2706287] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:00:11.696 UTC [2706293] ERROR:  invalid salt
2023-07-22 05:00:11.696 UTC [2706293] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:00:11.844 UTC [2706301] ERROR:  invalid salt
2023-07-22 05:00:11.844 UTC [2706301] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:00:11.844 UTC [2706301] ERROR:  invalid salt
2023-07-22 05:00:11.844 UTC [2706301] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:00:11.844 UTC [2706301] ERROR:  invalid salt
2023-07-22 05:00:11.844 UTC [2706301] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:00:11.929 UTC [2706305] ERROR:  invalid salt
2023-07-22 05:00:11.929 UTC [2706305] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:00:11.929 UTC [2706305] ERROR:  crypt(3) returned NULL
2023-07-22 05:00:11.929 UTC [2706305] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:00:11.929 UTC [2706305] ERROR:  crypt(3) returned NULL
2023-07-22 05:00:11.929 UTC [2706305] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:00:11.991 UTC [2706309] ERROR:  Corrupt ascii-armor
2023-07-22 05:00:11.991 UTC [2706309] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:00:11.992 UTC [2706309] ERROR:  Corrupt ascii-armor
2023-07-22 05:00:11.992 UTC [2706309] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:00:11.993 UTC [2706309] ERROR:  Corrupt ascii-armor
2023-07-22 05:00:11.993 UTC [2706309] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:00:12.002 UTC [2706309] ERROR:  mismatched array dimensions
2023-07-22 05:00:12.002 UTC [2706309] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:00:12.002 UTC [2706309] ERROR:  mismatched array dimensions
2023-07-22 05:00:12.002 UTC [2706309] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:00:12.003 UTC [2706309] ERROR:  wrong number of array subscripts
2023-07-22 05:00:12.003 UTC [2706309] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:00:12.003 UTC [2706309] ERROR:  wrong number of array subscripts
2023-07-22 05:00:12.003 UTC [2706309] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:00:12.004 UTC [2706309] ERROR:  null value not allowed for header key
2023-07-22 05:00:12.004 UTC [2706309] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:00:12.004 UTC [2706309] ERROR:  null value not allowed for header value
2023-07-22 05:00:12.004 UTC [2706309] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:00:12.005 UTC [2706309] ERROR:  header key must not contain newlines
2023-07-22 05:00:12.005 UTC [2706309] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:00:12.006 UTC [2706309] ERROR:  header value must not contain newlines
2023-07-22 05:00:12.006 UTC [2706309] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:00:12.006 UTC [2706309] ERROR:  header key must not contain ": "
2023-07-22 05:00:12.006 UTC [2706309] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:00:12.034 UTC [2706313] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.034 UTC [2706313] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:00:12.064 UTC [2706313] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.064 UTC [2706313] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:00:12.065 UTC [2706313] ERROR:  Not text data
2023-07-22 05:00:12.065 UTC [2706313] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:00:12.066 UTC [2706313] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.066 UTC [2706313] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:00:12.067 UTC [2706313] ERROR:  Unsupported compression algorithm
2023-07-22 05:00:12.067 UTC [2706313] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:00:12.079 UTC [2706319] ERROR:  Not text data
2023-07-22 05:00:12.079 UTC [2706319] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:00:12.540 UTC [2706327] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.540 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:00:12.557 UTC [2706327] ERROR:  Wrong key
2023-07-22 05:00:12.557 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:00:12.558 UTC [2706327] ERROR:  No encryption key found
2023-07-22 05:00:12.558 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:00:12.559 UTC [2706327] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.559 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:00:12.564 UTC [2706327] ERROR:  Need password for secret key
2023-07-22 05:00:12.564 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:00:12.565 UTC [2706327] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.565 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:00:12.569 UTC [2706327] ERROR:  Wrong key or corrupt data
2023-07-22 05:00:12.569 UTC [2706327] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:00:12.590 UTC [2706333] ERROR:  No encryption key found
2023-07-22 05:00:12.590 UTC [2706333] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:00:12.590 UTC [2706333] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:00:12.590 UTC [2706333] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:00:12.592 UTC [2706333] ERROR:  Not text data
2023-07-22 05:00:12.592 UTC [2706333] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:00:12.599 UTC [2706337] ERROR:  No encryption key found
2023-07-22 05:00:12.599 UTC [2706337] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:00:12.600 UTC [2706337] ERROR:  No encryption key found
2023-07-22 05:00:12.600 UTC [2706337] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:00:44.281 UTC [2706210] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:00:44.377 UTC [2706210] LOG:  checkpoint complete: wrote 769 buffers (4.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.034 s, total=0.096 s; sync files=260, longest=0.005 s, average=0.001 s; distance=140957 kB, estimate=140957 kB
2023-07-22 05:01:15.682 UTC [2706210] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:01:15.755 UTC [2706210] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.009 s, total=0.073 s; sync files=4, longest=0.005 s, average=0.003 s; distance=135189 kB, estimate=140380 kB
2023-07-22 05:01:15.797 UTC [2706209] LOG:  received fast shutdown request
2023-07-22 05:01:15.802 UTC [2706209] LOG:  aborting any active transactions
2023-07-22 05:01:15.803 UTC [2706209] LOG:  background worker "logical replication launcher" (PID 2706215) exited with exit code 1
2023-07-22 05:01:15.803 UTC [2706210] LOG:  shutting down
2023-07-22 05:01:15.806 UTC [2706210] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:01:15.835 UTC [2706210] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.003 s, total=0.033 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126342 kB
2023-07-22 05:01:15.890 UTC [2706209] LOG:  database system is shut down
2023-07-22 05:01:16.643 UTC [2706464] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:01:16.644 UTC [2706464] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:01:16.654 UTC [2706464] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:01:16.666 UTC [2706467] LOG:  database system was shut down at 2023-07-22 05:01:16 UTC
2023-07-22 05:01:16.675 UTC [2706464] LOG:  database system is ready to accept connections
2023-07-22 05:01:16.903 UTC [2706486] ERROR:  invalid block number
2023-07-22 05:01:16.903 UTC [2706486] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', -1);
2023-07-22 05:01:16.904 UTC [2706486] ERROR:  invalid block number
2023-07-22 05:01:16.904 UTC [2706486] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', 4294967295);
2023-07-22 05:01:49.440 UTC [2706465] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:01:49.555 UTC [2706465] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.029 s, sync=0.032 s, total=0.116 s; sync files=256, longest=0.007 s, average=0.001 s; distance=137596 kB, estimate=137596 kB
2023-07-22 05:02:21.332 UTC [2706465] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:02:21.432 UTC [2706465] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.007 s, total=0.100 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133219 kB, estimate=137158 kB
2023-07-22 05:02:21.498 UTC [2706464] LOG:  received fast shutdown request
2023-07-22 05:02:21.505 UTC [2706464] LOG:  aborting any active transactions
2023-07-22 05:02:21.506 UTC [2706464] LOG:  background worker "logical replication launcher" (PID 2706470) exited with exit code 1
2023-07-22 05:02:21.507 UTC [2706465] LOG:  shutting down
2023-07-22 05:02:21.512 UTC [2706465] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:02:21.545 UTC [2706465] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.003 s, total=0.038 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123442 kB
2023-07-22 05:02:21.565 UTC [2706464] LOG:  database system is shut down
2023-07-22 05:02:22.360 UTC [2706616] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:02:22.360 UTC [2706616] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:02:22.373 UTC [2706616] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:02:22.385 UTC [2706619] LOG:  database system was shut down at 2023-07-22 05:02:22 UTC
2023-07-22 05:02:22.395 UTC [2706616] LOG:  database system is ready to accept connections
2023-07-22 05:02:24.495 UTC [2706616] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:02:24.497 UTC [2706616] LOG:  parameter "effective_cache_size" changed to "16384"
2023-07-22 05:02:24.842 UTC [2706645] ERROR:  table hint is not activated because queryid is not available
2023-07-22 05:02:24.842 UTC [2706645] HINT:  Set compute_query_id to on or auto to use hint table.
2023-07-22 05:02:24.842 UTC [2706645] STATEMENT:  SET pg_hint_plan.enable_hint_table to on;
2023-07-22 05:02:24.842 UTC [2706645] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 05:02:24.842 UTC [2706645] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 05:02:24.842 UTC [2706645] LOG:  hint table feature is reactivated
2023-07-22 05:02:24.842 UTC [2706645] STATEMENT:  SELECT 1;
2023-07-22 05:02:24.843 UTC [2706645] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 05:02:24.843 UTC [2706645] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 05:02:24.845 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.845 UTC [2706645] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.845 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.845 UTC [2706645] STATEMENT:  EXPLAIN (COSTS false) /*+Set(enable_indexscan off)*/
	 SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.846 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(enable_hashjoin off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.846 UTC [2706645] STATEMENT:  /*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.846 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.846 UTC [2706645] STATEMENT:  /*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.846 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.846 UTC [2706645] STATEMENT:  /*+ 	 
		 	Set 	 
		 	( 	 
		 	enable_indexscan 	 
		 	off 	 
		 	) 	 
		 	*/	 	
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.846 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	Set(enable_mergejoin off)
	Set(enable_nestloop off)
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.846 UTC [2706645] STATEMENT:  /*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
		 	Set(enable_seqscan off)
		 	*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.847 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem 1M)
	
2023-07-22 05:02:24.847 UTC [2706645] STATEMENT:  /*+Set(work_mem "1M")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.847 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Set(work_mem 1MB)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.847 UTC [2706645] STATEMENT:  /*+Set(work_mem "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.847 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem TO 1MB)
	
2023-07-22 05:02:24.847 UTC [2706645] STATEMENT:  /*+Set(work_mem TO "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.847 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:02:24.847 UTC [2706645] STATEMENT:  /*+SeqScan() */ SELECT 1;
2023-07-22 05:02:24.847 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 05:02:24.847 UTC [2706645] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.848 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.848 UTC [2706645] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.848 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.848 UTC [2706645] STATEMENT:  /*+SeqScan(t1)IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.848 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.848 UTC [2706645] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.848 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.848 UTC [2706645] STATEMENT:  /*+BitmapScan(t2)NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.848 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.848 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.849 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.849 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
2023-07-22 05:02:24.849 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.849 UTC [2706645] STATEMENT:  /*+TidScan(t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
2023-07-22 05:02:24.849 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.849 UTC [2706645] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
2023-07-22 05:02:24.850 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 05:02:24.850 UTC [2706645] STATEMENT:  /*+ NestLoop() */ SELECT 1;
2023-07-22 05:02:24.850 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(x)
	
2023-07-22 05:02:24.850 UTC [2706645] STATEMENT:  /*+ NestLoop(x) */ SELECT 1;
2023-07-22 05:02:24.850 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.850 UTC [2706645] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.850 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.850 UTC [2706645] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.850 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.850 UTC [2706645] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.850 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.850 UTC [2706645] STATEMENT:  /*+MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 05:02:24.851 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.851 UTC [2706645] STATEMENT:  /*+NestLoop(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 05:02:24.851 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.851 UTC [2706645] STATEMENT:  /*+NoHashJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 05:02:24.851 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.851 UTC [2706645] STATEMENT:  /*+MergeJoin(t4 t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.852 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.852 UTC [2706645] STATEMENT:  /*+HashJoin(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.853 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t3)
	NestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.853 UTC [2706645] STATEMENT:  /*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.854 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.854 UTC [2706645] STATEMENT:  /*+NoNestLoop(t4 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.855 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 05:02:24.855 UTC [2706645] STATEMENT:  /*+Leading( )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.856 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3)
	
2023-07-22 05:02:24.856 UTC [2706645] STATEMENT:  /*+Leading( t3 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.856 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.856 UTC [2706645] STATEMENT:  /*+Leading( t3 t4 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.857 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.857 UTC [2706645] STATEMENT:  /*+Leading(t3 t4 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.858 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.858 UTC [2706645] STATEMENT:  /*+Leading(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.858 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t1 t2 t1)
	
2023-07-22 05:02:24.858 UTC [2706645] STATEMENT:  /*+Leading(t3 t4 t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.859 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t4)
	
2023-07-22 05:02:24.859 UTC [2706645] STATEMENT:  /*+Leading(t3 t4 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:02:24.859 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.859 UTC [2706645] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 05:02:24.860 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.860 UTC [2706645] STATEMENT:  /*+HashJoin(t1 *VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 05:02:24.860 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	HashJoin(*VALUES* t1)
	not used hint:
	IndexScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.860 UTC [2706645] STATEMENT:  /*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 05:02:24.861 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.861 UTC [2706645] STATEMENT:  /*+BitmapScan(v_1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.861 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.861 UTC [2706645] STATEMENT:  /*+BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.862 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.862 UTC [2706645] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.862 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.862 UTC [2706645] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.862 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.862 UTC [2706645] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.863 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.863 UTC [2706645] STATEMENT:  /*+BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.863 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.863 UTC [2706645] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:02:24.864 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.864 UTC [2706645] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.864 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.864 UTC [2706645] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.864 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.864 UTC [2706645] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.864 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.864 UTC [2706645] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.864 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.864 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.865 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.865 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.865 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.865 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.865 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.865 UTC [2706645] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:02:24.865 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.865 UTC [2706645] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.866 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.866 UTC [2706645] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.866 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.866 UTC [2706645] STATEMENT:  /*+SeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.866 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.866 UTC [2706645] STATEMENT:  /*+SeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.866 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.866 UTC [2706645] STATEMENT:  /*+SeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.867 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.867 UTC [2706645] STATEMENT:  /*+SeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.867 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.867 UTC [2706645] STATEMENT:  /*+SeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.867 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.867 UTC [2706645] STATEMENT:  /*+SeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.867 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.867 UTC [2706645] STATEMENT:  /*+SeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.868 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.868 UTC [2706645] STATEMENT:  /*+SeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.868 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.868 UTC [2706645] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.868 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.868 UTC [2706645] STATEMENT:  /*+IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.868 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.868 UTC [2706645] STATEMENT:  /*+IndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.869 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.869 UTC [2706645] STATEMENT:  /*+IndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.869 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.869 UTC [2706645] STATEMENT:  /*+IndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.869 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.869 UTC [2706645] STATEMENT:  /*+IndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.869 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.869 UTC [2706645] STATEMENT:  /*+IndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.870 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.870 UTC [2706645] STATEMENT:  /*+IndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.870 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.870 UTC [2706645] STATEMENT:  /*+IndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.870 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.870 UTC [2706645] STATEMENT:  /*+IndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.870 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.870 UTC [2706645] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.871 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.871 UTC [2706645] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.871 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.871 UTC [2706645] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.871 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.871 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.872 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.872 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.872 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.872 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.872 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.872 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.872 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.872 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.873 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.873 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.873 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.873 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.873 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.873 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.873 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.873 UTC [2706645] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.874 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.874 UTC [2706645] STATEMENT:  /*+TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.874 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.874 UTC [2706645] STATEMENT:  /*+TidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.874 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.874 UTC [2706645] STATEMENT:  /*+TidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.874 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.874 UTC [2706645] STATEMENT:  /*+TidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.875 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.875 UTC [2706645] STATEMENT:  /*+TidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.875 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.875 UTC [2706645] STATEMENT:  /*+TidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.875 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.875 UTC [2706645] STATEMENT:  /*+TidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.875 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.875 UTC [2706645] STATEMENT:  /*+TidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.875 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.875 UTC [2706645] STATEMENT:  /*+TidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.876 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.876 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.876 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.876 UTC [2706645] STATEMENT:  /*+NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.876 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.876 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.876 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.876 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.877 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.877 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.877 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.877 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.877 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.877 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.877 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.877 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.877 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.877 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.878 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.878 UTC [2706645] STATEMENT:  /*+NoSeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.878 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.878 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.878 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.878 UTC [2706645] STATEMENT:  /*+NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.878 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.878 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.878 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.878 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.879 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.879 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.879 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.879 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.879 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.879 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.879 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.879 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.880 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.880 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.880 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.880 UTC [2706645] STATEMENT:  /*+NoIndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.880 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.880 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.880 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.880 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.880 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.880 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.881 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.881 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.881 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.881 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.881 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.881 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.881 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.881 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.881 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.881 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.882 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.882 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.882 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.882 UTC [2706645] STATEMENT:  /*+NoBitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.882 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.882 UTC [2706645] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.882 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.882 UTC [2706645] STATEMENT:  /*+NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.883 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.883 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.883 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.883 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.883 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.883 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.883 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.883 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.883 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.883 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.884 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.884 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.884 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.884 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.884 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.884 UTC [2706645] STATEMENT:  /*+NoTidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.885 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.885 UTC [2706645] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)' AND t1.id < 10 AND t2.id < 10;
2023-07-22 05:02:24.885 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.885 UTC [2706645] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 05:02:24.885 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.885 UTC [2706645] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 05:02:24.888 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.888 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.888 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.888 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.888 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.888 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.889 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.889 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.889 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.889 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.890 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.890 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.890 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.890 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.891 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.891 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.892 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.892 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.893 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.893 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.894 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.894 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.894 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.894 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.895 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.895 UTC [2706645] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.896 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.896 UTC [2706645] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.896 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.896 UTC [2706645] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.897 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.897 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.897 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.897 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.898 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.898 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.898 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.898 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.899 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.899 UTC [2706645] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.899 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.899 UTC [2706645] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.900 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.900 UTC [2706645] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.900 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.900 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.900 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.900 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.900 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.900 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.900 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.900 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.901 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.901 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:02:24.902 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.902 UTC [2706645] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.902 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.902 UTC [2706645] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.902 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.902 UTC [2706645] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.903 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.903 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.903 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.903 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.903 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.903 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.903 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.903 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.903 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.903 UTC [2706645] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.903 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.903 UTC [2706645] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.904 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.904 UTC [2706645] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.904 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.904 UTC [2706645] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:02:24.937 UTC [2706645] LOG:  available indexes for IndexScan(ischk_d1): ischk_d1_b_idx
2023-07-22 05:02:24.937 UTC [2706645] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 05:02:24.937 UTC [2706645] LOG:  available indexes for IndexScan(ischk_d2): ischk_d2_b_idx
2023-07-22 05:02:24.937 UTC [2706645] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 05:02:24.937 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ischk ischk_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.937 UTC [2706645] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 05:02:24.939 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""t1 )	")
	IndexScan("t	2 """)
	HashJoin("""t1 )	" T3 "t	2 """)
	Leading("""t1 )	" T3 "t	2 """)
	Set(application_name "a	a	a""	a	A")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.939 UTC [2706645] STATEMENT:  /*+SeqScan("""t1 )	")IndexScan("t	2 """)HashJoin("""t1 )	"T3"t	2 """)Leading("""t1 )	"T3"t	2 """)Set(application_name"a	a	a""	a	A")*/
	EXPLAIN (COSTS false) SELECT * FROM t1 """t1 )	", t2 "t	2 """, t3 "T3" WHERE """t1 )	".id = "t	2 """.id AND """t1 )	".id = "T3".id;
2023-07-22 05:02:24.940 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_mergejoin on)
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	SeqScan(t1)
	IndexScan(t1)
	BitmapScan(t1)
	SeqScan(t2)
	IndexScan(t2)
	BitmapScan(t2)
	HashJoin(t1 t2)
	NestLoop(t1 t2)
	Leading(t1 t2)
	Set(enable_seqscan off)
	error hint:
	
2023-07-22 05:02:24.940 UTC [2706645] STATEMENT:  /*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:02:24.958 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.958 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.963 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.963 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.967 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.967 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.971 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.971 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.975 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.975 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.977 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.977 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.978 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.978 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.980 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1_3 t3_3)
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.980 UTC [2706645] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:02:24.981 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	MergeJoin(t1 t2)
	
2023-07-22 05:02:24.981 UTC [2706645] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 05:02:24.982 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t1)
	
2023-07-22 05:02:24.982 UTC [2706645] STATEMENT:  /*+Leading(t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 05:02:24.982 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 05:02:24.982 UTC [2706645] STATEMENT:  /*+
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "123456789012345678901234567890123456789012345678901234567890123" JOIN t2 ON ("123456789012345678901234567890123456789012345678901234567890123".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 05:02:24.983 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 05:02:24.983 UTC [2706645] STATEMENT:  /*+
	Leading(1234567890123456789012345678901234567890123456789012345678901234 t2 t3)
	SeqScan(1234567890123456789012345678901234567890123456789012345678901234)
	MergeJoin(1234567890123456789012345678901234567890123456789012345678901234 t2)
	Set(1234567890123456789012345678901234567890123456789012345678901234 1)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "1234567890123456789012345678901234567890123456789012345678901234" JOIN t2 ON ("1234567890123456789012345678901234567890123456789012345678901234".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 05:02:24.983 UTC [2706645] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 05:02:24.983 UTC [2706645] STATEMENT:  SET "123456789012345678901234567890123456789012345678901234567890123" TO 1;
2023-07-22 05:02:24.983 UTC [2706645] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 05:02:24.983 UTC [2706645] STATEMENT:  SET "1234567890123456789012345678901234567890123456789012345678901234" TO 1;
2023-07-22 05:02:24.983 UTC [2706645] ERROR:  1.23457e+63 is outside the valid range for parameter "cursor_tuple_fraction" (0 .. 1)
2023-07-22 05:02:24.983 UTC [2706645] STATEMENT:  SET cursor_tuple_fraction TO 1234567890123456789012345678901234567890123456789012345678901234;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_seqscan 100)
	Set(seq_page_cost on)
	
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+ Set(enable_seqscan 100)Set(seq_page_cost on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  available indexes for IndexScan(t5):
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  available indexes for IndexScan(t5): t5_id2 t5_id1
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.984 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id1 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.984 UTC [2706645] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.985 UTC [2706645] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 05:02:24.985 UTC [2706645] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.985 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.985 UTC [2706645] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.985 UTC [2706645] LOG:  available indexes for IndexScan(t5):
2023-07-22 05:02:24.985 UTC [2706645] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.985 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist5 no_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.985 UTC [2706645] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:02:24.985 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1))
	
2023-07-22 05:02:24.985 UTC [2706645] STATEMENT:  /*+Leading((t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.986 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.986 UTC [2706645] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.986 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1 t2 t3))
	
2023-07-22 05:02:24.986 UTC [2706645] STATEMENT:  /*+Leading((t1 t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.987 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.987 UTC [2706645] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id < 10;
2023-07-22 05:02:24.987 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.987 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.988 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) t4))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.988 UTC [2706645] STATEMENT:  /*+Leading((((t1 t2) t3) t4))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.989 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.989 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.989 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.989 UTC [2706645] STATEMENT:  /*+Leading((t1 (t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.990 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.990 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.990 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t3 t1) t2))
	not used hint:
	duplication hint:
	Leading(((t1 t2) t3))
	error hint:
	
2023-07-22 05:02:24.990 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 05:02:24.991 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	Leading((t1_2 t2_2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.991 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 05:02:24.991 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(((((t1 t2) t3) t1_2) t2_2))
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.991 UTC [2706645] STATEMENT:  /*+Leading(((((t1 t2) t3) t1_2) t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 05:02:24.992 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.992 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.992 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.992 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.992 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.992 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.992 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t1 t3)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.992 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.993 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.993 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.993 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.993 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.994 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.994 UTC [2706645] STATEMENT:  /*+ Leading ( ( t1 ( t2 t3 ) ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.994 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.994 UTC [2706645] STATEMENT:  /*+Leading((t1(t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.994 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("t1(t2" "t3)"))
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.994 UTC [2706645] STATEMENT:  /*+Leading(("t1(t2" "t3)"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.995 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.995 UTC [2706645] STATEMENT:  /*+ Leading ( ( ( t1 t2 ) t3 ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.995 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.995 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2)t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.995 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("(t1" "t2)t3"))
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.995 UTC [2706645] STATEMENT:  /*+Leading(("(t1" "t2)t3"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:02:24.996 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 (t3 (t4 t5)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.996 UTC [2706645] STATEMENT:  /*+Leading((t1(t2(t3(t4 t5)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:24.997 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((t5 (t4 (t3 (t2 t1)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.997 UTC [2706645] STATEMENT:  /*+Leading((t5(t4(t3(t2 t1)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:24.998 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t1 t2) t3) t4) t5))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.998 UTC [2706645] STATEMENT:  /*+Leading(((((t1 t2)t3)t4)t5))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:24.998 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t5 t4) t3) t2) t1))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.998 UTC [2706645] STATEMENT:  /*+Leading(((((t5 t4)t3)t2)t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:24.999 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 (t4 t5))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:24.999 UTC [2706645] STATEMENT:  /*+Leading(((t1 t2)(t3(t4 t5))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:25.000 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading(((t5 t4) (t3 (t2 t1))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.000 UTC [2706645] STATEMENT:  /*+Leading(((t5 t4)(t3(t2 t1))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:25.001 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) (t4 t5)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.001 UTC [2706645] STATEMENT:  /*+Leading((((t1 t2)t3)(t4 t5)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:25.001 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Leading((((t5 t4) t3) (t2 t1)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.001 UTC [2706645] STATEMENT:  /*+Leading((((t5 t4)t3)(t2 t1)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:02:25.005 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:02:25.005 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.005 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:02:25.005 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.005 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:02:25.005 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.005 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:02:25.005 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.006 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.006 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.006 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:02:25.006 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.006 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:02:25.006 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.006 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:02:25.006 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.006 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:02:25.006 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.006 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.006 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.007 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_val_id_idx
2023-07-22 05:02:25.007 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.007 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_id_idx
2023-07-22 05:02:25.007 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.007 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_id_idx
2023-07-22 05:02:25.007 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.007 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_id_idx
2023-07-22 05:02:25.007 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.007 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_id_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.007 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2):
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.008 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.008 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.009 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:02:25.009 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.009 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:02:25.009 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.009 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:02:25.009 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.009 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:02:25.009 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.009 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.009 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.009 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_id2_val
2023-07-22 05:02:25.009 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id2_val
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_val2_id
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.010 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val2_id)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.010 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.011 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.011 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.012 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.012 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.013 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:02:25.013 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.014 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.014 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.014 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:02:25.014 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.014 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 05:02:25.014 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.014 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:02:25.014 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.014 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:02:25.014 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.014 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.014 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_expr
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.015 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_expr_idx
2023-07-22 05:02:25.015 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_expr_idx
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_val_idx6
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.016 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7
2023-07-22 05:02:25.016 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_val_idx6 p2_val_idx
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7 p2_c1_val_idx
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.017 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7 p2_c2_val_idx
2023-07-22 05:02:25.017 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7 p2_c3_val_idx
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7 p2_c4_val_idx
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7 p2_c1_c1_val_idx
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7 p2_c1_c2_val_idx
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7 p2_c3_c1_val_idx
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7 p2_c3_c2_val_idx
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScanRegexp(t5): t5_val t5_pkey
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.018 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.018 UTC [2706645] LOG:  available indexes for IndexScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.018 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.018 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexScan(t5):
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_val t5_pkey
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.019 UTC [2706645] LOG:  available indexes for IndexOnlyScan(t5):
2023-07-22 05:02:25.019 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(t5): t5_val t5_pkey
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  available indexes for BitmapScan(t5):
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.020 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.020 UTC [2706645] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1): p1_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.021 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.021 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c2):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c4):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1_c1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c1_c2):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3_c1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScanRegexp(p1_c3_c2):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c2):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c4):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c2):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c1):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c2):
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.022 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.022 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.023 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.023 UTC [2706645] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c1):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c2):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c3):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c4):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c1_c1):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c1_c2):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c3_c1):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for IndexOnlyScan(p1_c3_c2):
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1): p1_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1): p1_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.024 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.024 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c2):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c4):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c2):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c3):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c4):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c1_c1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c1_c2):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c3_c1):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  available indexes for BitmapScan(p1_c3_c2):
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.025 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.025 UTC [2706645] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:02:25.029 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.029 UTC [2706645] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM t1 WHERE t1.id = 1;
2023-07-22 05:02:25.060 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.060 UTC [2706645] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ *          FROM t1 LIMIT 1"
	PL/pgSQL function testfunc() line 5 at SQL statement
2023-07-22 05:02:25.060 UTC [2706645] STATEMENT:  SELECT testfunc();
2023-07-22 05:02:25.067 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.067 UTC [2706645] CONTEXT:  SQL statement "/*+ SeqScan(t1) */ SELECT * FROM t1"
	PL/pgSQL function testfunc() line 3 at EXECUTE
2023-07-22 05:02:25.067 UTC [2706645] STATEMENT:  SELECT testfunc();
2023-07-22 05:02:25.072 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.072 UTC [2706645] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 05:02:25.080 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.080 UTC [2706645] CONTEXT:  SQL statement "SELECT  1, /*+ SeqScan(t1) */ * from t1"
	PL/pgSQL function testfunc() line 3 at PERFORM
2023-07-22 05:02:25.080 UTC [2706645] STATEMENT:  SELECT testfunc();
2023-07-22 05:02:25.092 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.092 UTC [2706645] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ v FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over SELECT rows
2023-07-22 05:02:25.092 UTC [2706645] STATEMENT:  SELECT testfunc();
2023-07-22 05:02:25.112 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.112 UTC [2706645] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ val FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 8 at FOR over EXECUTE statement
2023-07-22 05:02:25.112 UTC [2706645] STATEMENT:  SELECT testfunc();
2023-07-22 05:02:25.127 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.127 UTC [2706645] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over cursor
2023-07-22 05:02:25.127 UTC [2706645] STATEMENT:  SELECT testfunc();
2023-07-22 05:02:25.144 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.144 UTC [2706645] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 05:02:25.144 UTC [2706645] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 05:02:25.149 UTC [2706645] ERROR:  relation "ttx" does not exist at character 34
2023-07-22 05:02:25.149 UTC [2706645] QUERY:  SELECT /*+ SeqScan(t1) */ * FROM ttx ORDER BY id
2023-07-22 05:02:25.149 UTC [2706645] CONTEXT:  PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 05:02:25.149 UTC [2706645] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 05:02:25.149 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:25.149 UTC [2706645] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 05:02:28.192 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:28.192 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(t1) */ SELECT count(*) FROM t1 WHERE id < $1"
	PL/pgSQL function dynsql1(integer) line 4 at EXECUTE
2023-07-22 05:02:28.192 UTC [2706645] STATEMENT:  SELECT dynsql1(9000);
2023-07-22 05:02:31.220 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1): p1_c1_pkey
2023-07-22 05:02:31.220 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:02:31.220 UTC [2706645] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:02:31.220 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:02:31.220 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:02:31.220 UTC [2706645] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:02:31.220 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:02:31.220 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:02:31.220 UTC [2706645] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:02:31.221 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c1 p1_c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:31.221 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:02:31.221 UTC [2706645] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:02:31.221 UTC [2706645] LOG:  available indexes for IndexScan(p1_c2): p1_c2_pkey
2023-07-22 05:02:31.221 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:02:31.221 UTC [2706645] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:02:31.221 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c2 p1_c2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:31.221 UTC [2706645] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:02:31.221 UTC [2706645] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:02:32.230 UTC [2706645] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 05:02:32.230 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.230 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 05:02:32.230 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.230 UTC [2706645] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 05:02:32.230 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.230 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 05:02:32.230 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.230 UTC [2706645] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 05:02:32.230 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.231 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 05:02:32.231 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.231 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 05:02:32.231 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.231 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 05:02:32.231 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.231 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 05:02:32.231 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.233 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.233 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.235 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 05:02:32.235 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.237 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 05:02:32.237 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.238 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 05:02:32.238 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.238 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.238 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.244 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 05:02:32.244 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.245 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.245 UTC [2706645] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.246 UTC [2706645] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 05:02:32.246 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.246 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 05:02:32.246 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.247 UTC [2706645] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 05:02:32.247 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.248 UTC [2706645] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:02:32.248 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.248 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:02:32.248 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.248 UTC [2706645] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 05:02:32.248 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.248 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 05:02:32.248 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.249 UTC [2706645] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 05:02:32.249 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.249 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:02:32.249 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.249 UTC [2706645] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:02:32.249 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.249 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 05:02:32.249 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.249 UTC [2706645] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 05:02:32.249 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.249 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.249 UTC [2706645] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:02:32.250 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 05:02:32.250 UTC [2706645] STATEMENT:  /*+ Rows() */ SELECT 1;
2023-07-22 05:02:32.251 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 05:02:32.251 UTC [2706645] STATEMENT:  /*+ Rows(x) */ SELECT 1;
2023-07-22 05:02:32.262 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.262 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 #99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.272 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.272 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 +99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.283 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.283 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 -99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.293 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.293 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 *99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.304 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.01)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.304 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 *0.01) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.314 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #aa)
	
2023-07-22 05:02:32.314 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 #aa) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.324 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 /99)
	
2023-07-22 05:02:32.324 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 /99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.335 UTC [2706645] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999) 
2023-07-22 05:02:32.335 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99999)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.335 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 -99999) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:02:32.357 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #22)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.357 UTC [2706645] STATEMENT:  /*+ Rows(t1 t2 #22) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 05:02:32.368 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t3 *10)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.368 UTC [2706645] STATEMENT:  /*+ Rows(t1 t3 *10) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 05:02:32.383 UTC [2706645] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:32.383 UTC [2706645] STATEMENT:  /*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;
2023-07-22 05:02:33.243 UTC [2706727] ERROR:  extension "pg_hint_plan" must be installed in schema "hint_plan"
2023-07-22 05:02:33.243 UTC [2706727] STATEMENT:  CREATE EXTENSION pg_hint_plan SCHEMA other_schema;
2023-07-22 05:02:33.271 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.271 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.275 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.275 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.276 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.276 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) SELECT c1, c2 AS c_2 /*+SeqScan(t1)*/ FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.294 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.294 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.295 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.295 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.334 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.334 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) SELECT c1 FROM s1.t1;
2023-07-22 05:02:33.348 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.348 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.363 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.363 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 OR t1.c1 = 0;
2023-07-22 05:02:33.380 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.380 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.381 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.381 UTC [2706727] STATEMENT:  /*+ Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.382 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.382 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.382 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.382 UTC [2706727] STATEMENT:  /*+ Set (enable_indexscan"off") Set (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.383 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.383 UTC [2706727] STATEMENT:  /*+Set ( enable_indexscan"off")Set ( enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.384 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.384 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off" ) Set(enable_bitmapscan"off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.385 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.385 UTC [2706727] STATEMENT:  /*+Set( enable_indexscan "off" )Set( enable_bitmapscan "off" )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.385 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.385 UTC [2706727] STATEMENT:  /*+ Set ( enable_indexscan "off" ) Set ( enable_bitmapscan "off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.386 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.386 UTC [2706727] STATEMENT:  /*+	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.387 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.387 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.388 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.388 UTC [2706727] STATEMENT:  /*+	Set	(enable_indexscan"off")	Set	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.388 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.388 UTC [2706727] STATEMENT:  /*+Set	(	enable_indexscan"off")Set	(	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.389 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.389 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off"	)	Set(enable_bitmapscan"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.390 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.390 UTC [2706727] STATEMENT:  /*+Set(	enable_indexscan	"off"	)Set(	enable_bitmapscan	"off"	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.391 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.391 UTC [2706727] STATEMENT:  /*+	Set	(	enable_indexscan	"off"	)	Set	(	enable_bitmapscan	"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.391 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.391 UTC [2706727] STATEMENT:  /*+
	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.392 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.392 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.393 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.393 UTC [2706727] STATEMENT:  /*+
	Set
	(enable_indexscan"off")
	Set
	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.394 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.394 UTC [2706727] STATEMENT:  /*+Set
	(
	enable_indexscan"off")Set
	(
	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.394 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.394 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off"
	)
	Set(enable_bitmapscan"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.395 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.395 UTC [2706727] STATEMENT:  /*+Set(
	enable_indexscan
	"off"
	)Set(
	enable_bitmapscan
	"off"
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.396 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.396 UTC [2706727] STATEMENT:  /*+
	Set
	(
	enable_indexscan
	"off"
	)
	Set
	(
	enable_bitmapscan
	"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.397 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.397 UTC [2706727] STATEMENT:  /*+ 	
		 Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.397 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.397 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.398 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.398 UTC [2706727] STATEMENT:  /*+ 	
		 Set 	
		 (enable_indexscan"off") 	
		 Set 	
		 (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.399 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.399 UTC [2706727] STATEMENT:  /*+Set 	
		 ( 	
		 enable_indexscan"off")Set 	
		 ( 	
		 enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.400 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.400 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan"off" 	
		 ) 	
		 Set(enable_bitmapscan"off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.401 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.401 UTC [2706727] STATEMENT:  /*+Set( 	
		 enable_indexscan 	
		 "off" 	
		 )Set( 	
		 enable_bitmapscan 	
		 "off" 	
		 )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.401 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.401 UTC [2706727] STATEMENT:  /*+ 	
		 Set 	
		 ( 	
		 enable_indexscan 	
		 "off" 	
		 ) 	
		 Set 	
		 ( 	
		 enable_bitmapscan 	
		 "off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.402 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.402 UTC [2706727] STATEMENT:  /*+SeqScan(t)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 05:02:33.403 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.403 UTC [2706727] STATEMENT:  /*+SeqScan(ttt)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 05:02:33.404 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.404 UTC [2706727] STATEMENT:  /*+SeqScan("t")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 05:02:33.404 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.404 UTC [2706727] STATEMENT:  /*+SeqScan("ttt")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 05:02:33.405 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.405 UTC [2706727] STATEMENT:  /*+SeqScan(T)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 05:02:33.406 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.406 UTC [2706727] STATEMENT:  /*+SeqScan(TTT)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 05:02:33.406 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.406 UTC [2706727] STATEMENT:  /*+SeqScan("T")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 05:02:33.407 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.407 UTC [2706727] STATEMENT:  /*+SeqScan("TTT")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 05:02:33.408 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("(")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.408 UTC [2706727] STATEMENT:  /*+SeqScan("(")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "(" WHERE "(".c1 = 1;
2023-07-22 05:02:33.409 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:02:33.409 UTC [2706727] STATEMENT:  /*+SeqScan())*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 05:02:33.410 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.410 UTC [2706727] STATEMENT:  /*+SeqScan(")")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 05:02:33.411 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")))")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.411 UTC [2706727] STATEMENT:  /*+SeqScan(")))")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")))" WHERE ")))".c1 = 1;
2023-07-22 05:02:33.412 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.412 UTC [2706727] STATEMENT:  /*+SeqScan("""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """" WHERE """".c1 = 1;
2023-07-22 05:02:33.413 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""""""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.413 UTC [2706727] STATEMENT:  /*+SeqScan("""""""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """""""" WHERE """""""".c1 = 1;
2023-07-22 05:02:33.414 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:02:33.414 UTC [2706727] STATEMENT:  /*+SeqScan( )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 05:02:33.414 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(" ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.414 UTC [2706727] STATEMENT:  /*+SeqScan(" ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 05:02:33.415 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("   ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.415 UTC [2706727] STATEMENT:  /*+SeqScan("   ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "   " WHERE "   ".c1 = 1;
2023-07-22 05:02:33.416 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:02:33.416 UTC [2706727] STATEMENT:  /*+SeqScan(	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 05:02:33.417 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.417 UTC [2706727] STATEMENT:  /*+SeqScan("	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 05:02:33.417 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("			")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.417 UTC [2706727] STATEMENT:  /*+SeqScan("			")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "			" WHERE "			".c1 = 1;
2023-07-22 05:02:33.418 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:02:33.418 UTC [2706727] STATEMENT:  /*+SeqScan(
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 05:02:33.419 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.419 UTC [2706727] STATEMENT:  /*+SeqScan("
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 05:02:33.420 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	
	
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.420 UTC [2706727] STATEMENT:  /*+SeqScan("
	
	
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	
	
	" WHERE "
	
	
	".c1 = 1;
2023-07-22 05:02:33.421 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.421 UTC [2706727] STATEMENT:  /*+SeqScan(Set)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 05:02:33.422 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.422 UTC [2706727] STATEMENT:  /*+SeqScan("Set")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 05:02:33.422 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("Set SeqScan Leading")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.422 UTC [2706727] STATEMENT:  /*+SeqScan("Set SeqScan Leading")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set SeqScan Leading" WHERE "Set SeqScan Leading".c1 = 1;
2023-07-22 05:02:33.423 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.423 UTC [2706727] STATEMENT:  /*+SeqScan(あ)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 05:02:33.424 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.424 UTC [2706727] STATEMENT:  /*+SeqScan(あいう)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 05:02:33.424 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.424 UTC [2706727] STATEMENT:  /*+SeqScan("あ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 05:02:33.425 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.425 UTC [2706727] STATEMENT:  /*+SeqScan("あいう")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 05:02:33.428 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan("tT()"" 	
	Setあ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.428 UTC [2706727] STATEMENT:  /*+SeqScan("tT()"" 	
	Setあ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "tT()"" 	
	Setあ" WHERE "tT()"" 	
	Setあ".c1 = 1;
2023-07-22 05:02:33.428 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(a123456789b123456789c123456789d123456789e123456789f123)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.428 UTC [2706727] STATEMENT:  /*+SeqScan(a123456789b123456789c123456789d123456789e123456789f123)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "123456789012345678901234567890123456789012345678901234" WHERE "123456789012345678901234567890123456789012345678901234".c1 = 1;
2023-07-22 05:02:33.429 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.429 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)Set enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.430 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.430 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan off Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.431 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.431 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan "off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.432 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.432 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)SeqScan("")Set(enable_bitmapscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.432 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.432 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)NoSet(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.433 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.433 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)"Set"(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.439 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.439 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.442 UTC [2706727] ERROR:  invalid value for parameter "pg_hint_plan.debug_print": "enable"
2023-07-22 05:02:33.442 UTC [2706727] HINT:  Available values: off, on, detailed, verbose.
2023-07-22 05:02:33.442 UTC [2706727] STATEMENT:  SET pg_hint_plan.debug_print TO enable;
2023-07-22 05:02:33.451 UTC [2706727] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:02:33.451 UTC [2706727] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:02:33.451 UTC [2706727] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:02:33.452 UTC [2706727] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:02:33.452 UTC [2706727] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:02:33.452 UTC [2706727] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:02:33.455 UTC [2706727] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:02:33.455 UTC [2706727] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:02:33.456 UTC [2706727] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:02:33.456 UTC [2706727] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:02:33.457 UTC [2706727] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:02:33.457 UTC [2706727] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:02:33.457 UTC [2706727] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:02:33.457 UTC [2706727] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:02:33.457 UTC [2706727] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:02:33.457 UTC [2706727] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:02:33.459 UTC [2706727] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "fatal"
2023-07-22 05:02:33.459 UTC [2706727] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 05:02:33.459 UTC [2706727] STATEMENT:  SET pg_hint_plan.parse_messages TO fatal;
2023-07-22 05:02:33.459 UTC [2706727] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "panic"
2023-07-22 05:02:33.459 UTC [2706727] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 05:02:33.459 UTC [2706727] STATEMENT:  SET pg_hint_plan.parse_messages TO panic;
2023-07-22 05:02:33.460 UTC [2706727] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "on"
2023-07-22 05:02:33.460 UTC [2706727] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 05:02:33.460 UTC [2706727] STATEMENT:  SET pg_hint_plan.parse_messages TO on;
2023-07-22 05:02:33.466 UTC [2706727] ERROR:  parameter "pg_hint_plan.enable_hint_table" requires a Boolean value
2023-07-22 05:02:33.466 UTC [2706727] STATEMENT:  SET pg_hint_plan.enable_hint_table TO enable;
2023-07-22 05:02:33.483 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.483 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.483 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(no_table)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.483 UTC [2706727] STATEMENT:  /*+SeqScan(no_table)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.485 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	error hint:
	
2023-07-22 05:02:33.485 UTC [2706727] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.486 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	error hint:
	
2023-07-22 05:02:33.486 UTC [2706727] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.486 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	IndexScan(t1)
	error hint:
	
2023-07-22 05:02:33.486 UTC [2706727] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.487 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_indexscan enable)
	
2023-07-22 05:02:33.487 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan enable)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.494 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.494 UTC [2706727] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:02:33.496 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.496 UTC [2706727] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:02:33.498 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.498 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.499 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.499 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.499 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.499 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.500 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.500 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.500 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.500 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.501 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.501 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.503 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.503 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.504 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.504 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:02:33.506 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.506 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:02:33.508 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.508 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.508 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.508 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.509 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.509 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.509 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.509 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.510 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.510 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.510 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.510 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.512 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.512 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:02:33.523 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.523 UTC [2706727] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:02:33.525 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.525 UTC [2706727] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:02:33.527 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.527 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.527 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.527 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.528 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.528 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.529 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.529 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.529 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.529 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.530 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.530 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.532 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.532 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.533 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.533 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:02:33.539 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.539 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:02:33.540 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.540 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.541 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.541 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.542 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.542 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.542 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.542 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.543 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.543 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.544 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.544 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.546 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.546 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:02:33.556 UTC [2706727] ERROR:  prepared statement "p1" does not exist
2023-07-22 05:02:33.556 UTC [2706727] STATEMENT:  EXECUTE p1;
2023-07-22 05:02:33.559 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.559 UTC [2706727] STATEMENT:  /*+Set(enable_seqscan off)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.559 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.559 UTC [2706727] STATEMENT:  /*+SeqScan(t1)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.564 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1 t1)
	
2023-07-22 05:02:33.564 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:02:33.569 UTC [2706727] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 05:02:33.569 UTC [2706727] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 05:02:33.569 UTC [2706727] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.571 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.571 UTC [2706727] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.574 UTC [2706727] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 05:02:33.574 UTC [2706727] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 05:02:33.574 UTC [2706727] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.578 UTC [2706727] ERROR:  prepared statement "p2" does not exist
2023-07-22 05:02:33.578 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 05:02:33.578 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.578 UTC [2706727] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.581 UTC [2706727] ERROR:  prepared statement "p2" does not exist
2023-07-22 05:02:33.581 UTC [2706727] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 05:02:33.585 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.585 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.588 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.588 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.591 UTC [2706727] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.591 UTC [2706727] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.599 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.599 UTC [2706728] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.599 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.599 UTC [2706728] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.600 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.600 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.600 UTC [2706728] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.600 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.600 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.600 UTC [2706728] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.600 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.600 UTC [2706728] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.602 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.602 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.602 UTC [2706728] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.602 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.602 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.602 UTC [2706728] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.602 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.602 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.602 UTC [2706728] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.602 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.602 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.602 UTC [2706728] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.603 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.603 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.603 UTC [2706728] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.603 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.603 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.603 UTC [2706728] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.603 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.603 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.603 UTC [2706728] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.603 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.603 UTC [2706728] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:02:33.603 UTC [2706728] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.603 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.603 UTC [2706728] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:02:33.605 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.605 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.605 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.606 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.606 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.607 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.607 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.607 UTC [2706728] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:02:33.607 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	HashJoin(st_1 st_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.607 UTC [2706728] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:02:33.609 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.609 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.609 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:02:33.609 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.609 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:02:33.610 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.610 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.610 UTC [2706728] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.611 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st_1 st_2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.611 UTC [2706728] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.612 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.612 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.612 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.612 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.612 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.615 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.615 UTC [2706728] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 05:02:33.615 UTC [2706728] STATEMENT:  EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.616 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.616 UTC [2706728] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 05:02:33.616 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.617 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 05:02:33.617 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.617 UTC [2706728] ERROR:  function recall_planner_one_t(integer) does not exist
2023-07-22 05:02:33.617 UTC [2706728] STATEMENT:  DROP FUNCTION recall_planner_one_t(int);
2023-07-22 05:02:33.618 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.618 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.618 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.619 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 05:02:33.619 UTC [2706728] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.620 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.620 UTC [2706728] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:02:33.620 UTC [2706728] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.620 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	MergeJoin(t_1 t_2)
	error hint:
	
2023-07-22 05:02:33.620 UTC [2706728] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:02:33.634 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.634 UTC [2706728] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 05:02:33.635 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.635 UTC [2706728] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 05:02:33.650 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.650 UTC [2706728] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 05:02:33.651 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.651 UTC [2706728] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 05:02:33.657 UTC [2706728] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.657 UTC [2706728] STATEMENT:  EXPLAIN EXECUTE test_query(array[1,2,3]);
2023-07-22 05:02:33.693 UTC [2706616] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:02:33.695 UTC [2706616] LOG:  parameter "session_preload_libraries" changed to "pg_hint_plan"
2023-07-22 05:02:33.701 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.701 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.702 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.702 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 05:02:33.702 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.702 UTC [2706732] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 05:02:33.703 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.703 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.704 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.704 UTC [2706732] STATEMENT:  /*+SeqScan(s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.705 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.705 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.705 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.705 UTC [2706732] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.707 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.707 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = 1 AND t1.c1 = t2.c1;
2023-07-22 05:02:33.710 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.710 UTC [2706732] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:33.711 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.711 UTC [2706732] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 05:02:33.712 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(s2t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.712 UTC [2706732] STATEMENT:  /*+BitmapScan(s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 05:02:33.714 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.714 UTC [2706732] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 WHERE s1.t1.c1 = 1) FROM s1.t1 WHERE s1.t1.c1 = 1;
2023-07-22 05:02:33.715 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t11)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.715 UTC [2706732] STATEMENT:  /*+BitmapScan(t11)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 05:02:33.716 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t12)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.716 UTC [2706732] STATEMENT:  /*+BitmapScan(t12)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 05:02:33.717 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.717 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.721 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.721 UTC [2706732] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE p1.c1 = 1;
2023-07-22 05:02:33.723 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ul1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.723 UTC [2706732] STATEMENT:  /*+SeqScan(ul1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 WHERE ul1.c1 = 1;
2023-07-22 05:02:33.731 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tm1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.731 UTC [2706732] STATEMENT:  /*+SeqScan(tm1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 WHERE tm1.c1 = 1;
2023-07-22 05:02:33.733 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(pg_class)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.733 UTC [2706732] STATEMENT:  /*+SeqScan(pg_class)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class WHERE oid = 1;
2023-07-22 05:02:33.734 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(ft1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.734 UTC [2706732] STATEMENT:  /*+SeqScan(ft1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() AS ft1 WHERE ft1.c1 = 1;
2023-07-22 05:02:33.735 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(val1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.735 UTC [2706732] STATEMENT:  /*+SeqScan(val1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 05:02:33.735 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.735 UTC [2706732] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 05:02:33.736 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(c1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.736 UTC [2706732] STATEMENT:  /*+SeqScan(c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(c1) FROM s1.t1 WHERE t1.c1 = 1)
	SELECT * FROM s1.t1, c1 WHERE t1.c1 = 1 AND t1.c1 = c1.c1;
2023-07-22 05:02:33.737 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(v1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.737 UTC [2706732] STATEMENT:  /*+SeqScan(v1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 WHERE v1.c1 = 1;
2023-07-22 05:02:33.737 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.737 UTC [2706732] STATEMENT:  /*+SeqScan(s1)*/
	EXPLAIN (COSTS false) SELECT * FROM (SELECT * FROM s1.t1 WHERE t1.c1 = 1) AS s1 WHERE s1.c1 = 1;
2023-07-22 05:02:33.741 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.741 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.741 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.741 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.741 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.741 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.741 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.741 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.742 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.742 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.745 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.745 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.745 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.745 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.745 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.745 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.745 UTC [2706732] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:02:33.745 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.746 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.746 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.746 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.746 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.746 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.746 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:33.747 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.747 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:33.747 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.747 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:33.748 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.748 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:33.749 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.749 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:33.749 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.749 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:33.749 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.749 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:33.751 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.751 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:02:33.751 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.751 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:02:33.751 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.751 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:02:33.751 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.751 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:02:33.752 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.752 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:02:33.754 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.754 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.754 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.754 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.754 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.754 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.754 UTC [2706732] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:02:33.754 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.754 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.754 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.755 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.755 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.755 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.755 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:33.757 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.757 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:02:33.757 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.757 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:02:33.757 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.757 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:02:33.757 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.757 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:02:33.757 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.757 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:02:33.761 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.761 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.761 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.761 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.761 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.761 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.761 UTC [2706732] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:02:33.761 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.762 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.762 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.762 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.762 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.763 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.763 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.764 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.764 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:33.764 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.764 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:33.764 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.764 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:33.764 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.764 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:33.764 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.764 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:33.765 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.765 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.765 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.765 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.765 UTC [2706732] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 05:02:33.765 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.765 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.765 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.766 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.766 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.768 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.768 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.768 UTC [2706732] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:02:33.768 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.768 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.768 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.768 UTC [2706732] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 05:02:33.768 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.769 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.769 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.769 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.769 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.769 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.769 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.769 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.769 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.769 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.769 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.771 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.771 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.771 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.771 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.771 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.771 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.771 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.771 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.771 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.771 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.771 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.771 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.772 UTC [2706732] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:02:33.772 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.772 UTC [2706732] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:02:33.772 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.772 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.772 UTC [2706732] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.773 UTC [2706732] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:02:33.773 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.773 UTC [2706732] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:02:33.773 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.774 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r1)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.774 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.775 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.775 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.775 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.775 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.775 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.775 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.777 UTC [2706732] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:02:33.777 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.777 UTC [2706732] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:02:33.777 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.777 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.777 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.777 UTC [2706732] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:02:33.777 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.777 UTC [2706732] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:02:33.777 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.777 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.777 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.779 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.779 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.779 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.779 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.779 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.779 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.779 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.779 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.779 UTC [2706732] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:02:33.779 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.780 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.780 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.782 UTC [2706732] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:02:33.782 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.782 UTC [2706732] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:02:33.782 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.782 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.782 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.782 UTC [2706732] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:02:33.782 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.782 UTC [2706732] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:02:33.782 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.783 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.783 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.783 UTC [2706732] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:02:33.783 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.783 UTC [2706732] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:02:33.783 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.783 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.783 UTC [2706732] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.786 UTC [2706732] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:02:33.786 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.786 UTC [2706732] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:02:33.786 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.786 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.786 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.786 UTC [2706732] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:02:33.786 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.786 UTC [2706732] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:02:33.786 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.786 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.786 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.787 UTC [2706732] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:02:33.787 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.787 UTC [2706732] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 05:02:33.787 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.787 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.787 UTC [2706732] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.788 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.788 UTC [2706732] STATEMENT:  /*+BitmapScan(v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:33.788 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(v1t1)
	BitmapScan(v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.788 UTC [2706732] STATEMENT:  /*+SeqScan(v1t1)BitmapScan(v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:33.789 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(r4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.789 UTC [2706732] STATEMENT:  /*+BitmapScan(r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.790 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r4t1)
	BitmapScan(r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.790 UTC [2706732] STATEMENT:  /*+SeqScan(r4t1)BitmapScan(r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.790 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.790 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 05:02:33.790 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.790 UTC [2706732] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 05:02:33.790 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 05:02:33.790 UTC [2706732] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.790 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.790 UTC [2706732] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.791 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.791 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:02:33.791 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.791 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.791 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.791 UTC [2706732] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.791 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.791 UTC [2706732] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:02:33.791 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.791 UTC [2706732] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 05:02:33.791 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.791 UTC [2706732] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.792 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.792 UTC [2706732] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.792 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.792 UTC [2706732] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid IN ('(1,1)', '(2,2)', '(3,3)');
2023-07-22 05:02:33.792 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.792 UTC [2706732] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:02:33.792 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.792 UTC [2706732] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.792 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.792 UTC [2706732] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.793 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.793 UTC [2706732] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:02:33.793 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.793 UTC [2706732] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 05:02:33.793 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.793 UTC [2706732] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.793 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.793 UTC [2706732] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.793 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.793 UTC [2706732] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.794 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.794 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.794 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.794 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:02:33.794 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.794 UTC [2706732] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.794 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.794 UTC [2706732] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:02:33.795 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_i3
2023-07-22 05:02:33.795 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.795 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.795 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.795 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_i3 ti1_i2
2023-07-22 05:02:33.795 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.795 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.795 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_i3
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_i3 ti1_i2
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3 ti1_i2
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:02:33.796 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:02:33.796 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.796 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:02:33.802 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_btree
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_hash
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_gist
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_gin
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.802 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.802 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_expr
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_uniq
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_multi
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_ts
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.803 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.803 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_c2_key
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_hash
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.804 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.804 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_gist
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_gin
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_expr
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_uniq
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.805 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.805 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_multi
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_ts
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_c2_key
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.806 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.806 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:02:33.807 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree
2023-07-22 05:02:33.807 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.807 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.807 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.807 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_hash
2023-07-22 05:02:33.807 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.807 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.807 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.807 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gist
2023-07-22 05:02:33.807 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 05:02:33.807 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.807 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 05:02:33.808 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gin
2023-07-22 05:02:33.808 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.808 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.808 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.808 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_expr
2023-07-22 05:02:33.808 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 05:02:33.808 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.808 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 05:02:33.808 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 05:02:33.808 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 05:02:33.808 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.808 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 05:02:33.809 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_uniq
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.809 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.809 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_multi
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.809 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.809 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_ts
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 05:02:33.809 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 05:02:33.809 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.809 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.809 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.810 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_c2_key
2023-07-22 05:02:33.810 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 05:02:33.810 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.810 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 05:02:33.810 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 05:02:33.810 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.810 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.810 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.813 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 05:02:33.813 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.813 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.813 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.816 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 05:02:33.816 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.816 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.816 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.819 UTC [2706732] LOG:  available indexes for IndexScan(ti1):
2023-07-22 05:02:33.819 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.819 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.819 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.821 UTC [2706732] LOG:  available indexes for BitmapScan(ti1):
2023-07-22 05:02:33.821 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.822 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.822 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.824 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1):
2023-07-22 05:02:33.824 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.824 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.824 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:02:33.827 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.827 UTC [2706732] STATEMENT:  /*+TidScan(t1)*/ EXPLAIN (COSTS true) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:33.830 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.830 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE c1 = 100;
2023-07-22 05:02:33.831 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.831 UTC [2706732] STATEMENT:  /*+SeqScan(t1)BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.831 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.831 UTC [2706732] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:33.832 UTC [2706732] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:02:33.832 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.832 UTC [2706732] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:02:33.832 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.832 UTC [2706732] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 05:02:33.832 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.832 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	TidScan(b4t1)
	not used hint:
	SeqScan(b1t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.832 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.833 UTC [2706732] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:02:33.833 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.833 UTC [2706732] LOG:  available indexes for BitmapScan(b4t2): t2_pkey
2023-07-22 05:02:33.833 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.833 UTC [2706732] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 05:02:33.833 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.833 UTC [2706732] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 05:02:33.833 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.833 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	SeqScan(b2t2)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	BitmapScan(b4t2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.833 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.834 UTC [2706732] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:02:33.834 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.834 UTC [2706732] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:02:33.834 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.834 UTC [2706732] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 05:02:33.834 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.834 UTC [2706732] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 05:02:33.834 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.834 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.834 UTC [2706732] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:02:33.834 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.834 UTC [2706732] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.835 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.835 UTC [2706732] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.835 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.835 UTC [2706732] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.835 UTC [2706732] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 05:02:33.835 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.835 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.835 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.836 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.836 UTC [2706732] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.836 UTC [2706732] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 05:02:33.836 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.836 UTC [2706732] LOG:  available indexes for IndexScan(p1c1): p1c1_pkey
2023-07-22 05:02:33.836 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.836 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.836 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:02:33.836 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.836 UTC [2706732] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.837 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.837 UTC [2706732] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.838 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.838 UTC [2706732] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.838 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2c1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.838 UTC [2706732] STATEMENT:  /*+IndexScan(p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.841 UTC [2706732] LOG:  available indexes for IndexScan(p1): p1_parent
2023-07-22 05:02:33.841 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 05:02:33.841 UTC [2706732] LOG:  available indexes for IndexScan(p1c1): p1c1_c4_expr_idx
2023-07-22 05:02:33.841 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 05:02:33.841 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_parent)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.841 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 05:02:33.844 UTC [2706732] LOG:  available indexes for IndexScan(p1): p1_i2
2023-07-22 05:02:33.844 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:02:33.844 UTC [2706732] LOG:  available indexes for IndexScan(p1c1):
2023-07-22 05:02:33.844 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:02:33.844 UTC [2706732] LOG:  available indexes for IndexScan(p1c2):
2023-07-22 05:02:33.844 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:02:33.844 UTC [2706732] LOG:  available indexes for IndexScan(p1c3):
2023-07-22 05:02:33.844 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:02:33.844 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.844 UTC [2706732] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:02:33.847 UTC [2706732] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:02:33.847 UTC [2706732] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.847 UTC [2706732] LOG:  available indexes for IndexScan(p2c1): p2c1_pkey
2023-07-22 05:02:33.847 UTC [2706732] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.847 UTC [2706732] LOG:  available indexes for IndexScan(p2c1c1):
2023-07-22 05:02:33.847 UTC [2706732] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.847 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.847 UTC [2706732] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:02:33.850 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	IndexScan(ti1)
	error hint:
	
2023-07-22 05:02:33.850 UTC [2706732] STATEMENT:  /*+IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.850 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 05:02:33.850 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.851 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 05:02:33.851 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.851 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	BitmapScan(ti1)
	IndexScan(ti1)
	error hint:
	
2023-07-22 05:02:33.851 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1) IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.851 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 05:02:33.851 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.851 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	BitmapScan(ti1 ti1_hash)
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 05:02:33.851 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.851 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.851 UTC [2706732] STATEMENT:  /*+SeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+SeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+SeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+IndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_btree ti1_pkey
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.852 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.852 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  available indexes for BitmapScan(ti1): ti1_btree ti1_pkey
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	TidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+TidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+TidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+TidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+NoSeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.853 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.853 UTC [2706732] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoIndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoBitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.854 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.854 UTC [2706732] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+NoTidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.855 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.855 UTC [2706732] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree ti1_pkey
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:02:33.855 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.855 UTC [2706732] STATEMENT:  /*+NoIndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey)
	
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  available indexes for IndexScanRegexp(ti1): ti1_c2_key
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_.*_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  available indexes for IndexScanRegexp(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_i.)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  available indexes for IndexScanRegexp(ti1):
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.856 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.856 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_pkey
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 .*pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScanRegexp(p1): p1_i2 p1_i
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_i p1c1_c4_expr_idx
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1.*i)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScanRegexp(p1c1):
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  available indexes for IndexScan(ti1):
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.857 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.857 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.858 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_i2 ti1_i1
2023-07-22 05:02:33.858 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.858 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.858 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.858 UTC [2706732] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 05:02:33.858 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.858 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.858 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.858 UTC [2706732] LOG:  available indexes for IndexScan(ti1):
2023-07-22 05:02:33.858 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.858 UTC [2706732] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist1 not_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.858 UTC [2706732] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:02:33.865 UTC [2706616] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:02:33.866 UTC [2706616] LOG:  parameter "session_preload_libraries" removed from configuration file, reset to default
2023-07-22 05:02:33.899 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.899 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.900 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.900 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:02:33.901 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.901 UTC [2706804] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:02:33.902 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.902 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.903 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s1.t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.903 UTC [2706804] STATEMENT:  /*+HashJoin(s1.t1 s1.t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.904 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.904 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.905 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.905 UTC [2706804] STATEMENT:  /*+HashJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.906 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.906 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.908 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 05:02:33.908 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:33.909 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.909 UTC [2706804] STATEMENT:  /*+HashJoin(s1.t1 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:33.911 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(s2t1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.911 UTC [2706804] STATEMENT:  /*+HashJoin(t1 s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 05:02:33.914 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.914 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.915 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.915 UTC [2706804] STATEMENT:  /*+NestLoop(st1 st2)HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.917 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.917 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.918 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 05:02:33.918 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.919 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	HashJoin(t2 t2)
	
2023-07-22 05:02:33.919 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t1)HashJoin(t2 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.923 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1 t2 t2)
	
2023-07-22 05:02:33.923 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:33.924 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.924 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.928 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.928 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.929 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.929 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.935 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.935 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.936 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.936 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 05:02:33.937 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.937 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.938 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.938 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.938 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(*VALUES* t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.938 UTC [2706804] STATEMENT:  /*+NestLoop(*VALUES* t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.939 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(c1 t1)
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.939 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)HashJoin(t1 c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 05:02:33.940 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.940 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.940 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.940 UTC [2706804] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.941 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.941 UTC [2706804] STATEMENT:  /*+MergeJoin(t1 t2)NestLoop(st1 st2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 05:02:33.945 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.945 UTC [2706804] STATEMENT:  /*+HashJoin(t1 st2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:02:33.946 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.946 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:02:33.949 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.949 UTC [2706804] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:02:33.952 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.952 UTC [2706804] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:02:33.954 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.954 UTC [2706804] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:02:33.955 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.955 UTC [2706804] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:02:33.957 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.957 UTC [2706804] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.960 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.960 UTC [2706804] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.964 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.964 UTC [2706804] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:33.972 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.972 UTC [2706804] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 05:02:33.973 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(bmt1 c1)
	Leading(c1 bmt1)
	not used hint:
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.973 UTC [2706804] STATEMENT:  /*+
	Leading(c1 bmt1)
	HashJoin(bmt1 c1)
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:33.975 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.975 UTC [2706804] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.978 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	MergeJoin(bmt4 c1)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	HashJoin(bmt3 bmt4 c1)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.978 UTC [2706804] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.980 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	MergeJoin(bmt4 c1)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.980 UTC [2706804] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:33.982 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r1 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.982 UTC [2706804] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r1)
	MergeJoin(t4 t3 t2 t1 r1)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.983 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	NestLoop(b1t2 b1t3 b1t4)
	HashJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r1_)
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.983 UTC [2706804] STATEMENT:  /*+
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	MergeJoin(b1t4 b1t3 b1t2 b1t1 r1_)
	HashJoin(b1t4 b1t3 b1t2 b1t1)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.985 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.985 UTC [2706804] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.986 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.986 UTC [2706804] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.988 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.988 UTC [2706804] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.988 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.988 UTC [2706804] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.990 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.990 UTC [2706804] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.991 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.991 UTC [2706804] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.991 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.991 UTC [2706804] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.994 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b2t1 b2t2 b2t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.994 UTC [2706804] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.994 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.994 UTC [2706804] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.995 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.995 UTC [2706804] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:33.995 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 05:02:33.995 UTC [2706804] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:33.996 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.996 UTC [2706804] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:33.996 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(r4t1 r4t1)
	
2023-07-22 05:02:33.996 UTC [2706804] STATEMENT:  /*+HashJoin(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.997 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.997 UTC [2706804] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.997 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t3)
	NestLoop(t1 t2 t3)
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.997 UTC [2706804] STATEMENT:  /*+ Leading(t3 t1 t2) HashJoin(t3 t1)NestLoop(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:33.997 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	NestLoop(*VALUES* t1 t2)
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.997 UTC [2706804] STATEMENT:  /*+ Leading(*VALUES* t1 t2) HashJoin(*VALUES* t1)NestLoop(*VALUES* t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:33.998 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	HashJoin(t2 t3 t4)
	MergeJoin(t1 t2 t3 t4)
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.998 UTC [2706804] STATEMENT:  /*+ Leading(t4 t3 t2 t1) NestLoop(t4 t3)HashJoin(t4 t3 t2)MergeJoin(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:33.999 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	duplication hint:
	error hint:
	HashJoin(*VALUES* t2 t3)
	MergeJoin(*VALUES* t1 t2 t3)
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 05:02:33.999 UTC [2706804] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) NestLoop(t4 t3)HashJoin(*VALUES* t3 t2)MergeJoin(*VALUES* t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:33.999 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.999 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.999 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.999 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:33.999 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:33.999 UTC [2706804] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.000 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.000 UTC [2706804] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 05:02:34.000 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.000 UTC [2706804] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.000 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.000 UTC [2706804] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.001 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.001 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.001 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.001 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.001 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.001 UTC [2706804] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.001 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.001 UTC [2706804] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.001 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.001 UTC [2706804] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.001 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.001 UTC [2706804] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.002 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.002 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.002 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.002 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.002 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.002 UTC [2706804] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.002 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.002 UTC [2706804] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.002 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.002 UTC [2706804] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.002 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.002 UTC [2706804] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.004 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.004 UTC [2706804] STATEMENT:  /*+MergeJoin(p1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:02:34.004 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p1c1 p2c1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.004 UTC [2706804] STATEMENT:  /*+MergeJoin(p1c1 p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:02:34.005 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p2 pt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.005 UTC [2706804] STATEMENT:  /*+MergeJoin(pt1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 05:02:34.006 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p2c1 pt1_c1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.006 UTC [2706804] STATEMENT:  /*+MergeJoin(pt1_c1 p2c1)*/ /* will ignored */
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 05:02:34.006 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:02:34.006 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.006 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:02:34.006 UTC [2706804] STATEMENT:  /*+MergeJoin(t1 t2)HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.006 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:02:34.006 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+MergeJoin(t2 t1)HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+HashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+MergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NestLoop()*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1)
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NestLoop(t1)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:02:34.007 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.007 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2 t3)*/
	SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE false;
2023-07-22 05:02:34.008 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.008 UTC [2706804] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1 FULL OUTER JOIN s1.t2 ON (t1.c1 = t2.c1);
2023-07-22 05:02:34.012 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.012 UTC [2706804] STATEMENT:  /*+ nomemoize(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 05:02:34.013 UTC [2706804] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.013 UTC [2706804] STATEMENT:  /*+ nomemoize(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 05:02:34.021 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.021 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.021 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.021 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 05:02:34.022 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t_4 t_2 t_3 t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.022 UTC [2706822] STATEMENT:  /*+Leading(t_4 t_2 t_3 t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 05:02:34.023 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.023 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.023 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t4 s1.t2 s1.t3 s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.023 UTC [2706822] STATEMENT:  /*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.023 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.023 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.024 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t5 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.024 UTC [2706822] STATEMENT:  /*+Leading(t5 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.024 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.024 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.025 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t3 t1)
	
2023-07-22 05:02:34.025 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:34.026 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t1 t2 t3 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.026 UTC [2706822] STATEMENT:  /*+Leading(s1.t1 t2 t3 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:34.027 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(s2t1 t1 t3 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.027 UTC [2706822] STATEMENT:  /*+Leading(s2t1 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 05:02:34.029 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.029 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.029 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(st1 st2 st3 st4)
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.029 UTC [2706822] STATEMENT:  /*+Leading(st1 st2 st3 st4)Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.030 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.030 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.030 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4)
	
2023-07-22 05:02:34.030 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.031 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t4)
	
2023-07-22 05:02:34.031 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.031 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4 t2 t3 t1)
	
2023-07-22 05:02:34.031 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.032 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t2 t4)
	
2023-07-22 05:02:34.032 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t2 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.032 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.032 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.034 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.034 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.035 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.035 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.038 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.038 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.040 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.040 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
2023-07-22 05:02:34.041 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.041 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.042 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.042 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t1 (c1, c2, c3, c4), s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.043 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(ct4 ct3 ct2 ct1)
	Leading(st4 st3 st2 st1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.043 UTC [2706822] STATEMENT:  /*+Leading(ct4 ct3 ct2 ct1)Leading(st4 st3 st2 st1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
2023-07-22 05:02:34.045 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.045 UTC [2706822] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.046 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 v1t1_ v1t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.046 UTC [2706822] STATEMENT:  /*+Leading(t4 v1t1_ v1t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.047 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(st4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.047 UTC [2706822] STATEMENT:  /*+Leading(st4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 05:02:34.047 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.047 UTC [2706822] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 05:02:34.050 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.050 UTC [2706822] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:02:34.053 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.053 UTC [2706822] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:02:34.054 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.054 UTC [2706822] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:02:34.055 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.055 UTC [2706822] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:02:34.057 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.057 UTC [2706822] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:34.060 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.060 UTC [2706822] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:34.063 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.063 UTC [2706822] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:34.071 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.071 UTC [2706822] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 05:02:34.073 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.073 UTC [2706822] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:02:34.074 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.074 UTC [2706822] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:34.077 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.077 UTC [2706822] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:34.079 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.079 UTC [2706822] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:02:34.081 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.081 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r1) */
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.082 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.082 UTC [2706822] STATEMENT:  /*+ Leading(b1t1 b1t2 b1t3 b1t4 r1_) */
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.084 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.084 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.085 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.085 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.086 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.086 UTC [2706822] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.087 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.087 UTC [2706822] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.089 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.089 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.090 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.090 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.090 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.090 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.092 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.092 UTC [2706822] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.093 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.093 UTC [2706822] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.093 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.093 UTC [2706822] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.094 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(v1t1 v1t1)
	
2023-07-22 05:02:34.094 UTC [2706822] STATEMENT:  /*+Leading(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:34.094 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.094 UTC [2706822] STATEMENT:  /*+Leading(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:34.095 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(r4t1 r4t1)
	
2023-07-22 05:02:34.095 UTC [2706822] STATEMENT:  /*+Leading(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.095 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.095 UTC [2706822] STATEMENT:  /*+Leading(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.096 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.096 UTC [2706822] STATEMENT:  /*+ Leading(t3 t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.096 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.096 UTC [2706822] STATEMENT:  /*+ Leading(*VALUES* t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.097 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.097 UTC [2706822] STATEMENT:  /*+ Leading(t4 t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.098 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 05:02:34.098 UTC [2706822] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.098 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.098 UTC [2706822] STATEMENT:  /*+Leading(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.099 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.099 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.100 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t1 t2 t3)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.100 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.101 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.101 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.101 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 v2t1 v2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.101 UTC [2706822] STATEMENT:  /*+Leading(t1 v2t1 v2t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 05:02:34.102 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(v2t1 v2t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.102 UTC [2706822] STATEMENT:  /*+Leading(v2t1 v2t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 05:02:34.103 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.103 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.103 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.103 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.104 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.104 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.105 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(p2c1c1 p2c2c1 p2c3c1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.105 UTC [2706822] STATEMENT:  /*+Leading(p2c1c1 p2c2c1 p2c3c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.106 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 05:02:34.106 UTC [2706822] STATEMENT:  /*+Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.106 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 05:02:34.106 UTC [2706822] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.106 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 05:02:34.106 UTC [2706822] STATEMENT:  /*+Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.107 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	error hint:
	Leading()
	
2023-07-22 05:02:34.107 UTC [2706822] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.107 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 05:02:34.107 UTC [2706822] STATEMENT:  /*+Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.107 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1)
	
2023-07-22 05:02:34.107 UTC [2706822] STATEMENT:  /*+Leading(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.107 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.107 UTC [2706822] STATEMENT:  /*+Leading(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.108 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.108 UTC [2706822] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:02:34.108 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2))
	
2023-07-22 05:02:34.108 UTC [2706822] STATEMENT:  /*+Leading((t2))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.109 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading((t2 t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.109 UTC [2706822] STATEMENT:  /*+Leading((t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.109 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2 t3 t4))
	
2023-07-22 05:02:34.109 UTC [2706822] STATEMENT:  /*+Leading((t2 t3 t4))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.110 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.110 UTC [2706822] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.110 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t3) t4) t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.110 UTC [2706822] STATEMENT:  /*+Leading((((t1 t3) t4) t2)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.110 UTC [2706822] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t3 (t4 t2))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.110 UTC [2706822] STATEMENT:  /*+Leading((t1 (t3 (t4 t2))))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.119 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.119 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.121 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.121 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.123 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.123 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.124 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.124 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.126 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.126 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.127 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.127 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.130 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.130 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.130 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.130 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.131 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.131 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.134 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.134 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.135 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.135 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.136 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.136 UTC [2706826] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:02:34.136 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 05:02:34.136 UTC [2706826] STATEMENT:  /*+Set(1234567890123456789012345678901234567890123456789012345678901234 1)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.137 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)
	
2023-07-22 05:02:34.137 UTC [2706826] STATEMENT:  /*+Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.137 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(block_size 16384)
	
2023-07-22 05:02:34.137 UTC [2706826] STATEMENT:  /*+Set(block_size 16384)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.137 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_mode off)
	
2023-07-22 05:02:34.137 UTC [2706826] STATEMENT:  /*+Set(archive_mode off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.137 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_timeout 0)
	
2023-07-22 05:02:34.137 UTC [2706826] STATEMENT:  /*+Set(archive_timeout 0)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.137 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_connections off)
	
2023-07-22 05:02:34.137 UTC [2706826] STATEMENT:  /*+Set(log_connections off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.138 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(log_min_messages WARNING)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.138 UTC [2706826] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.141 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_min_messages WARNING)
	
2023-07-22 05:02:34.141 UTC [2706826] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.141 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.141 UTC [2706826] STATEMENT:  /*+Set(enable_seqscan on)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:02:34.144 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	
2023-07-22 05:02:34.144 UTC [2706826] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan off)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:02:34.144 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	Set(client_min_messages DEBUG2)
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	
2023-07-22 05:02:34.144 UTC [2706826] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBUG2)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:02:34.144 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	Set(enable_indexscan o)
	
2023-07-22 05:02:34.144 UTC [2706826] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan o)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:02:34.145 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	Set(client_min_messages DEBU)
	
2023-07-22 05:02:34.145 UTC [2706826] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBU)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:02:34.145 UTC [2706826] LOG:  pg_hint_plan:
	used hint:
	IndexScan(a)
	not used hint:
	SeqScan(c)
	duplication hint:
	SeqScan(a)
	error hint:
	NestLoop(a)
	
2023-07-22 05:02:34.145 UTC [2706826] STATEMENT:  /*+SeqScan(a)IndexScan(a)SeqScan(c)NestLoop(a) */
	SELECT * FROM s1.t1 a, s1.t2 b WHERE false;
2023-07-22 05:02:34.155 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.155 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.157 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.157 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:02:34.160 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t_1 t_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.160 UTC [2706830] STATEMENT:  /*+Rows(t_1 t_2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:02:34.164 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.164 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.167 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s1.t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.167 UTC [2706830] STATEMENT:  /*+Rows(s1.t1 s1.t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.170 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.170 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.173 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.173 UTC [2706830] STATEMENT:  /*+Rows(t3 t4 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.176 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.176 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.182 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 05:02:34.182 UTC [2706830] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:34.185 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s2.t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.185 UTC [2706830] STATEMENT:  /*+Rows(s1.t1 s2.t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:02:34.191 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(s2t1 t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.191 UTC [2706830] STATEMENT:  /*+Rows(t1 s2t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 05:02:34.197 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.197 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.200 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.200 UTC [2706830] STATEMENT:  /*+Rows(st1 st2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.203 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.203 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.207 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 05:02:34.207 UTC [2706830] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.219 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.219 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.226 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.226 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.232 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.232 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.241 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.241 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.249 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.249 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM t_pg_class t1, t_pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 05:02:34.255 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.255 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.261 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.261 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.264 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(*VALUES* t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.264 UTC [2706830] STATEMENT:  /*+Rows(*VALUES* t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.270 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(c1 t1 +1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.270 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 c1 +1)*/
	EXPLAIN WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 05:02:34.276 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.276 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.279 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.279 UTC [2706830] STATEMENT:  /*+Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.285 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.285 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)Rows(st1 st2 #1)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 05:02:34.291 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(st2 t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.291 UTC [2706830] STATEMENT:  /*+Rows(t1 st2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:02:34.294 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.294 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:02:34.297 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 #1)
	
2023-07-22 05:02:34.297 UTC [2706830] STATEMENT:  /*+Rows(t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.300 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 1)
	
2023-07-22 05:02:34.300 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.303 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #notrows)
	
2023-07-22 05:02:34.303 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #notrows)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.307 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.307 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:34.311 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.311 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:34.316 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.316 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:34.320 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.320 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:02:34.324 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.324 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.327 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.327 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.330 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.330 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.333 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.333 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.338 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.338 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	);
2023-07-22 05:02:34.341 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.341 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:02:34.346 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.346 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 05:02:34.350 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.350 UTC [2706830] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 05:02:34.355 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.355 UTC [2706830] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:02:34.360 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(c1 c2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 c1 c2 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.360 UTC [2706830] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(c2 c1 #1)Rows(c2 c1 bmt1 #1)Rows(c2 c1 bmt1 bmt2 #1)Rows(c2 c1 bmt1 bmt2 bmt3 #1)Rows(c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1;
2023-07-22 05:02:34.366 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.366 UTC [2706830] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 05:02:34.372 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(c2 c3 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(c1 c2 c3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 c1 c2 c3 #1)
	Rows(bmt1 bmt2 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 c3 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.372 UTC [2706830] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(c3 c2 #1)Rows(c3 c2 c1 #1)Rows(c3 c2 c1 bmt1 #1)Rows(c3 c2 c1 bmt1 bmt2 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 05:02:34.376 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.376 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 05:02:34.379 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	Rows(bmt1 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.379 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt1)
	Rows(bmt1 c1 #1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 05:02:34.382 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.382 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	);
2023-07-22 05:02:34.385 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Rows(bmt2 c1 #1)
	Rows(bmt1 bmt2 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.385 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Rows(c1 bmt2 #1)
	Rows(c1 bmt1 bmt2 #1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	)
	;
2023-07-22 05:02:34.398 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.398 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 05:02:34.410 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	Rows(b1t3 b1t4 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t3 b3t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t2 b2t3 b2t4 #1)
	Rows(b3t2 b3t3 b3t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.410 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	Rows(b2t4 b2t3 #1)
	Rows(b2t4 b2t3 b2t2 #1)
	Rows(b2t4 b2t3 b2t2 b2t1 #1)
	Rows(b3t4 b3t3 #1)
	Rows(b3t4 b3t3 b3t2 #1)
	Rows(b3t4 b3t3 b3t2 b3t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 05:02:34.422 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.422 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 05:02:34.433 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Rows(b1t3 b1t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.433 UTC [2706830] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 05:02:34.437 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.437 UTC [2706830] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.441 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.441 UTC [2706830] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 t2 t3 t4 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 #2)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.444 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.444 UTC [2706830] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.447 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r1_ #2)
	Rows(b1t1 b1t2 r1_ #2)
	Rows(b1t1 b1t2 b1t3 r1_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r1_ #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.447 UTC [2706830] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(r1_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r1_ b1t1 b1t2 b1t3 #2)
	Rows(r1_ b1t1 b1t2 #2)
	Rows(r1_ b1t1 #2)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.451 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.451 UTC [2706830] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.451 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.451 UTC [2706830] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.454 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.454 UTC [2706830] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.455 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.455 UTC [2706830] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.458 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.458 UTC [2706830] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.459 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.459 UTC [2706830] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.462 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.462 UTC [2706830] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.463 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.463 UTC [2706830] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.466 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.466 UTC [2706830] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.466 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.466 UTC [2706830] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.467 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.467 UTC [2706830] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.470 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.470 UTC [2706830] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.471 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.471 UTC [2706830] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.471 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.471 UTC [2706830] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.475 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.475 UTC [2706830] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.475 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.475 UTC [2706830] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.476 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.476 UTC [2706830] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.479 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b2t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.479 UTC [2706830] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.479 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b1t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.479 UTC [2706830] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.480 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b3t1 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b1t1 r3_ #2)
	Rows(b2t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.480 UTC [2706830] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:02:34.484 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 05:02:34.484 UTC [2706830] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:34.487 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	Rows(v1t1 v1t1 #1)
	
2023-07-22 05:02:34.487 UTC [2706830] STATEMENT:  /*+HashJoin(v1t1 v1t1)Rows(v1t1 v1t1 #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:34.489 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.489 UTC [2706830] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:34.492 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.492 UTC [2706830] STATEMENT:  /*+NestLoop(v1t1 v1t1_)Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:02:34.501 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.501 UTC [2706830] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.504 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	Rows(r4t1 r5t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.504 UTC [2706830] STATEMENT:  /*+NestLoop(r4t1 r5t1)Rows(r4t1 r5t1 #1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.511 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	Rows(t1 t3 #2)
	Rows(t1 t2 t3 #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.511 UTC [2706830] STATEMENT:  /*+ Leading(t3 t1 t2) Rows(t3 t1 #2)Rows(t3 t1 t2 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.514 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	Rows(*VALUES* t1 #2)
	Rows(*VALUES* t1 t2 #20)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.514 UTC [2706830] STATEMENT:  /*+ Leading(*VALUES* t1 t2) Rows(*VALUES* t1 #2)Rows(*VALUES* t1 t2 #20)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:02:34.520 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	Rows(t3 t4 #2)
	Rows(t2 t3 t4 #2)
	Rows(t1 t2 t3 t4 #2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.520 UTC [2706830] STATEMENT:  /*+ Leading(t4 t3 t2 t1) Rows(t4 t3 #2) Rows(t4 t3 t2 #2)Rows(t4 t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.524 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #2)
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	Rows(*VALUES* t2 t3 #2)
	Rows(*VALUES* t1 t2 t3 #2)
	
2023-07-22 05:02:34.524 UTC [2706830] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) Rows(t4 t3 #2)Rows(*VALUES* t3 t2 #2)Rows(*VALUES* t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:02:34.530 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.530 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.537 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 *0.6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.537 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 *0.6)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.544 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt4 *0.5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.544 UTC [2706830] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt1 *0.5)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:02:34.547 UTC [2706830] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 #0)
2023-07-22 05:02:34.547 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.547 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.550 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.550 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #5)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.553 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.553 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.556 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.556 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 -1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.559 UTC [2706830] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -1000)
2023-07-22 05:02:34.559 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1000)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.559 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 -1000)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.562 UTC [2706830] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 *0)
2023-07-22 05:02:34.562 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.562 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 *0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.565 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.565 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 *2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.568 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.568 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 *0.1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.575 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(p1 p2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.575 UTC [2706830] STATEMENT:  /*+Rows(p1 p2 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:02:34.581 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(p1c1 p2c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.581 UTC [2706830] STATEMENT:  /*+Rows(p1c1 p2c1 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:02:34.588 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:02:34.588 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.594 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:02:34.594 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.599 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:02:34.599 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.605 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:02:34.605 UTC [2706830] STATEMENT:  /*+Rows(t2 t1 #1)Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.611 UTC [2706830] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.611 UTC [2706830] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:02:34.641 UTC [2707600] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	SeqScan(ft_1)
	SeqScan(ft_2)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.641 UTC [2707600] STATEMENT:  /*+SeqScan(t1)SeqScan(ft_1)SeqScan(ft_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:02:34.644 UTC [2707600] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(ft_1 ft_2)
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.644 UTC [2707600] STATEMENT:  /*+MergeJoin(ft_1 ft_2)Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:02:34.647 UTC [2707600] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.647 UTC [2707600] STATEMENT:  /*+Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:02:34.650 UTC [2707600] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	Rows(ft_1 ft_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.650 UTC [2707600] STATEMENT:  /*+Rows(ft_1 ft_2 #1)Leading(ft_1 ft_2 t1)*/
	EXPLAIN SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:02:34.681 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.681 UTC [2707631] STATEMENT:  /*+Parallel(t1 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:02:34.682 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(t11 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.682 UTC [2707631] STATEMENT:  /*+Parallel(t11 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 as t11, s1.t1 as t12;
2023-07-22 05:02:34.685 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.685 UTC [2707631] STATEMENT:  /*+Parallel(t1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:02:34.685 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.685 UTC [2707631] STATEMENT:  /*+Parallel(t1 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:02:34.686 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.686 UTC [2707631] STATEMENT:  /*+Parallel(t1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:02:34.688 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 4 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.688 UTC [2707631] STATEMENT:  /*+Parallel(t1 4 hard) */ /* to be gather merge*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ORDER BY s1.t1.c1 LIMIT 4;
2023-07-22 05:02:34.695 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.695 UTC [2707631] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.696 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.696 UTC [2707631] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.699 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.699 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.701 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.701 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.703 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.703 UTC [2707631] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.704 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.704 UTC [2707631] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.709 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.709 UTC [2707631] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:02:34.711 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 soft)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.711 UTC [2707631] STATEMENT:  /*+Parallel(p1_c1_c1 8 soft) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:02:34.712 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.712 UTC [2707631] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:02:34.714 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.714 UTC [2707631] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:02:34.724 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.724 UTC [2707631] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.727 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.727 UTC [2707631] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.729 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.729 UTC [2707631] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.731 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.731 UTC [2707631] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.733 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.733 UTC [2707631] STATEMENT:  /*+Parallel(p2 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.734 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.734 UTC [2707631] STATEMENT:  /*+Parallel(p2 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.736 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.736 UTC [2707631] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.737 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.737 UTC [2707631] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.739 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.739 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.740 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.740 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.741 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.741 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.743 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.743 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.744 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.744 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.745 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.745 UTC [2707631] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.746 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	Parallel(p1 0 hard)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.746 UTC [2707631] STATEMENT:  /*+Parallel(p1 0 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:02:34.748 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.748 UTC [2707631] STATEMENT:  /*+Parallel(p1 8) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:02:34.748 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Set(max_parallel_workers_per_gather 1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.748 UTC [2707631] STATEMENT:  /*+Set(max_parallel_workers_per_gather 1)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:02:34.749 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 6 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.749 UTC [2707631] STATEMENT:  /*+Parallel(p1 5 hard)Parallel(p2 6 hard) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:02:34.750 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.750 UTC [2707631] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.750 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.750 UTC [2707631] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:02:34.751 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Parallel(p1 100x hard)
	Parallel(p1 -1000 hard)
	Parallel(p1 1000000 hard)
	Parallel(p1 8 soft)
	Parallel()
	Parallel()
	
2023-07-22 05:02:34.751 UTC [2707631] STATEMENT:  /*+Parallel(p1 100x hard)Parallel(p1 -1000 hard)Parallel(p1 1000000 hard)
	   Parallel(p1 8 hoge)Parallel(p1)Parallel(p1 100 soft x)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:02:34.752 UTC [2707631] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	not used hint:
	IndexScan(*VALUES*)
	SeqScan(cte1)
	TidScan(fs1)
	IndexScan(ft1)
	IndexScan(t)
	Parallel(s1 3 hard)
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.752 UTC [2707631] STATEMENT:  /*+Parallel(p1 5 hard) Parallel(s1 3 hard) IndexScan(ft1) SeqScan(cte1)
	  TidScan(fs1) IndexScan(t) IndexScan(*VALUES*) */
	EXPLAIN (COSTS false) SELECT id FROM p1_c1_c1 as s1 TABLESAMPLE SYSTEM(10)
	 UNION ALL
	SELECT id FROM ft1
	 UNION ALL
	(WITH cte1 AS (SELECT id FROM p1 WHERE id % 2 = 0) SELECT id FROM cte1)
	 UNION ALL
	SELECT userid FROM pg_stat_statements fs1
	 UNION ALL
	SELECT x FROM (VALUES (1), (2), (3)) t(x);
2023-07-22 05:02:34.770 UTC [2706616] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:02:34.798 UTC [2707639] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.798 UTC [2707639] STATEMENT:  EXPLAIN SELECT * FROM t1 WHERE id = 100;
2023-07-22 05:02:34.799 UTC [2707639] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.799 UTC [2707639] STATEMENT:  EXPLAIN DECLARE c1 CURSOR FOR SELECT * FROM t1 WHERE id = 100;
2023-07-22 05:02:34.800 UTC [2707639] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.800 UTC [2707639] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS SELECT * FROM t1 WHERE id = 100;
2023-07-22 05:02:34.800 UTC [2707639] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.800 UTC [2707639] STATEMENT:  EXPLAIN EXECUTE p1;
2023-07-22 05:02:34.802 UTC [2707639] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.802 UTC [2707639] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS EXECUTE p1;
2023-07-22 05:02:34.872 UTC [2707647] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.872 UTC [2707647] STATEMENT:  explain (costs false)
	select * from t1 join t2 on t1.id = t2.id where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 05:02:34.874 UTC [2707647] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.874 UTC [2707647] STATEMENT:  /*+ MergeJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 05:02:34.875 UTC [2707647] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.875 UTC [2707647] STATEMENT:  /*+ HashJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+MergeJoin(t1 t2)*/' <> '';
2023-07-22 05:02:34.914 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.914 UTC [2707651] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 05:02:34.916 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.916 UTC [2707651] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 05:02:34.938 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.938 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.938 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.939 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.939 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.939 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.944 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.944 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.944 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.945 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.945 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.945 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.946 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.946 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.946 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.947 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.947 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.947 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.951 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.951 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.951 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:34.952 UTC [2707651] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:02:34.952 UTC [2707651] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:02:34.952 UTC [2707651] STATEMENT:  call test_hint_transaction();
2023-07-22 05:02:35.155 UTC [2706617] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:02:35.238 UTC [2706617] LOG:  checkpoint complete: wrote 19 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.021 s, sync=0.022 s, total=0.084 s; sync files=15, longest=0.008 s, average=0.002 s; distance=12467 kB, estimate=12467 kB
2023-07-22 05:02:35.406 UTC [2707673] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:02:35.406 UTC [2707673] STATEMENT:  select gen_salt('foo');
2023-07-22 05:02:35.406 UTC [2707673] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:02:35.406 UTC [2707673] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:02:35.407 UTC [2707673] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:02:35.407 UTC [2707673] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:02:35.407 UTC [2707673] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:02:35.407 UTC [2707673] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:02:35.476 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.476 UTC [2707693] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:02:35.476 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.476 UTC [2707693] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:02:35.476 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.476 UTC [2707693] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:02:35.477 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.477 UTC [2707693] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:02:35.477 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.477 UTC [2707693] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:02:35.477 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.477 UTC [2707693] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:02:35.477 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.477 UTC [2707693] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:02:35.477 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.477 UTC [2707693] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:02:35.478 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.478 UTC [2707693] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:02:35.478 UTC [2707693] ERROR:  encrypt error: Key was too big
2023-07-22 05:02:35.478 UTC [2707693] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:02:35.478 UTC [2707693] ERROR:  encrypt error: Key was too big
2023-07-22 05:02:35.478 UTC [2707693] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:02:35.478 UTC [2707693] ERROR:  encrypt error: Key was too big
2023-07-22 05:02:35.478 UTC [2707693] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:02:35.479 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.479 UTC [2707693] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:02:35.479 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.479 UTC [2707693] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:02:35.479 UTC [2707693] ERROR:  encrypt error: Key was too big
2023-07-22 05:02:35.479 UTC [2707693] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:02:35.479 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.479 UTC [2707693] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:02:35.480 UTC [2707693] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:02:35.480 UTC [2707693] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:02:35.480 UTC [2707693] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:02:35.480 UTC [2707693] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:02:35.480 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.480 UTC [2707693] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:02:35.480 UTC [2707693] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.480 UTC [2707693] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:02:35.496 UTC [2707699] ERROR:  encrypt error: Encryption failed
2023-07-22 05:02:35.496 UTC [2707699] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:02:35.498 UTC [2707699] ERROR:  decrypt error: Decryption failed
2023-07-22 05:02:35.498 UTC [2707699] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:02:35.499 UTC [2707699] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:02:35.499 UTC [2707699] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:02:35.529 UTC [2707707] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.529 UTC [2707707] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:02:35.529 UTC [2707707] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.529 UTC [2707707] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:02:35.529 UTC [2707707] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.529 UTC [2707707] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:02:35.529 UTC [2707707] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.529 UTC [2707707] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:02:35.530 UTC [2707707] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:02:35.530 UTC [2707707] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:02:35.530 UTC [2707707] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:02:35.530 UTC [2707707] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:02:35.530 UTC [2707707] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.530 UTC [2707707] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:02:35.531 UTC [2707707] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.531 UTC [2707707] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:02:35.560 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.560 UTC [2707717] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:02:35.560 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.560 UTC [2707717] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:02:35.560 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.560 UTC [2707717] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:02:35.561 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.561 UTC [2707717] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:02:35.561 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.561 UTC [2707717] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:02:35.561 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.561 UTC [2707717] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:02:35.561 UTC [2707717] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:02:35.561 UTC [2707717] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:02:35.562 UTC [2707717] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:02:35.562 UTC [2707717] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:02:35.562 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.562 UTC [2707717] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:02:35.562 UTC [2707717] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:02:35.562 UTC [2707717] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:02:35.577 UTC [2707723] ERROR:  invalid salt
2023-07-22 05:02:35.577 UTC [2707723] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:02:35.675 UTC [2707731] ERROR:  invalid salt
2023-07-22 05:02:35.675 UTC [2707731] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:02:35.675 UTC [2707731] ERROR:  invalid salt
2023-07-22 05:02:35.675 UTC [2707731] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:02:35.675 UTC [2707731] ERROR:  invalid salt
2023-07-22 05:02:35.675 UTC [2707731] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:02:35.724 UTC [2707735] ERROR:  invalid salt
2023-07-22 05:02:35.724 UTC [2707735] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:02:35.724 UTC [2707735] ERROR:  crypt(3) returned NULL
2023-07-22 05:02:35.724 UTC [2707735] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:02:35.724 UTC [2707735] ERROR:  crypt(3) returned NULL
2023-07-22 05:02:35.724 UTC [2707735] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:02:35.767 UTC [2707739] ERROR:  Corrupt ascii-armor
2023-07-22 05:02:35.767 UTC [2707739] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:02:35.768 UTC [2707739] ERROR:  Corrupt ascii-armor
2023-07-22 05:02:35.768 UTC [2707739] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:02:35.768 UTC [2707739] ERROR:  Corrupt ascii-armor
2023-07-22 05:02:35.768 UTC [2707739] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:02:35.777 UTC [2707739] ERROR:  mismatched array dimensions
2023-07-22 05:02:35.777 UTC [2707739] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:02:35.777 UTC [2707739] ERROR:  mismatched array dimensions
2023-07-22 05:02:35.777 UTC [2707739] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:02:35.778 UTC [2707739] ERROR:  wrong number of array subscripts
2023-07-22 05:02:35.778 UTC [2707739] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:02:35.778 UTC [2707739] ERROR:  wrong number of array subscripts
2023-07-22 05:02:35.778 UTC [2707739] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:02:35.779 UTC [2707739] ERROR:  null value not allowed for header key
2023-07-22 05:02:35.779 UTC [2707739] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:02:35.779 UTC [2707739] ERROR:  null value not allowed for header value
2023-07-22 05:02:35.779 UTC [2707739] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:02:35.780 UTC [2707739] ERROR:  header key must not contain newlines
2023-07-22 05:02:35.780 UTC [2707739] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:02:35.781 UTC [2707739] ERROR:  header value must not contain newlines
2023-07-22 05:02:35.781 UTC [2707739] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:02:35.781 UTC [2707739] ERROR:  header key must not contain ": "
2023-07-22 05:02:35.781 UTC [2707739] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:02:35.806 UTC [2707743] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:35.806 UTC [2707743] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:02:35.837 UTC [2707743] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:35.837 UTC [2707743] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:02:35.839 UTC [2707743] ERROR:  Not text data
2023-07-22 05:02:35.839 UTC [2707743] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:02:35.840 UTC [2707743] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:35.840 UTC [2707743] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:02:35.840 UTC [2707743] ERROR:  Unsupported compression algorithm
2023-07-22 05:02:35.840 UTC [2707743] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:02:35.856 UTC [2707749] ERROR:  Not text data
2023-07-22 05:02:35.856 UTC [2707749] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:02:36.298 UTC [2707757] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:36.298 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:02:36.314 UTC [2707757] ERROR:  Wrong key
2023-07-22 05:02:36.314 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:02:36.315 UTC [2707757] ERROR:  No encryption key found
2023-07-22 05:02:36.315 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:02:36.316 UTC [2707757] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:36.316 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:02:36.321 UTC [2707757] ERROR:  Need password for secret key
2023-07-22 05:02:36.321 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:02:36.322 UTC [2707757] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:36.322 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:02:36.326 UTC [2707757] ERROR:  Wrong key or corrupt data
2023-07-22 05:02:36.326 UTC [2707757] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:02:36.346 UTC [2707763] ERROR:  No encryption key found
2023-07-22 05:02:36.346 UTC [2707763] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:02:36.346 UTC [2707763] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:02:36.346 UTC [2707763] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:02:36.347 UTC [2707763] ERROR:  Not text data
2023-07-22 05:02:36.347 UTC [2707763] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:02:36.355 UTC [2707767] ERROR:  No encryption key found
2023-07-22 05:02:36.355 UTC [2707767] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:02:36.356 UTC [2707767] ERROR:  No encryption key found
2023-07-22 05:02:36.356 UTC [2707767] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:03:07.988 UTC [2706617] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:03:08.095 UTC [2706617] LOG:  checkpoint complete: wrote 944 buffers (5.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.046 s, sync=0.024 s, total=0.108 s; sync files=264, longest=0.003 s, average=0.001 s; distance=141699 kB, estimate=141699 kB
2023-07-22 05:03:39.505 UTC [2706617] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:03:39.567 UTC [2706617] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.004 s, total=0.062 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137047 kB, estimate=141233 kB
2023-07-22 05:03:39.631 UTC [2706616] LOG:  received fast shutdown request
2023-07-22 05:03:39.634 UTC [2706616] LOG:  aborting any active transactions
2023-07-22 05:03:39.637 UTC [2706616] LOG:  background worker "logical replication launcher" (PID 2706622) exited with exit code 1
2023-07-22 05:03:39.639 UTC [2706617] LOG:  shutting down
2023-07-22 05:03:39.641 UTC [2706617] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:03:39.658 UTC [2706617] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127110 kB
2023-07-22 05:03:39.689 UTC [2706616] LOG:  database system is shut down
2023-07-22 05:03:40.371 UTC [2707899] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:03:40.372 UTC [2707899] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:03:40.377 UTC [2707899] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:03:40.388 UTC [2707902] LOG:  database system was shut down at 2023-07-22 05:03:40 UTC
2023-07-22 05:03:40.397 UTC [2707899] LOG:  database system is ready to accept connections
2023-07-22 05:03:41.711 UTC [2707899] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:03:41.712 UTC [2707899] LOG:  parameter "effective_cache_size" changed to "16384"
2023-07-22 05:03:41.889 UTC [2707929] ERROR:  table hint is not activated because queryid is not available
2023-07-22 05:03:41.889 UTC [2707929] HINT:  Set compute_query_id to on or auto to use hint table.
2023-07-22 05:03:41.889 UTC [2707929] STATEMENT:  SET pg_hint_plan.enable_hint_table to on;
2023-07-22 05:03:41.890 UTC [2707929] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 05:03:41.890 UTC [2707929] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 05:03:41.890 UTC [2707929] LOG:  hint table feature is reactivated
2023-07-22 05:03:41.890 UTC [2707929] STATEMENT:  SELECT 1;
2023-07-22 05:03:41.890 UTC [2707929] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 05:03:41.890 UTC [2707929] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 05:03:41.892 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.892 UTC [2707929] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.893 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.893 UTC [2707929] STATEMENT:  EXPLAIN (COSTS false) /*+Set(enable_indexscan off)*/
	 SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.893 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(enable_hashjoin off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.893 UTC [2707929] STATEMENT:  /*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.893 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.893 UTC [2707929] STATEMENT:  /*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.893 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.893 UTC [2707929] STATEMENT:  /*+ 	 
		 	Set 	 
		 	( 	 
		 	enable_indexscan 	 
		 	off 	 
		 	) 	 
		 	*/	 	
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.894 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	Set(enable_mergejoin off)
	Set(enable_nestloop off)
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.894 UTC [2707929] STATEMENT:  /*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
		 	Set(enable_seqscan off)
		 	*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.894 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem 1M)
	
2023-07-22 05:03:41.894 UTC [2707929] STATEMENT:  /*+Set(work_mem "1M")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.894 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Set(work_mem 1MB)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.894 UTC [2707929] STATEMENT:  /*+Set(work_mem "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.894 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem TO 1MB)
	
2023-07-22 05:03:41.894 UTC [2707929] STATEMENT:  /*+Set(work_mem TO "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.894 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:03:41.894 UTC [2707929] STATEMENT:  /*+SeqScan() */ SELECT 1;
2023-07-22 05:03:41.895 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 05:03:41.895 UTC [2707929] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.895 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.895 UTC [2707929] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.895 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.895 UTC [2707929] STATEMENT:  /*+SeqScan(t1)IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.895 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.895 UTC [2707929] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.896 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.896 UTC [2707929] STATEMENT:  /*+BitmapScan(t2)NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.896 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.896 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.896 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.896 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
2023-07-22 05:03:41.896 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.896 UTC [2707929] STATEMENT:  /*+TidScan(t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
2023-07-22 05:03:41.897 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.897 UTC [2707929] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
2023-07-22 05:03:41.897 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 05:03:41.897 UTC [2707929] STATEMENT:  /*+ NestLoop() */ SELECT 1;
2023-07-22 05:03:41.897 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(x)
	
2023-07-22 05:03:41.897 UTC [2707929] STATEMENT:  /*+ NestLoop(x) */ SELECT 1;
2023-07-22 05:03:41.897 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.897 UTC [2707929] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.897 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.897 UTC [2707929] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.898 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.898 UTC [2707929] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:41.898 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.898 UTC [2707929] STATEMENT:  /*+MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 05:03:41.898 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.898 UTC [2707929] STATEMENT:  /*+NestLoop(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 05:03:41.898 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.898 UTC [2707929] STATEMENT:  /*+NoHashJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 05:03:41.899 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.899 UTC [2707929] STATEMENT:  /*+MergeJoin(t4 t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.900 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.900 UTC [2707929] STATEMENT:  /*+HashJoin(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.900 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t3)
	NestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.900 UTC [2707929] STATEMENT:  /*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.901 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.901 UTC [2707929] STATEMENT:  /*+NoNestLoop(t4 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.903 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 05:03:41.903 UTC [2707929] STATEMENT:  /*+Leading( )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.904 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3)
	
2023-07-22 05:03:41.904 UTC [2707929] STATEMENT:  /*+Leading( t3 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.904 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.904 UTC [2707929] STATEMENT:  /*+Leading( t3 t4 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.905 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.905 UTC [2707929] STATEMENT:  /*+Leading(t3 t4 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.905 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.905 UTC [2707929] STATEMENT:  /*+Leading(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.906 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t1 t2 t1)
	
2023-07-22 05:03:41.906 UTC [2707929] STATEMENT:  /*+Leading(t3 t4 t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.907 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t4)
	
2023-07-22 05:03:41.907 UTC [2707929] STATEMENT:  /*+Leading(t3 t4 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 05:03:41.907 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.907 UTC [2707929] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 05:03:41.907 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.907 UTC [2707929] STATEMENT:  /*+HashJoin(t1 *VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 05:03:41.908 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	HashJoin(*VALUES* t1)
	not used hint:
	IndexScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.908 UTC [2707929] STATEMENT:  /*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 05:03:41.909 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.909 UTC [2707929] STATEMENT:  /*+BitmapScan(v_1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.909 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.909 UTC [2707929] STATEMENT:  /*+BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.910 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.910 UTC [2707929] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.910 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.910 UTC [2707929] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.910 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.910 UTC [2707929] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.911 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.911 UTC [2707929] STATEMENT:  /*+BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.911 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.911 UTC [2707929] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 05:03:41.912 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.912 UTC [2707929] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.912 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.912 UTC [2707929] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.912 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.912 UTC [2707929] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.912 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.912 UTC [2707929] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.912 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.912 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.913 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.913 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.913 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.913 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.913 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.913 UTC [2707929] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 05:03:41.913 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.913 UTC [2707929] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.914 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.914 UTC [2707929] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.914 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.914 UTC [2707929] STATEMENT:  /*+SeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.914 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.914 UTC [2707929] STATEMENT:  /*+SeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.915 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.915 UTC [2707929] STATEMENT:  /*+SeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.915 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.915 UTC [2707929] STATEMENT:  /*+SeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.915 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.915 UTC [2707929] STATEMENT:  /*+SeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.915 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.915 UTC [2707929] STATEMENT:  /*+SeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.915 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.915 UTC [2707929] STATEMENT:  /*+SeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.916 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.916 UTC [2707929] STATEMENT:  /*+SeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.916 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.916 UTC [2707929] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.916 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.916 UTC [2707929] STATEMENT:  /*+IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.916 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.916 UTC [2707929] STATEMENT:  /*+IndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.917 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.917 UTC [2707929] STATEMENT:  /*+IndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.917 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.917 UTC [2707929] STATEMENT:  /*+IndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.917 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.917 UTC [2707929] STATEMENT:  /*+IndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.918 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.918 UTC [2707929] STATEMENT:  /*+IndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.918 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.918 UTC [2707929] STATEMENT:  /*+IndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.918 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.918 UTC [2707929] STATEMENT:  /*+IndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.918 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.918 UTC [2707929] STATEMENT:  /*+IndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.919 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.919 UTC [2707929] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.919 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.919 UTC [2707929] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.919 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.919 UTC [2707929] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.919 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.919 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.920 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.920 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.920 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.920 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.920 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.920 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.921 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.921 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.921 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.921 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.921 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.921 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.921 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.921 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.922 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.922 UTC [2707929] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.922 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.922 UTC [2707929] STATEMENT:  /*+TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.922 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.922 UTC [2707929] STATEMENT:  /*+TidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.923 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.923 UTC [2707929] STATEMENT:  /*+TidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.923 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.923 UTC [2707929] STATEMENT:  /*+TidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.923 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.923 UTC [2707929] STATEMENT:  /*+TidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.923 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.923 UTC [2707929] STATEMENT:  /*+TidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.923 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.923 UTC [2707929] STATEMENT:  /*+TidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.924 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.924 UTC [2707929] STATEMENT:  /*+TidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.924 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.924 UTC [2707929] STATEMENT:  /*+TidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.924 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.924 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.924 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.924 UTC [2707929] STATEMENT:  /*+NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.925 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.925 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.925 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.925 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.925 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.925 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.926 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.926 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.926 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.926 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.926 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.926 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.926 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.926 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.927 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.927 UTC [2707929] STATEMENT:  /*+NoSeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.927 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.927 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.927 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.927 UTC [2707929] STATEMENT:  /*+NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.927 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.927 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.928 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.928 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.928 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.928 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.928 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.928 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.928 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.928 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.929 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.929 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.929 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.929 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.929 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.929 UTC [2707929] STATEMENT:  /*+NoIndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.930 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.930 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.930 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.930 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.930 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.930 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.930 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.930 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.930 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.930 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.931 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.931 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.931 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.931 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.931 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.931 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.931 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.931 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.932 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.932 UTC [2707929] STATEMENT:  /*+NoBitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.932 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.932 UTC [2707929] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.932 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.932 UTC [2707929] STATEMENT:  /*+NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.932 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.932 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.933 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.933 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.933 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.933 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.933 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.933 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.933 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.933 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.933 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.933 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.934 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.934 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.934 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.934 UTC [2707929] STATEMENT:  /*+NoTidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.934 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.934 UTC [2707929] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)' AND t1.id < 10 AND t2.id < 10;
2023-07-22 05:03:41.935 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.935 UTC [2707929] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 05:03:41.935 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.935 UTC [2707929] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 05:03:41.937 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.937 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.938 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.938 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.939 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.939 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.939 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.939 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.940 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.940 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.940 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.940 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.940 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.940 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.941 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.941 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.942 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.942 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.943 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.943 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.944 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.944 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.944 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.944 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.945 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.945 UTC [2707929] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.945 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.945 UTC [2707929] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.946 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.946 UTC [2707929] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.947 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.947 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.947 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.947 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.948 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.948 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.948 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.948 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.949 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.949 UTC [2707929] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.949 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.949 UTC [2707929] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.949 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.949 UTC [2707929] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.950 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.950 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.950 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.950 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.950 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.950 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.950 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.950 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.951 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.951 UTC [2707929] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.951 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.951 UTC [2707929] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.951 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.951 UTC [2707929] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.951 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.951 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.951 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.951 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.951 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.951 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.952 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.952 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 05:03:41.952 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.952 UTC [2707929] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.952 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.952 UTC [2707929] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.952 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.952 UTC [2707929] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.953 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.953 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.953 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.953 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.953 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.953 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.953 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.953 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.953 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.953 UTC [2707929] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.954 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.954 UTC [2707929] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.954 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.954 UTC [2707929] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.954 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.954 UTC [2707929] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 05:03:41.972 UTC [2707929] LOG:  available indexes for IndexScan(ischk_d1): ischk_d1_b_idx
2023-07-22 05:03:41.972 UTC [2707929] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 05:03:41.972 UTC [2707929] LOG:  available indexes for IndexScan(ischk_d2): ischk_d2_b_idx
2023-07-22 05:03:41.972 UTC [2707929] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 05:03:41.972 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ischk ischk_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.972 UTC [2707929] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 05:03:41.973 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""t1 )	")
	IndexScan("t	2 """)
	HashJoin("""t1 )	" T3 "t	2 """)
	Leading("""t1 )	" T3 "t	2 """)
	Set(application_name "a	a	a""	a	A")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.973 UTC [2707929] STATEMENT:  /*+SeqScan("""t1 )	")IndexScan("t	2 """)HashJoin("""t1 )	"T3"t	2 """)Leading("""t1 )	"T3"t	2 """)Set(application_name"a	a	a""	a	A")*/
	EXPLAIN (COSTS false) SELECT * FROM t1 """t1 )	", t2 "t	2 """, t3 "T3" WHERE """t1 )	".id = "t	2 """.id AND """t1 )	".id = "T3".id;
2023-07-22 05:03:41.973 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_mergejoin on)
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	SeqScan(t1)
	IndexScan(t1)
	BitmapScan(t1)
	SeqScan(t2)
	IndexScan(t2)
	BitmapScan(t2)
	HashJoin(t1 t2)
	NestLoop(t1 t2)
	Leading(t1 t2)
	Set(enable_seqscan off)
	error hint:
	
2023-07-22 05:03:41.973 UTC [2707929] STATEMENT:  /*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 05:03:41.981 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.981 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.984 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.984 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.986 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.986 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.989 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.989 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.992 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.992 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.993 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.993 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.995 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.995 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.996 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1_3 t3_3)
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 05:03:41.996 UTC [2707929] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 05:03:41.997 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	MergeJoin(t1 t2)
	
2023-07-22 05:03:41.997 UTC [2707929] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 05:03:41.997 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t1)
	
2023-07-22 05:03:41.997 UTC [2707929] STATEMENT:  /*+Leading(t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 05:03:41.998 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 05:03:41.998 UTC [2707929] STATEMENT:  /*+
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "123456789012345678901234567890123456789012345678901234567890123" JOIN t2 ON ("123456789012345678901234567890123456789012345678901234567890123".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 05:03:41.999 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 05:03:41.999 UTC [2707929] STATEMENT:  /*+
	Leading(1234567890123456789012345678901234567890123456789012345678901234 t2 t3)
	SeqScan(1234567890123456789012345678901234567890123456789012345678901234)
	MergeJoin(1234567890123456789012345678901234567890123456789012345678901234 t2)
	Set(1234567890123456789012345678901234567890123456789012345678901234 1)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "1234567890123456789012345678901234567890123456789012345678901234" JOIN t2 ON ("1234567890123456789012345678901234567890123456789012345678901234".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 05:03:41.999 UTC [2707929] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 05:03:41.999 UTC [2707929] STATEMENT:  SET "123456789012345678901234567890123456789012345678901234567890123" TO 1;
2023-07-22 05:03:41.999 UTC [2707929] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 05:03:41.999 UTC [2707929] STATEMENT:  SET "1234567890123456789012345678901234567890123456789012345678901234" TO 1;
2023-07-22 05:03:41.999 UTC [2707929] ERROR:  1.23457e+63 is outside the valid range for parameter "cursor_tuple_fraction" (0 .. 1)
2023-07-22 05:03:41.999 UTC [2707929] STATEMENT:  SET cursor_tuple_fraction TO 1234567890123456789012345678901234567890123456789012345678901234;
2023-07-22 05:03:41.999 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_seqscan 100)
	Set(seq_page_cost on)
	
2023-07-22 05:03:41.999 UTC [2707929] STATEMENT:  /*+ Set(enable_seqscan 100)Set(seq_page_cost on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  available indexes for IndexScan(t5):
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  available indexes for IndexScan(t5): t5_id2 t5_id1
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id1 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  available indexes for IndexScan(t5):
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.000 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist5 no_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.000 UTC [2707929] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 05:03:42.001 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1))
	
2023-07-22 05:03:42.001 UTC [2707929] STATEMENT:  /*+Leading((t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.001 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.001 UTC [2707929] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.001 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1 t2 t3))
	
2023-07-22 05:03:42.001 UTC [2707929] STATEMENT:  /*+Leading((t1 t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.002 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.002 UTC [2707929] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id < 10;
2023-07-22 05:03:42.002 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.002 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.003 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) t4))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.003 UTC [2707929] STATEMENT:  /*+Leading((((t1 t2) t3) t4))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.003 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.003 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.004 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.004 UTC [2707929] STATEMENT:  /*+Leading((t1 (t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.004 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.004 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.005 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t3 t1) t2))
	not used hint:
	duplication hint:
	Leading(((t1 t2) t3))
	error hint:
	
2023-07-22 05:03:42.005 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 05:03:42.006 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	Leading((t1_2 t2_2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.006 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 05:03:42.006 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(((((t1 t2) t3) t1_2) t2_2))
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.006 UTC [2707929] STATEMENT:  /*+Leading(((((t1 t2) t3) t1_2) t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 05:03:42.006 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.006 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.007 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.007 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.007 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.007 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.007 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t1 t3)
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.007 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.008 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.008 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.008 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.008 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.008 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.008 UTC [2707929] STATEMENT:  /*+ Leading ( ( t1 ( t2 t3 ) ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.009 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.009 UTC [2707929] STATEMENT:  /*+Leading((t1(t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.009 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("t1(t2" "t3)"))
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.009 UTC [2707929] STATEMENT:  /*+Leading(("t1(t2" "t3)"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.009 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.009 UTC [2707929] STATEMENT:  /*+ Leading ( ( ( t1 t2 ) t3 ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.009 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.009 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2)t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.010 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("(t1" "t2)t3"))
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.010 UTC [2707929] STATEMENT:  /*+Leading(("(t1" "t2)t3"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 05:03:42.011 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 (t3 (t4 t5)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.011 UTC [2707929] STATEMENT:  /*+Leading((t1(t2(t3(t4 t5)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.011 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((t5 (t4 (t3 (t2 t1)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.011 UTC [2707929] STATEMENT:  /*+Leading((t5(t4(t3(t2 t1)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.012 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t1 t2) t3) t4) t5))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.012 UTC [2707929] STATEMENT:  /*+Leading(((((t1 t2)t3)t4)t5))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.013 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t5 t4) t3) t2) t1))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.013 UTC [2707929] STATEMENT:  /*+Leading(((((t5 t4)t3)t2)t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.014 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 (t4 t5))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.014 UTC [2707929] STATEMENT:  /*+Leading(((t1 t2)(t3(t4 t5))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.014 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading(((t5 t4) (t3 (t2 t1))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.014 UTC [2707929] STATEMENT:  /*+Leading(((t5 t4)(t3(t2 t1))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.015 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) (t4 t5)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.015 UTC [2707929] STATEMENT:  /*+Leading((((t1 t2)t3)(t4 t5)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.016 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Leading((((t5 t4) t3) (t2 t1)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.016 UTC [2707929] STATEMENT:  /*+Leading((((t5 t4)t3)(t2 t1)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 05:03:42.020 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:03:42.020 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.020 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:03:42.020 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.020 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:03:42.020 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.020 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:03:42.020 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.020 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.020 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_val_id_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_id_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_id_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_id_idx
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.021 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_id_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.021 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2):
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.023 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.023 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_id2_val
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id2_val
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.024 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.024 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_val2_id
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val2_id)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.025 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.025 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.026 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.026 UTC [2707929] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.027 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 05:03:42.027 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.028 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.028 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.029 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.029 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_expr
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.030 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_expr_idx
2023-07-22 05:03:42.030 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_val_idx6
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.031 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.031 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_val_idx6 p2_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7 p2_c1_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7 p2_c2_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7 p2_c3_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7 p2_c4_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7 p2_c1_c1_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7 p2_c1_c2_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7 p2_c3_c1_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7 p2_c3_c2_val_idx
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.032 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.032 UTC [2707929] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 05:03:42.033 UTC [2707929] LOG:  available indexes for IndexScanRegexp(t5): t5_val t5_pkey
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  available indexes for IndexScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  available indexes for IndexScan(t5):
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.033 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.033 UTC [2707929] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_val t5_pkey
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for IndexOnlyScan(t5):
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(t5): t5_val t5_pkey
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.034 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.034 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for BitmapScan(t5):
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.035 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.035 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1): p1_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c2):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c4):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1_c1):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c1_c2):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3_c1):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScanRegexp(p1_c3_c2):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.036 UTC [2707929] LOG:  available indexes for IndexScan(p1):
2023-07-22 05:03:42.036 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c2):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c4):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c1):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c2):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c1):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c2):
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.037 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.037 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c2):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c3):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c4):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c1_c1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c1_c2):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c3_c1):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for IndexOnlyScan(p1_c3_c2):
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1): p1_pkey
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.038 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 05:03:42.038 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1): p1_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c2):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c4):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2):
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.039 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.039 UTC [2707929] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c1):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c2):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c3):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c4):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c1_c1):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c1_c2):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c3_c1):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  available indexes for BitmapScan(p1_c3_c2):
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.040 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.040 UTC [2707929] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 05:03:42.043 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.043 UTC [2707929] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM t1 WHERE t1.id = 1;
2023-07-22 05:03:42.059 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.059 UTC [2707929] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ *          FROM t1 LIMIT 1"
	PL/pgSQL function testfunc() line 5 at SQL statement
2023-07-22 05:03:42.059 UTC [2707929] STATEMENT:  SELECT testfunc();
2023-07-22 05:03:42.062 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.062 UTC [2707929] CONTEXT:  SQL statement "/*+ SeqScan(t1) */ SELECT * FROM t1"
	PL/pgSQL function testfunc() line 3 at EXECUTE
2023-07-22 05:03:42.062 UTC [2707929] STATEMENT:  SELECT testfunc();
2023-07-22 05:03:42.064 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.064 UTC [2707929] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 05:03:42.066 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.066 UTC [2707929] CONTEXT:  SQL statement "SELECT  1, /*+ SeqScan(t1) */ * from t1"
	PL/pgSQL function testfunc() line 3 at PERFORM
2023-07-22 05:03:42.066 UTC [2707929] STATEMENT:  SELECT testfunc();
2023-07-22 05:03:42.071 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.071 UTC [2707929] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ v FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over SELECT rows
2023-07-22 05:03:42.071 UTC [2707929] STATEMENT:  SELECT testfunc();
2023-07-22 05:03:42.078 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.078 UTC [2707929] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ val FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 8 at FOR over EXECUTE statement
2023-07-22 05:03:42.078 UTC [2707929] STATEMENT:  SELECT testfunc();
2023-07-22 05:03:42.084 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.084 UTC [2707929] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over cursor
2023-07-22 05:03:42.084 UTC [2707929] STATEMENT:  SELECT testfunc();
2023-07-22 05:03:42.096 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.096 UTC [2707929] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 05:03:42.096 UTC [2707929] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 05:03:42.100 UTC [2707929] ERROR:  relation "ttx" does not exist at character 34
2023-07-22 05:03:42.100 UTC [2707929] QUERY:  SELECT /*+ SeqScan(t1) */ * FROM ttx ORDER BY id
2023-07-22 05:03:42.100 UTC [2707929] CONTEXT:  PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 05:03:42.100 UTC [2707929] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 05:03:42.100 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:42.100 UTC [2707929] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 05:03:45.129 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:45.129 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(t1) */ SELECT count(*) FROM t1 WHERE id < $1"
	PL/pgSQL function dynsql1(integer) line 4 at EXECUTE
2023-07-22 05:03:45.129 UTC [2707929] STATEMENT:  SELECT dynsql1(9000);
2023-07-22 05:03:48.165 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1): p1_c1_pkey
2023-07-22 05:03:48.165 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:03:48.165 UTC [2707929] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:03:48.165 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 05:03:48.165 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:03:48.165 UTC [2707929] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:03:48.165 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 05:03:48.165 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:03:48.165 UTC [2707929] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:03:48.166 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c1 p1_c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:48.166 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:03:48.166 UTC [2707929] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:03:48.166 UTC [2707929] LOG:  available indexes for IndexScan(p1_c2): p1_c2_pkey
2023-07-22 05:03:48.166 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:03:48.166 UTC [2707929] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:03:48.166 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c2 p1_c2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:48.166 UTC [2707929] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 05:03:48.166 UTC [2707929] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 05:03:49.176 UTC [2707929] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 05:03:49.176 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.176 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 05:03:49.176 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.177 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 05:03:49.177 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.179 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.179 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.181 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 05:03:49.181 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.182 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 05:03:49.182 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.183 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:03:49.183 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.184 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 05:03:49.184 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.184 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 05:03:49.184 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.184 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.184 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.190 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 05:03:49.190 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.191 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.191 UTC [2707929] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.192 UTC [2707929] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 05:03:49.192 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.193 UTC [2707929] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 05:03:49.193 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.194 UTC [2707929] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 05:03:49.194 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.194 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 05:03:49.194 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.194 UTC [2707929] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 05:03:49.194 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.195 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.195 UTC [2707929] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 05:03:49.196 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 05:03:49.196 UTC [2707929] STATEMENT:  /*+ Rows() */ SELECT 1;
2023-07-22 05:03:49.197 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 05:03:49.197 UTC [2707929] STATEMENT:  /*+ Rows(x) */ SELECT 1;
2023-07-22 05:03:49.207 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.207 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 #99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.213 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.213 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 +99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.217 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.217 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 -99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.220 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.220 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 *99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.224 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.01)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.224 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 *0.01) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.227 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #aa)
	
2023-07-22 05:03:49.227 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 #aa) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.231 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 /99)
	
2023-07-22 05:03:49.231 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 /99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.234 UTC [2707929] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999) 
2023-07-22 05:03:49.234 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99999)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.234 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 -99999) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 05:03:49.242 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #22)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.242 UTC [2707929] STATEMENT:  /*+ Rows(t1 t2 #22) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 05:03:49.246 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t3 *10)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.246 UTC [2707929] STATEMENT:  /*+ Rows(t1 t3 *10) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 05:03:49.251 UTC [2707929] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:49.251 UTC [2707929] STATEMENT:  /*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;
2023-07-22 05:03:50.082 UTC [2708013] ERROR:  extension "pg_hint_plan" must be installed in schema "hint_plan"
2023-07-22 05:03:50.082 UTC [2708013] STATEMENT:  CREATE EXTENSION pg_hint_plan SCHEMA other_schema;
2023-07-22 05:03:50.095 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.095 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.097 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.097 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.097 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.097 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) SELECT c1, c2 AS c_2 /*+SeqScan(t1)*/ FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.104 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.104 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.105 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.105 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.146 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.146 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) SELECT c1 FROM s1.t1;
2023-07-22 05:03:50.162 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.162 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.179 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.179 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 OR t1.c1 = 0;
2023-07-22 05:03:50.195 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.195 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.196 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.196 UTC [2708013] STATEMENT:  /*+ Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.197 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.197 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.197 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.197 UTC [2708013] STATEMENT:  /*+ Set (enable_indexscan"off") Set (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.198 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.198 UTC [2708013] STATEMENT:  /*+Set ( enable_indexscan"off")Set ( enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.199 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.199 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off" ) Set(enable_bitmapscan"off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.199 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.199 UTC [2708013] STATEMENT:  /*+Set( enable_indexscan "off" )Set( enable_bitmapscan "off" )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.200 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.200 UTC [2708013] STATEMENT:  /*+ Set ( enable_indexscan "off" ) Set ( enable_bitmapscan "off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.200 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.200 UTC [2708013] STATEMENT:  /*+	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.201 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.201 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.201 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.201 UTC [2708013] STATEMENT:  /*+	Set	(enable_indexscan"off")	Set	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.202 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.202 UTC [2708013] STATEMENT:  /*+Set	(	enable_indexscan"off")Set	(	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.202 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.202 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off"	)	Set(enable_bitmapscan"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.203 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.203 UTC [2708013] STATEMENT:  /*+Set(	enable_indexscan	"off"	)Set(	enable_bitmapscan	"off"	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.203 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.203 UTC [2708013] STATEMENT:  /*+	Set	(	enable_indexscan	"off"	)	Set	(	enable_bitmapscan	"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.204 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.204 UTC [2708013] STATEMENT:  /*+
	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.204 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.204 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.205 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.205 UTC [2708013] STATEMENT:  /*+
	Set
	(enable_indexscan"off")
	Set
	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.205 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.205 UTC [2708013] STATEMENT:  /*+Set
	(
	enable_indexscan"off")Set
	(
	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.206 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.206 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off"
	)
	Set(enable_bitmapscan"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.207 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.207 UTC [2708013] STATEMENT:  /*+Set(
	enable_indexscan
	"off"
	)Set(
	enable_bitmapscan
	"off"
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.207 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.207 UTC [2708013] STATEMENT:  /*+
	Set
	(
	enable_indexscan
	"off"
	)
	Set
	(
	enable_bitmapscan
	"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.208 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.208 UTC [2708013] STATEMENT:  /*+ 	
		 Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.209 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.209 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.209 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.209 UTC [2708013] STATEMENT:  /*+ 	
		 Set 	
		 (enable_indexscan"off") 	
		 Set 	
		 (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.210 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.210 UTC [2708013] STATEMENT:  /*+Set 	
		 ( 	
		 enable_indexscan"off")Set 	
		 ( 	
		 enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.211 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.211 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan"off" 	
		 ) 	
		 Set(enable_bitmapscan"off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.211 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.211 UTC [2708013] STATEMENT:  /*+Set( 	
		 enable_indexscan 	
		 "off" 	
		 )Set( 	
		 enable_bitmapscan 	
		 "off" 	
		 )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.212 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.212 UTC [2708013] STATEMENT:  /*+ 	
		 Set 	
		 ( 	
		 enable_indexscan 	
		 "off" 	
		 ) 	
		 Set 	
		 ( 	
		 enable_bitmapscan 	
		 "off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.213 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.213 UTC [2708013] STATEMENT:  /*+SeqScan(t)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 05:03:50.213 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.213 UTC [2708013] STATEMENT:  /*+SeqScan(ttt)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 05:03:50.214 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.214 UTC [2708013] STATEMENT:  /*+SeqScan("t")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 05:03:50.215 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.215 UTC [2708013] STATEMENT:  /*+SeqScan("ttt")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 05:03:50.215 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.215 UTC [2708013] STATEMENT:  /*+SeqScan(T)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 05:03:50.216 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.216 UTC [2708013] STATEMENT:  /*+SeqScan(TTT)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 05:03:50.216 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.216 UTC [2708013] STATEMENT:  /*+SeqScan("T")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 05:03:50.217 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.217 UTC [2708013] STATEMENT:  /*+SeqScan("TTT")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 05:03:50.218 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("(")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.218 UTC [2708013] STATEMENT:  /*+SeqScan("(")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "(" WHERE "(".c1 = 1;
2023-07-22 05:03:50.218 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:03:50.218 UTC [2708013] STATEMENT:  /*+SeqScan())*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 05:03:50.219 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.219 UTC [2708013] STATEMENT:  /*+SeqScan(")")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 05:03:50.219 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")))")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.219 UTC [2708013] STATEMENT:  /*+SeqScan(")))")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")))" WHERE ")))".c1 = 1;
2023-07-22 05:03:50.220 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.220 UTC [2708013] STATEMENT:  /*+SeqScan("""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """" WHERE """".c1 = 1;
2023-07-22 05:03:50.221 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""""""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.221 UTC [2708013] STATEMENT:  /*+SeqScan("""""""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """""""" WHERE """""""".c1 = 1;
2023-07-22 05:03:50.221 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:03:50.221 UTC [2708013] STATEMENT:  /*+SeqScan( )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 05:03:50.222 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(" ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.222 UTC [2708013] STATEMENT:  /*+SeqScan(" ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 05:03:50.222 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("   ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.222 UTC [2708013] STATEMENT:  /*+SeqScan("   ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "   " WHERE "   ".c1 = 1;
2023-07-22 05:03:50.223 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:03:50.223 UTC [2708013] STATEMENT:  /*+SeqScan(	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 05:03:50.223 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.223 UTC [2708013] STATEMENT:  /*+SeqScan("	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 05:03:50.224 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("			")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.224 UTC [2708013] STATEMENT:  /*+SeqScan("			")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "			" WHERE "			".c1 = 1;
2023-07-22 05:03:50.224 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 05:03:50.224 UTC [2708013] STATEMENT:  /*+SeqScan(
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 05:03:50.225 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.225 UTC [2708013] STATEMENT:  /*+SeqScan("
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 05:03:50.226 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	
	
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.226 UTC [2708013] STATEMENT:  /*+SeqScan("
	
	
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	
	
	" WHERE "
	
	
	".c1 = 1;
2023-07-22 05:03:50.226 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.226 UTC [2708013] STATEMENT:  /*+SeqScan(Set)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 05:03:50.227 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.227 UTC [2708013] STATEMENT:  /*+SeqScan("Set")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 05:03:50.227 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("Set SeqScan Leading")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.227 UTC [2708013] STATEMENT:  /*+SeqScan("Set SeqScan Leading")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set SeqScan Leading" WHERE "Set SeqScan Leading".c1 = 1;
2023-07-22 05:03:50.228 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.228 UTC [2708013] STATEMENT:  /*+SeqScan(あ)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 05:03:50.228 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.228 UTC [2708013] STATEMENT:  /*+SeqScan(あいう)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 05:03:50.229 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.229 UTC [2708013] STATEMENT:  /*+SeqScan("あ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 05:03:50.229 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.229 UTC [2708013] STATEMENT:  /*+SeqScan("あいう")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 05:03:50.232 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan("tT()"" 	
	Setあ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.232 UTC [2708013] STATEMENT:  /*+SeqScan("tT()"" 	
	Setあ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "tT()"" 	
	Setあ" WHERE "tT()"" 	
	Setあ".c1 = 1;
2023-07-22 05:03:50.232 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(a123456789b123456789c123456789d123456789e123456789f123)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.232 UTC [2708013] STATEMENT:  /*+SeqScan(a123456789b123456789c123456789d123456789e123456789f123)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "123456789012345678901234567890123456789012345678901234" WHERE "123456789012345678901234567890123456789012345678901234".c1 = 1;
2023-07-22 05:03:50.233 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.233 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)Set enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.233 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.233 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan off Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.234 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.234 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan "off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.235 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.235 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)SeqScan("")Set(enable_bitmapscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.235 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.235 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)NoSet(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.236 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.236 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)"Set"(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.241 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.241 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.243 UTC [2708013] ERROR:  invalid value for parameter "pg_hint_plan.debug_print": "enable"
2023-07-22 05:03:50.243 UTC [2708013] HINT:  Available values: off, on, detailed, verbose.
2023-07-22 05:03:50.243 UTC [2708013] STATEMENT:  SET pg_hint_plan.debug_print TO enable;
2023-07-22 05:03:50.250 UTC [2708013] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:03:50.250 UTC [2708013] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:03:50.250 UTC [2708013] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:03:50.250 UTC [2708013] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:03:50.250 UTC [2708013] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:03:50.250 UTC [2708013] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:03:50.253 UTC [2708013] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:03:50.253 UTC [2708013] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:03:50.254 UTC [2708013] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:03:50.254 UTC [2708013] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:03:50.254 UTC [2708013] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:03:50.254 UTC [2708013] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:03:50.254 UTC [2708013] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:03:50.255 UTC [2708013] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 05:03:50.255 UTC [2708013] DETAIL:  Opening parenthesis is necessary.
2023-07-22 05:03:50.255 UTC [2708013] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 05:03:50.255 UTC [2708013] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "fatal"
2023-07-22 05:03:50.255 UTC [2708013] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 05:03:50.255 UTC [2708013] STATEMENT:  SET pg_hint_plan.parse_messages TO fatal;
2023-07-22 05:03:50.256 UTC [2708013] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "panic"
2023-07-22 05:03:50.256 UTC [2708013] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 05:03:50.256 UTC [2708013] STATEMENT:  SET pg_hint_plan.parse_messages TO panic;
2023-07-22 05:03:50.256 UTC [2708013] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "on"
2023-07-22 05:03:50.256 UTC [2708013] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 05:03:50.256 UTC [2708013] STATEMENT:  SET pg_hint_plan.parse_messages TO on;
2023-07-22 05:03:50.261 UTC [2708013] ERROR:  parameter "pg_hint_plan.enable_hint_table" requires a Boolean value
2023-07-22 05:03:50.261 UTC [2708013] STATEMENT:  SET pg_hint_plan.enable_hint_table TO enable;
2023-07-22 05:03:50.276 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.276 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.277 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(no_table)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.277 UTC [2708013] STATEMENT:  /*+SeqScan(no_table)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.278 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	error hint:
	
2023-07-22 05:03:50.278 UTC [2708013] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.279 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	error hint:
	
2023-07-22 05:03:50.279 UTC [2708013] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.279 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	IndexScan(t1)
	error hint:
	
2023-07-22 05:03:50.279 UTC [2708013] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.280 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_indexscan enable)
	
2023-07-22 05:03:50.280 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan enable)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.286 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.286 UTC [2708013] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:03:50.288 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.288 UTC [2708013] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:03:50.289 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.289 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.290 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.290 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.290 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.290 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.291 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.291 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.291 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.291 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.292 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.292 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.294 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.294 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.295 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.295 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:03:50.297 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.297 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:03:50.298 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.298 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.299 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.299 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.299 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.299 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.300 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.300 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.300 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.300 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.301 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.301 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.302 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.302 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 05:03:50.311 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.311 UTC [2708013] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:03:50.313 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.313 UTC [2708013] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:03:50.315 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.315 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.315 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.315 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.316 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.316 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.316 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.316 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.317 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.317 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.317 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.317 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.319 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.319 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.320 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.320 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:03:50.322 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.322 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 05:03:50.323 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.323 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.324 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.324 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.324 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.324 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.325 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.325 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.326 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.326 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.326 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.326 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.328 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.328 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 05:03:50.338 UTC [2708013] ERROR:  prepared statement "p1" does not exist
2023-07-22 05:03:50.338 UTC [2708013] STATEMENT:  EXECUTE p1;
2023-07-22 05:03:50.341 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.341 UTC [2708013] STATEMENT:  /*+Set(enable_seqscan off)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.341 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.341 UTC [2708013] STATEMENT:  /*+SeqScan(t1)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.346 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1 t1)
	
2023-07-22 05:03:50.346 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 05:03:50.351 UTC [2708013] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 05:03:50.351 UTC [2708013] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 05:03:50.351 UTC [2708013] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.355 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.355 UTC [2708013] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.359 UTC [2708013] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 05:03:50.359 UTC [2708013] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 05:03:50.359 UTC [2708013] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.366 UTC [2708013] ERROR:  prepared statement "p2" does not exist
2023-07-22 05:03:50.366 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 05:03:50.367 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.367 UTC [2708013] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.373 UTC [2708013] ERROR:  prepared statement "p2" does not exist
2023-07-22 05:03:50.373 UTC [2708013] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 05:03:50.383 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.383 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.391 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.391 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.398 UTC [2708013] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.398 UTC [2708013] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.415 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.415 UTC [2708014] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.416 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.416 UTC [2708014] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.417 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.417 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.417 UTC [2708014] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.418 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.418 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.418 UTC [2708014] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.418 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.418 UTC [2708014] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.421 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.421 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.421 UTC [2708014] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.421 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.421 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.421 UTC [2708014] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.421 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.421 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.421 UTC [2708014] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.422 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.422 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.422 UTC [2708014] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.423 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.423 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.423 UTC [2708014] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.423 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.423 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.423 UTC [2708014] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.423 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.423 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.423 UTC [2708014] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.424 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.424 UTC [2708014] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 05:03:50.424 UTC [2708014] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.424 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.424 UTC [2708014] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 05:03:50.426 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.426 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.426 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.426 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.426 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.427 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.427 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.427 UTC [2708014] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:03:50.427 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	HashJoin(st_1 st_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.427 UTC [2708014] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:03:50.428 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.428 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.428 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:03:50.428 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.428 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 05:03:50.429 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.429 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.429 UTC [2708014] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.430 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st_1 st_2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.430 UTC [2708014] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.431 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.431 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.431 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.431 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.431 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.432 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.432 UTC [2708014] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 05:03:50.432 UTC [2708014] STATEMENT:  EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.433 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.433 UTC [2708014] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 05:03:50.433 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.434 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 05:03:50.434 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.434 UTC [2708014] ERROR:  function recall_planner_one_t(integer) does not exist
2023-07-22 05:03:50.434 UTC [2708014] STATEMENT:  DROP FUNCTION recall_planner_one_t(int);
2023-07-22 05:03:50.435 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.435 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.435 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.435 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 05:03:50.435 UTC [2708014] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.436 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.436 UTC [2708014] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 05:03:50.436 UTC [2708014] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.436 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	MergeJoin(t_1 t_2)
	error hint:
	
2023-07-22 05:03:50.436 UTC [2708014] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 05:03:50.446 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.446 UTC [2708014] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 05:03:50.447 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.447 UTC [2708014] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 05:03:50.459 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.459 UTC [2708014] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 05:03:50.459 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.459 UTC [2708014] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 05:03:50.463 UTC [2708014] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.463 UTC [2708014] STATEMENT:  EXPLAIN EXECUTE test_query(array[1,2,3]);
2023-07-22 05:03:50.489 UTC [2707899] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:03:50.490 UTC [2707899] LOG:  parameter "session_preload_libraries" changed to "pg_hint_plan"
2023-07-22 05:03:50.494 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.494 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.495 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.495 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 05:03:50.495 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.495 UTC [2708018] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 05:03:50.495 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.495 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.496 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.496 UTC [2708018] STATEMENT:  /*+SeqScan(s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.496 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.496 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.496 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.496 UTC [2708018] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.497 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.497 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = 1 AND t1.c1 = t2.c1;
2023-07-22 05:03:50.498 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.498 UTC [2708018] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.499 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.499 UTC [2708018] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 05:03:50.499 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(s2t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.499 UTC [2708018] STATEMENT:  /*+BitmapScan(s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 05:03:50.501 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.501 UTC [2708018] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 WHERE s1.t1.c1 = 1) FROM s1.t1 WHERE s1.t1.c1 = 1;
2023-07-22 05:03:50.501 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t11)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.501 UTC [2708018] STATEMENT:  /*+BitmapScan(t11)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 05:03:50.502 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t12)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.502 UTC [2708018] STATEMENT:  /*+BitmapScan(t12)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 05:03:50.503 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.503 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.506 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.506 UTC [2708018] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE p1.c1 = 1;
2023-07-22 05:03:50.507 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ul1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.507 UTC [2708018] STATEMENT:  /*+SeqScan(ul1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 WHERE ul1.c1 = 1;
2023-07-22 05:03:50.513 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tm1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.513 UTC [2708018] STATEMENT:  /*+SeqScan(tm1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 WHERE tm1.c1 = 1;
2023-07-22 05:03:50.514 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(pg_class)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.514 UTC [2708018] STATEMENT:  /*+SeqScan(pg_class)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class WHERE oid = 1;
2023-07-22 05:03:50.515 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(ft1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.515 UTC [2708018] STATEMENT:  /*+SeqScan(ft1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() AS ft1 WHERE ft1.c1 = 1;
2023-07-22 05:03:50.516 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(val1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.516 UTC [2708018] STATEMENT:  /*+SeqScan(val1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 05:03:50.516 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.516 UTC [2708018] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 05:03:50.518 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(c1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.518 UTC [2708018] STATEMENT:  /*+SeqScan(c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(c1) FROM s1.t1 WHERE t1.c1 = 1)
	SELECT * FROM s1.t1, c1 WHERE t1.c1 = 1 AND t1.c1 = c1.c1;
2023-07-22 05:03:50.518 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(v1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.518 UTC [2708018] STATEMENT:  /*+SeqScan(v1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 WHERE v1.c1 = 1;
2023-07-22 05:03:50.519 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.519 UTC [2708018] STATEMENT:  /*+SeqScan(s1)*/
	EXPLAIN (COSTS false) SELECT * FROM (SELECT * FROM s1.t1 WHERE t1.c1 = 1) AS s1 WHERE s1.c1 = 1;
2023-07-22 05:03:50.523 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.523 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.524 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.524 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.524 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.524 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.524 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.524 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.525 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.525 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.528 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.528 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.528 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.528 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.529 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.529 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.529 UTC [2708018] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:03:50.529 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.529 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.529 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.529 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.529 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.530 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.530 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:50.531 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.531 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:50.531 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.531 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:50.532 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.532 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:50.533 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.533 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:50.533 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.533 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:50.533 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.533 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:50.535 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.535 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:03:50.535 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.535 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:03:50.536 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.536 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:03:50.536 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.536 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:03:50.536 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.536 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 05:03:50.538 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.538 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.538 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.538 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.538 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.538 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.539 UTC [2708018] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:03:50.539 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.539 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.539 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.539 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.539 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.539 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.539 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:50.541 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.541 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:03:50.541 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.541 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:03:50.542 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.542 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:03:50.542 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.542 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:03:50.542 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.542 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 05:03:50.546 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.546 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.546 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.546 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.546 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.546 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.546 UTC [2708018] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:03:50.546 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.546 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.546 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.546 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.546 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.548 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.548 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.549 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.549 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.549 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.549 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.549 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.549 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.549 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.549 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.549 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.549 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.550 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.550 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.550 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.550 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.550 UTC [2708018] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 05:03:50.550 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.550 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.550 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.550 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.550 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.553 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.553 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.553 UTC [2708018] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:03:50.553 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.553 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.553 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.553 UTC [2708018] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 05:03:50.553 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.553 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.553 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.554 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.554 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.554 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.554 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.554 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.554 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.554 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.554 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.556 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.556 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.556 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.556 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.556 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.556 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.556 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.556 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.556 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.556 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.556 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.556 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.557 UTC [2708018] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 05:03:50.557 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.557 UTC [2708018] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 05:03:50.557 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.557 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.557 UTC [2708018] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.558 UTC [2708018] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:03:50.558 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.558 UTC [2708018] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:03:50.558 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.559 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r1)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.559 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.560 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.560 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.560 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.560 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.560 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.560 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.562 UTC [2708018] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:03:50.562 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.562 UTC [2708018] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:03:50.562 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.562 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.562 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.562 UTC [2708018] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:03:50.562 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.562 UTC [2708018] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:03:50.562 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.562 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.562 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.564 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.564 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.564 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.564 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.564 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.564 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.564 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.564 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.564 UTC [2708018] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:03:50.564 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.565 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.565 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.567 UTC [2708018] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:03:50.567 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.567 UTC [2708018] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:03:50.567 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.567 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.567 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.567 UTC [2708018] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:03:50.567 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.567 UTC [2708018] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:03:50.567 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.568 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.568 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.568 UTC [2708018] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 05:03:50.568 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.568 UTC [2708018] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 05:03:50.568 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.568 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.568 UTC [2708018] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.571 UTC [2708018] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 05:03:50.571 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.571 UTC [2708018] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 05:03:50.571 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.571 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.571 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.571 UTC [2708018] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 05:03:50.571 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.571 UTC [2708018] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 05:03:50.571 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.572 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.572 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.572 UTC [2708018] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 05:03:50.572 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.572 UTC [2708018] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 05:03:50.572 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.572 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.572 UTC [2708018] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.573 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.573 UTC [2708018] STATEMENT:  /*+BitmapScan(v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:50.574 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(v1t1)
	BitmapScan(v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.574 UTC [2708018] STATEMENT:  /*+SeqScan(v1t1)BitmapScan(v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:50.574 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(r4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.574 UTC [2708018] STATEMENT:  /*+BitmapScan(r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.575 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r4t1)
	BitmapScan(r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.575 UTC [2708018] STATEMENT:  /*+SeqScan(r4t1)BitmapScan(r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.575 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.575 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 05:03:50.575 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.575 UTC [2708018] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 05:03:50.575 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 05:03:50.575 UTC [2708018] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.575 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.575 UTC [2708018] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.576 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.576 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:03:50.576 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.576 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.576 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.576 UTC [2708018] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.576 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.576 UTC [2708018] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:03:50.576 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.576 UTC [2708018] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 05:03:50.577 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.577 UTC [2708018] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.577 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.577 UTC [2708018] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.577 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.577 UTC [2708018] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid IN ('(1,1)', '(2,2)', '(3,3)');
2023-07-22 05:03:50.577 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.577 UTC [2708018] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:03:50.577 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.577 UTC [2708018] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.578 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.578 UTC [2708018] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.578 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.578 UTC [2708018] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:03:50.578 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.578 UTC [2708018] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 05:03:50.578 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.578 UTC [2708018] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.578 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.578 UTC [2708018] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.578 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.578 UTC [2708018] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.579 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.579 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.579 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.579 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:03:50.579 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.579 UTC [2708018] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.579 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.579 UTC [2708018] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 05:03:50.580 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_i3
2023-07-22 05:03:50.580 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_i3 ti1_i2
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_i3
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_i3 ti1_i2
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.581 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:03:50.581 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.581 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:03:50.582 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3 ti1_i2
2023-07-22 05:03:50.582 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:03:50.582 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.582 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:03:50.582 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:03:50.582 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:03:50.582 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.582 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 05:03:50.587 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_btree
2023-07-22 05:03:50.587 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.587 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.587 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.587 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_hash
2023-07-22 05:03:50.587 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.587 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.587 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.587 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_gist
2023-07-22 05:03:50.587 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.587 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.587 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_gin
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_expr
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_uniq
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_multi
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.588 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.588 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_ts
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_c2_key
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.589 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_hash
2023-07-22 05:03:50.589 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_gist
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_gin
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_expr
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.590 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.590 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_uniq
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_multi
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_ts
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_c2_key
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.591 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.591 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 05:03:50.592 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_hash
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gist
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gin
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.592 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.592 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.593 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_expr
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 05:03:50.593 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 05:03:50.593 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 05:03:50.593 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 05:03:50.593 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_uniq
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.593 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.593 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_multi
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.593 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.593 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.594 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_ts
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 05:03:50.594 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 05:03:50.594 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.594 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.594 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_c2_key
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 05:03:50.594 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 05:03:50.594 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.594 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.594 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.597 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 05:03:50.597 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.597 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.597 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.600 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 05:03:50.600 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.600 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.600 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.603 UTC [2708018] LOG:  available indexes for IndexScan(ti1):
2023-07-22 05:03:50.603 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.603 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.603 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.606 UTC [2708018] LOG:  available indexes for BitmapScan(ti1):
2023-07-22 05:03:50.606 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.606 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.606 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.609 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1):
2023-07-22 05:03:50.609 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.609 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.609 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 05:03:50.612 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.612 UTC [2708018] STATEMENT:  /*+TidScan(t1)*/ EXPLAIN (COSTS true) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.615 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.615 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE c1 = 100;
2023-07-22 05:03:50.615 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.615 UTC [2708018] STATEMENT:  /*+SeqScan(t1)BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.616 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.616 UTC [2708018] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.616 UTC [2708018] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:03:50.616 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.616 UTC [2708018] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:03:50.616 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.616 UTC [2708018] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 05:03:50.616 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.616 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	TidScan(b4t1)
	not used hint:
	SeqScan(b1t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.616 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.617 UTC [2708018] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:03:50.617 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.617 UTC [2708018] LOG:  available indexes for BitmapScan(b4t2): t2_pkey
2023-07-22 05:03:50.617 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.617 UTC [2708018] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 05:03:50.617 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.617 UTC [2708018] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 05:03:50.617 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.617 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	SeqScan(b2t2)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	BitmapScan(b4t2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.617 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.618 UTC [2708018] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:03:50.618 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.618 UTC [2708018] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 05:03:50.618 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.618 UTC [2708018] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 05:03:50.618 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.618 UTC [2708018] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 05:03:50.618 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.618 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.618 UTC [2708018] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 05:03:50.618 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.618 UTC [2708018] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.619 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.619 UTC [2708018] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.619 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.619 UTC [2708018] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.619 UTC [2708018] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 05:03:50.619 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.619 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.619 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.619 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.619 UTC [2708018] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.620 UTC [2708018] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 05:03:50.620 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.620 UTC [2708018] LOG:  available indexes for IndexScan(p1c1): p1c1_pkey
2023-07-22 05:03:50.620 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.620 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.620 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 05:03:50.620 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.620 UTC [2708018] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.621 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.621 UTC [2708018] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.622 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.622 UTC [2708018] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.622 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2c1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.622 UTC [2708018] STATEMENT:  /*+IndexScan(p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.625 UTC [2708018] LOG:  available indexes for IndexScan(p1): p1_parent
2023-07-22 05:03:50.625 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 05:03:50.625 UTC [2708018] LOG:  available indexes for IndexScan(p1c1): p1c1_c4_expr_idx
2023-07-22 05:03:50.625 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 05:03:50.625 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_parent)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.625 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 05:03:50.628 UTC [2708018] LOG:  available indexes for IndexScan(p1): p1_i2
2023-07-22 05:03:50.628 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:03:50.628 UTC [2708018] LOG:  available indexes for IndexScan(p1c1):
2023-07-22 05:03:50.628 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:03:50.628 UTC [2708018] LOG:  available indexes for IndexScan(p1c2):
2023-07-22 05:03:50.628 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:03:50.628 UTC [2708018] LOG:  available indexes for IndexScan(p1c3):
2023-07-22 05:03:50.628 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:03:50.628 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.628 UTC [2708018] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 05:03:50.631 UTC [2708018] LOG:  available indexes for IndexScan(p2):
2023-07-22 05:03:50.631 UTC [2708018] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.631 UTC [2708018] LOG:  available indexes for IndexScan(p2c1): p2c1_pkey
2023-07-22 05:03:50.631 UTC [2708018] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.631 UTC [2708018] LOG:  available indexes for IndexScan(p2c1c1):
2023-07-22 05:03:50.631 UTC [2708018] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.631 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.631 UTC [2708018] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 05:03:50.634 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	IndexScan(ti1)
	error hint:
	
2023-07-22 05:03:50.634 UTC [2708018] STATEMENT:  /*+IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.634 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 05:03:50.634 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.634 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 05:03:50.634 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.635 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	BitmapScan(ti1)
	IndexScan(ti1)
	error hint:
	
2023-07-22 05:03:50.635 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1) IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.635 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 05:03:50.635 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.635 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	BitmapScan(ti1 ti1_hash)
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 05:03:50.635 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.635 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.635 UTC [2708018] STATEMENT:  /*+SeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.635 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.635 UTC [2708018] STATEMENT:  /*+SeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+SeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+IndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_btree ti1_pkey
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  available indexes for BitmapScan(ti1): ti1_btree ti1_pkey
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.636 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.636 UTC [2708018] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	TidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+TidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+TidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+TidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+NoSeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.637 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.637 UTC [2708018] STATEMENT:  /*+NoIndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoBitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoTidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.638 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.638 UTC [2708018] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree ti1_pkey
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+NoIndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey)
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.639 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 05:03:50.639 UTC [2708018] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  available indexes for IndexScanRegexp(ti1): ti1_c2_key
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_.*_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  available indexes for IndexScanRegexp(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_i.)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  available indexes for IndexScanRegexp(ti1):
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_pkey
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.640 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 .*pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.640 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScanRegexp(p1): p1_i2 p1_i
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_i p1c1_c4_expr_idx
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1.*i)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScanRegexp(p1c1):
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScan(ti1):
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_i2 ti1_i1
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.641 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.641 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.642 UTC [2708018] LOG:  available indexes for IndexScan(ti1):
2023-07-22 05:03:50.642 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.642 UTC [2708018] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist1 not_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.642 UTC [2708018] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 05:03:50.650 UTC [2707899] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:03:50.650 UTC [2707899] LOG:  parameter "session_preload_libraries" removed from configuration file, reset to default
2023-07-22 05:03:50.683 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.683 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.685 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.685 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:03:50.685 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.685 UTC [2708090] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:03:50.686 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.686 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.687 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s1.t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.687 UTC [2708090] STATEMENT:  /*+HashJoin(s1.t1 s1.t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.688 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.688 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.689 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.689 UTC [2708090] STATEMENT:  /*+HashJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.690 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.690 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.693 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 05:03:50.693 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.694 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.694 UTC [2708090] STATEMENT:  /*+HashJoin(s1.t1 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.696 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(s2t1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.696 UTC [2708090] STATEMENT:  /*+HashJoin(t1 s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 05:03:50.699 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.699 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.700 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.700 UTC [2708090] STATEMENT:  /*+NestLoop(st1 st2)HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.701 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.701 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.703 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 05:03:50.703 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.704 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	HashJoin(t2 t2)
	
2023-07-22 05:03:50.704 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t1)HashJoin(t2 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.708 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1 t2 t2)
	
2023-07-22 05:03:50.708 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.709 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.709 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.712 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.712 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.714 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.714 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.720 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.720 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.723 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.723 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 05:03:50.725 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.725 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.726 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.726 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.726 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(*VALUES* t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.726 UTC [2708090] STATEMENT:  /*+NestLoop(*VALUES* t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.728 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(c1 t1)
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.728 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)HashJoin(t1 c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 05:03:50.729 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.729 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.730 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.730 UTC [2708090] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.731 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.731 UTC [2708090] STATEMENT:  /*+MergeJoin(t1 t2)NestLoop(st1 st2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 05:03:50.737 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.737 UTC [2708090] STATEMENT:  /*+HashJoin(t1 st2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:03:50.737 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.737 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:03:50.741 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.741 UTC [2708090] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:03:50.745 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.745 UTC [2708090] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:03:50.747 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.747 UTC [2708090] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:03:50.748 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.748 UTC [2708090] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:03:50.750 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.750 UTC [2708090] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.753 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.753 UTC [2708090] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.757 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.757 UTC [2708090] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.766 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.766 UTC [2708090] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 05:03:50.767 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(bmt1 c1)
	Leading(c1 bmt1)
	not used hint:
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.767 UTC [2708090] STATEMENT:  /*+
	Leading(c1 bmt1)
	HashJoin(bmt1 c1)
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.769 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.769 UTC [2708090] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.772 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	MergeJoin(bmt4 c1)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	HashJoin(bmt3 bmt4 c1)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.772 UTC [2708090] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.774 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	MergeJoin(bmt4 c1)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.774 UTC [2708090] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.776 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r1 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.776 UTC [2708090] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r1)
	MergeJoin(t4 t3 t2 t1 r1)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.777 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	NestLoop(b1t2 b1t3 b1t4)
	HashJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r1_)
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.777 UTC [2708090] STATEMENT:  /*+
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	MergeJoin(b1t4 b1t3 b1t2 b1t1 r1_)
	HashJoin(b1t4 b1t3 b1t2 b1t1)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.779 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.779 UTC [2708090] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.780 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.780 UTC [2708090] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.781 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.781 UTC [2708090] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.782 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.782 UTC [2708090] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.784 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.784 UTC [2708090] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.785 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.785 UTC [2708090] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.785 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.785 UTC [2708090] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.787 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b2t1 b2t2 b2t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.787 UTC [2708090] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.788 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.788 UTC [2708090] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.788 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.788 UTC [2708090] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.789 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 05:03:50.789 UTC [2708090] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:50.790 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.790 UTC [2708090] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:50.790 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(r4t1 r4t1)
	
2023-07-22 05:03:50.790 UTC [2708090] STATEMENT:  /*+HashJoin(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.791 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.791 UTC [2708090] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.791 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t3)
	NestLoop(t1 t2 t3)
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.791 UTC [2708090] STATEMENT:  /*+ Leading(t3 t1 t2) HashJoin(t3 t1)NestLoop(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.791 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	NestLoop(*VALUES* t1 t2)
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.791 UTC [2708090] STATEMENT:  /*+ Leading(*VALUES* t1 t2) HashJoin(*VALUES* t1)NestLoop(*VALUES* t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.792 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	HashJoin(t2 t3 t4)
	MergeJoin(t1 t2 t3 t4)
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.792 UTC [2708090] STATEMENT:  /*+ Leading(t4 t3 t2 t1) NestLoop(t4 t3)HashJoin(t4 t3 t2)MergeJoin(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.793 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	duplication hint:
	error hint:
	HashJoin(*VALUES* t2 t3)
	MergeJoin(*VALUES* t1 t2 t3)
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 05:03:50.793 UTC [2708090] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) NestLoop(t4 t3)HashJoin(*VALUES* t3 t2)MergeJoin(*VALUES* t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.793 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.793 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.793 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.793 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.793 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.793 UTC [2708090] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.794 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.794 UTC [2708090] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 05:03:50.794 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.794 UTC [2708090] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.794 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.794 UTC [2708090] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.795 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.795 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.795 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.795 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.795 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.795 UTC [2708090] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.795 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.795 UTC [2708090] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.795 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.795 UTC [2708090] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.795 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.795 UTC [2708090] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.796 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.796 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.796 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.796 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.796 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.796 UTC [2708090] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.796 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.796 UTC [2708090] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.796 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.796 UTC [2708090] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.796 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.796 UTC [2708090] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.798 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.798 UTC [2708090] STATEMENT:  /*+MergeJoin(p1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:03:50.798 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p1c1 p2c1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.798 UTC [2708090] STATEMENT:  /*+MergeJoin(p1c1 p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:03:50.799 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p2 pt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.799 UTC [2708090] STATEMENT:  /*+MergeJoin(pt1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 05:03:50.800 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p2c1 pt1_c1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.800 UTC [2708090] STATEMENT:  /*+MergeJoin(pt1_c1 p2c1)*/ /* will ignored */
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 05:03:50.800 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:03:50.800 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.800 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:03:50.800 UTC [2708090] STATEMENT:  /*+MergeJoin(t1 t2)HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.800 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:03:50.800 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.800 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 05:03:50.800 UTC [2708090] STATEMENT:  /*+MergeJoin(t2 t1)HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+HashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+MergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NestLoop()*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1)
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NestLoop(t1)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 05:03:50.801 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.801 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2 t3)*/
	SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE false;
2023-07-22 05:03:50.802 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.802 UTC [2708090] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1 FULL OUTER JOIN s1.t2 ON (t1.c1 = t2.c1);
2023-07-22 05:03:50.807 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.807 UTC [2708090] STATEMENT:  /*+ nomemoize(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 05:03:50.807 UTC [2708090] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.807 UTC [2708090] STATEMENT:  /*+ nomemoize(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 05:03:50.815 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.815 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.816 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.816 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 05:03:50.816 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t_4 t_2 t_3 t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.816 UTC [2708108] STATEMENT:  /*+Leading(t_4 t_2 t_3 t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 05:03:50.817 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.817 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.817 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t4 s1.t2 s1.t3 s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.817 UTC [2708108] STATEMENT:  /*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.817 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.817 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.818 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t5 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.818 UTC [2708108] STATEMENT:  /*+Leading(t5 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.818 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.818 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.819 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t3 t1)
	
2023-07-22 05:03:50.819 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.820 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t1 t2 t3 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.820 UTC [2708108] STATEMENT:  /*+Leading(s1.t1 t2 t3 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.821 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(s2t1 t1 t3 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.821 UTC [2708108] STATEMENT:  /*+Leading(s2t1 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 05:03:50.823 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.823 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.823 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(st1 st2 st3 st4)
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.823 UTC [2708108] STATEMENT:  /*+Leading(st1 st2 st3 st4)Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.824 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.824 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.824 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4)
	
2023-07-22 05:03:50.824 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.825 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t4)
	
2023-07-22 05:03:50.825 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.825 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4 t2 t3 t1)
	
2023-07-22 05:03:50.825 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.826 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t2 t4)
	
2023-07-22 05:03:50.826 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t2 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.826 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.826 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.829 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.829 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.829 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.829 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.833 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.833 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.835 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.835 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
2023-07-22 05:03:50.835 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.835 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.836 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.836 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t1 (c1, c2, c3, c4), s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.838 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(ct4 ct3 ct2 ct1)
	Leading(st4 st3 st2 st1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.838 UTC [2708108] STATEMENT:  /*+Leading(ct4 ct3 ct2 ct1)Leading(st4 st3 st2 st1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
2023-07-22 05:03:50.839 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.839 UTC [2708108] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.840 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 v1t1_ v1t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.840 UTC [2708108] STATEMENT:  /*+Leading(t4 v1t1_ v1t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.841 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(st4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.841 UTC [2708108] STATEMENT:  /*+Leading(st4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 05:03:50.842 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.842 UTC [2708108] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 05:03:50.844 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.844 UTC [2708108] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:03:50.847 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.847 UTC [2708108] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 05:03:50.848 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.848 UTC [2708108] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:03:50.849 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.849 UTC [2708108] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 05:03:50.851 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.851 UTC [2708108] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.854 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.854 UTC [2708108] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.858 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.858 UTC [2708108] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:50.866 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.866 UTC [2708108] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 05:03:50.867 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.867 UTC [2708108] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 05:03:50.868 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.868 UTC [2708108] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.872 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.872 UTC [2708108] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.874 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.874 UTC [2708108] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 05:03:50.875 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.875 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r1) */
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.877 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.877 UTC [2708108] STATEMENT:  /*+ Leading(b1t1 b1t2 b1t3 b1t4 r1_) */
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.879 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.879 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.879 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.879 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.881 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.881 UTC [2708108] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.881 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.881 UTC [2708108] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.883 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.883 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.884 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.884 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.884 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.884 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.887 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.887 UTC [2708108] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.887 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.887 UTC [2708108] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.887 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.887 UTC [2708108] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.888 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(v1t1 v1t1)
	
2023-07-22 05:03:50.888 UTC [2708108] STATEMENT:  /*+Leading(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:50.889 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.889 UTC [2708108] STATEMENT:  /*+Leading(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:50.889 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(r4t1 r4t1)
	
2023-07-22 05:03:50.889 UTC [2708108] STATEMENT:  /*+Leading(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.890 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.890 UTC [2708108] STATEMENT:  /*+Leading(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.890 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.890 UTC [2708108] STATEMENT:  /*+ Leading(t3 t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.891 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.891 UTC [2708108] STATEMENT:  /*+ Leading(*VALUES* t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.891 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.891 UTC [2708108] STATEMENT:  /*+ Leading(t4 t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.892 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 05:03:50.892 UTC [2708108] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.892 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.892 UTC [2708108] STATEMENT:  /*+Leading(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.893 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.893 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.894 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t1 t2 t3)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.894 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.895 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.895 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:50.895 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 v2t1 v2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.895 UTC [2708108] STATEMENT:  /*+Leading(t1 v2t1 v2t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 05:03:50.896 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(v2t1 v2t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.896 UTC [2708108] STATEMENT:  /*+Leading(v2t1 v2t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 05:03:50.897 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.897 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.898 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.898 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.899 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.899 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.899 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(p2c1c1 p2c2c1 p2c3c1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.899 UTC [2708108] STATEMENT:  /*+Leading(p2c1c1 p2c2c1 p2c3c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.900 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 05:03:50.900 UTC [2708108] STATEMENT:  /*+Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.900 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 05:03:50.900 UTC [2708108] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.900 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 05:03:50.900 UTC [2708108] STATEMENT:  /*+Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.900 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	error hint:
	Leading()
	
2023-07-22 05:03:50.900 UTC [2708108] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.901 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 05:03:50.901 UTC [2708108] STATEMENT:  /*+Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.901 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1)
	
2023-07-22 05:03:50.901 UTC [2708108] STATEMENT:  /*+Leading(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.901 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.901 UTC [2708108] STATEMENT:  /*+Leading(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.902 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.902 UTC [2708108] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 05:03:50.902 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2))
	
2023-07-22 05:03:50.902 UTC [2708108] STATEMENT:  /*+Leading((t2))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.902 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading((t2 t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.902 UTC [2708108] STATEMENT:  /*+Leading((t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.903 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2 t3 t4))
	
2023-07-22 05:03:50.903 UTC [2708108] STATEMENT:  /*+Leading((t2 t3 t4))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.903 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.903 UTC [2708108] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.904 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t3) t4) t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.904 UTC [2708108] STATEMENT:  /*+Leading((((t1 t3) t4) t2)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.904 UTC [2708108] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t3 (t4 t2))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.904 UTC [2708108] STATEMENT:  /*+Leading((t1 (t3 (t4 t2))))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:50.913 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.913 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.915 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.915 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.917 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.917 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.917 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.917 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.920 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.920 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.920 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.920 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.923 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.923 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.924 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.924 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.925 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.925 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.928 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.928 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.929 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.929 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.929 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.929 UTC [2708112] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 05:03:50.930 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 05:03:50.930 UTC [2708112] STATEMENT:  /*+Set(1234567890123456789012345678901234567890123456789012345678901234 1)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.930 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)
	
2023-07-22 05:03:50.930 UTC [2708112] STATEMENT:  /*+Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.931 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(block_size 16384)
	
2023-07-22 05:03:50.931 UTC [2708112] STATEMENT:  /*+Set(block_size 16384)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.931 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_mode off)
	
2023-07-22 05:03:50.931 UTC [2708112] STATEMENT:  /*+Set(archive_mode off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.931 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_timeout 0)
	
2023-07-22 05:03:50.931 UTC [2708112] STATEMENT:  /*+Set(archive_timeout 0)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.931 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_connections off)
	
2023-07-22 05:03:50.931 UTC [2708112] STATEMENT:  /*+Set(log_connections off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.931 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(log_min_messages WARNING)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.931 UTC [2708112] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.934 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_min_messages WARNING)
	
2023-07-22 05:03:50.934 UTC [2708112] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.934 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.934 UTC [2708112] STATEMENT:  /*+Set(enable_seqscan on)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 05:03:50.937 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	
2023-07-22 05:03:50.937 UTC [2708112] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan off)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:03:50.937 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	Set(client_min_messages DEBUG2)
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	
2023-07-22 05:03:50.937 UTC [2708112] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBUG2)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:03:50.937 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	Set(enable_indexscan o)
	
2023-07-22 05:03:50.937 UTC [2708112] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan o)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:03:50.938 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	Set(client_min_messages DEBU)
	
2023-07-22 05:03:50.938 UTC [2708112] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBU)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 05:03:50.938 UTC [2708112] LOG:  pg_hint_plan:
	used hint:
	IndexScan(a)
	not used hint:
	SeqScan(c)
	duplication hint:
	SeqScan(a)
	error hint:
	NestLoop(a)
	
2023-07-22 05:03:50.938 UTC [2708112] STATEMENT:  /*+SeqScan(a)IndexScan(a)SeqScan(c)NestLoop(a) */
	SELECT * FROM s1.t1 a, s1.t2 b WHERE false;
2023-07-22 05:03:50.948 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.948 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.951 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.951 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:03:50.954 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t_1 t_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.954 UTC [2708116] STATEMENT:  /*+Rows(t_1 t_2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 05:03:50.957 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.957 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.960 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s1.t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.960 UTC [2708116] STATEMENT:  /*+Rows(s1.t1 s1.t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.963 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.963 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.966 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.966 UTC [2708116] STATEMENT:  /*+Rows(t3 t4 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.968 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.968 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.974 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 05:03:50.974 UTC [2708116] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.977 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s2.t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.977 UTC [2708116] STATEMENT:  /*+Rows(s1.t1 s2.t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 05:03:50.983 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(s2t1 t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.983 UTC [2708116] STATEMENT:  /*+Rows(t1 s2t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 05:03:50.989 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.989 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.992 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.992 UTC [2708116] STATEMENT:  /*+Rows(st1 st2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.995 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:50.995 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:50.998 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 05:03:50.998 UTC [2708116] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.011 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.011 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.017 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.017 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.023 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.023 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.032 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.032 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.040 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.040 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM t_pg_class t1, t_pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 05:03:51.045 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.045 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.051 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.051 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.054 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(*VALUES* t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.054 UTC [2708116] STATEMENT:  /*+Rows(*VALUES* t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.060 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(c1 t1 +1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.060 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 c1 +1)*/
	EXPLAIN WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 05:03:51.066 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.066 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.069 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.069 UTC [2708116] STATEMENT:  /*+Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.075 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.075 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)Rows(st1 st2 #1)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 05:03:51.081 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(st2 t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.081 UTC [2708116] STATEMENT:  /*+Rows(t1 st2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:03:51.084 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.084 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 05:03:51.087 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 #1)
	
2023-07-22 05:03:51.087 UTC [2708116] STATEMENT:  /*+Rows(t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.090 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 1)
	
2023-07-22 05:03:51.090 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.093 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #notrows)
	
2023-07-22 05:03:51.093 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #notrows)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.097 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.097 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:51.101 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.101 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:51.105 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.105 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:51.110 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.110 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 05:03:51.113 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.113 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.117 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.117 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.120 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.120 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.124 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.124 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.127 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.127 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	);
2023-07-22 05:03:51.131 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.131 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 05:03:51.136 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.136 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 05:03:51.140 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.140 UTC [2708116] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 05:03:51.145 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.145 UTC [2708116] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 05:03:51.150 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(c1 c2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 c1 c2 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.150 UTC [2708116] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(c2 c1 #1)Rows(c2 c1 bmt1 #1)Rows(c2 c1 bmt1 bmt2 #1)Rows(c2 c1 bmt1 bmt2 bmt3 #1)Rows(c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1;
2023-07-22 05:03:51.156 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.156 UTC [2708116] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 05:03:51.163 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(c2 c3 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(c1 c2 c3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 c1 c2 c3 #1)
	Rows(bmt1 bmt2 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 c3 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.163 UTC [2708116] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(c3 c2 #1)Rows(c3 c2 c1 #1)Rows(c3 c2 c1 bmt1 #1)Rows(c3 c2 c1 bmt1 bmt2 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 05:03:51.167 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.167 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 05:03:51.170 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	Rows(bmt1 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.170 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt1)
	Rows(bmt1 c1 #1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 05:03:51.173 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.173 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	);
2023-07-22 05:03:51.177 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Rows(bmt2 c1 #1)
	Rows(bmt1 bmt2 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.177 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Rows(c1 bmt2 #1)
	Rows(c1 bmt1 bmt2 #1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	)
	;
2023-07-22 05:03:51.189 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.189 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 05:03:51.201 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	Rows(b1t3 b1t4 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t3 b3t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t2 b2t3 b2t4 #1)
	Rows(b3t2 b3t3 b3t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.201 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	Rows(b2t4 b2t3 #1)
	Rows(b2t4 b2t3 b2t2 #1)
	Rows(b2t4 b2t3 b2t2 b2t1 #1)
	Rows(b3t4 b3t3 #1)
	Rows(b3t4 b3t3 b3t2 #1)
	Rows(b3t4 b3t3 b3t2 b3t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 05:03:51.213 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.213 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 05:03:51.225 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Rows(b1t3 b1t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.225 UTC [2708116] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 05:03:51.229 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.229 UTC [2708116] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.232 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.232 UTC [2708116] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 t2 t3 t4 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 #2)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.235 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.235 UTC [2708116] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.239 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r1_ #2)
	Rows(b1t1 b1t2 r1_ #2)
	Rows(b1t1 b1t2 b1t3 r1_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r1_ #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.239 UTC [2708116] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(r1_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r1_ b1t1 b1t2 b1t3 #2)
	Rows(r1_ b1t1 b1t2 #2)
	Rows(r1_ b1t1 #2)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.242 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.242 UTC [2708116] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.243 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.243 UTC [2708116] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.246 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.246 UTC [2708116] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.246 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.246 UTC [2708116] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.250 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.250 UTC [2708116] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.250 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.250 UTC [2708116] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.254 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.254 UTC [2708116] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.254 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.254 UTC [2708116] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.258 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.258 UTC [2708116] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.258 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.258 UTC [2708116] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.259 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.259 UTC [2708116] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.262 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.262 UTC [2708116] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.263 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.263 UTC [2708116] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.263 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.263 UTC [2708116] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.267 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.267 UTC [2708116] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.267 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.267 UTC [2708116] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.267 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.267 UTC [2708116] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.271 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b2t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.271 UTC [2708116] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.271 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b1t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.271 UTC [2708116] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.272 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b3t1 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b1t1 r3_ #2)
	Rows(b2t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.272 UTC [2708116] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 05:03:51.275 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 05:03:51.275 UTC [2708116] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:51.278 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	Rows(v1t1 v1t1 #1)
	
2023-07-22 05:03:51.278 UTC [2708116] STATEMENT:  /*+HashJoin(v1t1 v1t1)Rows(v1t1 v1t1 #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:51.281 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.281 UTC [2708116] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:51.283 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.283 UTC [2708116] STATEMENT:  /*+NestLoop(v1t1 v1t1_)Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 05:03:51.292 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.292 UTC [2708116] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.295 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	Rows(r4t1 r5t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.295 UTC [2708116] STATEMENT:  /*+NestLoop(r4t1 r5t1)Rows(r4t1 r5t1 #1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.302 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	Rows(t1 t3 #2)
	Rows(t1 t2 t3 #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.302 UTC [2708116] STATEMENT:  /*+ Leading(t3 t1 t2) Rows(t3 t1 #2)Rows(t3 t1 t2 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:51.305 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	Rows(*VALUES* t1 #2)
	Rows(*VALUES* t1 t2 #20)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.305 UTC [2708116] STATEMENT:  /*+ Leading(*VALUES* t1 t2) Rows(*VALUES* t1 #2)Rows(*VALUES* t1 t2 #20)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 05:03:51.311 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	Rows(t3 t4 #2)
	Rows(t2 t3 t4 #2)
	Rows(t1 t2 t3 t4 #2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.311 UTC [2708116] STATEMENT:  /*+ Leading(t4 t3 t2 t1) Rows(t4 t3 #2) Rows(t4 t3 t2 #2)Rows(t4 t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:51.315 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #2)
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	Rows(*VALUES* t2 t3 #2)
	Rows(*VALUES* t1 t2 t3 #2)
	
2023-07-22 05:03:51.315 UTC [2708116] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) Rows(t4 t3 #2)Rows(*VALUES* t3 t2 #2)Rows(*VALUES* t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 05:03:51.321 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.321 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.328 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 *0.6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.328 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 *0.6)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.334 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt4 *0.5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.334 UTC [2708116] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt1 *0.5)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 05:03:51.337 UTC [2708116] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 #0)
2023-07-22 05:03:51.338 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.338 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.341 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.341 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #5)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.344 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.344 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.347 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.347 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 -1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.350 UTC [2708116] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -1000)
2023-07-22 05:03:51.350 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1000)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.350 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 -1000)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.353 UTC [2708116] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 *0)
2023-07-22 05:03:51.353 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.353 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 *0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.356 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.356 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 *2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.359 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.359 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 *0.1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.366 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(p1 p2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.366 UTC [2708116] STATEMENT:  /*+Rows(p1 p2 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:03:51.373 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(p1c1 p2c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.373 UTC [2708116] STATEMENT:  /*+Rows(p1c1 p2c1 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 05:03:51.379 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:03:51.379 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.385 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:03:51.385 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.391 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:03:51.391 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.397 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 05:03:51.397 UTC [2708116] STATEMENT:  /*+Rows(t2 t1 #1)Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.403 UTC [2708116] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.403 UTC [2708116] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 05:03:51.446 UTC [2708884] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	SeqScan(ft_1)
	SeqScan(ft_2)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.446 UTC [2708884] STATEMENT:  /*+SeqScan(t1)SeqScan(ft_1)SeqScan(ft_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:03:51.456 UTC [2708884] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(ft_1 ft_2)
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.456 UTC [2708884] STATEMENT:  /*+MergeJoin(ft_1 ft_2)Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:03:51.466 UTC [2708884] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.466 UTC [2708884] STATEMENT:  /*+Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:03:51.476 UTC [2708884] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	Rows(ft_1 ft_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.476 UTC [2708884] STATEMENT:  /*+Rows(ft_1 ft_2 #1)Leading(ft_1 ft_2 t1)*/
	EXPLAIN SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 05:03:51.535 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.535 UTC [2708915] STATEMENT:  /*+Parallel(t1 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:03:51.536 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(t11 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.536 UTC [2708915] STATEMENT:  /*+Parallel(t11 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 as t11, s1.t1 as t12;
2023-07-22 05:03:51.538 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.538 UTC [2708915] STATEMENT:  /*+Parallel(t1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:03:51.539 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.539 UTC [2708915] STATEMENT:  /*+Parallel(t1 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:03:51.540 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.540 UTC [2708915] STATEMENT:  /*+Parallel(t1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 05:03:51.541 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 4 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.541 UTC [2708915] STATEMENT:  /*+Parallel(t1 4 hard) */ /* to be gather merge*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ORDER BY s1.t1.c1 LIMIT 4;
2023-07-22 05:03:51.548 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.548 UTC [2708915] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.549 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.549 UTC [2708915] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.552 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.552 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.553 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.553 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.555 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.555 UTC [2708915] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.557 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.557 UTC [2708915] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.561 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.561 UTC [2708915] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:03:51.563 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 soft)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.563 UTC [2708915] STATEMENT:  /*+Parallel(p1_c1_c1 8 soft) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:03:51.565 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.565 UTC [2708915] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:03:51.566 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.566 UTC [2708915] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 05:03:51.578 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.578 UTC [2708915] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.580 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.580 UTC [2708915] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.582 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.582 UTC [2708915] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.584 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.584 UTC [2708915] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.587 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.587 UTC [2708915] STATEMENT:  /*+Parallel(p2 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.588 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.588 UTC [2708915] STATEMENT:  /*+Parallel(p2 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.590 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.590 UTC [2708915] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.591 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.591 UTC [2708915] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.593 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.593 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.594 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.594 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.596 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.596 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.597 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.597 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.598 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.598 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.599 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.599 UTC [2708915] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.600 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	Parallel(p1 0 hard)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.600 UTC [2708915] STATEMENT:  /*+Parallel(p1 0 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 05:03:51.602 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.602 UTC [2708915] STATEMENT:  /*+Parallel(p1 8) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:03:51.602 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Set(max_parallel_workers_per_gather 1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.602 UTC [2708915] STATEMENT:  /*+Set(max_parallel_workers_per_gather 1)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:03:51.603 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 6 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.603 UTC [2708915] STATEMENT:  /*+Parallel(p1 5 hard)Parallel(p2 6 hard) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:03:51.604 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.604 UTC [2708915] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.604 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.604 UTC [2708915] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 05:03:51.605 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Parallel(p1 100x hard)
	Parallel(p1 -1000 hard)
	Parallel(p1 1000000 hard)
	Parallel(p1 8 soft)
	Parallel()
	Parallel()
	
2023-07-22 05:03:51.605 UTC [2708915] STATEMENT:  /*+Parallel(p1 100x hard)Parallel(p1 -1000 hard)Parallel(p1 1000000 hard)
	   Parallel(p1 8 hoge)Parallel(p1)Parallel(p1 100 soft x)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 05:03:51.606 UTC [2708915] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	not used hint:
	IndexScan(*VALUES*)
	SeqScan(cte1)
	TidScan(fs1)
	IndexScan(ft1)
	IndexScan(t)
	Parallel(s1 3 hard)
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.606 UTC [2708915] STATEMENT:  /*+Parallel(p1 5 hard) Parallel(s1 3 hard) IndexScan(ft1) SeqScan(cte1)
	  TidScan(fs1) IndexScan(t) IndexScan(*VALUES*) */
	EXPLAIN (COSTS false) SELECT id FROM p1_c1_c1 as s1 TABLESAMPLE SYSTEM(10)
	 UNION ALL
	SELECT id FROM ft1
	 UNION ALL
	(WITH cte1 AS (SELECT id FROM p1 WHERE id % 2 = 0) SELECT id FROM cte1)
	 UNION ALL
	SELECT userid FROM pg_stat_statements fs1
	 UNION ALL
	SELECT x FROM (VALUES (1), (2), (3)) t(x);
2023-07-22 05:03:51.624 UTC [2707899] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:03:51.673 UTC [2708923] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.673 UTC [2708923] STATEMENT:  EXPLAIN SELECT * FROM t1 WHERE id = 100;
2023-07-22 05:03:51.674 UTC [2708923] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.674 UTC [2708923] STATEMENT:  EXPLAIN DECLARE c1 CURSOR FOR SELECT * FROM t1 WHERE id = 100;
2023-07-22 05:03:51.675 UTC [2708923] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.675 UTC [2708923] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS SELECT * FROM t1 WHERE id = 100;
2023-07-22 05:03:51.675 UTC [2708923] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.675 UTC [2708923] STATEMENT:  EXPLAIN EXECUTE p1;
2023-07-22 05:03:51.677 UTC [2708923] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.677 UTC [2708923] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS EXECUTE p1;
2023-07-22 05:03:51.755 UTC [2708931] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.755 UTC [2708931] STATEMENT:  explain (costs false)
	select * from t1 join t2 on t1.id = t2.id where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 05:03:51.757 UTC [2708931] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.757 UTC [2708931] STATEMENT:  /*+ MergeJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 05:03:51.758 UTC [2708931] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.758 UTC [2708931] STATEMENT:  /*+ HashJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+MergeJoin(t1 t2)*/' <> '';
2023-07-22 05:03:51.797 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.797 UTC [2708935] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 05:03:51.799 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.799 UTC [2708935] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 05:03:51.820 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.820 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.820 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.821 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.821 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.821 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.826 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.826 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.826 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.826 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.826 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.826 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.827 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.827 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.827 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.828 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.828 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.828 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.832 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.832 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.832 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:03:51.833 UTC [2708935] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 05:03:51.833 UTC [2708935] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 05:03:51.833 UTC [2708935] STATEMENT:  call test_hint_transaction();
2023-07-22 05:04:23.710 UTC [2707900] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:04:23.839 UTC [2707900] LOG:  checkpoint complete: wrote 1247 buffers (7.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.044 s, sync=0.041 s, total=0.130 s; sync files=455, longest=0.007 s, average=0.001 s; distance=149943 kB, estimate=149943 kB
2023-07-22 05:04:55.209 UTC [2707900] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:04:55.259 UTC [2707900] LOG:  checkpoint complete: wrote 53 buffers (0.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.005 s, total=0.050 s; sync files=13, longest=0.003 s, average=0.001 s; distance=137494 kB, estimate=148698 kB
2023-07-22 05:04:55.322 UTC [2707899] LOG:  received fast shutdown request
2023-07-22 05:04:55.326 UTC [2707899] LOG:  aborting any active transactions
2023-07-22 05:04:55.327 UTC [2707899] LOG:  background worker "logical replication launcher" (PID 2707905) exited with exit code 1
2023-07-22 05:04:55.327 UTC [2707900] LOG:  shutting down
2023-07-22 05:04:55.330 UTC [2707900] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:04:55.347 UTC [2707900] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=133828 kB
2023-07-22 05:04:55.378 UTC [2707899] LOG:  database system is shut down
2023-07-22 05:04:56.079 UTC [2709079] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:04:56.080 UTC [2709079] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:04:56.085 UTC [2709079] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:04:56.096 UTC [2709082] LOG:  database system was shut down at 2023-07-22 05:04:55 UTC
2023-07-22 05:04:56.107 UTC [2709079] LOG:  database system is ready to accept connections
2023-07-22 05:04:56.451 UTC [2709098] ERROR:  too many column names were specified
2023-07-22 05:04:56.451 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_agg(a,b,c)', 'SELECT i, SUM(j) FROM mv_base_a GROUP BY i');
2023-07-22 05:04:56.466 UTC [2709098] WARNING:  there is already a transaction in progress
2023-07-22 05:04:56.493 UTC [2709098] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:04:56.493 UTC [2709098] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:04:56.493 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_exists_subquery', 'SELECT a.i, a.j FROM mv_base_a a WHERE EXISTS(SELECT 1 FROM mv_base_b b WHERE a.i = b.i)');
2023-07-22 05:04:56.493 UTC [2709098] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.493 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) b WHERE a.i = b.i');
2023-07-22 05:04:56.493 UTC [2709098] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.493 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT DISTINCT i FROM mv_base_b) b WHERE a.i = b.i');
2023-07-22 05:04:56.493 UTC [2709098] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:04:56.493 UTC [2709098] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:04:56.493 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j FROM mv_base_a WHERE i IN (SELECT i FROM mv_base_b WHERE k < 103 )');
2023-07-22 05:04:56.493 UTC [2709098] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:04:56.493 UTC [2709098] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:04:56.493 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) FROM mv_base_a a');
2023-07-22 05:04:56.493 UTC [2709098] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:04:56.493 UTC [2709098] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:04:56.493 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) + 1 FROM mv_base_a a');
2023-07-22 05:04:56.494 UTC [2709098] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:04:56.494 UTC [2709098] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:04:56.494 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT * FROM generate_series(1, (SELECT k FROM mv_base_b LIMIT 1)) AS v');
2023-07-22 05:04:56.526 UTC [2709098] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.526 UTC [2709098] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 05:04:56.526 UTC [2709098] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.526 UTC [2709098] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT DISTINCT i FROM mv_base_b) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 05:04:56.526 UTC [2709098] ERROR:  Ureferenced WITH query is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.526 UTC [2709098] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT * FROM mv_base_b) SELECT * FROM mv_base_a a');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  OUTER JOIN is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv(a,b)',
	    'SELECT a.i, b.i FROM mv_base_a a LEFT JOIN mv_base_b b ON a.i=b.i');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm01', 'SELECT i,j,xmin FROM mv_base_a');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm02', 'SELECT i,j FROM mv_base_a WHERE xmin = ''610''');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm03', 'SELECT i,j,xmin::text AS x_min FROM mv_base_a');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm04', 'SELECT i,j,xidsend(xmin) AS x_min FROM mv_base_a');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  ORDER BY clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) ORDER BY i,j,k');
2023-07-22 05:04:56.544 UTC [2709098] ERROR:  HAVING clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.544 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) GROUP BY i,j,k HAVING SUM(i) > 5');
2023-07-22 05:04:56.545 UTC [2709098] ERROR:  GROUP BY clause without aggregate is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.545 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j FROM mv_base_a GROUP BY i,j');
2023-07-22 05:04:56.547 UTC [2709098] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.547 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT a.i,a.j FROM mv_base_a a,b_view b WHERE a.i = b.i');
2023-07-22 05:04:56.547 UTC [2709098] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.547 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT a.i,a.j FROM mv_base_a a,b_mview b WHERE a.i = b.i');
2023-07-22 05:04:56.547 UTC [2709098] ERROR:  mutable function is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.547 UTC [2709098] HINT:  functions must be marked IMMUTABLE
2023-07-22 05:04:56.547 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm12', 'SELECT i,j FROM mv_base_a WHERE i = random()::int');
2023-07-22 05:04:56.547 UTC [2709098] ERROR:  LIMIT/OFFSET clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.547 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm13', 'SELECT i,j FROM mv_base_a LIMIT 10 OFFSET 5');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  DISTINCT ON is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm14', 'SELECT DISTINCT ON(i) i, j FROM mv_base_a');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  TABLESAMPLE clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm15', 'SELECT i, j FROM mv_base_a TABLESAMPLE SYSTEM(50)');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  window functions are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm16', 'SELECT *, cume_dist() OVER (ORDER BY i) AS rank FROM mv_base_a');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  aggregate function with FILTER clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm17', 'SELECT COUNT(*) FILTER(WHERE i < 3) FROM mv_base_a');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  aggregate function with DISTINCT arguments is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm18', 'SELECT COUNT(DISTINCT i)  FROM mv_base_a');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  aggregate function with ORDER clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm19', 'SELECT array_agg(j ORDER BY i DESC) FROM mv_base_a');
2023-07-22 05:04:56.548 UTC [2709098] ERROR:  GROUPING SETS, ROLLUP, or CUBE clauses is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.548 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm20', 'SELECT i,SUM(j) FROM mv_base_a GROUP BY GROUPING SETS((i),())');
2023-07-22 05:04:56.552 UTC [2709098] ERROR:  inheritance parent is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.552 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm21', 'SELECT * FROM parent');
2023-07-22 05:04:56.552 UTC [2709098] ERROR:  UNION/INTERSECT/EXCEPT statements are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.552 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm22', 'SELECT i,j FROM mv_base_a UNION ALL SELECT i,k FROM mv_base_b');
2023-07-22 05:04:56.552 UTC [2709098] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.552 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm23', 'SELECT * FROM (SELECT DISTINCT i,j FROM mv_base_a) AS tmp');
2023-07-22 05:04:56.552 UTC [2709098] ERROR:  empty target list is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.552 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm25', 'SELECT FROM mv_base_a');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm26', 'SELECT i,j FROM mv_base_a FOR UPDATE');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm27', 'SELECT * FROM (SELECT i,j FROM mv_base_a FOR UPDATE) AS tmp;');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  column name __ivm_count__ is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm28', 'SELECT i AS "__ivm_count__" FROM mv_base_a');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  GROUP BY expression not appearing in select list is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm29', 'SELECT COUNT(i) FROM mv_base_a GROUP BY i;');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm30', 'SELECT sum(i)*0.5 FROM mv_base_a');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm31', 'SELECT sum(i)/sum(j) FROM mv_base_a');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_only_values1', 'values(1)');
2023-07-22 05:04:56.553 UTC [2709098] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.553 UTC [2709098] STATEMENT:  SELECT create_immv('mv_ivm_only_values2',  'SELECT * FROM (values(1)) AS tmp');
2023-07-22 05:04:56.697 UTC [2709098] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:04:56.697 UTC [2709098] STATEMENT:  INSERT INTO mv_ivm_1 VALUES(1,1,1);
2023-07-22 05:04:56.697 UTC [2709098] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:04:56.697 UTC [2709098] STATEMENT:  UPDATE  mv_ivm_1 SET k = 1 WHERE i = 1;
2023-07-22 05:04:56.697 UTC [2709098] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:04:56.697 UTC [2709098] STATEMENT:  DELETE FROM mv_ivm_1;
2023-07-22 05:04:56.697 UTC [2709098] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:04:56.697 UTC [2709098] STATEMENT:  TRUNCATE mv_ivm_1;
2023-07-22 05:04:56.730 UTC [2709102] ERROR:  materialized views must not use data-modifying statements in WITH
2023-07-22 05:04:56.730 UTC [2709102] STATEMENT:  SELECT create_immv('mv3', 'WITH d AS (DELETE FROM t RETURNING NULL) SELECT * FROM t');
2023-07-22 05:04:56.731 UTC [2709102] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.731 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_immv01', 'SELECT i FROM mv');
2023-07-22 05:04:56.731 UTC [2709102] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 05:04:56.731 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_immv02', 'SELECT t.i FROM t INNER JOIN mv2 ON t.i = mv2.x');
2023-07-22 05:04:56.731 UTC [2709102] ERROR:  view definition must specify SELECT statement
2023-07-22 05:04:56.731 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_create', 'CREATE TABLE in_create(i int)');
2023-07-22 05:04:56.731 UTC [2709102] ERROR:  view definition must specify SELECT statement
2023-07-22 05:04:56.731 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_insert', 'INSERT INTO t VALUES(10)');
2023-07-22 05:04:56.731 UTC [2709102] ERROR:  view definition must specify SELECT statement
2023-07-22 05:04:56.731 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_update', 'UPDATE t SET i = 10');
2023-07-22 05:04:56.731 UTC [2709102] ERROR:  view definition must specify SELECT statement
2023-07-22 05:04:56.731 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_delete', 'DELETE FROM t');
2023-07-22 05:04:56.732 UTC [2709102] ERROR:  view definition must specify SELECT statement
2023-07-22 05:04:56.732 UTC [2709102] STATEMENT:  SELECT create_immv('mv_in_drop', 'DROP TABLE t');
2023-07-22 05:04:56.732 UTC [2709102] ERROR:  cannot drop table t because other objects depend on it
2023-07-22 05:04:56.732 UTC [2709102] DETAIL:  table mv depends on table t
	table mv2 depends on table t
2023-07-22 05:04:56.732 UTC [2709102] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 05:04:56.732 UTC [2709102] STATEMENT:  DROP TABLE t;
2023-07-22 05:04:56.810 UTC [2709106] ERROR:  relation "mv_not_existing" does not exist
2023-07-22 05:04:56.810 UTC [2709106] STATEMENT:  SELECT refresh_immv('mv_not_existing', true);
2023-07-22 05:04:56.810 UTC [2709106] ERROR:  "t" is not an IMMV
2023-07-22 05:04:56.810 UTC [2709106] STATEMENT:  SELECT refresh_immv('t', true);
2023-07-22 05:04:56.903 UTC [2709121] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:04:56.903 UTC [2709121] STATEMENT:  select gen_salt('foo');
2023-07-22 05:04:56.903 UTC [2709121] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:04:56.903 UTC [2709121] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:04:56.903 UTC [2709121] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:04:56.903 UTC [2709121] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:04:56.903 UTC [2709121] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:04:56.903 UTC [2709121] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:04:56.944 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.944 UTC [2709141] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:04:56.944 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.944 UTC [2709141] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:04:56.944 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.944 UTC [2709141] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:04:56.944 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.944 UTC [2709141] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:04:56.944 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.944 UTC [2709141] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Key was too big
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Key was too big
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Key was too big
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Key was too big
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:04:56.945 UTC [2709141] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:04:56.945 UTC [2709141] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:04:56.946 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.946 UTC [2709141] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:04:56.946 UTC [2709141] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.946 UTC [2709141] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:04:56.955 UTC [2709147] ERROR:  encrypt error: Encryption failed
2023-07-22 05:04:56.955 UTC [2709147] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:04:56.956 UTC [2709147] ERROR:  decrypt error: Decryption failed
2023-07-22 05:04:56.956 UTC [2709147] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:04:56.956 UTC [2709147] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:04:56.956 UTC [2709147] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:04:56.972 UTC [2709155] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.972 UTC [2709155] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:04:56.972 UTC [2709155] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.972 UTC [2709155] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:04:56.972 UTC [2709155] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.972 UTC [2709155] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:04:56.972 UTC [2709155] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.972 UTC [2709155] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:04:56.973 UTC [2709155] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:04:56.973 UTC [2709155] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:04:56.973 UTC [2709155] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:04:56.973 UTC [2709155] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:04:56.973 UTC [2709155] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.973 UTC [2709155] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:04:56.973 UTC [2709155] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.973 UTC [2709155] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:04:56.990 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.990 UTC [2709165] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:04:56.991 UTC [2709165] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:04:56.991 UTC [2709165] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:04:57.000 UTC [2709171] ERROR:  invalid salt
2023-07-22 05:04:57.000 UTC [2709171] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:04:57.085 UTC [2709179] ERROR:  invalid salt
2023-07-22 05:04:57.085 UTC [2709179] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:04:57.085 UTC [2709179] ERROR:  invalid salt
2023-07-22 05:04:57.085 UTC [2709179] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:04:57.086 UTC [2709179] ERROR:  invalid salt
2023-07-22 05:04:57.086 UTC [2709179] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:04:57.142 UTC [2709183] ERROR:  invalid salt
2023-07-22 05:04:57.142 UTC [2709183] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:04:57.142 UTC [2709183] ERROR:  crypt(3) returned NULL
2023-07-22 05:04:57.142 UTC [2709183] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:04:57.142 UTC [2709183] ERROR:  crypt(3) returned NULL
2023-07-22 05:04:57.142 UTC [2709183] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:04:57.168 UTC [2709187] ERROR:  Corrupt ascii-armor
2023-07-22 05:04:57.168 UTC [2709187] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:04:57.169 UTC [2709187] ERROR:  Corrupt ascii-armor
2023-07-22 05:04:57.169 UTC [2709187] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:04:57.169 UTC [2709187] ERROR:  Corrupt ascii-armor
2023-07-22 05:04:57.169 UTC [2709187] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  mismatched array dimensions
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  mismatched array dimensions
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  wrong number of array subscripts
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  wrong number of array subscripts
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  null value not allowed for header key
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  null value not allowed for header value
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  header key must not contain newlines
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  header value must not contain newlines
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:04:57.171 UTC [2709187] ERROR:  header key must not contain ": "
2023-07-22 05:04:57.171 UTC [2709187] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:04:57.180 UTC [2709191] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.180 UTC [2709191] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:04:57.195 UTC [2709191] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.195 UTC [2709191] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:04:57.197 UTC [2709191] ERROR:  Not text data
2023-07-22 05:04:57.197 UTC [2709191] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:04:57.197 UTC [2709191] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.197 UTC [2709191] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:04:57.198 UTC [2709191] ERROR:  Unsupported compression algorithm
2023-07-22 05:04:57.198 UTC [2709191] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:04:57.211 UTC [2709197] ERROR:  Not text data
2023-07-22 05:04:57.211 UTC [2709197] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:04:57.656 UTC [2709205] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.656 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:04:57.676 UTC [2709205] ERROR:  Wrong key
2023-07-22 05:04:57.676 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:04:57.677 UTC [2709205] ERROR:  No encryption key found
2023-07-22 05:04:57.677 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:04:57.678 UTC [2709205] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.678 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:04:57.684 UTC [2709205] ERROR:  Need password for secret key
2023-07-22 05:04:57.684 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:04:57.685 UTC [2709205] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.685 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:04:57.690 UTC [2709205] ERROR:  Wrong key or corrupt data
2023-07-22 05:04:57.690 UTC [2709205] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:04:57.712 UTC [2709211] ERROR:  No encryption key found
2023-07-22 05:04:57.712 UTC [2709211] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:04:57.712 UTC [2709211] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:04:57.712 UTC [2709211] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:04:57.713 UTC [2709211] ERROR:  Not text data
2023-07-22 05:04:57.713 UTC [2709211] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:04:57.720 UTC [2709215] ERROR:  No encryption key found
2023-07-22 05:04:57.720 UTC [2709215] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:04:57.721 UTC [2709215] ERROR:  No encryption key found
2023-07-22 05:04:57.721 UTC [2709215] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:05:29.285 UTC [2709080] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:05:29.455 UTC [2709080] LOG:  checkpoint complete: wrote 1226 buffers (7.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.043 s, sync=0.077 s, total=0.170 s; sync files=591, longest=0.004 s, average=0.001 s; distance=146924 kB, estimate=146924 kB
2023-07-22 05:06:00.789 UTC [2709080] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:06:00.843 UTC [2709080] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136700 kB, estimate=145901 kB
2023-07-22 05:06:00.906 UTC [2709079] LOG:  received fast shutdown request
2023-07-22 05:06:00.910 UTC [2709079] LOG:  aborting any active transactions
2023-07-22 05:06:00.911 UTC [2709079] LOG:  background worker "logical replication launcher" (PID 2709085) exited with exit code 1
2023-07-22 05:06:00.911 UTC [2709080] LOG:  shutting down
2023-07-22 05:06:00.914 UTC [2709080] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:06:00.932 UTC [2709080] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131311 kB
2023-07-22 05:06:00.955 UTC [2709079] LOG:  database system is shut down
2023-07-22 05:06:01.684 UTC [2709342] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:06:01.685 UTC [2709342] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:06:01.691 UTC [2709342] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:06:01.700 UTC [2709345] LOG:  database system was shut down at 2023-07-22 05:06:01 UTC
2023-07-22 05:06:01.708 UTC [2709342] LOG:  database system is ready to accept connections
2023-07-22 05:06:02.072 UTC [2709364] ERROR:  too many column names were specified
2023-07-22 05:06:02.072 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_agg(a,b,c)', 'SELECT i, SUM(j) FROM mv_base_a GROUP BY i');
2023-07-22 05:06:02.087 UTC [2709364] WARNING:  there is already a transaction in progress
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_exists_subquery', 'SELECT a.i, a.j FROM mv_base_a a WHERE EXISTS(SELECT 1 FROM mv_base_b b WHERE a.i = b.i)');
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) b WHERE a.i = b.i');
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT DISTINCT i FROM mv_base_b) b WHERE a.i = b.i');
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j FROM mv_base_a WHERE i IN (SELECT i FROM mv_base_b WHERE k < 103 )');
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) FROM mv_base_a a');
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) + 1 FROM mv_base_a a');
2023-07-22 05:06:02.105 UTC [2709364] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 05:06:02.105 UTC [2709364] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 05:06:02.105 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT * FROM generate_series(1, (SELECT k FROM mv_base_b LIMIT 1)) AS v');
2023-07-22 05:06:02.134 UTC [2709364] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.134 UTC [2709364] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 05:06:02.134 UTC [2709364] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.134 UTC [2709364] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT DISTINCT i FROM mv_base_b) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 05:06:02.134 UTC [2709364] ERROR:  Ureferenced WITH query is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.134 UTC [2709364] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT * FROM mv_base_b) SELECT * FROM mv_base_a a');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  OUTER JOIN is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv(a,b)',
	    'SELECT a.i, b.i FROM mv_base_a a LEFT JOIN mv_base_b b ON a.i=b.i');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm01', 'SELECT i,j,xmin FROM mv_base_a');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm02', 'SELECT i,j FROM mv_base_a WHERE xmin = ''610''');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm03', 'SELECT i,j,xmin::text AS x_min FROM mv_base_a');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm04', 'SELECT i,j,xidsend(xmin) AS x_min FROM mv_base_a');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  ORDER BY clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) ORDER BY i,j,k');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  HAVING clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) GROUP BY i,j,k HAVING SUM(i) > 5');
2023-07-22 05:06:02.152 UTC [2709364] ERROR:  GROUP BY clause without aggregate is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.152 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j FROM mv_base_a GROUP BY i,j');
2023-07-22 05:06:02.155 UTC [2709364] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.155 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT a.i,a.j FROM mv_base_a a,b_view b WHERE a.i = b.i');
2023-07-22 05:06:02.155 UTC [2709364] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.155 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT a.i,a.j FROM mv_base_a a,b_mview b WHERE a.i = b.i');
2023-07-22 05:06:02.155 UTC [2709364] ERROR:  mutable function is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.155 UTC [2709364] HINT:  functions must be marked IMMUTABLE
2023-07-22 05:06:02.155 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm12', 'SELECT i,j FROM mv_base_a WHERE i = random()::int');
2023-07-22 05:06:02.155 UTC [2709364] ERROR:  LIMIT/OFFSET clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.155 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm13', 'SELECT i,j FROM mv_base_a LIMIT 10 OFFSET 5');
2023-07-22 05:06:02.155 UTC [2709364] ERROR:  DISTINCT ON is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.155 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm14', 'SELECT DISTINCT ON(i) i, j FROM mv_base_a');
2023-07-22 05:06:02.155 UTC [2709364] ERROR:  TABLESAMPLE clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.155 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm15', 'SELECT i, j FROM mv_base_a TABLESAMPLE SYSTEM(50)');
2023-07-22 05:06:02.156 UTC [2709364] ERROR:  window functions are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.156 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm16', 'SELECT *, cume_dist() OVER (ORDER BY i) AS rank FROM mv_base_a');
2023-07-22 05:06:02.156 UTC [2709364] ERROR:  aggregate function with FILTER clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.156 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm17', 'SELECT COUNT(*) FILTER(WHERE i < 3) FROM mv_base_a');
2023-07-22 05:06:02.156 UTC [2709364] ERROR:  aggregate function with DISTINCT arguments is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.156 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm18', 'SELECT COUNT(DISTINCT i)  FROM mv_base_a');
2023-07-22 05:06:02.156 UTC [2709364] ERROR:  aggregate function with ORDER clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.156 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm19', 'SELECT array_agg(j ORDER BY i DESC) FROM mv_base_a');
2023-07-22 05:06:02.156 UTC [2709364] ERROR:  GROUPING SETS, ROLLUP, or CUBE clauses is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.156 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm20', 'SELECT i,SUM(j) FROM mv_base_a GROUP BY GROUPING SETS((i),())');
2023-07-22 05:06:02.159 UTC [2709364] ERROR:  inheritance parent is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.159 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm21', 'SELECT * FROM parent');
2023-07-22 05:06:02.160 UTC [2709364] ERROR:  UNION/INTERSECT/EXCEPT statements are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.160 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm22', 'SELECT i,j FROM mv_base_a UNION ALL SELECT i,k FROM mv_base_b');
2023-07-22 05:06:02.160 UTC [2709364] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.160 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm23', 'SELECT * FROM (SELECT DISTINCT i,j FROM mv_base_a) AS tmp');
2023-07-22 05:06:02.160 UTC [2709364] ERROR:  empty target list is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.160 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm25', 'SELECT FROM mv_base_a');
2023-07-22 05:06:02.160 UTC [2709364] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.160 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm26', 'SELECT i,j FROM mv_base_a FOR UPDATE');
2023-07-22 05:06:02.160 UTC [2709364] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.160 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm27', 'SELECT * FROM (SELECT i,j FROM mv_base_a FOR UPDATE) AS tmp;');
2023-07-22 05:06:02.160 UTC [2709364] ERROR:  column name __ivm_count__ is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.160 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm28', 'SELECT i AS "__ivm_count__" FROM mv_base_a');
2023-07-22 05:06:02.161 UTC [2709364] ERROR:  GROUP BY expression not appearing in select list is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.161 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm29', 'SELECT COUNT(i) FROM mv_base_a GROUP BY i;');
2023-07-22 05:06:02.161 UTC [2709364] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.161 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm30', 'SELECT sum(i)*0.5 FROM mv_base_a');
2023-07-22 05:06:02.161 UTC [2709364] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.161 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm31', 'SELECT sum(i)/sum(j) FROM mv_base_a');
2023-07-22 05:06:02.161 UTC [2709364] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.161 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_only_values1', 'values(1)');
2023-07-22 05:06:02.161 UTC [2709364] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.161 UTC [2709364] STATEMENT:  SELECT create_immv('mv_ivm_only_values2',  'SELECT * FROM (values(1)) AS tmp');
2023-07-22 05:06:02.260 UTC [2709364] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:06:02.260 UTC [2709364] STATEMENT:  INSERT INTO mv_ivm_1 VALUES(1,1,1);
2023-07-22 05:06:02.260 UTC [2709364] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:06:02.260 UTC [2709364] STATEMENT:  UPDATE  mv_ivm_1 SET k = 1 WHERE i = 1;
2023-07-22 05:06:02.260 UTC [2709364] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:06:02.260 UTC [2709364] STATEMENT:  DELETE FROM mv_ivm_1;
2023-07-22 05:06:02.260 UTC [2709364] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 05:06:02.260 UTC [2709364] STATEMENT:  TRUNCATE mv_ivm_1;
2023-07-22 05:06:02.297 UTC [2709368] ERROR:  materialized views must not use data-modifying statements in WITH
2023-07-22 05:06:02.297 UTC [2709368] STATEMENT:  SELECT create_immv('mv3', 'WITH d AS (DELETE FROM t RETURNING NULL) SELECT * FROM t');
2023-07-22 05:06:02.298 UTC [2709368] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.298 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_immv01', 'SELECT i FROM mv');
2023-07-22 05:06:02.298 UTC [2709368] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 05:06:02.298 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_immv02', 'SELECT t.i FROM t INNER JOIN mv2 ON t.i = mv2.x');
2023-07-22 05:06:02.298 UTC [2709368] ERROR:  view definition must specify SELECT statement
2023-07-22 05:06:02.298 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_create', 'CREATE TABLE in_create(i int)');
2023-07-22 05:06:02.299 UTC [2709368] ERROR:  view definition must specify SELECT statement
2023-07-22 05:06:02.299 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_insert', 'INSERT INTO t VALUES(10)');
2023-07-22 05:06:02.299 UTC [2709368] ERROR:  view definition must specify SELECT statement
2023-07-22 05:06:02.299 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_update', 'UPDATE t SET i = 10');
2023-07-22 05:06:02.299 UTC [2709368] ERROR:  view definition must specify SELECT statement
2023-07-22 05:06:02.299 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_delete', 'DELETE FROM t');
2023-07-22 05:06:02.299 UTC [2709368] ERROR:  view definition must specify SELECT statement
2023-07-22 05:06:02.299 UTC [2709368] STATEMENT:  SELECT create_immv('mv_in_drop', 'DROP TABLE t');
2023-07-22 05:06:02.300 UTC [2709368] ERROR:  cannot drop table t because other objects depend on it
2023-07-22 05:06:02.300 UTC [2709368] DETAIL:  table mv depends on table t
	table mv2 depends on table t
2023-07-22 05:06:02.300 UTC [2709368] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 05:06:02.300 UTC [2709368] STATEMENT:  DROP TABLE t;
2023-07-22 05:06:02.387 UTC [2709372] ERROR:  relation "mv_not_existing" does not exist
2023-07-22 05:06:02.387 UTC [2709372] STATEMENT:  SELECT refresh_immv('mv_not_existing', true);
2023-07-22 05:06:02.387 UTC [2709372] ERROR:  "t" is not an IMMV
2023-07-22 05:06:02.387 UTC [2709372] STATEMENT:  SELECT refresh_immv('t', true);
2023-07-22 05:06:34.089 UTC [2709343] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:06:34.216 UTC [2709343] LOG:  checkpoint complete: wrote 677 buffers (4.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.046 s, total=0.128 s; sync files=336, longest=0.007 s, average=0.001 s; distance=142750 kB, estimate=142750 kB
2023-07-22 05:07:05.574 UTC [2709343] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:07:05.626 UTC [2709343] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.005 s, total=0.053 s; sync files=4, longest=0.003 s, average=0.002 s; distance=137018 kB, estimate=142177 kB
2023-07-22 05:07:05.695 UTC [2709342] LOG:  received fast shutdown request
2023-07-22 05:07:05.698 UTC [2709342] LOG:  aborting any active transactions
2023-07-22 05:07:05.699 UTC [2709342] LOG:  background worker "logical replication launcher" (PID 2709348) exited with exit code 1
2023-07-22 05:07:05.700 UTC [2709343] LOG:  shutting down
2023-07-22 05:07:05.703 UTC [2709343] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:07:05.721 UTC [2709343] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.022 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127959 kB
2023-07-22 05:07:05.766 UTC [2709342] LOG:  database system is shut down
2023-07-22 05:07:06.427 UTC [2709547] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:07:06.427 UTC [2709547] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:07:06.434 UTC [2709547] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:07:06.442 UTC [2709550] LOG:  database system was shut down at 2023-07-22 05:07:06 UTC
2023-07-22 05:07:06.447 UTC [2709547] LOG:  database system is ready to accept connections
2023-07-22 05:07:06.563 UTC [2709564] ERROR:  extension "pg_log_userqueries" is not available
2023-07-22 05:07:06.563 UTC [2709564] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/pg_log_userqueries.control": No such file or directory.
2023-07-22 05:07:06.563 UTC [2709564] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 05:07:06.563 UTC [2709564] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "pg_log_userqueries"
2023-07-22 05:07:06.570 UTC [2709547] LOG:  received fast shutdown request
2023-07-22 05:07:06.573 UTC [2709547] LOG:  aborting any active transactions
2023-07-22 05:07:06.578 UTC [2709547] LOG:  background worker "logical replication launcher" (PID 2709553) exited with exit code 1
2023-07-22 05:07:06.578 UTC [2709548] LOG:  shutting down
2023-07-22 05:07:06.581 UTC [2709548] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:07:06.657 UTC [2709548] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.041 s, sync=0.022 s, total=0.079 s; sync files=252, longest=0.006 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 05:07:06.666 UTC [2709547] LOG:  database system is shut down
2023-07-22 05:07:07.268 UTC [2709593] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:07:07.268 UTC [2709593] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:07:07.274 UTC [2709593] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:07:07.281 UTC [2709596] LOG:  database system was shut down at 2023-07-22 05:07:07 UTC
2023-07-22 05:07:07.286 UTC [2709593] LOG:  database system is ready to accept connections
2023-07-22 05:07:07.415 UTC [2709605] ERROR:  extension "pg_log_userqueries" is not available
2023-07-22 05:07:07.415 UTC [2709605] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/pg_log_userqueries.control": No such file or directory.
2023-07-22 05:07:07.415 UTC [2709605] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 05:07:07.415 UTC [2709605] STATEMENT:  CREATE EXTENSION pg_log_userqueries;
2023-07-22 05:07:38.983 UTC [2709594] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:07:39.037 UTC [2709594] LOG:  checkpoint complete: wrote 12 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.005 s, total=0.055 s; sync files=5, longest=0.003 s, average=0.001 s; distance=136748 kB, estimate=136748 kB
2023-07-22 05:07:39.170 UTC [2709640] ERROR:  extension "pg_log_userqueries" is not available
2023-07-22 05:07:39.170 UTC [2709640] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/pg_log_userqueries.control": No such file or directory.
2023-07-22 05:07:39.170 UTC [2709640] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 05:07:39.170 UTC [2709640] STATEMENT:  CREATE EXTENSION pg_log_userqueries;
2023-07-22 05:08:10.410 UTC [2709594] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:08:10.462 UTC [2709594] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.007 s, sync=0.004 s, total=0.052 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137108 kB, estimate=137108 kB
2023-07-22 05:08:10.526 UTC [2709593] LOG:  received fast shutdown request
2023-07-22 05:08:10.529 UTC [2709593] LOG:  aborting any active transactions
2023-07-22 05:08:10.531 UTC [2709593] LOG:  background worker "logical replication launcher" (PID 2709599) exited with exit code 1
2023-07-22 05:08:10.531 UTC [2709594] LOG:  shutting down
2023-07-22 05:08:10.534 UTC [2709594] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:08:10.555 UTC [2709594] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.005 s, total=0.025 s; sync files=1, longest=0.005 s, average=0.005 s; distance=0 kB, estimate=123397 kB
2023-07-22 05:08:10.576 UTC [2709593] LOG:  database system is shut down
2023-07-22 05:08:11.251 UTC [2709728] FATAL:  could not access file "pg_partman": No such file or directory
2023-07-22 05:08:11.251 UTC [2709728] LOG:  database system is shut down
2023-07-22 05:08:11.931 UTC [2709761] FATAL:  could not access file "pg_partman": No such file or directory
2023-07-22 05:08:11.931 UTC [2709761] LOG:  database system is shut down
2023-07-22 05:08:12.655 UTC [2709802] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:08:12.655 UTC [2709802] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:08:12.662 UTC [2709802] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:08:12.670 UTC [2709805] LOG:  database system was shut down at 2023-07-22 05:08:12 UTC
2023-07-22 05:08:12.677 UTC [2709802] LOG:  database system is ready to accept connections
2023-07-22 05:08:12.812 UTC [2709822] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:08:12.812 UTC [2709822] STATEMENT:  select gen_salt('foo');
2023-07-22 05:08:12.812 UTC [2709822] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:08:12.812 UTC [2709822] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:08:12.812 UTC [2709822] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:08:12.812 UTC [2709822] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:08:12.812 UTC [2709822] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:08:12.812 UTC [2709822] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:08:12.851 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.851 UTC [2709842] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:08:12.851 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.851 UTC [2709842] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Key was too big
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Key was too big
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Key was too big
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:08:12.852 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.852 UTC [2709842] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:08:12.853 UTC [2709842] ERROR:  encrypt error: Key was too big
2023-07-22 05:08:12.853 UTC [2709842] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:08:12.853 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.853 UTC [2709842] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:08:12.853 UTC [2709842] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:08:12.853 UTC [2709842] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:08:12.853 UTC [2709842] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:08:12.853 UTC [2709842] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:08:12.853 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.853 UTC [2709842] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:08:12.853 UTC [2709842] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.853 UTC [2709842] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:08:12.862 UTC [2709848] ERROR:  encrypt error: Encryption failed
2023-07-22 05:08:12.862 UTC [2709848] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:08:12.863 UTC [2709848] ERROR:  decrypt error: Decryption failed
2023-07-22 05:08:12.863 UTC [2709848] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:08:12.863 UTC [2709848] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:08:12.863 UTC [2709848] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:08:12.879 UTC [2709856] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.879 UTC [2709856] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:08:12.879 UTC [2709856] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.879 UTC [2709856] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:08:12.879 UTC [2709856] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.879 UTC [2709856] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:08:12.879 UTC [2709856] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.879 UTC [2709856] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:08:12.880 UTC [2709856] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:08:12.880 UTC [2709856] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:08:12.880 UTC [2709856] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:08:12.880 UTC [2709856] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:08:12.880 UTC [2709856] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.880 UTC [2709856] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:08:12.880 UTC [2709856] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.880 UTC [2709856] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:08:12.896 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.896 UTC [2709866] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:08:12.897 UTC [2709866] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:08:12.897 UTC [2709866] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:08:12.906 UTC [2709872] ERROR:  invalid salt
2023-07-22 05:08:12.906 UTC [2709872] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:08:13.013 UTC [2709880] ERROR:  invalid salt
2023-07-22 05:08:13.013 UTC [2709880] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:08:13.014 UTC [2709880] ERROR:  invalid salt
2023-07-22 05:08:13.014 UTC [2709880] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:08:13.014 UTC [2709880] ERROR:  invalid salt
2023-07-22 05:08:13.014 UTC [2709880] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:08:13.085 UTC [2709884] ERROR:  invalid salt
2023-07-22 05:08:13.085 UTC [2709884] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:08:13.085 UTC [2709884] ERROR:  crypt(3) returned NULL
2023-07-22 05:08:13.085 UTC [2709884] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:08:13.085 UTC [2709884] ERROR:  crypt(3) returned NULL
2023-07-22 05:08:13.085 UTC [2709884] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:08:13.130 UTC [2709888] ERROR:  Corrupt ascii-armor
2023-07-22 05:08:13.130 UTC [2709888] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:08:13.131 UTC [2709888] ERROR:  Corrupt ascii-armor
2023-07-22 05:08:13.131 UTC [2709888] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:08:13.131 UTC [2709888] ERROR:  Corrupt ascii-armor
2023-07-22 05:08:13.131 UTC [2709888] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:08:13.141 UTC [2709888] ERROR:  mismatched array dimensions
2023-07-22 05:08:13.141 UTC [2709888] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:08:13.141 UTC [2709888] ERROR:  mismatched array dimensions
2023-07-22 05:08:13.141 UTC [2709888] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:08:13.142 UTC [2709888] ERROR:  wrong number of array subscripts
2023-07-22 05:08:13.142 UTC [2709888] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:08:13.142 UTC [2709888] ERROR:  wrong number of array subscripts
2023-07-22 05:08:13.142 UTC [2709888] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:08:13.143 UTC [2709888] ERROR:  null value not allowed for header key
2023-07-22 05:08:13.143 UTC [2709888] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:08:13.143 UTC [2709888] ERROR:  null value not allowed for header value
2023-07-22 05:08:13.143 UTC [2709888] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:08:13.144 UTC [2709888] ERROR:  header key must not contain newlines
2023-07-22 05:08:13.144 UTC [2709888] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:08:13.145 UTC [2709888] ERROR:  header value must not contain newlines
2023-07-22 05:08:13.145 UTC [2709888] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:08:13.145 UTC [2709888] ERROR:  header key must not contain ": "
2023-07-22 05:08:13.145 UTC [2709888] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:08:13.173 UTC [2709892] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.173 UTC [2709892] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:08:13.215 UTC [2709892] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.215 UTC [2709892] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:08:13.217 UTC [2709892] ERROR:  Not text data
2023-07-22 05:08:13.217 UTC [2709892] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:08:13.218 UTC [2709892] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.218 UTC [2709892] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:08:13.218 UTC [2709892] ERROR:  Unsupported compression algorithm
2023-07-22 05:08:13.218 UTC [2709892] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:08:13.236 UTC [2709898] ERROR:  Not text data
2023-07-22 05:08:13.236 UTC [2709898] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:08:13.693 UTC [2709906] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.693 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:08:13.711 UTC [2709906] ERROR:  Wrong key
2023-07-22 05:08:13.711 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:08:13.712 UTC [2709906] ERROR:  No encryption key found
2023-07-22 05:08:13.712 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:08:13.713 UTC [2709906] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.713 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:08:13.719 UTC [2709906] ERROR:  Need password for secret key
2023-07-22 05:08:13.719 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:08:13.720 UTC [2709906] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.720 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:08:13.725 UTC [2709906] ERROR:  Wrong key or corrupt data
2023-07-22 05:08:13.725 UTC [2709906] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:08:13.749 UTC [2709912] ERROR:  No encryption key found
2023-07-22 05:08:13.749 UTC [2709912] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:08:13.749 UTC [2709912] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:08:13.749 UTC [2709912] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:08:13.750 UTC [2709912] ERROR:  Not text data
2023-07-22 05:08:13.750 UTC [2709912] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:08:13.759 UTC [2709916] ERROR:  No encryption key found
2023-07-22 05:08:13.759 UTC [2709916] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:08:13.760 UTC [2709916] ERROR:  No encryption key found
2023-07-22 05:08:13.760 UTC [2709916] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:08:45.315 UTC [2709803] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:08:45.401 UTC [2709803] LOG:  checkpoint complete: wrote 514 buffers (3.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.027 s, total=0.086 s; sync files=261, longest=0.003 s, average=0.001 s; distance=141524 kB, estimate=141524 kB
2023-07-22 05:09:16.739 UTC [2709803] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:09:16.794 UTC [2709803] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.004 s, total=0.055 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136645 kB, estimate=141036 kB
2023-07-22 05:09:16.858 UTC [2709802] LOG:  received fast shutdown request
2023-07-22 05:09:16.861 UTC [2709802] LOG:  aborting any active transactions
2023-07-22 05:09:16.863 UTC [2709802] LOG:  background worker "logical replication launcher" (PID 2709809) exited with exit code 1
2023-07-22 05:09:16.871 UTC [2709803] LOG:  shutting down
2023-07-22 05:09:16.874 UTC [2709803] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:09:16.892 UTC [2709803] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126933 kB
2023-07-22 05:09:16.914 UTC [2709802] LOG:  database system is shut down
2023-07-22 05:09:17.599 UTC [2710042] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:09:17.599 UTC [2710042] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:09:17.605 UTC [2710042] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:09:17.612 UTC [2710045] LOG:  database system was shut down at 2023-07-22 05:09:17 UTC
2023-07-22 05:09:17.618 UTC [2710042] LOG:  database system is ready to accept connections
2023-07-22 05:09:49.326 UTC [2710043] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:09:49.381 UTC [2710043] LOG:  checkpoint complete: wrote 12 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.005 s, total=0.055 s; sync files=5, longest=0.004 s, average=0.001 s; distance=136811 kB, estimate=136811 kB
2023-07-22 05:10:20.802 UTC [2710043] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:10:20.854 UTC [2710043] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.004 s, total=0.052 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136898 kB, estimate=136898 kB
2023-07-22 05:10:20.907 UTC [2710042] LOG:  received fast shutdown request
2023-07-22 05:10:20.910 UTC [2710042] LOG:  aborting any active transactions
2023-07-22 05:10:20.911 UTC [2710042] LOG:  background worker "logical replication launcher" (PID 2710049) exited with exit code 1
2023-07-22 05:10:20.917 UTC [2710043] LOG:  shutting down
2023-07-22 05:10:20.919 UTC [2710043] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:10:20.937 UTC [2710043] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123208 kB
2023-07-22 05:10:20.960 UTC [2710042] LOG:  database system is shut down
2023-07-22 05:10:21.622 UTC [2710178] FATAL:  could not access file "pg_proctab": No such file or directory
2023-07-22 05:10:21.622 UTC [2710178] LOG:  database system is shut down
2023-07-22 05:10:22.314 UTC [2710211] FATAL:  could not access file "pg_proctab": No such file or directory
2023-07-22 05:10:22.314 UTC [2710211] LOG:  database system is shut down
2023-07-22 05:10:23.054 UTC [2710252] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:10:23.054 UTC [2710252] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:10:23.061 UTC [2710252] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:10:23.068 UTC [2710255] LOG:  database system was shut down at 2023-07-22 05:10:22 UTC
2023-07-22 05:10:23.074 UTC [2710252] LOG:  database system is ready to accept connections
2023-07-22 05:10:23.403 UTC [2710288] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:10:23.403 UTC [2710288] STATEMENT:  select gen_salt('foo');
2023-07-22 05:10:23.403 UTC [2710288] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:10:23.403 UTC [2710288] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:10:23.403 UTC [2710288] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:10:23.403 UTC [2710288] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:10:23.403 UTC [2710288] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:10:23.403 UTC [2710288] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:10:23.443 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.443 UTC [2710308] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:10:23.443 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.443 UTC [2710308] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:10:23.443 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.443 UTC [2710308] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:10:23.443 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.443 UTC [2710308] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:10:23.443 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.443 UTC [2710308] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:10:23.443 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.443 UTC [2710308] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Key was too big
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Key was too big
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Key was too big
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Key was too big
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:10:23.444 UTC [2710308] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.444 UTC [2710308] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:10:23.453 UTC [2710314] ERROR:  encrypt error: Encryption failed
2023-07-22 05:10:23.453 UTC [2710314] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:10:23.454 UTC [2710314] ERROR:  decrypt error: Decryption failed
2023-07-22 05:10:23.454 UTC [2710314] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:10:23.454 UTC [2710314] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:10:23.454 UTC [2710314] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:10:23.470 UTC [2710322] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.470 UTC [2710322] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:10:23.470 UTC [2710322] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.470 UTC [2710322] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:10:23.471 UTC [2710322] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.471 UTC [2710322] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:10:23.471 UTC [2710322] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.471 UTC [2710322] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:10:23.471 UTC [2710322] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:10:23.471 UTC [2710322] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:10:23.471 UTC [2710322] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:10:23.471 UTC [2710322] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:10:23.471 UTC [2710322] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.471 UTC [2710322] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:10:23.471 UTC [2710322] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.471 UTC [2710322] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:10:23.488 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.488 UTC [2710332] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:10:23.488 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.488 UTC [2710332] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:10:23.488 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.488 UTC [2710332] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:10:23.488 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.488 UTC [2710332] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:10:23.488 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.488 UTC [2710332] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:10:23.488 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.488 UTC [2710332] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:10:23.489 UTC [2710332] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:10:23.489 UTC [2710332] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:10:23.489 UTC [2710332] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:10:23.489 UTC [2710332] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:10:23.489 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.489 UTC [2710332] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:10:23.489 UTC [2710332] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:10:23.489 UTC [2710332] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:10:23.497 UTC [2710338] ERROR:  invalid salt
2023-07-22 05:10:23.497 UTC [2710338] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:10:23.609 UTC [2710346] ERROR:  invalid salt
2023-07-22 05:10:23.609 UTC [2710346] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:10:23.609 UTC [2710346] ERROR:  invalid salt
2023-07-22 05:10:23.609 UTC [2710346] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:10:23.609 UTC [2710346] ERROR:  invalid salt
2023-07-22 05:10:23.609 UTC [2710346] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:10:23.663 UTC [2710350] ERROR:  invalid salt
2023-07-22 05:10:23.663 UTC [2710350] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:10:23.663 UTC [2710350] ERROR:  crypt(3) returned NULL
2023-07-22 05:10:23.663 UTC [2710350] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:10:23.664 UTC [2710350] ERROR:  crypt(3) returned NULL
2023-07-22 05:10:23.664 UTC [2710350] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:10:23.681 UTC [2710354] ERROR:  Corrupt ascii-armor
2023-07-22 05:10:23.681 UTC [2710354] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:10:23.681 UTC [2710354] ERROR:  Corrupt ascii-armor
2023-07-22 05:10:23.681 UTC [2710354] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:10:23.682 UTC [2710354] ERROR:  Corrupt ascii-armor
2023-07-22 05:10:23.682 UTC [2710354] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  mismatched array dimensions
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  mismatched array dimensions
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  wrong number of array subscripts
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  wrong number of array subscripts
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  null value not allowed for header key
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  null value not allowed for header value
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  header key must not contain newlines
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:10:23.683 UTC [2710354] ERROR:  header value must not contain newlines
2023-07-22 05:10:23.683 UTC [2710354] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:10:23.684 UTC [2710354] ERROR:  header key must not contain ": "
2023-07-22 05:10:23.684 UTC [2710354] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:10:23.691 UTC [2710358] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:23.691 UTC [2710358] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:10:23.702 UTC [2710358] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:23.702 UTC [2710358] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:10:23.703 UTC [2710358] ERROR:  Not text data
2023-07-22 05:10:23.703 UTC [2710358] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:10:23.704 UTC [2710358] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:23.704 UTC [2710358] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:10:23.704 UTC [2710358] ERROR:  Unsupported compression algorithm
2023-07-22 05:10:23.704 UTC [2710358] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:10:23.718 UTC [2710364] ERROR:  Not text data
2023-07-22 05:10:23.718 UTC [2710364] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:10:24.170 UTC [2710372] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:24.170 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:10:24.186 UTC [2710372] ERROR:  Wrong key
2023-07-22 05:10:24.186 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:10:24.187 UTC [2710372] ERROR:  No encryption key found
2023-07-22 05:10:24.187 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:10:24.188 UTC [2710372] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:24.188 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:10:24.192 UTC [2710372] ERROR:  Need password for secret key
2023-07-22 05:10:24.192 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:10:24.193 UTC [2710372] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:24.193 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:10:24.197 UTC [2710372] ERROR:  Wrong key or corrupt data
2023-07-22 05:10:24.197 UTC [2710372] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:10:24.217 UTC [2710378] ERROR:  No encryption key found
2023-07-22 05:10:24.217 UTC [2710378] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:10:24.218 UTC [2710378] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:10:24.218 UTC [2710378] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:10:24.219 UTC [2710378] ERROR:  Not text data
2023-07-22 05:10:24.219 UTC [2710378] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:10:24.226 UTC [2710382] ERROR:  No encryption key found
2023-07-22 05:10:24.226 UTC [2710382] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:10:24.227 UTC [2710382] ERROR:  No encryption key found
2023-07-22 05:10:24.227 UTC [2710382] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:10:55.808 UTC [2710253] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:10:55.975 UTC [2710253] LOG:  checkpoint complete: wrote 1131 buffers (6.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.032 s, sync=0.091 s, total=0.167 s; sync files=509, longest=0.004 s, average=0.001 s; distance=145821 kB, estimate=145821 kB
2023-07-22 05:11:27.351 UTC [2710253] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:11:27.397 UTC [2710253] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.046 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136901 kB, estimate=144929 kB
2023-07-22 05:11:27.462 UTC [2710252] LOG:  received fast shutdown request
2023-07-22 05:11:27.465 UTC [2710252] LOG:  aborting any active transactions
2023-07-22 05:11:27.466 UTC [2710252] LOG:  background worker "logical replication launcher" (PID 2710258) exited with exit code 1
2023-07-22 05:11:27.466 UTC [2710253] LOG:  shutting down
2023-07-22 05:11:27.469 UTC [2710253] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:11:27.486 UTC [2710253] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130436 kB
2023-07-22 05:11:27.509 UTC [2710252] LOG:  database system is shut down
2023-07-22 05:11:28.197 UTC [2710508] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:11:28.197 UTC [2710508] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:11:28.203 UTC [2710508] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:11:28.210 UTC [2710511] LOG:  database system was shut down at 2023-07-22 05:11:28 UTC
2023-07-22 05:11:28.215 UTC [2710508] LOG:  database system is ready to accept connections
2023-07-22 05:12:00.170 UTC [2710509] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:12:00.328 UTC [2710509] LOG:  checkpoint complete: wrote 557 buffers (3.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.035 s, sync=0.082 s, total=0.158 s; sync files=255, longest=0.007 s, average=0.001 s; distance=141742 kB, estimate=141742 kB
2023-07-22 05:12:31.768 UTC [2710509] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:12:31.880 UTC [2710509] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.014 s, sync=0.009 s, total=0.113 s; sync files=4, longest=0.005 s, average=0.003 s; distance=135665 kB, estimate=141134 kB
2023-07-22 05:12:31.924 UTC [2710508] LOG:  received fast shutdown request
2023-07-22 05:12:31.929 UTC [2710508] LOG:  aborting any active transactions
2023-07-22 05:12:31.930 UTC [2710508] LOG:  background worker "logical replication launcher" (PID 2710514) exited with exit code 1
2023-07-22 05:12:31.931 UTC [2710509] LOG:  shutting down
2023-07-22 05:12:31.938 UTC [2710509] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:12:31.967 UTC [2710509] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.037 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=127021 kB
2023-07-22 05:12:31.996 UTC [2710508] LOG:  database system is shut down
2023-07-22 05:12:32.754 UTC [2710662] LOG:  pg_query_rewrite:_PG_init(): pg_query_rewrite is enabled with 10 rules
2023-07-22 05:12:32.770 UTC [2710662] LOG:  redirecting log output to logging collector process
2023-07-22 05:12:32.770 UTC [2710662] HINT:  Future log output will appear in directory "log".
2023-07-22 05:13:39.065 UTC [2710954] LOG:  pg_query_rewrite:_PG_init(): pg_query_rewrite is enabled with 10 rules
2023-07-22 05:13:39.085 UTC [2710954] LOG:  redirecting log output to logging collector process
2023-07-22 05:13:39.085 UTC [2710954] HINT:  Future log output will appear in directory "log".
2023-07-22 05:14:45.822 UTC [2711146] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:14:45.822 UTC [2711146] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:14:45.835 UTC [2711146] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:14:45.846 UTC [2711149] LOG:  database system was shut down at 2023-07-22 05:14:45 UTC
2023-07-22 05:14:45.854 UTC [2711146] LOG:  database system is ready to accept connections
2023-07-22 05:14:46.254 UTC [2711185] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:14:46.254 UTC [2711185] STATEMENT:  select gen_salt('foo');
2023-07-22 05:14:46.254 UTC [2711185] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:14:46.254 UTC [2711185] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:14:46.254 UTC [2711185] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:14:46.254 UTC [2711185] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:14:46.254 UTC [2711185] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:14:46.254 UTC [2711185] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:14:46.304 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.304 UTC [2711205] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Key was too big
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Key was too big
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Key was too big
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Key was too big
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:14:46.305 UTC [2711205] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:14:46.305 UTC [2711205] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:14:46.306 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.306 UTC [2711205] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:14:46.306 UTC [2711205] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.306 UTC [2711205] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:14:46.317 UTC [2711211] ERROR:  encrypt error: Encryption failed
2023-07-22 05:14:46.317 UTC [2711211] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:14:46.318 UTC [2711211] ERROR:  decrypt error: Decryption failed
2023-07-22 05:14:46.318 UTC [2711211] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:14:46.318 UTC [2711211] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:14:46.318 UTC [2711211] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:14:46.338 UTC [2711219] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.338 UTC [2711219] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:14:46.338 UTC [2711219] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.338 UTC [2711219] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:14:46.339 UTC [2711219] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.339 UTC [2711219] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:14:46.339 UTC [2711219] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.339 UTC [2711219] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:14:46.339 UTC [2711219] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:14:46.339 UTC [2711219] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:14:46.339 UTC [2711219] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:14:46.339 UTC [2711219] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:14:46.339 UTC [2711219] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.339 UTC [2711219] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:14:46.339 UTC [2711219] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.339 UTC [2711219] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:14:46.360 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.360 UTC [2711229] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:14:46.360 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.360 UTC [2711229] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:14:46.361 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.361 UTC [2711229] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:14:46.361 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.361 UTC [2711229] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:14:46.361 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.361 UTC [2711229] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:14:46.361 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.361 UTC [2711229] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:14:46.361 UTC [2711229] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:14:46.361 UTC [2711229] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:14:46.361 UTC [2711229] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:14:46.361 UTC [2711229] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:14:46.362 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.362 UTC [2711229] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:14:46.362 UTC [2711229] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:14:46.362 UTC [2711229] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:14:46.373 UTC [2711235] ERROR:  invalid salt
2023-07-22 05:14:46.373 UTC [2711235] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:14:46.494 UTC [2711243] ERROR:  invalid salt
2023-07-22 05:14:46.494 UTC [2711243] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:14:46.494 UTC [2711243] ERROR:  invalid salt
2023-07-22 05:14:46.494 UTC [2711243] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:14:46.495 UTC [2711243] ERROR:  invalid salt
2023-07-22 05:14:46.495 UTC [2711243] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:14:46.553 UTC [2711247] ERROR:  invalid salt
2023-07-22 05:14:46.553 UTC [2711247] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:14:46.553 UTC [2711247] ERROR:  crypt(3) returned NULL
2023-07-22 05:14:46.553 UTC [2711247] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:14:46.553 UTC [2711247] ERROR:  crypt(3) returned NULL
2023-07-22 05:14:46.553 UTC [2711247] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:14:46.611 UTC [2711251] ERROR:  Corrupt ascii-armor
2023-07-22 05:14:46.611 UTC [2711251] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:14:46.611 UTC [2711251] ERROR:  Corrupt ascii-armor
2023-07-22 05:14:46.611 UTC [2711251] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:14:46.611 UTC [2711251] ERROR:  Corrupt ascii-armor
2023-07-22 05:14:46.611 UTC [2711251] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  mismatched array dimensions
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  mismatched array dimensions
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  wrong number of array subscripts
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  wrong number of array subscripts
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  null value not allowed for header key
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  null value not allowed for header value
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  header key must not contain newlines
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  header value must not contain newlines
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:14:46.613 UTC [2711251] ERROR:  header key must not contain ": "
2023-07-22 05:14:46.613 UTC [2711251] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:14:46.621 UTC [2711255] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:46.621 UTC [2711255] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:14:46.633 UTC [2711255] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:46.633 UTC [2711255] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:14:46.635 UTC [2711255] ERROR:  Not text data
2023-07-22 05:14:46.635 UTC [2711255] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:14:46.635 UTC [2711255] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:46.635 UTC [2711255] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:14:46.636 UTC [2711255] ERROR:  Unsupported compression algorithm
2023-07-22 05:14:46.636 UTC [2711255] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:14:46.649 UTC [2711261] ERROR:  Not text data
2023-07-22 05:14:46.649 UTC [2711261] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:14:47.143 UTC [2711269] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:47.143 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:14:47.163 UTC [2711269] ERROR:  Wrong key
2023-07-22 05:14:47.163 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:14:47.163 UTC [2711269] ERROR:  No encryption key found
2023-07-22 05:14:47.163 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:14:47.165 UTC [2711269] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:47.165 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:14:47.171 UTC [2711269] ERROR:  Need password for secret key
2023-07-22 05:14:47.171 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:14:47.171 UTC [2711269] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:47.171 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:14:47.176 UTC [2711269] ERROR:  Wrong key or corrupt data
2023-07-22 05:14:47.176 UTC [2711269] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:14:47.198 UTC [2711275] ERROR:  No encryption key found
2023-07-22 05:14:47.198 UTC [2711275] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:14:47.198 UTC [2711275] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:14:47.198 UTC [2711275] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:14:47.199 UTC [2711275] ERROR:  Not text data
2023-07-22 05:14:47.199 UTC [2711275] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:14:47.207 UTC [2711279] ERROR:  No encryption key found
2023-07-22 05:14:47.207 UTC [2711279] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:14:47.208 UTC [2711279] ERROR:  No encryption key found
2023-07-22 05:14:47.208 UTC [2711279] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:15:19.828 UTC [2711147] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:15:20.013 UTC [2711147] LOG:  checkpoint complete: wrote 1844 buffers (11.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.058 s, sync=0.050 s, total=0.186 s; sync files=508, longest=0.015 s, average=0.001 s; distance=141845 kB, estimate=141845 kB
2023-07-22 05:15:51.924 UTC [2711147] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:15:52.022 UTC [2711147] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.012 s, sync=0.011 s, total=0.098 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133237 kB, estimate=140984 kB
2023-07-22 05:15:52.089 UTC [2711146] LOG:  received fast shutdown request
2023-07-22 05:15:52.096 UTC [2711146] LOG:  aborting any active transactions
2023-07-22 05:15:52.098 UTC [2711146] LOG:  background worker "logical replication launcher" (PID 2711152) exited with exit code 1
2023-07-22 05:15:52.098 UTC [2711147] LOG:  shutting down
2023-07-22 05:15:52.103 UTC [2711147] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:15:52.132 UTC [2711147] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.035 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126885 kB
2023-07-22 05:15:52.168 UTC [2711146] LOG:  database system is shut down
2023-07-22 05:15:52.969 UTC [2711412] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:15:52.970 UTC [2711412] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:15:52.982 UTC [2711412] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:15:52.997 UTC [2711415] LOG:  database system was shut down at 2023-07-22 05:15:52 UTC
2023-07-22 05:15:53.006 UTC [2711412] LOG:  database system is ready to accept connections
2023-07-22 05:16:25.769 UTC [2711413] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:16:25.910 UTC [2711413] LOG:  checkpoint complete: wrote 928 buffers (5.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.043 s, sync=0.032 s, total=0.142 s; sync files=254, longest=0.008 s, average=0.001 s; distance=140068 kB, estimate=140068 kB
2023-07-22 05:16:57.784 UTC [2711413] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:16:57.886 UTC [2711413] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.009 s, total=0.102 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133157 kB, estimate=139377 kB
2023-07-22 05:16:57.953 UTC [2711412] LOG:  received fast shutdown request
2023-07-22 05:16:57.960 UTC [2711412] LOG:  aborting any active transactions
2023-07-22 05:16:57.961 UTC [2711412] LOG:  background worker "logical replication launcher" (PID 2711418) exited with exit code 1
2023-07-22 05:16:57.962 UTC [2711413] LOG:  shutting down
2023-07-22 05:16:57.968 UTC [2711413] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:16:58.001 UTC [2711413] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.040 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=125439 kB
2023-07-22 05:16:58.055 UTC [2711412] LOG:  database system is shut down
2023-07-22 05:16:58.923 UTC [2711574] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:16:58.924 UTC [2711574] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:16:58.936 UTC [2711574] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:16:58.951 UTC [2711577] LOG:  database system was shut down at 2023-07-22 05:16:58 UTC
2023-07-22 05:16:58.966 UTC [2711574] LOG:  database system is ready to accept connections
2023-07-22 05:16:59.616 UTC [2711601] ERROR:  could not create unique index "idx_badindex_n"
2023-07-22 05:16:59.616 UTC [2711601] DETAIL:  Key (n)=(10) is duplicated.
2023-07-22 05:16:59.616 UTC [2711601] STATEMENT:  CREATE UNIQUE INDEX CONCURRENTLY idx_badindex_n ON tbl_badindex (n);
2023-07-22 05:17:06.154 UTC [2711816] ERROR:  permission denied for schema repack at character 8
2023-07-22 05:17:06.154 UTC [2711816] STATEMENT:  select repack.version(), repack.version_sql()
2023-07-22 05:17:09.006 UTC [2711906] ERROR:  table name not found for OID 1
2023-07-22 05:17:09.006 UTC [2711906] STATEMENT:  SELECT repack.get_order_by('issue321_idx'::regclass::oid, 1);
2023-07-22 05:17:09.006 UTC [2711906] ERROR:  cache lookup failed for index 1
2023-07-22 05:17:09.006 UTC [2711906] STATEMENT:  SELECT repack.get_order_by(1, 1);
2023-07-22 05:17:09.034 UTC [2711575] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:17:09.236 UTC [2711575] LOG:  checkpoint complete: wrote 1062 buffers (6.5%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.053 s, sync=0.040 s, total=0.203 s; sync files=405, longest=0.009 s, average=0.001 s; distance=7911 kB, estimate=7911 kB
2023-07-22 05:17:09.237 UTC [2711932] ERROR:  tablespace "testts" is not empty
2023-07-22 05:17:09.237 UTC [2711932] STATEMENT:  DROP TABLESPACE testts
2023-07-22 05:17:09.255 UTC [2711575] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:17:09.302 UTC [2711575] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.011 s, total=0.047 s; sync files=3, longest=0.007 s, average=0.004 s; distance=1 kB, estimate=7120 kB
2023-07-22 05:17:09.476 UTC [2711946] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:17:09.476 UTC [2711946] STATEMENT:  select gen_salt('foo');
2023-07-22 05:17:09.476 UTC [2711946] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:17:09.476 UTC [2711946] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:17:09.476 UTC [2711946] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:17:09.476 UTC [2711946] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:17:09.476 UTC [2711946] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:17:09.476 UTC [2711946] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:17:09.518 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.518 UTC [2711966] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:17:09.518 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.518 UTC [2711966] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:17:09.518 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.518 UTC [2711966] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:17:09.518 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.518 UTC [2711966] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Key was too big
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Key was too big
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Key was too big
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:17:09.519 UTC [2711966] ERROR:  encrypt error: Key was too big
2023-07-22 05:17:09.519 UTC [2711966] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:17:09.520 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.520 UTC [2711966] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:17:09.520 UTC [2711966] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:17:09.520 UTC [2711966] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:17:09.520 UTC [2711966] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:17:09.520 UTC [2711966] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:17:09.520 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.520 UTC [2711966] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:17:09.520 UTC [2711966] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.520 UTC [2711966] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:17:09.529 UTC [2711972] ERROR:  encrypt error: Encryption failed
2023-07-22 05:17:09.529 UTC [2711972] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:17:09.530 UTC [2711972] ERROR:  decrypt error: Decryption failed
2023-07-22 05:17:09.530 UTC [2711972] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:17:09.531 UTC [2711972] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:17:09.531 UTC [2711972] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:17:09.548 UTC [2711980] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.548 UTC [2711980] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:17:09.548 UTC [2711980] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.548 UTC [2711980] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:17:09.548 UTC [2711980] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.548 UTC [2711980] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:17:09.549 UTC [2711980] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.549 UTC [2711980] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:17:09.549 UTC [2711980] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:17:09.549 UTC [2711980] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:17:09.549 UTC [2711980] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:17:09.549 UTC [2711980] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:17:09.549 UTC [2711980] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.549 UTC [2711980] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:17:09.549 UTC [2711980] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.549 UTC [2711980] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:17:09.567 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.567 UTC [2711990] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:17:09.567 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.567 UTC [2711990] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:17:09.567 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.567 UTC [2711990] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:17:09.567 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.567 UTC [2711990] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:17:09.568 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.568 UTC [2711990] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:17:09.568 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.568 UTC [2711990] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:17:09.568 UTC [2711990] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:17:09.568 UTC [2711990] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:17:09.568 UTC [2711990] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:17:09.568 UTC [2711990] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:17:09.568 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.568 UTC [2711990] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:17:09.568 UTC [2711990] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:17:09.568 UTC [2711990] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:17:09.578 UTC [2711996] ERROR:  invalid salt
2023-07-22 05:17:09.578 UTC [2711996] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:17:09.724 UTC [2712004] ERROR:  invalid salt
2023-07-22 05:17:09.724 UTC [2712004] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:17:09.724 UTC [2712004] ERROR:  invalid salt
2023-07-22 05:17:09.724 UTC [2712004] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:17:09.724 UTC [2712004] ERROR:  invalid salt
2023-07-22 05:17:09.724 UTC [2712004] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:17:09.803 UTC [2712008] ERROR:  invalid salt
2023-07-22 05:17:09.803 UTC [2712008] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:17:09.803 UTC [2712008] ERROR:  crypt(3) returned NULL
2023-07-22 05:17:09.803 UTC [2712008] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:17:09.803 UTC [2712008] ERROR:  crypt(3) returned NULL
2023-07-22 05:17:09.803 UTC [2712008] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:17:09.860 UTC [2712012] ERROR:  Corrupt ascii-armor
2023-07-22 05:17:09.860 UTC [2712012] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:17:09.861 UTC [2712012] ERROR:  Corrupt ascii-armor
2023-07-22 05:17:09.861 UTC [2712012] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:17:09.862 UTC [2712012] ERROR:  Corrupt ascii-armor
2023-07-22 05:17:09.862 UTC [2712012] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:17:09.872 UTC [2712012] ERROR:  mismatched array dimensions
2023-07-22 05:17:09.872 UTC [2712012] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:17:09.872 UTC [2712012] ERROR:  mismatched array dimensions
2023-07-22 05:17:09.872 UTC [2712012] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:17:09.873 UTC [2712012] ERROR:  wrong number of array subscripts
2023-07-22 05:17:09.873 UTC [2712012] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:17:09.873 UTC [2712012] ERROR:  wrong number of array subscripts
2023-07-22 05:17:09.873 UTC [2712012] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:17:09.874 UTC [2712012] ERROR:  null value not allowed for header key
2023-07-22 05:17:09.874 UTC [2712012] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:17:09.874 UTC [2712012] ERROR:  null value not allowed for header value
2023-07-22 05:17:09.874 UTC [2712012] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:17:09.875 UTC [2712012] ERROR:  header key must not contain newlines
2023-07-22 05:17:09.875 UTC [2712012] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:17:09.876 UTC [2712012] ERROR:  header value must not contain newlines
2023-07-22 05:17:09.876 UTC [2712012] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:17:09.876 UTC [2712012] ERROR:  header key must not contain ": "
2023-07-22 05:17:09.876 UTC [2712012] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:17:09.904 UTC [2712016] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:09.904 UTC [2712016] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:17:09.933 UTC [2712016] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:09.933 UTC [2712016] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:17:09.934 UTC [2712016] ERROR:  Not text data
2023-07-22 05:17:09.934 UTC [2712016] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:17:09.935 UTC [2712016] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:09.935 UTC [2712016] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:17:09.935 UTC [2712016] ERROR:  Unsupported compression algorithm
2023-07-22 05:17:09.935 UTC [2712016] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:17:09.950 UTC [2712022] ERROR:  Not text data
2023-07-22 05:17:09.950 UTC [2712022] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:17:10.429 UTC [2712030] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:10.429 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:17:10.447 UTC [2712030] ERROR:  Wrong key
2023-07-22 05:17:10.447 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:17:10.448 UTC [2712030] ERROR:  No encryption key found
2023-07-22 05:17:10.448 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:17:10.449 UTC [2712030] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:10.449 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:17:10.455 UTC [2712030] ERROR:  Need password for secret key
2023-07-22 05:17:10.455 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:17:10.456 UTC [2712030] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:10.456 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:17:10.460 UTC [2712030] ERROR:  Wrong key or corrupt data
2023-07-22 05:17:10.460 UTC [2712030] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:17:10.482 UTC [2712036] ERROR:  No encryption key found
2023-07-22 05:17:10.482 UTC [2712036] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:17:10.483 UTC [2712036] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:17:10.483 UTC [2712036] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:17:10.484 UTC [2712036] ERROR:  Not text data
2023-07-22 05:17:10.484 UTC [2712036] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:17:10.492 UTC [2712040] ERROR:  No encryption key found
2023-07-22 05:17:10.492 UTC [2712040] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:17:10.493 UTC [2712040] ERROR:  No encryption key found
2023-07-22 05:17:10.493 UTC [2712040] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:17:42.098 UTC [2711575] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:17:42.186 UTC [2711575] LOG:  checkpoint complete: wrote 651 buffers (4.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.025 s, total=0.089 s; sync files=261, longest=0.003 s, average=0.001 s; distance=141474 kB, estimate=141474 kB
2023-07-22 05:18:13.608 UTC [2711575] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:18:13.683 UTC [2711575] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.005 s, total=0.076 s; sync files=4, longest=0.004 s, average=0.002 s; distance=135297 kB, estimate=140857 kB
2023-07-22 05:18:13.749 UTC [2711574] LOG:  received fast shutdown request
2023-07-22 05:18:13.755 UTC [2711574] LOG:  aborting any active transactions
2023-07-22 05:18:13.756 UTC [2711574] LOG:  background worker "logical replication launcher" (PID 2711580) exited with exit code 1
2023-07-22 05:18:13.757 UTC [2711575] LOG:  shutting down
2023-07-22 05:18:13.759 UTC [2711575] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:18:13.787 UTC [2711575] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.003 s, total=0.031 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126771 kB
2023-07-22 05:18:13.841 UTC [2711574] LOG:  database system is shut down
2023-07-22 05:18:14.630 UTC [2712164] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:18:14.630 UTC [2712164] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:18:14.642 UTC [2712164] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:18:14.655 UTC [2712167] LOG:  database system was shut down at 2023-07-22 05:18:14 UTC
2023-07-22 05:18:14.663 UTC [2712164] LOG:  database system is ready to accept connections
2023-07-22 05:18:15.207 UTC [2712194] ERROR:  could not create unique index "idx_badindex_n"
2023-07-22 05:18:15.207 UTC [2712194] DETAIL:  Key (n)=(10) is duplicated.
2023-07-22 05:18:15.207 UTC [2712194] STATEMENT:  CREATE UNIQUE INDEX CONCURRENTLY idx_badindex_n ON tbl_badindex (n);
2023-07-22 05:18:21.544 UTC [2712363] ERROR:  permission denied for schema repack at character 8
2023-07-22 05:18:21.544 UTC [2712363] STATEMENT:  select repack.version(), repack.version_sql()
2023-07-22 05:18:24.195 UTC [2712452] ERROR:  table name not found for OID 1
2023-07-22 05:18:24.195 UTC [2712452] STATEMENT:  SELECT repack.get_order_by('issue321_idx'::regclass::oid, 1);
2023-07-22 05:18:24.195 UTC [2712452] ERROR:  cache lookup failed for index 1
2023-07-22 05:18:24.195 UTC [2712452] STATEMENT:  SELECT repack.get_order_by(1, 1);
2023-07-22 05:18:24.214 UTC [2712165] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:18:24.431 UTC [2712165] LOG:  checkpoint complete: wrote 1063 buffers (6.5%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.052 s, sync=0.041 s, total=0.218 s; sync files=405, longest=0.008 s, average=0.001 s; distance=7924 kB, estimate=7924 kB
2023-07-22 05:18:24.433 UTC [2712478] ERROR:  tablespace "testts" is not empty
2023-07-22 05:18:24.433 UTC [2712478] STATEMENT:  DROP TABLESPACE testts
2023-07-22 05:18:56.982 UTC [2712165] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:18:57.068 UTC [2712165] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.086 s; sync files=5, longest=0.005 s, average=0.002 s; distance=133233 kB, estimate=133233 kB
2023-07-22 05:19:28.922 UTC [2712165] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:19:29.036 UTC [2712165] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.014 s, sync=0.009 s, total=0.115 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133104 kB, estimate=133220 kB
2023-07-22 05:19:29.105 UTC [2712164] LOG:  received fast shutdown request
2023-07-22 05:19:29.110 UTC [2712164] LOG:  aborting any active transactions
2023-07-22 05:19:29.111 UTC [2712164] LOG:  background worker "logical replication launcher" (PID 2712170) exited with exit code 1
2023-07-22 05:19:29.112 UTC [2712165] LOG:  shutting down
2023-07-22 05:19:29.117 UTC [2712165] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:19:29.152 UTC [2712165] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.003 s, total=0.041 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=119898 kB
2023-07-22 05:19:29.180 UTC [2712164] LOG:  database system is shut down
2023-07-22 05:19:29.976 UTC [2712609] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:19:29.976 UTC [2712609] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:19:29.988 UTC [2712609] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:19:30.003 UTC [2712612] LOG:  database system was shut down at 2023-07-22 05:19:29 UTC
2023-07-22 05:19:30.014 UTC [2712609] LOG:  database system is ready to accept connections
2023-07-22 05:19:30.226 UTC [2712628] ERROR:  parameter "pg_show_plans.plan_format" cannot be changed without restarting the server
2023-07-22 05:19:30.226 UTC [2712628] STATEMENT:  set pg_show_plans.plan_format = 'json';
2023-07-22 05:19:30.344 UTC [2712648] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:19:30.344 UTC [2712648] STATEMENT:  select gen_salt('foo');
2023-07-22 05:19:30.344 UTC [2712648] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:19:30.344 UTC [2712648] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:19:30.344 UTC [2712648] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:19:30.344 UTC [2712648] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:19:30.344 UTC [2712648] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:19:30.344 UTC [2712648] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:19:30.409 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.409 UTC [2712668] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:19:30.410 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.410 UTC [2712668] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:19:30.410 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.410 UTC [2712668] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:19:30.410 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.410 UTC [2712668] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:19:30.411 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.411 UTC [2712668] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:19:30.411 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.411 UTC [2712668] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:19:30.411 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.411 UTC [2712668] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:19:30.411 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.411 UTC [2712668] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:19:30.412 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.412 UTC [2712668] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:19:30.412 UTC [2712668] ERROR:  encrypt error: Key was too big
2023-07-22 05:19:30.412 UTC [2712668] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:19:30.412 UTC [2712668] ERROR:  encrypt error: Key was too big
2023-07-22 05:19:30.412 UTC [2712668] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:19:30.412 UTC [2712668] ERROR:  encrypt error: Key was too big
2023-07-22 05:19:30.412 UTC [2712668] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:19:30.412 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.412 UTC [2712668] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:19:30.413 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.413 UTC [2712668] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:19:30.413 UTC [2712668] ERROR:  encrypt error: Key was too big
2023-07-22 05:19:30.413 UTC [2712668] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:19:30.413 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.413 UTC [2712668] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:19:30.413 UTC [2712668] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:19:30.413 UTC [2712668] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:19:30.413 UTC [2712668] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:19:30.413 UTC [2712668] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:19:30.414 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.414 UTC [2712668] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:19:30.414 UTC [2712668] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.414 UTC [2712668] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:19:30.432 UTC [2712674] ERROR:  encrypt error: Encryption failed
2023-07-22 05:19:30.432 UTC [2712674] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:19:30.435 UTC [2712674] ERROR:  decrypt error: Decryption failed
2023-07-22 05:19:30.435 UTC [2712674] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:19:30.435 UTC [2712674] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:19:30.435 UTC [2712674] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:19:30.469 UTC [2712682] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.469 UTC [2712682] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:19:30.469 UTC [2712682] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.469 UTC [2712682] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:19:30.470 UTC [2712682] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.470 UTC [2712682] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:19:30.470 UTC [2712682] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.470 UTC [2712682] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:19:30.470 UTC [2712682] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:19:30.470 UTC [2712682] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:19:30.471 UTC [2712682] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:19:30.471 UTC [2712682] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:19:30.471 UTC [2712682] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.471 UTC [2712682] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:19:30.471 UTC [2712682] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.471 UTC [2712682] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:19:30.504 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.504 UTC [2712692] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:19:30.505 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.505 UTC [2712692] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:19:30.505 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.505 UTC [2712692] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:19:30.505 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.505 UTC [2712692] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:19:30.505 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.505 UTC [2712692] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:19:30.506 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.506 UTC [2712692] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:19:30.506 UTC [2712692] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:19:30.506 UTC [2712692] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:19:30.506 UTC [2712692] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:19:30.506 UTC [2712692] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:19:30.507 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.507 UTC [2712692] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:19:30.507 UTC [2712692] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:19:30.507 UTC [2712692] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:19:30.525 UTC [2712698] ERROR:  invalid salt
2023-07-22 05:19:30.525 UTC [2712698] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:19:30.668 UTC [2712706] ERROR:  invalid salt
2023-07-22 05:19:30.668 UTC [2712706] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:19:30.668 UTC [2712706] ERROR:  invalid salt
2023-07-22 05:19:30.668 UTC [2712706] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:19:30.668 UTC [2712706] ERROR:  invalid salt
2023-07-22 05:19:30.668 UTC [2712706] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:19:30.736 UTC [2712710] ERROR:  invalid salt
2023-07-22 05:19:30.736 UTC [2712710] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:19:30.736 UTC [2712710] ERROR:  crypt(3) returned NULL
2023-07-22 05:19:30.736 UTC [2712710] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:19:30.736 UTC [2712710] ERROR:  crypt(3) returned NULL
2023-07-22 05:19:30.736 UTC [2712710] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:19:30.759 UTC [2712714] ERROR:  Corrupt ascii-armor
2023-07-22 05:19:30.759 UTC [2712714] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:19:30.759 UTC [2712714] ERROR:  Corrupt ascii-armor
2023-07-22 05:19:30.759 UTC [2712714] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:19:30.759 UTC [2712714] ERROR:  Corrupt ascii-armor
2023-07-22 05:19:30.759 UTC [2712714] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  mismatched array dimensions
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  mismatched array dimensions
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  wrong number of array subscripts
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  wrong number of array subscripts
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  null value not allowed for header key
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  null value not allowed for header value
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  header key must not contain newlines
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  header value must not contain newlines
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:19:30.761 UTC [2712714] ERROR:  header key must not contain ": "
2023-07-22 05:19:30.761 UTC [2712714] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:19:30.769 UTC [2712718] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:30.769 UTC [2712718] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:19:30.783 UTC [2712718] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:30.783 UTC [2712718] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:19:30.786 UTC [2712718] ERROR:  Not text data
2023-07-22 05:19:30.786 UTC [2712718] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:19:30.786 UTC [2712718] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:30.786 UTC [2712718] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:19:30.787 UTC [2712718] ERROR:  Unsupported compression algorithm
2023-07-22 05:19:30.787 UTC [2712718] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:19:30.803 UTC [2712724] ERROR:  Not text data
2023-07-22 05:19:30.803 UTC [2712724] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:19:31.297 UTC [2712732] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:31.297 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:19:31.317 UTC [2712732] ERROR:  Wrong key
2023-07-22 05:19:31.317 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:19:31.318 UTC [2712732] ERROR:  No encryption key found
2023-07-22 05:19:31.318 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:19:31.320 UTC [2712732] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:31.320 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:19:31.325 UTC [2712732] ERROR:  Need password for secret key
2023-07-22 05:19:31.325 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:19:31.326 UTC [2712732] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:31.326 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:19:31.331 UTC [2712732] ERROR:  Wrong key or corrupt data
2023-07-22 05:19:31.331 UTC [2712732] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:19:31.353 UTC [2712738] ERROR:  No encryption key found
2023-07-22 05:19:31.353 UTC [2712738] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:19:31.353 UTC [2712738] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:19:31.353 UTC [2712738] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:19:31.354 UTC [2712738] ERROR:  Not text data
2023-07-22 05:19:31.354 UTC [2712738] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:19:31.362 UTC [2712742] ERROR:  No encryption key found
2023-07-22 05:19:31.362 UTC [2712742] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:19:31.363 UTC [2712742] ERROR:  No encryption key found
2023-07-22 05:19:31.363 UTC [2712742] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:20:02.937 UTC [2712610] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:20:03.136 UTC [2712610] LOG:  checkpoint complete: wrote 1211 buffers (7.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.046 s, sync=0.109 s, total=0.199 s; sync files=506, longest=0.008 s, average=0.001 s; distance=145215 kB, estimate=145215 kB
2023-07-22 05:20:34.476 UTC [2712610] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:20:34.538 UTC [2712610] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.004 s, total=0.063 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136477 kB, estimate=144341 kB
2023-07-22 05:20:34.608 UTC [2712609] LOG:  received fast shutdown request
2023-07-22 05:20:34.614 UTC [2712609] LOG:  aborting any active transactions
2023-07-22 05:20:34.615 UTC [2712609] LOG:  background worker "logical replication launcher" (PID 2712615) exited with exit code 1
2023-07-22 05:20:34.615 UTC [2712610] LOG:  shutting down
2023-07-22 05:20:34.618 UTC [2712610] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:20:34.643 UTC [2712610] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.003 s, total=0.028 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=129907 kB
2023-07-22 05:20:34.666 UTC [2712609] LOG:  database system is shut down
2023-07-22 05:20:35.500 UTC [2712869] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:20:35.500 UTC [2712869] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:20:35.508 UTC [2712869] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:20:35.518 UTC [2712872] LOG:  database system was shut down at 2023-07-22 05:20:35 UTC
2023-07-22 05:20:35.527 UTC [2712869] LOG:  database system is ready to accept connections
2023-07-22 05:20:35.687 UTC [2712891] ERROR:  parameter "pg_show_plans.plan_format" cannot be changed without restarting the server
2023-07-22 05:20:35.687 UTC [2712891] STATEMENT:  set pg_show_plans.plan_format = 'json';
2023-07-22 05:21:08.312 UTC [2712870] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:21:08.445 UTC [2712870] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.050 s, sync=0.024 s, total=0.134 s; sync files=252, longest=0.006 s, average=0.001 s; distance=137507 kB, estimate=137507 kB
2023-07-22 05:21:40.291 UTC [2712870] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:21:40.388 UTC [2712870] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.009 s, total=0.098 s; sync files=4, longest=0.005 s, average=0.003 s; distance=132900 kB, estimate=137046 kB
2023-07-22 05:21:40.434 UTC [2712869] LOG:  received fast shutdown request
2023-07-22 05:21:40.443 UTC [2712869] LOG:  aborting any active transactions
2023-07-22 05:21:40.444 UTC [2712869] LOG:  background worker "logical replication launcher" (PID 2712875) exited with exit code 1
2023-07-22 05:21:40.445 UTC [2712870] LOG:  shutting down
2023-07-22 05:21:40.450 UTC [2712870] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:21:40.481 UTC [2712870] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.037 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123341 kB
2023-07-22 05:21:40.523 UTC [2712869] LOG:  database system is shut down
2023-07-22 05:21:41.287 UTC [2713026] LOG:  Auto detecting pg_stat_kcache.linux_hz parameter...
2023-07-22 05:21:41.287 UTC [2713026] LOG:  pg_stat_kcache.linux_hz is set to 250000
2023-07-22 05:21:41.324 UTC [2713026] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:21:41.324 UTC [2713026] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:21:41.335 UTC [2713026] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:21:41.346 UTC [2713029] LOG:  database system was shut down at 2023-07-22 05:21:40 UTC
2023-07-22 05:21:41.354 UTC [2713026] LOG:  database system is ready to accept connections
2023-07-22 05:21:41.666 UTC [2713065] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:21:41.666 UTC [2713065] STATEMENT:  select gen_salt('foo');
2023-07-22 05:21:41.667 UTC [2713065] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:21:41.667 UTC [2713065] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:21:41.668 UTC [2713065] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:21:41.668 UTC [2713065] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:21:41.668 UTC [2713065] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:21:41.668 UTC [2713065] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:21:41.771 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.771 UTC [2713085] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:21:41.771 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.771 UTC [2713085] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:21:41.771 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.771 UTC [2713085] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:21:41.772 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.772 UTC [2713085] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:21:41.772 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.772 UTC [2713085] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:21:41.772 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.772 UTC [2713085] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:21:41.773 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.773 UTC [2713085] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:21:41.773 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.773 UTC [2713085] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:21:41.773 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.773 UTC [2713085] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:21:41.773 UTC [2713085] ERROR:  encrypt error: Key was too big
2023-07-22 05:21:41.773 UTC [2713085] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:21:41.774 UTC [2713085] ERROR:  encrypt error: Key was too big
2023-07-22 05:21:41.774 UTC [2713085] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:21:41.774 UTC [2713085] ERROR:  encrypt error: Key was too big
2023-07-22 05:21:41.774 UTC [2713085] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:21:41.774 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.774 UTC [2713085] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:21:41.774 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.774 UTC [2713085] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:21:41.775 UTC [2713085] ERROR:  encrypt error: Key was too big
2023-07-22 05:21:41.775 UTC [2713085] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:21:41.775 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.775 UTC [2713085] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:21:41.775 UTC [2713085] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:21:41.775 UTC [2713085] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:21:41.776 UTC [2713085] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:21:41.776 UTC [2713085] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:21:41.776 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.776 UTC [2713085] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:21:41.776 UTC [2713085] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.776 UTC [2713085] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:21:41.799 UTC [2713091] ERROR:  encrypt error: Encryption failed
2023-07-22 05:21:41.799 UTC [2713091] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:21:41.802 UTC [2713091] ERROR:  decrypt error: Decryption failed
2023-07-22 05:21:41.802 UTC [2713091] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:21:41.802 UTC [2713091] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:21:41.802 UTC [2713091] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:21:41.844 UTC [2713099] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.844 UTC [2713099] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:21:41.844 UTC [2713099] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.844 UTC [2713099] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:21:41.845 UTC [2713099] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.845 UTC [2713099] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:21:41.845 UTC [2713099] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.845 UTC [2713099] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:21:41.846 UTC [2713099] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:21:41.846 UTC [2713099] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:21:41.846 UTC [2713099] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:21:41.846 UTC [2713099] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:21:41.846 UTC [2713099] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.846 UTC [2713099] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:21:41.847 UTC [2713099] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.847 UTC [2713099] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:21:41.887 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.887 UTC [2713109] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:21:41.888 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.888 UTC [2713109] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:21:41.888 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.888 UTC [2713109] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:21:41.888 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.888 UTC [2713109] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:21:41.889 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.889 UTC [2713109] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:21:41.889 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.889 UTC [2713109] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:21:41.889 UTC [2713109] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:21:41.889 UTC [2713109] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:21:41.890 UTC [2713109] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:21:41.890 UTC [2713109] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:21:41.890 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.890 UTC [2713109] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:21:41.890 UTC [2713109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:21:41.890 UTC [2713109] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:21:41.912 UTC [2713115] ERROR:  invalid salt
2023-07-22 05:21:41.912 UTC [2713115] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:21:42.062 UTC [2713123] ERROR:  invalid salt
2023-07-22 05:21:42.062 UTC [2713123] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:21:42.063 UTC [2713123] ERROR:  invalid salt
2023-07-22 05:21:42.063 UTC [2713123] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:21:42.063 UTC [2713123] ERROR:  invalid salt
2023-07-22 05:21:42.063 UTC [2713123] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:21:42.128 UTC [2713127] ERROR:  invalid salt
2023-07-22 05:21:42.128 UTC [2713127] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:21:42.128 UTC [2713127] ERROR:  crypt(3) returned NULL
2023-07-22 05:21:42.128 UTC [2713127] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:21:42.128 UTC [2713127] ERROR:  crypt(3) returned NULL
2023-07-22 05:21:42.128 UTC [2713127] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:21:42.168 UTC [2713131] ERROR:  Corrupt ascii-armor
2023-07-22 05:21:42.168 UTC [2713131] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:21:42.168 UTC [2713131] ERROR:  Corrupt ascii-armor
2023-07-22 05:21:42.168 UTC [2713131] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:21:42.168 UTC [2713131] ERROR:  Corrupt ascii-armor
2023-07-22 05:21:42.168 UTC [2713131] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:21:42.170 UTC [2713131] ERROR:  mismatched array dimensions
2023-07-22 05:21:42.170 UTC [2713131] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:21:42.170 UTC [2713131] ERROR:  mismatched array dimensions
2023-07-22 05:21:42.170 UTC [2713131] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:21:42.170 UTC [2713131] ERROR:  wrong number of array subscripts
2023-07-22 05:21:42.170 UTC [2713131] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:21:42.170 UTC [2713131] ERROR:  wrong number of array subscripts
2023-07-22 05:21:42.170 UTC [2713131] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:21:42.170 UTC [2713131] ERROR:  null value not allowed for header key
2023-07-22 05:21:42.170 UTC [2713131] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:21:42.170 UTC [2713131] ERROR:  null value not allowed for header value
2023-07-22 05:21:42.170 UTC [2713131] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:21:42.171 UTC [2713131] ERROR:  header key must not contain newlines
2023-07-22 05:21:42.171 UTC [2713131] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:21:42.171 UTC [2713131] ERROR:  header value must not contain newlines
2023-07-22 05:21:42.171 UTC [2713131] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:21:42.171 UTC [2713131] ERROR:  header key must not contain ": "
2023-07-22 05:21:42.171 UTC [2713131] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:21:42.178 UTC [2713135] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.178 UTC [2713135] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:21:42.190 UTC [2713135] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.190 UTC [2713135] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:21:42.191 UTC [2713135] ERROR:  Not text data
2023-07-22 05:21:42.191 UTC [2713135] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:21:42.191 UTC [2713135] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.191 UTC [2713135] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:21:42.192 UTC [2713135] ERROR:  Unsupported compression algorithm
2023-07-22 05:21:42.192 UTC [2713135] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:21:42.207 UTC [2713141] ERROR:  Not text data
2023-07-22 05:21:42.207 UTC [2713141] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:21:42.675 UTC [2713149] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.675 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:21:42.694 UTC [2713149] ERROR:  Wrong key
2023-07-22 05:21:42.694 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:21:42.695 UTC [2713149] ERROR:  No encryption key found
2023-07-22 05:21:42.695 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:21:42.696 UTC [2713149] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.696 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:21:42.701 UTC [2713149] ERROR:  Need password for secret key
2023-07-22 05:21:42.701 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:21:42.702 UTC [2713149] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.702 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:21:42.706 UTC [2713149] ERROR:  Wrong key or corrupt data
2023-07-22 05:21:42.706 UTC [2713149] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:21:42.728 UTC [2713155] ERROR:  No encryption key found
2023-07-22 05:21:42.728 UTC [2713155] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:21:42.728 UTC [2713155] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:21:42.728 UTC [2713155] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:21:42.729 UTC [2713155] ERROR:  Not text data
2023-07-22 05:21:42.729 UTC [2713155] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:21:42.737 UTC [2713159] ERROR:  No encryption key found
2023-07-22 05:21:42.737 UTC [2713159] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:21:42.738 UTC [2713159] ERROR:  No encryption key found
2023-07-22 05:21:42.738 UTC [2713159] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:22:15.238 UTC [2713027] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:22:15.419 UTC [2713027] LOG:  checkpoint complete: wrote 1857 buffers (11.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.053 s, sync=0.057 s, total=0.182 s; sync files=507, longest=0.018 s, average=0.001 s; distance=143292 kB, estimate=143292 kB
2023-07-22 05:22:47.198 UTC [2713027] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:22:47.274 UTC [2713027] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.009 s, total=0.076 s; sync files=4, longest=0.008 s, average=0.003 s; distance=135672 kB, estimate=142530 kB
2023-07-22 05:22:47.338 UTC [2713026] LOG:  received fast shutdown request
2023-07-22 05:22:47.343 UTC [2713026] LOG:  aborting any active transactions
2023-07-22 05:22:47.345 UTC [2713026] LOG:  background worker "logical replication launcher" (PID 2713032) exited with exit code 1
2023-07-22 05:22:47.345 UTC [2713027] LOG:  shutting down
2023-07-22 05:22:47.350 UTC [2713027] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:22:47.374 UTC [2713027] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.030 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=128277 kB
2023-07-22 05:22:47.406 UTC [2713026] LOG:  database system is shut down
2023-07-22 05:22:48.184 UTC [2713291] LOG:  Auto detecting pg_stat_kcache.linux_hz parameter...
2023-07-22 05:22:48.184 UTC [2713291] LOG:  pg_stat_kcache.linux_hz is set to 1000000
2023-07-22 05:22:48.198 UTC [2713291] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:22:48.198 UTC [2713291] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:22:48.209 UTC [2713291] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:22:48.218 UTC [2713294] LOG:  database system was shut down at 2023-07-22 05:22:47 UTC
2023-07-22 05:22:48.228 UTC [2713291] LOG:  database system is ready to accept connections
2023-07-22 05:23:21.092 UTC [2713292] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:21.240 UTC [2713292] LOG:  checkpoint complete: wrote 932 buffers (5.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.028 s, sync=0.044 s, total=0.147 s; sync files=253, longest=0.014 s, average=0.001 s; distance=137704 kB, estimate=137704 kB
2023-07-22 05:23:53.103 UTC [2713292] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:53.187 UTC [2713292] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.007 s, total=0.085 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133338 kB, estimate=137267 kB
2023-07-22 05:23:53.254 UTC [2713291] LOG:  received fast shutdown request
2023-07-22 05:23:53.260 UTC [2713291] LOG:  aborting any active transactions
2023-07-22 05:23:53.262 UTC [2713291] LOG:  background worker "logical replication launcher" (PID 2713297) exited with exit code 1
2023-07-22 05:23:53.262 UTC [2713292] LOG:  shutting down
2023-07-22 05:23:53.269 UTC [2713292] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:23:53.298 UTC [2713292] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.037 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123541 kB
2023-07-22 05:23:53.356 UTC [2713291] LOG:  database system is shut down
2023-07-22 05:23:54.331 UTC [2713451] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:23:54.331 UTC [2713451] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:23:54.341 UTC [2713451] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:23:54.353 UTC [2713454] LOG:  database system was shut down at 2023-07-22 05:23:53 UTC
2023-07-22 05:23:54.360 UTC [2713451] LOG:  database system is ready to accept connections
2023-07-22 05:23:54.860 UTC [2713452] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:55.000 UTC [2713452] LOG:  checkpoint complete: wrote 1832 buffers (11.2%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.062 s, sync=0.046 s, total=0.140 s; sync files=497, longest=0.012 s, average=0.001 s; distance=12737 kB, estimate=12737 kB
2023-07-22 05:23:55.014 UTC [2713452] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:55.057 UTC [2713452] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.007 s, total=0.043 s; sync files=2, longest=0.006 s, average=0.004 s; distance=1 kB, estimate=11463 kB
2023-07-22 05:23:55.160 UTC [2713495] ERROR:  current user cannot be dropped
2023-07-22 05:23:55.160 UTC [2713495] STATEMENT:  DROP USER su;
2023-07-22 05:23:55.615 UTC [2713452] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:55.704 UTC [2713452] LOG:  checkpoint complete: wrote 1050 buffers (6.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.032 s, sync=0.031 s, total=0.089 s; sync files=297, longest=0.010 s, average=0.001 s; distance=9059 kB, estimate=11223 kB
2023-07-22 05:23:55.751 UTC [2713452] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:55.794 UTC [2713452] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.009 s, total=0.043 s; sync files=7, longest=0.008 s, average=0.002 s; distance=34 kB, estimate=10104 kB
2023-07-22 05:23:55.904 UTC [2713525] ERROR:  duplicate key value violates unique constraint "company_pkey"
2023-07-22 05:23:55.904 UTC [2713525] DETAIL:  Key (id)=(1) already exists.
2023-07-22 05:23:55.904 UTC [2713525] STATEMENT:  INSERT  INTO Company(ID, Name) VALUES (1, 'Percona');
2023-07-22 05:23:56.179 UTC [2713545] ERROR:  division by zero
2023-07-22 05:23:56.179 UTC [2713545] STATEMENT:  SELECT 1/0;
2023-07-22 05:23:56.180 UTC [2713545] ERROR:  relation "unknown" does not exist at character 15
2023-07-22 05:23:56.180 UTC [2713545] STATEMENT:  SELECT * FROM unknown;
2023-07-22 05:23:56.180 UTC [2713545] ERROR:  syntax error at or near "ELECET" at character 1
2023-07-22 05:23:56.180 UTC [2713545] STATEMENT:  ELECET * FROM unknown;
2023-07-22 05:23:56.180 UTC [2713545] WARNING:  warning message
2023-07-22 05:23:56.180 UTC [2713545] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 05:23:56.314 UTC [2713559] ERROR:  role "su" already exists
2023-07-22 05:23:56.314 UTC [2713559] STATEMENT:  CREATE USER su WITH SUPERUSER;
2023-07-22 05:23:56.340 UTC [2713559] ERROR:  permission denied for function pg_stat_monitor_reset
2023-07-22 05:23:56.340 UTC [2713559] STATEMENT:  SELECT pg_stat_monitor_reset();
2023-07-22 05:23:56.431 UTC [2713452] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:56.474 UTC [2713452] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.010 s, total=0.044 s; sync files=9, longest=0.005 s, average=0.002 s; distance=1552 kB, estimate=9249 kB
2023-07-22 05:23:56.613 UTC [2713578] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:23:56.613 UTC [2713578] STATEMENT:  select gen_salt('foo');
2023-07-22 05:23:56.614 UTC [2713578] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:23:56.614 UTC [2713578] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:23:56.614 UTC [2713578] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:23:56.614 UTC [2713578] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:23:56.614 UTC [2713578] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:23:56.614 UTC [2713578] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:23:56.657 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.657 UTC [2713598] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Key was too big
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Key was too big
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Key was too big
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Key was too big
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:23:56.658 UTC [2713598] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.658 UTC [2713598] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:23:56.668 UTC [2713604] ERROR:  encrypt error: Encryption failed
2023-07-22 05:23:56.668 UTC [2713604] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:23:56.669 UTC [2713604] ERROR:  decrypt error: Decryption failed
2023-07-22 05:23:56.669 UTC [2713604] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:23:56.669 UTC [2713604] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:23:56.669 UTC [2713604] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:23:56.687 UTC [2713612] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.687 UTC [2713612] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:23:56.687 UTC [2713612] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.687 UTC [2713612] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:23:56.687 UTC [2713612] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.687 UTC [2713612] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:23:56.688 UTC [2713612] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.688 UTC [2713612] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:23:56.688 UTC [2713612] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:23:56.688 UTC [2713612] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:23:56.688 UTC [2713612] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:23:56.688 UTC [2713612] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:23:56.688 UTC [2713612] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.688 UTC [2713612] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:23:56.688 UTC [2713612] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.688 UTC [2713612] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:23:56.706 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.706 UTC [2713622] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:23:56.706 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.706 UTC [2713622] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:23:56.706 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.706 UTC [2713622] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:23:56.707 UTC [2713622] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:23:56.707 UTC [2713622] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:23:56.717 UTC [2713628] ERROR:  invalid salt
2023-07-22 05:23:56.717 UTC [2713628] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:23:56.857 UTC [2713636] ERROR:  invalid salt
2023-07-22 05:23:56.857 UTC [2713636] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:23:56.857 UTC [2713636] ERROR:  invalid salt
2023-07-22 05:23:56.857 UTC [2713636] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:23:56.857 UTC [2713636] ERROR:  invalid salt
2023-07-22 05:23:56.857 UTC [2713636] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:23:56.934 UTC [2713640] ERROR:  invalid salt
2023-07-22 05:23:56.934 UTC [2713640] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:23:56.934 UTC [2713640] ERROR:  crypt(3) returned NULL
2023-07-22 05:23:56.934 UTC [2713640] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:23:56.934 UTC [2713640] ERROR:  crypt(3) returned NULL
2023-07-22 05:23:56.934 UTC [2713640] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:23:56.992 UTC [2713644] ERROR:  Corrupt ascii-armor
2023-07-22 05:23:56.992 UTC [2713644] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:23:56.993 UTC [2713644] ERROR:  Corrupt ascii-armor
2023-07-22 05:23:56.993 UTC [2713644] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:23:56.993 UTC [2713644] ERROR:  Corrupt ascii-armor
2023-07-22 05:23:56.993 UTC [2713644] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:23:57.004 UTC [2713644] ERROR:  mismatched array dimensions
2023-07-22 05:23:57.004 UTC [2713644] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:23:57.005 UTC [2713644] ERROR:  mismatched array dimensions
2023-07-22 05:23:57.005 UTC [2713644] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:23:57.005 UTC [2713644] ERROR:  wrong number of array subscripts
2023-07-22 05:23:57.005 UTC [2713644] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:23:57.005 UTC [2713644] ERROR:  wrong number of array subscripts
2023-07-22 05:23:57.005 UTC [2713644] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:23:57.006 UTC [2713644] ERROR:  null value not allowed for header key
2023-07-22 05:23:57.006 UTC [2713644] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:23:57.006 UTC [2713644] ERROR:  null value not allowed for header value
2023-07-22 05:23:57.006 UTC [2713644] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:23:57.008 UTC [2713644] ERROR:  header key must not contain newlines
2023-07-22 05:23:57.008 UTC [2713644] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:23:57.008 UTC [2713644] ERROR:  header value must not contain newlines
2023-07-22 05:23:57.008 UTC [2713644] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:23:57.009 UTC [2713644] ERROR:  header key must not contain ": "
2023-07-22 05:23:57.009 UTC [2713644] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:23:57.032 UTC [2713648] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.032 UTC [2713648] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:23:57.062 UTC [2713648] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.062 UTC [2713648] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:23:57.064 UTC [2713648] ERROR:  Not text data
2023-07-22 05:23:57.064 UTC [2713648] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:23:57.065 UTC [2713648] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.065 UTC [2713648] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:23:57.066 UTC [2713648] ERROR:  Unsupported compression algorithm
2023-07-22 05:23:57.066 UTC [2713648] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:23:57.085 UTC [2713654] ERROR:  Not text data
2023-07-22 05:23:57.085 UTC [2713654] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:23:57.560 UTC [2713662] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.560 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:23:57.578 UTC [2713662] ERROR:  Wrong key
2023-07-22 05:23:57.578 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:23:57.578 UTC [2713662] ERROR:  No encryption key found
2023-07-22 05:23:57.578 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:23:57.580 UTC [2713662] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.580 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:23:57.585 UTC [2713662] ERROR:  Need password for secret key
2023-07-22 05:23:57.585 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:23:57.586 UTC [2713662] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.586 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:23:57.590 UTC [2713662] ERROR:  Wrong key or corrupt data
2023-07-22 05:23:57.590 UTC [2713662] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:23:57.611 UTC [2713668] ERROR:  No encryption key found
2023-07-22 05:23:57.611 UTC [2713668] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:23:57.611 UTC [2713668] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:23:57.611 UTC [2713668] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:23:57.612 UTC [2713668] ERROR:  Not text data
2023-07-22 05:23:57.612 UTC [2713668] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:23:57.620 UTC [2713672] ERROR:  No encryption key found
2023-07-22 05:23:57.620 UTC [2713672] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:23:57.620 UTC [2713672] ERROR:  No encryption key found
2023-07-22 05:23:57.620 UTC [2713672] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:23:57.624 UTC [2713451] LOG:  received fast shutdown request
2023-07-22 05:23:57.627 UTC [2713451] LOG:  aborting any active transactions
2023-07-22 05:23:57.628 UTC [2713451] LOG:  background worker "logical replication launcher" (PID 2713457) exited with exit code 1
2023-07-22 05:23:57.628 UTC [2713452] LOG:  shutting down
2023-07-22 05:23:57.631 UTC [2713452] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:23:57.683 UTC [2713452] LOG:  checkpoint complete: wrote 926 buffers (5.7%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.017 s, sync=0.024 s, total=0.055 s; sync files=260, longest=0.006 s, average=0.001 s; distance=4352 kB, estimate=8759 kB
2023-07-22 05:23:57.686 UTC [2713451] LOG:  [pg_stat_monitor] pgsm_shmem_shutdown: Shutdown initiated.
2023-07-22 05:23:57.732 UTC [2713451] LOG:  database system is shut down
2023-07-22 05:23:58.624 UTC [2713701] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:23:58.624 UTC [2713701] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:23:58.633 UTC [2713701] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:23:58.641 UTC [2713704] LOG:  database system was shut down at 2023-07-22 05:23:58 UTC
2023-07-22 05:23:58.649 UTC [2713701] LOG:  database system is ready to accept connections
2023-07-22 05:23:59.122 UTC [2713702] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:59.223 UTC [2713702] LOG:  checkpoint complete: wrote 1833 buffers (11.2%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.051 s, sync=0.035 s, total=0.102 s; sync files=497, longest=0.006 s, average=0.001 s; distance=12747 kB, estimate=12747 kB
2023-07-22 05:23:59.230 UTC [2713702] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:59.250 UTC [2713702] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.004 s, total=0.020 s; sync files=2, longest=0.003 s, average=0.002 s; distance=1 kB, estimate=11472 kB
2023-07-22 05:23:59.332 UTC [2713748] ERROR:  current user cannot be dropped
2023-07-22 05:23:59.332 UTC [2713748] STATEMENT:  DROP USER su;
2023-07-22 05:23:59.591 UTC [2713702] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:59.641 UTC [2713702] LOG:  checkpoint complete: wrote 1052 buffers (6.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.016 s, sync=0.021 s, total=0.051 s; sync files=297, longest=0.004 s, average=0.001 s; distance=9064 kB, estimate=11231 kB
2023-07-22 05:23:59.686 UTC [2713702] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:23:59.709 UTC [2713702] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.005 s, total=0.024 s; sync files=7, longest=0.004 s, average=0.001 s; distance=34 kB, estimate=10112 kB
2023-07-22 05:23:59.776 UTC [2713776] ERROR:  duplicate key value violates unique constraint "company_pkey"
2023-07-22 05:23:59.776 UTC [2713776] DETAIL:  Key (id)=(1) already exists.
2023-07-22 05:23:59.776 UTC [2713776] STATEMENT:  INSERT  INTO Company(ID, Name) VALUES (1, 'Percona');
2023-07-22 05:23:59.945 UTC [2713796] ERROR:  division by zero
2023-07-22 05:23:59.945 UTC [2713796] STATEMENT:  SELECT 1/0;
2023-07-22 05:23:59.945 UTC [2713796] ERROR:  relation "unknown" does not exist at character 15
2023-07-22 05:23:59.945 UTC [2713796] STATEMENT:  SELECT * FROM unknown;
2023-07-22 05:23:59.946 UTC [2713796] ERROR:  syntax error at or near "ELECET" at character 1
2023-07-22 05:23:59.946 UTC [2713796] STATEMENT:  ELECET * FROM unknown;
2023-07-22 05:23:59.946 UTC [2713796] WARNING:  warning message
2023-07-22 05:23:59.946 UTC [2713796] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 05:24:00.067 UTC [2713810] ERROR:  role "su" already exists
2023-07-22 05:24:00.067 UTC [2713810] STATEMENT:  CREATE USER su WITH SUPERUSER;
2023-07-22 05:24:00.091 UTC [2713810] ERROR:  permission denied for function pg_stat_monitor_reset
2023-07-22 05:24:00.091 UTC [2713810] STATEMENT:  SELECT pg_stat_monitor_reset();
2023-07-22 05:24:00.145 UTC [2713701] LOG:  received fast shutdown request
2023-07-22 05:24:00.148 UTC [2713701] LOG:  aborting any active transactions
2023-07-22 05:24:00.151 UTC [2713701] LOG:  background worker "logical replication launcher" (PID 2713707) exited with exit code 1
2023-07-22 05:24:00.151 UTC [2713702] LOG:  shutting down
2023-07-22 05:24:00.154 UTC [2713702] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:24:00.185 UTC [2713702] LOG:  checkpoint complete: wrote 135 buffers (0.8%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.009 s, total=0.034 s; sync files=57, longest=0.004 s, average=0.001 s; distance=1526 kB, estimate=9253 kB
2023-07-22 05:24:00.193 UTC [2713701] LOG:  [pg_stat_monitor] pgsm_shmem_shutdown: Shutdown initiated.
2023-07-22 05:24:00.271 UTC [2713701] LOG:  database system is shut down
2023-07-22 05:24:01.001 UTC [2713843] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:24:01.001 UTC [2713843] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:24:01.008 UTC [2713843] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:24:01.018 UTC [2713846] LOG:  database system was shut down at 2023-07-22 05:24:00 UTC
2023-07-22 05:24:01.028 UTC [2713843] LOG:  database system is ready to accept connections
2023-07-22 05:24:01.390 UTC [2713866] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 05:24:01.390 UTC [2713866] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 05:24:01.396 UTC [2713866] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 05:24:01.396 UTC [2713866] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 05:24:01.402 UTC [2713866] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 05:24:01.402 UTC [2713866] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 05:24:01.550 UTC [2713881] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:24:01.550 UTC [2713881] STATEMENT:  select gen_salt('foo');
2023-07-22 05:24:01.550 UTC [2713881] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:24:01.550 UTC [2713881] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:24:01.551 UTC [2713881] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:24:01.551 UTC [2713881] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:24:01.551 UTC [2713881] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:24:01.551 UTC [2713881] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:24:01.590 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.590 UTC [2713901] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:24:01.590 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.590 UTC [2713901] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:24:01.590 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.590 UTC [2713901] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:24:01.590 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.590 UTC [2713901] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:24:01.590 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.590 UTC [2713901] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Key was too big
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Key was too big
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Key was too big
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Key was too big
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:24:01.591 UTC [2713901] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:24:01.591 UTC [2713901] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:24:01.592 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.592 UTC [2713901] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:24:01.592 UTC [2713901] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.592 UTC [2713901] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:24:01.601 UTC [2713907] ERROR:  encrypt error: Encryption failed
2023-07-22 05:24:01.601 UTC [2713907] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:24:01.602 UTC [2713907] ERROR:  decrypt error: Decryption failed
2023-07-22 05:24:01.602 UTC [2713907] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:24:01.602 UTC [2713907] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:24:01.602 UTC [2713907] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:24:01.618 UTC [2713915] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.618 UTC [2713915] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:24:01.618 UTC [2713915] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.618 UTC [2713915] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:24:01.618 UTC [2713915] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.618 UTC [2713915] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:24:01.619 UTC [2713915] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.619 UTC [2713915] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:24:01.619 UTC [2713915] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:24:01.619 UTC [2713915] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:24:01.619 UTC [2713915] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:24:01.619 UTC [2713915] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:24:01.619 UTC [2713915] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.619 UTC [2713915] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:24:01.619 UTC [2713915] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.619 UTC [2713915] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:24:01.636 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.636 UTC [2713925] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:24:01.636 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.636 UTC [2713925] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:24:01.636 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.636 UTC [2713925] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:24:01.637 UTC [2713925] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:24:01.637 UTC [2713925] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:24:01.646 UTC [2713931] ERROR:  invalid salt
2023-07-22 05:24:01.646 UTC [2713931] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:24:01.694 UTC [2713939] ERROR:  invalid salt
2023-07-22 05:24:01.694 UTC [2713939] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:24:01.694 UTC [2713939] ERROR:  invalid salt
2023-07-22 05:24:01.694 UTC [2713939] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:24:01.694 UTC [2713939] ERROR:  invalid salt
2023-07-22 05:24:01.694 UTC [2713939] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:24:01.759 UTC [2713943] ERROR:  invalid salt
2023-07-22 05:24:01.759 UTC [2713943] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:24:01.759 UTC [2713943] ERROR:  crypt(3) returned NULL
2023-07-22 05:24:01.759 UTC [2713943] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:24:01.759 UTC [2713943] ERROR:  crypt(3) returned NULL
2023-07-22 05:24:01.759 UTC [2713943] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:24:01.776 UTC [2713947] ERROR:  Corrupt ascii-armor
2023-07-22 05:24:01.776 UTC [2713947] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:24:01.776 UTC [2713947] ERROR:  Corrupt ascii-armor
2023-07-22 05:24:01.776 UTC [2713947] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:24:01.776 UTC [2713947] ERROR:  Corrupt ascii-armor
2023-07-22 05:24:01.776 UTC [2713947] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:24:01.777 UTC [2713947] ERROR:  mismatched array dimensions
2023-07-22 05:24:01.777 UTC [2713947] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:24:01.777 UTC [2713947] ERROR:  mismatched array dimensions
2023-07-22 05:24:01.777 UTC [2713947] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:24:01.777 UTC [2713947] ERROR:  wrong number of array subscripts
2023-07-22 05:24:01.777 UTC [2713947] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:24:01.777 UTC [2713947] ERROR:  wrong number of array subscripts
2023-07-22 05:24:01.777 UTC [2713947] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:24:01.778 UTC [2713947] ERROR:  null value not allowed for header key
2023-07-22 05:24:01.778 UTC [2713947] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:24:01.778 UTC [2713947] ERROR:  null value not allowed for header value
2023-07-22 05:24:01.778 UTC [2713947] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:24:01.778 UTC [2713947] ERROR:  header key must not contain newlines
2023-07-22 05:24:01.778 UTC [2713947] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:24:01.778 UTC [2713947] ERROR:  header value must not contain newlines
2023-07-22 05:24:01.778 UTC [2713947] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:24:01.778 UTC [2713947] ERROR:  header key must not contain ": "
2023-07-22 05:24:01.778 UTC [2713947] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:24:01.784 UTC [2713951] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:01.784 UTC [2713951] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:24:01.795 UTC [2713951] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:01.795 UTC [2713951] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:24:01.796 UTC [2713951] ERROR:  Not text data
2023-07-22 05:24:01.796 UTC [2713951] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:24:01.797 UTC [2713951] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:01.797 UTC [2713951] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:24:01.797 UTC [2713951] ERROR:  Unsupported compression algorithm
2023-07-22 05:24:01.797 UTC [2713951] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:24:01.808 UTC [2713957] ERROR:  Not text data
2023-07-22 05:24:01.808 UTC [2713957] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:24:02.257 UTC [2713965] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:02.257 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:24:02.275 UTC [2713965] ERROR:  Wrong key
2023-07-22 05:24:02.275 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:24:02.275 UTC [2713965] ERROR:  No encryption key found
2023-07-22 05:24:02.275 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:24:02.277 UTC [2713965] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:02.277 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:24:02.282 UTC [2713965] ERROR:  Need password for secret key
2023-07-22 05:24:02.282 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:24:02.283 UTC [2713965] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:02.283 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:24:02.287 UTC [2713965] ERROR:  Wrong key or corrupt data
2023-07-22 05:24:02.287 UTC [2713965] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:24:02.308 UTC [2713971] ERROR:  No encryption key found
2023-07-22 05:24:02.308 UTC [2713971] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:24:02.309 UTC [2713971] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:24:02.309 UTC [2713971] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:24:02.310 UTC [2713971] ERROR:  Not text data
2023-07-22 05:24:02.310 UTC [2713971] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:24:02.318 UTC [2713975] ERROR:  No encryption key found
2023-07-22 05:24:02.318 UTC [2713975] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:24:02.319 UTC [2713975] ERROR:  No encryption key found
2023-07-22 05:24:02.319 UTC [2713975] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:24:33.887 UTC [2713844] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:24:34.070 UTC [2713844] LOG:  checkpoint complete: wrote 970 buffers (5.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.022 s, sync=0.117 s, total=0.183 s; sync files=519, longest=0.006 s, average=0.001 s; distance=146241 kB, estimate=146241 kB
2023-07-22 05:25:05.404 UTC [2713844] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:25:05.477 UTC [2713844] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.010 s, total=0.073 s; sync files=4, longest=0.009 s, average=0.003 s; distance=137027 kB, estimate=145319 kB
2023-07-22 05:25:05.542 UTC [2713843] LOG:  received fast shutdown request
2023-07-22 05:25:05.545 UTC [2713843] LOG:  aborting any active transactions
2023-07-22 05:25:05.546 UTC [2713843] LOG:  background worker "logical replication launcher" (PID 2713849) exited with exit code 1
2023-07-22 05:25:05.547 UTC [2713844] LOG:  shutting down
2023-07-22 05:25:05.552 UTC [2713844] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:25:05.573 UTC [2713844] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.026 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130788 kB
2023-07-22 05:25:05.603 UTC [2713843] LOG:  database system is shut down
2023-07-22 05:25:06.405 UTC [2714146] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:25:06.406 UTC [2714146] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:25:06.416 UTC [2714146] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:25:06.426 UTC [2714149] LOG:  database system was shut down at 2023-07-22 05:25:06 UTC
2023-07-22 05:25:06.435 UTC [2714146] LOG:  database system is ready to accept connections
2023-07-22 05:25:06.910 UTC [2714173] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 05:25:06.910 UTC [2714173] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 05:25:06.920 UTC [2714173] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 05:25:06.920 UTC [2714173] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 05:25:06.926 UTC [2714173] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 05:25:06.926 UTC [2714173] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 05:25:39.546 UTC [2714147] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:25:39.695 UTC [2714147] LOG:  checkpoint complete: wrote 946 buffers (5.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.048 s, sync=0.030 s, total=0.150 s; sync files=265, longest=0.009 s, average=0.001 s; distance=137735 kB, estimate=137735 kB
2023-07-22 05:26:11.565 UTC [2714147] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:26:11.686 UTC [2714147] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.011 s, total=0.122 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132844 kB, estimate=137246 kB
2023-07-22 05:26:11.757 UTC [2714146] LOG:  received fast shutdown request
2023-07-22 05:26:11.765 UTC [2714146] LOG:  aborting any active transactions
2023-07-22 05:26:11.766 UTC [2714146] LOG:  background worker "logical replication launcher" (PID 2714152) exited with exit code 1
2023-07-22 05:26:11.766 UTC [2714147] LOG:  shutting down
2023-07-22 05:26:11.774 UTC [2714147] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:26:11.811 UTC [2714147] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.045 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123521 kB
2023-07-22 05:26:11.876 UTC [2714146] LOG:  database system is shut down
2023-07-22 05:26:12.688 UTC [2714303] FATAL:  could not access file "pg_strom": No such file or directory
2023-07-22 05:26:12.688 UTC [2714303] LOG:  database system is shut down
2023-07-22 05:26:13.535 UTC [2714336] FATAL:  could not access file "pg_strom": No such file or directory
2023-07-22 05:26:13.535 UTC [2714336] LOG:  database system is shut down
2023-07-22 05:26:14.363 UTC [2714377] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:26:14.364 UTC [2714377] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:26:14.374 UTC [2714377] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:26:14.388 UTC [2714380] LOG:  database system was shut down at 2023-07-22 05:26:14 UTC
2023-07-22 05:26:14.396 UTC [2714377] LOG:  database system is ready to accept connections
2023-07-22 05:26:14.601 UTC [2714396] ERROR:  argument must be empty or one-dimensional array
2023-07-22 05:26:14.601 UTC [2714396] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[['(0, 2)']]::tid[]);
2023-07-22 05:26:14.601 UTC [2714396] ERROR:  array must not contain nulls
2023-07-22 05:26:14.601 UTC [2714396] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[NULL]::tid[]);
2023-07-22 05:26:14.606 UTC [2714396] ERROR:  cannot operate on relation "vw"
2023-07-22 05:26:14.606 UTC [2714396] DETAIL:  This operation is not supported for views.
2023-07-22 05:26:14.606 UTC [2714396] STATEMENT:  select heap_force_kill('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 05:26:14.606 UTC [2714396] ERROR:  cannot operate on relation "vw"
2023-07-22 05:26:14.606 UTC [2714396] DETAIL:  This operation is not supported for views.
2023-07-22 05:26:14.606 UTC [2714396] STATEMENT:  select heap_force_freeze('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 05:26:14.716 UTC [2714411] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:26:14.716 UTC [2714411] STATEMENT:  select gen_salt('foo');
2023-07-22 05:26:14.716 UTC [2714411] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:26:14.716 UTC [2714411] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:26:14.716 UTC [2714411] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:26:14.716 UTC [2714411] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:26:14.716 UTC [2714411] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:26:14.716 UTC [2714411] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:26:14.759 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.759 UTC [2714431] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:26:14.759 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.759 UTC [2714431] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:26:14.759 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.759 UTC [2714431] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:26:14.759 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.759 UTC [2714431] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:26:14.759 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.759 UTC [2714431] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Key was too big
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Key was too big
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Key was too big
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Key was too big
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:26:14.760 UTC [2714431] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:26:14.760 UTC [2714431] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:26:14.761 UTC [2714431] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:26:14.761 UTC [2714431] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:26:14.761 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.761 UTC [2714431] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:26:14.761 UTC [2714431] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.761 UTC [2714431] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:26:14.771 UTC [2714437] ERROR:  encrypt error: Encryption failed
2023-07-22 05:26:14.771 UTC [2714437] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:26:14.772 UTC [2714437] ERROR:  decrypt error: Decryption failed
2023-07-22 05:26:14.772 UTC [2714437] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:26:14.772 UTC [2714437] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:26:14.772 UTC [2714437] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:26:14.790 UTC [2714445] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.790 UTC [2714445] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:26:14.790 UTC [2714445] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.790 UTC [2714445] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:26:14.791 UTC [2714445] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.791 UTC [2714445] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:26:14.791 UTC [2714445] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.791 UTC [2714445] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:26:14.791 UTC [2714445] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:26:14.791 UTC [2714445] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:26:14.791 UTC [2714445] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:26:14.791 UTC [2714445] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:26:14.791 UTC [2714445] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.791 UTC [2714445] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:26:14.791 UTC [2714445] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.791 UTC [2714445] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:26:14.810 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.810 UTC [2714455] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:26:14.810 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.810 UTC [2714455] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:26:14.810 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.810 UTC [2714455] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:26:14.810 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.810 UTC [2714455] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:26:14.810 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.810 UTC [2714455] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:26:14.811 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.811 UTC [2714455] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:26:14.811 UTC [2714455] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:26:14.811 UTC [2714455] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:26:14.811 UTC [2714455] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:26:14.811 UTC [2714455] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:26:14.811 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.811 UTC [2714455] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:26:14.811 UTC [2714455] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:26:14.811 UTC [2714455] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:26:14.821 UTC [2714461] ERROR:  invalid salt
2023-07-22 05:26:14.821 UTC [2714461] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:26:14.971 UTC [2714469] ERROR:  invalid salt
2023-07-22 05:26:14.971 UTC [2714469] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:26:14.971 UTC [2714469] ERROR:  invalid salt
2023-07-22 05:26:14.971 UTC [2714469] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:26:14.971 UTC [2714469] ERROR:  invalid salt
2023-07-22 05:26:14.971 UTC [2714469] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:26:15.052 UTC [2714473] ERROR:  invalid salt
2023-07-22 05:26:15.052 UTC [2714473] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:26:15.052 UTC [2714473] ERROR:  crypt(3) returned NULL
2023-07-22 05:26:15.052 UTC [2714473] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:26:15.053 UTC [2714473] ERROR:  crypt(3) returned NULL
2023-07-22 05:26:15.053 UTC [2714473] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:26:15.109 UTC [2714477] ERROR:  Corrupt ascii-armor
2023-07-22 05:26:15.109 UTC [2714477] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:26:15.110 UTC [2714477] ERROR:  Corrupt ascii-armor
2023-07-22 05:26:15.110 UTC [2714477] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:26:15.111 UTC [2714477] ERROR:  Corrupt ascii-armor
2023-07-22 05:26:15.111 UTC [2714477] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:26:15.120 UTC [2714477] ERROR:  mismatched array dimensions
2023-07-22 05:26:15.120 UTC [2714477] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:26:15.121 UTC [2714477] ERROR:  mismatched array dimensions
2023-07-22 05:26:15.121 UTC [2714477] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:26:15.121 UTC [2714477] ERROR:  wrong number of array subscripts
2023-07-22 05:26:15.121 UTC [2714477] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:26:15.122 UTC [2714477] ERROR:  wrong number of array subscripts
2023-07-22 05:26:15.122 UTC [2714477] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:26:15.122 UTC [2714477] ERROR:  null value not allowed for header key
2023-07-22 05:26:15.122 UTC [2714477] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:26:15.123 UTC [2714477] ERROR:  null value not allowed for header value
2023-07-22 05:26:15.123 UTC [2714477] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:26:15.124 UTC [2714477] ERROR:  header key must not contain newlines
2023-07-22 05:26:15.124 UTC [2714477] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:26:15.124 UTC [2714477] ERROR:  header value must not contain newlines
2023-07-22 05:26:15.124 UTC [2714477] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:26:15.124 UTC [2714477] ERROR:  header key must not contain ": "
2023-07-22 05:26:15.124 UTC [2714477] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:26:15.152 UTC [2714481] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.152 UTC [2714481] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:26:15.195 UTC [2714481] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.195 UTC [2714481] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:26:15.197 UTC [2714481] ERROR:  Not text data
2023-07-22 05:26:15.197 UTC [2714481] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:26:15.198 UTC [2714481] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.198 UTC [2714481] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:26:15.199 UTC [2714481] ERROR:  Unsupported compression algorithm
2023-07-22 05:26:15.199 UTC [2714481] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:26:15.216 UTC [2714487] ERROR:  Not text data
2023-07-22 05:26:15.216 UTC [2714487] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:26:15.695 UTC [2714495] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.695 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:26:15.714 UTC [2714495] ERROR:  Wrong key
2023-07-22 05:26:15.714 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:26:15.714 UTC [2714495] ERROR:  No encryption key found
2023-07-22 05:26:15.714 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:26:15.716 UTC [2714495] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.716 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:26:15.723 UTC [2714495] ERROR:  Need password for secret key
2023-07-22 05:26:15.723 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:26:15.723 UTC [2714495] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.723 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:26:15.728 UTC [2714495] ERROR:  Wrong key or corrupt data
2023-07-22 05:26:15.728 UTC [2714495] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:26:15.751 UTC [2714503] ERROR:  No encryption key found
2023-07-22 05:26:15.751 UTC [2714503] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:26:15.751 UTC [2714503] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:26:15.751 UTC [2714503] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:26:15.752 UTC [2714503] ERROR:  Not text data
2023-07-22 05:26:15.752 UTC [2714503] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:26:15.760 UTC [2714507] ERROR:  No encryption key found
2023-07-22 05:26:15.760 UTC [2714507] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:26:15.761 UTC [2714507] ERROR:  No encryption key found
2023-07-22 05:26:15.761 UTC [2714507] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:26:47.312 UTC [2714378] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:26:47.461 UTC [2714378] LOG:  checkpoint complete: wrote 1176 buffers (7.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.039 s, sync=0.068 s, total=0.150 s; sync files=507, longest=0.003 s, average=0.001 s; distance=145271 kB, estimate=145271 kB
2023-07-22 05:27:18.794 UTC [2714378] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:27:18.851 UTC [2714378] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.004 s, total=0.057 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136777 kB, estimate=144422 kB
2023-07-22 05:27:18.913 UTC [2714377] LOG:  received fast shutdown request
2023-07-22 05:27:18.917 UTC [2714377] LOG:  aborting any active transactions
2023-07-22 05:27:18.918 UTC [2714377] LOG:  background worker "logical replication launcher" (PID 2714383) exited with exit code 1
2023-07-22 05:27:18.918 UTC [2714378] LOG:  shutting down
2023-07-22 05:27:18.923 UTC [2714378] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:27:18.943 UTC [2714378] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.025 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129979 kB
2023-07-22 05:27:18.964 UTC [2714377] LOG:  database system is shut down
2023-07-22 05:27:19.705 UTC [2714632] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:27:19.705 UTC [2714632] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:27:19.713 UTC [2714632] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:27:19.723 UTC [2714635] LOG:  database system was shut down at 2023-07-22 05:27:19 UTC
2023-07-22 05:27:19.731 UTC [2714632] LOG:  database system is ready to accept connections
2023-07-22 05:27:19.927 UTC [2714654] ERROR:  argument must be empty or one-dimensional array
2023-07-22 05:27:19.927 UTC [2714654] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[['(0, 2)']]::tid[]);
2023-07-22 05:27:19.927 UTC [2714654] ERROR:  array must not contain nulls
2023-07-22 05:27:19.927 UTC [2714654] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[NULL]::tid[]);
2023-07-22 05:27:19.932 UTC [2714654] ERROR:  cannot operate on relation "vw"
2023-07-22 05:27:19.932 UTC [2714654] DETAIL:  This operation is not supported for views.
2023-07-22 05:27:19.932 UTC [2714654] STATEMENT:  select heap_force_kill('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 05:27:19.932 UTC [2714654] ERROR:  cannot operate on relation "vw"
2023-07-22 05:27:19.932 UTC [2714654] DETAIL:  This operation is not supported for views.
2023-07-22 05:27:19.932 UTC [2714654] STATEMENT:  select heap_force_freeze('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 05:27:52.460 UTC [2714633] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:27:52.582 UTC [2714633] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.043 s, sync=0.026 s, total=0.123 s; sync files=253, longest=0.009 s, average=0.001 s; distance=137976 kB, estimate=137976 kB
2023-07-22 05:28:24.351 UTC [2714633] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:28:24.449 UTC [2714633] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.009 s, total=0.098 s; sync files=4, longest=0.005 s, average=0.003 s; distance=133505 kB, estimate=137529 kB
2023-07-22 05:28:24.517 UTC [2714632] LOG:  received fast shutdown request
2023-07-22 05:28:24.525 UTC [2714632] LOG:  aborting any active transactions
2023-07-22 05:28:24.526 UTC [2714632] LOG:  background worker "logical replication launcher" (PID 2714638) exited with exit code 1
2023-07-22 05:28:24.526 UTC [2714633] LOG:  shutting down
2023-07-22 05:28:24.531 UTC [2714633] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:28:24.564 UTC [2714633] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.038 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123776 kB
2023-07-22 05:28:24.585 UTC [2714632] LOG:  database system is shut down
2023-07-22 05:28:25.371 UTC [2714784] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:28:25.371 UTC [2714784] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:28:25.386 UTC [2714784] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:28:25.398 UTC [2714787] LOG:  database system was shut down at 2023-07-22 05:28:25 UTC
2023-07-22 05:28:25.407 UTC [2714784] LOG:  database system is ready to accept connections
2023-07-22 05:28:25.583 UTC [2714784] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:28:25.618 UTC [2714784] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:28:25.619 UTC [2714784] LOG:  parameter "pgtle.enable_password_check" changed to "on"
2023-07-22 05:28:25.716 UTC [2714784] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:28:25.719 UTC [2714784] LOG:  parameter "pgtle.enable_password_check" changed to "require"
2023-07-22 05:28:25.735 UTC [2714806] ERROR:  "pgtle.enable_password_check" feature is set to require, however no entries exist in "pgtle.feature_info" with the feature "passcheck"
2023-07-22 05:28:25.753 UTC [2714806] ERROR:  Passwords needs to be longer than 8
2023-07-22 05:28:25.784 UTC [2714806] ERROR:  Passwords needs to be longer than 8
2023-07-22 05:28:25.788 UTC [2714806] ERROR:  permission denied for table feature_info
2023-07-22 05:28:25.788 UTC [2714806] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'testuser_2', 'unpriv_function_passcheck', 'public.unpriv_function_passcheck(pg_catalog.text,pg_catalog.text,pgtle.password_types,timestamp with time zone,boolean)');
2023-07-22 05:28:25.788 UTC [2714806] ERROR:  permission denied for function register_feature
2023-07-22 05:28:25.788 UTC [2714806] STATEMENT:  SELECT pgtle.register_feature('testuser_2.unpriv_function_passcheck', 'passcheck');
2023-07-22 05:28:25.788 UTC [2714806] ERROR:  permission denied for function unregister_feature
2023-07-22 05:28:25.788 UTC [2714806] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 05:28:25.789 UTC [2714806] ERROR:  permission denied for table feature_info
2023-07-22 05:28:25.789 UTC [2714806] STATEMENT:  DELETE FROM pgtle.feature_info where feature = 'passcheck';
2023-07-22 05:28:25.796 UTC [2714806] ERROR:  Passwords can only have numbers
2023-07-22 05:28:25.812 UTC [2714806] ERROR:  table, schema, and proname must be present in "pgtle.feature_info"
2023-07-22 05:28:25.812 UTC [2714806] ERROR:  duplicate key value violates unique constraint "feature_info_pkey"
2023-07-22 05:28:25.812 UTC [2714806] DETAIL:  Key (feature, schema_name, proname)=(passcheck, public, password_check_length_greater_than_8) already exists.
2023-07-22 05:28:25.812 UTC [2714806] CONTEXT:  SQL statement "INSERT INTO pgtle.feature_info VALUES (feature, proc_schema_name, proname, ident)"
	PL/pgSQL function pgtle.register_feature(regproc,pgtle.pg_tle_features) line 24 at SQL statement
2023-07-22 05:28:25.812 UTC [2714806] STATEMENT:  SELECT pgtle.register_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 05:28:25.820 UTC [2714806] ERROR:  Could not unregister "password_check_length_greater_than_8": does not exist.
2023-07-22 05:28:25.820 UTC [2714806] CONTEXT:  PL/pgSQL function pgtle.unregister_feature(regproc,pgtle.pg_tle_features) line 44 at RAISE
2023-07-22 05:28:25.820 UTC [2714806] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 05:28:25.847 UTC [2714806] ERROR:  "passcheck" feature does not support calling out to functions/schemas that contain ";"
2023-07-22 05:28:25.847 UTC [2714806] HINT:  Check the "pgtle.feature_info" table does not contain ';'.
2023-07-22 05:28:25.876 UTC [2714784] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:28:25.878 UTC [2714784] LOG:  parameter "pgtle.enable_password_check" removed from configuration file, reset to default
2023-07-22 05:28:25.894 UTC [2714806] ERROR:  Function is referenced in pgtle.feature_info
2023-07-22 05:28:25.894 UTC [2714806] CONTEXT:  PL/pgSQL function pgtle.pg_tle_feature_info_sql_drop() line 27 at RAISE
2023-07-22 05:28:25.894 UTC [2714806] STATEMENT:  DROP SCHEMA pass CASCADE;
2023-07-22 05:28:26.055 UTC [2714812] ERROR:  permission denied for function superuser_only
2023-07-22 05:28:26.055 UTC [2714812] STATEMENT:  CREATE EXTENSION test_no_switch_to_superuser_when_trusted;
2023-07-22 05:28:26.057 UTC [2714812] ERROR:  must be owner of extension test123
2023-07-22 05:28:26.057 UTC [2714812] STATEMENT:  DROP EXTENSION test123;
2023-07-22 05:28:26.058 UTC [2714812] ERROR:  must be owner of function test123_func
2023-07-22 05:28:26.058 UTC [2714812] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 05:28:26.059 UTC [2714812] ERROR:  must be owner of extension test123
2023-07-22 05:28:26.059 UTC [2714812] STATEMENT:  DROP EXTENSION test123;
2023-07-22 05:28:26.060 UTC [2714812] ERROR:  must be owner of function test123_func
2023-07-22 05:28:26.060 UTC [2714812] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 05:28:26.062 UTC [2714812] ERROR:  extension "test123" already installed
2023-07-22 05:28:26.062 UTC [2714812] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test123',
	 '1.1',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	  CREATE OR REPLACE FUNCTION test123_func_2()
	  RETURNS INT AS $$
	  (
	    SELECT 424242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 05:28:26.086 UTC [2714812] ERROR:  permission denied for schema pgtle
2023-07-22 05:28:26.086 UTC [2714812] STATEMENT:  CREATE OR REPLACE FUNCTION pgtle.foo()
	RETURNS TEXT AS $$
	SELECT 'ok'
	$$ LANGUAGE sql;
2023-07-22 05:28:26.091 UTC [2714812] ERROR:  pgtle schema reserved for pg_tle functions
2023-07-22 05:28:26.091 UTC [2714812] STATEMENT:  ALTER FUNCTION public.pg_tlefoo() SET SCHEMA pgtle;
2023-07-22 05:28:26.097 UTC [2714812] ERROR:  control file already exists for the plpgsql extension
2023-07-22 05:28:26.097 UTC [2714812] STATEMENT:  SELECT pgtle.install_extension
	(
	 'plpgsql',
	 '1.0',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 05:28:26.097 UTC [2714812] ERROR:  altering pg_tle functions in pgtle schema not allowed
2023-07-22 05:28:26.097 UTC [2714812] STATEMENT:  ALTER FUNCTION pgtle.install_extension
	(
	  name text,
	  version text,
	  description text,
	  ext text,
	  requires text[]
	)
	SET search_path TO 'public';
2023-07-22 05:28:26.139 UTC [2714812] ERROR:  extension "new_ext" update path "1.0-1.1" already installed
2023-07-22 05:28:26.139 UTC [2714812] HINT:  To update this specific install path, first use "pgtle.uninstall_update_path".
2023-07-22 05:28:26.139 UTC [2714812] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'new_ext',
	 '1.0',
	 '1.1',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION fun()
	  RETURNS INT AS $$ SELECT 2; $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.148 UTC [2714812] ERROR:  Extension new_ext does not exist
2023-07-22 05:28:26.148 UTC [2714812] CONTEXT:  PL/pgSQL function uninstall_update_path(text,text,text) line 16 at RAISE
2023-07-22 05:28:26.148 UTC [2714812] STATEMENT:  SELECT pgtle.uninstall_update_path('new_ext', '1.1', '1.0');
2023-07-22 05:28:26.170 UTC [2714812] ERROR:  extension and version do not exist
2023-07-22 05:28:26.170 UTC [2714812] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 05:28:26.170 UTC [2714812] STATEMENT:  SELECT pgtle.set_default_version('new_ext', '1.2');
2023-07-22 05:28:26.172 UTC [2714812] ERROR:  extension and version do not exist
2023-07-22 05:28:26.172 UTC [2714812] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 05:28:26.172 UTC [2714812] STATEMENT:  SELECT pgtle.set_default_version('bogus', '1.2');
2023-07-22 05:28:26.182 UTC [2714812] ERROR:  syntax error in extension control function for "broken_ext"
2023-07-22 05:28:26.182 UTC [2714812] DETAIL:  Could not parse extension control function "pgtle"."broken_ext.control".
2023-07-22 05:28:26.182 UTC [2714812] HINT:  You may need to reinstall the extension to correct this error.
2023-07-22 05:28:26.182 UTC [2714812] STATEMENT:  SELECT * FROM pgtle.available_extensions();
2023-07-22 05:28:26.187 UTC [2714812] ERROR:  Extension bogus does not exist
2023-07-22 05:28:26.187 UTC [2714812] CONTEXT:  PL/pgSQL function uninstall_extension(text) line 18 at RAISE
2023-07-22 05:28:26.187 UTC [2714812] STATEMENT:  SELECT pgtle.uninstall_extension('bogus');
2023-07-22 05:28:26.217 UTC [2714812] ERROR:  version "2.0" of extension "test42" already installed
2023-07-22 05:28:26.217 UTC [2714812] STATEMENT:  SELECT pgtle.install_extension_version_sql
	(
	 'test42',
	 '2.0',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test42_func()
	  RETURNS INT AS $$
	  (
	    SELECT 4242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 05:28:26.221 UTC [2714812] ERROR:  Can not uninstall default version of extension test42, use set_default_version to update the default to another available version and retry
2023-07-22 05:28:26.221 UTC [2714812] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 28 at RAISE
2023-07-22 05:28:26.221 UTC [2714812] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '1.0');
2023-07-22 05:28:26.231 UTC [2714812] ERROR:  Version test42 of extension 3.0 is not installed and therefore can not be uninstalled
2023-07-22 05:28:26.231 UTC [2714812] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 50 at RAISE
2023-07-22 05:28:26.231 UTC [2714812] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '3.0');
2023-07-22 05:28:26.325 UTC [2714816] ERROR:  invalid character in extension definition
2023-07-22 05:28:26.325 UTC [2714816] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:28:26.325 UTC [2714816] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:28:26.325 UTC [2714816] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.325 UTC [2714816] ERROR:  invalid character in extension definition
2023-07-22 05:28:26.325 UTC [2714816] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:28:26.325 UTC [2714816] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:28:26.325 UTC [2714816] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.330 UTC [2714816] ERROR:  invalid character in extension update definition
2023-07-22 05:28:26.330 UTC [2714816] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:28:26.330 UTC [2714816] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:28:26.330 UTC [2714816] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.344 UTC [2714816] ERROR:  invalid character in extension definition
2023-07-22 05:28:26.344 UTC [2714816] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:28:26.344 UTC [2714816] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:28:26.344 UTC [2714816] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.345 UTC [2714816] ERROR:  invalid character in extension definition
2023-07-22 05:28:26.345 UTC [2714816] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:28:26.345 UTC [2714816] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:28:26.345 UTC [2714816] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.348 UTC [2714816] ERROR:  invalid character in extension update definition
2023-07-22 05:28:26.348 UTC [2714816] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:28:26.348 UTC [2714816] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:28:26.348 UTC [2714816] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:28:26.354 UTC [2714816] ERROR:  invalid extension name: "test9.control"(),pg_sleep(10),pgtle."test9"
2023-07-22 05:28:26.354 UTC [2714816] DETAIL:  Extension names must only contain alphanumeric characters or valid separators.
2023-07-22 05:28:26.354 UTC [2714816] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test9.control"(),pg_sleep(10),pgtle."test9',
	 '0.1',
	 'comment',
	$_pg_tle_$
	    CREATE FUNCTION dist(x1 numeric, y1 numeric, x2 numeric, y2 numeric, l numeric)
	    RETURNS numeric
	    AS $$
	      SELECT ((x2 ^ l - x1 ^ l) ^ (1 / l)) + ((y2 ^ l - y1 ^ l) ^ (1 / l));
	    $$ LANGUAGE SQL;
	$_pg_tle_$
	);
2023-07-22 05:28:26.433 UTC [2714820] ERROR:  permission denied for schema public
2023-07-22 05:28:26.433 UTC [2714820] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:28:26.468 UTC [2714820] ERROR:  must be owner of extension no_features
2023-07-22 05:28:26.468 UTC [2714820] STATEMENT:  DROP EXTENSION no_features;
2023-07-22 05:28:26.480 UTC [2714820] ERROR:  permission denied for function register_feature
2023-07-22 05:28:26.480 UTC [2714820] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 05:28:26.485 UTC [2714820] ERROR:  permission denied for table feature_info
2023-07-22 05:28:26.485 UTC [2714820] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'public', 'other_passcheck_hook', '');
2023-07-22 05:28:26.485 UTC [2714820] ERROR:  must have admin option on role "pgtle_admin"
2023-07-22 05:28:26.485 UTC [2714820] STATEMENT:  GRANT pgtle_admin to tle_person;
2023-07-22 05:28:26.504 UTC [2714820] ERROR:  permission denied for function unregister_feature
2023-07-22 05:28:26.504 UTC [2714820] STATEMENT:  SELECT pgtle.unregister_feature('passcheck_hook', 'passcheck');
2023-07-22 05:28:26.504 UTC [2714820] ERROR:  permission denied for function unregister_feature
2023-07-22 05:28:26.504 UTC [2714820] STATEMENT:  SELECT pgtle.unregister_feature('other_passcheck_hook', 'passcheck');
2023-07-22 05:28:26.505 UTC [2714820] ERROR:  permission denied for table feature_info
2023-07-22 05:28:26.505 UTC [2714820] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'passcheck_hook';
2023-07-22 05:28:26.505 UTC [2714820] ERROR:  permission denied for table feature_info
2023-07-22 05:28:26.505 UTC [2714820] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'other_passcheck_hook';
2023-07-22 05:28:26.542 UTC [2714820] ERROR:  permission denied for schema public
2023-07-22 05:28:26.542 UTC [2714820] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:28:26.548 UTC [2714820] ERROR:  permission denied for schema public
2023-07-22 05:28:26.548 UTC [2714820] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:28:26.555 UTC [2714820] ERROR:  permission denied for schema public
2023-07-22 05:28:26.555 UTC [2714820] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 05:28:26.556 UTC [2714820] ERROR:  permission denied for schema public
2023-07-22 05:28:26.556 UTC [2714820] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:28:26.662 UTC [2714824] ERROR:  "requires" limited to 1024 entries for "pg_tle" extensions
2023-07-22 05:28:26.662 UTC [2714824] STATEMENT:  SELECT pgtle.install_extension
	(
	 't',
	 '1',
	 '1',
	$_pg_tle_$
	CREATE FUNCTION pgtle."test12--0.1FOOBAR.control"()
	RETURNS void
	AS $$
	    BEGIN
	    RAISE NOTICE 'called';
	    END
	$$ LANGUAGE SQL;
	$_pg_tle_$,
	'{a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a}'
	);
2023-07-22 05:28:26.834 UTC [2714839] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:28:26.834 UTC [2714839] STATEMENT:  select gen_salt('foo');
2023-07-22 05:28:26.835 UTC [2714839] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:28:26.835 UTC [2714839] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:28:26.835 UTC [2714839] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:28:26.835 UTC [2714839] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:28:26.836 UTC [2714839] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:28:26.836 UTC [2714839] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:28:26.938 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.938 UTC [2714859] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:28:26.938 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.938 UTC [2714859] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:28:26.939 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.939 UTC [2714859] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:28:26.939 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.939 UTC [2714859] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:28:26.939 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.939 UTC [2714859] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:28:26.939 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.939 UTC [2714859] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:28:26.940 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.940 UTC [2714859] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:28:26.940 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.940 UTC [2714859] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:28:26.940 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.940 UTC [2714859] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:28:26.940 UTC [2714859] ERROR:  encrypt error: Key was too big
2023-07-22 05:28:26.940 UTC [2714859] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:28:26.941 UTC [2714859] ERROR:  encrypt error: Key was too big
2023-07-22 05:28:26.941 UTC [2714859] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:28:26.941 UTC [2714859] ERROR:  encrypt error: Key was too big
2023-07-22 05:28:26.941 UTC [2714859] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:28:26.941 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.941 UTC [2714859] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:28:26.941 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.941 UTC [2714859] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:28:26.941 UTC [2714859] ERROR:  encrypt error: Key was too big
2023-07-22 05:28:26.941 UTC [2714859] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:28:26.942 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.942 UTC [2714859] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:28:26.942 UTC [2714859] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:28:26.942 UTC [2714859] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:28:26.943 UTC [2714859] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:28:26.943 UTC [2714859] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:28:26.943 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.943 UTC [2714859] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:28:26.943 UTC [2714859] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:26.943 UTC [2714859] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:28:26.966 UTC [2714865] ERROR:  encrypt error: Encryption failed
2023-07-22 05:28:26.966 UTC [2714865] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:28:26.968 UTC [2714865] ERROR:  decrypt error: Decryption failed
2023-07-22 05:28:26.968 UTC [2714865] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:28:26.969 UTC [2714865] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:28:26.969 UTC [2714865] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:28:27.010 UTC [2714873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.010 UTC [2714873] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:28:27.011 UTC [2714873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.011 UTC [2714873] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:28:27.011 UTC [2714873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.011 UTC [2714873] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:28:27.011 UTC [2714873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.011 UTC [2714873] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:28:27.012 UTC [2714873] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:28:27.012 UTC [2714873] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:28:27.012 UTC [2714873] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:28:27.012 UTC [2714873] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:28:27.013 UTC [2714873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.013 UTC [2714873] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:28:27.013 UTC [2714873] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.013 UTC [2714873] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:28:27.053 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.053 UTC [2714883] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:28:27.054 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.054 UTC [2714883] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:28:27.054 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.054 UTC [2714883] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:28:27.055 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.055 UTC [2714883] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:28:27.055 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.055 UTC [2714883] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:28:27.055 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.055 UTC [2714883] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:28:27.056 UTC [2714883] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:28:27.056 UTC [2714883] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:28:27.056 UTC [2714883] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:28:27.056 UTC [2714883] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:28:27.056 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.056 UTC [2714883] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:28:27.056 UTC [2714883] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:28:27.056 UTC [2714883] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:28:27.078 UTC [2714889] ERROR:  invalid salt
2023-07-22 05:28:27.078 UTC [2714889] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:28:27.236 UTC [2714897] ERROR:  invalid salt
2023-07-22 05:28:27.236 UTC [2714897] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:28:27.236 UTC [2714897] ERROR:  invalid salt
2023-07-22 05:28:27.236 UTC [2714897] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:28:27.237 UTC [2714897] ERROR:  invalid salt
2023-07-22 05:28:27.237 UTC [2714897] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:28:27.327 UTC [2714901] ERROR:  invalid salt
2023-07-22 05:28:27.327 UTC [2714901] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:28:27.327 UTC [2714901] ERROR:  crypt(3) returned NULL
2023-07-22 05:28:27.327 UTC [2714901] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:28:27.328 UTC [2714901] ERROR:  crypt(3) returned NULL
2023-07-22 05:28:27.328 UTC [2714901] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:28:27.363 UTC [2714905] ERROR:  Corrupt ascii-armor
2023-07-22 05:28:27.363 UTC [2714905] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:28:27.363 UTC [2714905] ERROR:  Corrupt ascii-armor
2023-07-22 05:28:27.363 UTC [2714905] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:28:27.363 UTC [2714905] ERROR:  Corrupt ascii-armor
2023-07-22 05:28:27.363 UTC [2714905] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:28:27.365 UTC [2714905] ERROR:  mismatched array dimensions
2023-07-22 05:28:27.365 UTC [2714905] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:28:27.365 UTC [2714905] ERROR:  mismatched array dimensions
2023-07-22 05:28:27.365 UTC [2714905] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  wrong number of array subscripts
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  wrong number of array subscripts
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  null value not allowed for header key
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  null value not allowed for header value
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  header key must not contain newlines
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  header value must not contain newlines
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:28:27.366 UTC [2714905] ERROR:  header key must not contain ": "
2023-07-22 05:28:27.366 UTC [2714905] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:28:27.375 UTC [2714909] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.375 UTC [2714909] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:28:27.391 UTC [2714909] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.391 UTC [2714909] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:28:27.392 UTC [2714909] ERROR:  Not text data
2023-07-22 05:28:27.392 UTC [2714909] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:28:27.393 UTC [2714909] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.393 UTC [2714909] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:28:27.394 UTC [2714909] ERROR:  Unsupported compression algorithm
2023-07-22 05:28:27.394 UTC [2714909] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:28:27.413 UTC [2714915] ERROR:  Not text data
2023-07-22 05:28:27.413 UTC [2714915] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:28:27.880 UTC [2714923] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.880 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:28:27.898 UTC [2714923] ERROR:  Wrong key
2023-07-22 05:28:27.898 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:28:27.899 UTC [2714923] ERROR:  No encryption key found
2023-07-22 05:28:27.899 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:28:27.900 UTC [2714923] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.900 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:28:27.905 UTC [2714923] ERROR:  Need password for secret key
2023-07-22 05:28:27.905 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:28:27.906 UTC [2714923] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.906 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:28:27.910 UTC [2714923] ERROR:  Wrong key or corrupt data
2023-07-22 05:28:27.910 UTC [2714923] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:28:27.931 UTC [2714929] ERROR:  No encryption key found
2023-07-22 05:28:27.931 UTC [2714929] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:28:27.931 UTC [2714929] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:28:27.931 UTC [2714929] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:28:27.932 UTC [2714929] ERROR:  Not text data
2023-07-22 05:28:27.932 UTC [2714929] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:28:27.939 UTC [2714933] ERROR:  No encryption key found
2023-07-22 05:28:27.939 UTC [2714933] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:28:27.940 UTC [2714933] ERROR:  No encryption key found
2023-07-22 05:28:27.940 UTC [2714933] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:28:59.543 UTC [2714785] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:28:59.724 UTC [2714785] LOG:  checkpoint complete: wrote 1358 buffers (8.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.041 s, sync=0.096 s, total=0.182 s; sync files=529, longest=0.004 s, average=0.001 s; distance=145949 kB, estimate=145949 kB
2023-07-22 05:29:31.178 UTC [2714785] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:29:31.271 UTC [2714785] LOG:  checkpoint complete: wrote 54 buffers (0.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.010 s, total=0.093 s; sync files=16, longest=0.006 s, average=0.001 s; distance=135731 kB, estimate=144927 kB
2023-07-22 05:29:31.340 UTC [2714784] LOG:  received fast shutdown request
2023-07-22 05:29:31.346 UTC [2714784] LOG:  aborting any active transactions
2023-07-22 05:29:31.347 UTC [2714784] LOG:  background worker "logical replication launcher" (PID 2714790) exited with exit code 1
2023-07-22 05:29:31.348 UTC [2714785] LOG:  shutting down
2023-07-22 05:29:31.353 UTC [2714785] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:29:31.383 UTC [2714785] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.001 s, total=0.036 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130434 kB
2023-07-22 05:29:31.414 UTC [2714784] LOG:  database system is shut down
2023-07-22 05:29:32.201 UTC [2715059] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:29:32.201 UTC [2715059] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:29:32.210 UTC [2715059] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:29:32.224 UTC [2715062] LOG:  database system was shut down at 2023-07-22 05:29:31 UTC
2023-07-22 05:29:32.229 UTC [2715059] LOG:  database system is ready to accept connections
2023-07-22 05:29:32.449 UTC [2715059] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:29:32.475 UTC [2715059] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:29:32.476 UTC [2715059] LOG:  parameter "pgtle.enable_password_check" changed to "on"
2023-07-22 05:29:32.568 UTC [2715059] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:29:32.569 UTC [2715059] LOG:  parameter "pgtle.enable_password_check" changed to "require"
2023-07-22 05:29:32.577 UTC [2715084] ERROR:  "pgtle.enable_password_check" feature is set to require, however no entries exist in "pgtle.feature_info" with the feature "passcheck"
2023-07-22 05:29:32.586 UTC [2715084] ERROR:  Passwords needs to be longer than 8
2023-07-22 05:29:32.609 UTC [2715084] ERROR:  Passwords needs to be longer than 8
2023-07-22 05:29:32.613 UTC [2715084] ERROR:  permission denied for table feature_info
2023-07-22 05:29:32.613 UTC [2715084] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'testuser_2', 'unpriv_function_passcheck', 'public.unpriv_function_passcheck(pg_catalog.text,pg_catalog.text,pgtle.password_types,timestamp with time zone,boolean)');
2023-07-22 05:29:32.613 UTC [2715084] ERROR:  permission denied for function register_feature
2023-07-22 05:29:32.613 UTC [2715084] STATEMENT:  SELECT pgtle.register_feature('testuser_2.unpriv_function_passcheck', 'passcheck');
2023-07-22 05:29:32.613 UTC [2715084] ERROR:  permission denied for function unregister_feature
2023-07-22 05:29:32.613 UTC [2715084] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 05:29:32.613 UTC [2715084] ERROR:  permission denied for table feature_info
2023-07-22 05:29:32.613 UTC [2715084] STATEMENT:  DELETE FROM pgtle.feature_info where feature = 'passcheck';
2023-07-22 05:29:32.620 UTC [2715084] ERROR:  Passwords can only have numbers
2023-07-22 05:29:32.635 UTC [2715084] ERROR:  table, schema, and proname must be present in "pgtle.feature_info"
2023-07-22 05:29:32.637 UTC [2715084] ERROR:  duplicate key value violates unique constraint "feature_info_pkey"
2023-07-22 05:29:32.637 UTC [2715084] DETAIL:  Key (feature, schema_name, proname)=(passcheck, public, password_check_length_greater_than_8) already exists.
2023-07-22 05:29:32.637 UTC [2715084] CONTEXT:  SQL statement "INSERT INTO pgtle.feature_info VALUES (feature, proc_schema_name, proname, ident)"
	PL/pgSQL function pgtle.register_feature(regproc,pgtle.pg_tle_features) line 24 at SQL statement
2023-07-22 05:29:32.637 UTC [2715084] STATEMENT:  SELECT pgtle.register_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 05:29:32.649 UTC [2715084] ERROR:  Could not unregister "password_check_length_greater_than_8": does not exist.
2023-07-22 05:29:32.649 UTC [2715084] CONTEXT:  PL/pgSQL function pgtle.unregister_feature(regproc,pgtle.pg_tle_features) line 44 at RAISE
2023-07-22 05:29:32.649 UTC [2715084] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 05:29:32.683 UTC [2715084] ERROR:  "passcheck" feature does not support calling out to functions/schemas that contain ";"
2023-07-22 05:29:32.683 UTC [2715084] HINT:  Check the "pgtle.feature_info" table does not contain ';'.
2023-07-22 05:29:32.710 UTC [2715059] LOG:  received SIGHUP, reloading configuration files
2023-07-22 05:29:32.711 UTC [2715059] LOG:  parameter "pgtle.enable_password_check" removed from configuration file, reset to default
2023-07-22 05:29:32.729 UTC [2715084] ERROR:  Function is referenced in pgtle.feature_info
2023-07-22 05:29:32.729 UTC [2715084] CONTEXT:  PL/pgSQL function pgtle.pg_tle_feature_info_sql_drop() line 27 at RAISE
2023-07-22 05:29:32.729 UTC [2715084] STATEMENT:  DROP SCHEMA pass CASCADE;
2023-07-22 05:29:32.866 UTC [2715088] ERROR:  permission denied for function superuser_only
2023-07-22 05:29:32.866 UTC [2715088] STATEMENT:  CREATE EXTENSION test_no_switch_to_superuser_when_trusted;
2023-07-22 05:29:32.867 UTC [2715088] ERROR:  must be owner of extension test123
2023-07-22 05:29:32.867 UTC [2715088] STATEMENT:  DROP EXTENSION test123;
2023-07-22 05:29:32.868 UTC [2715088] ERROR:  must be owner of function test123_func
2023-07-22 05:29:32.868 UTC [2715088] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 05:29:32.869 UTC [2715088] ERROR:  must be owner of extension test123
2023-07-22 05:29:32.869 UTC [2715088] STATEMENT:  DROP EXTENSION test123;
2023-07-22 05:29:32.870 UTC [2715088] ERROR:  must be owner of function test123_func
2023-07-22 05:29:32.870 UTC [2715088] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 05:29:32.872 UTC [2715088] ERROR:  extension "test123" already installed
2023-07-22 05:29:32.872 UTC [2715088] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test123',
	 '1.1',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	  CREATE OR REPLACE FUNCTION test123_func_2()
	  RETURNS INT AS $$
	  (
	    SELECT 424242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 05:29:32.896 UTC [2715088] ERROR:  permission denied for schema pgtle
2023-07-22 05:29:32.896 UTC [2715088] STATEMENT:  CREATE OR REPLACE FUNCTION pgtle.foo()
	RETURNS TEXT AS $$
	SELECT 'ok'
	$$ LANGUAGE sql;
2023-07-22 05:29:32.899 UTC [2715088] ERROR:  pgtle schema reserved for pg_tle functions
2023-07-22 05:29:32.899 UTC [2715088] STATEMENT:  ALTER FUNCTION public.pg_tlefoo() SET SCHEMA pgtle;
2023-07-22 05:29:32.905 UTC [2715088] ERROR:  control file already exists for the plpgsql extension
2023-07-22 05:29:32.905 UTC [2715088] STATEMENT:  SELECT pgtle.install_extension
	(
	 'plpgsql',
	 '1.0',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 05:29:32.905 UTC [2715088] ERROR:  altering pg_tle functions in pgtle schema not allowed
2023-07-22 05:29:32.905 UTC [2715088] STATEMENT:  ALTER FUNCTION pgtle.install_extension
	(
	  name text,
	  version text,
	  description text,
	  ext text,
	  requires text[]
	)
	SET search_path TO 'public';
2023-07-22 05:29:32.943 UTC [2715088] ERROR:  extension "new_ext" update path "1.0-1.1" already installed
2023-07-22 05:29:32.943 UTC [2715088] HINT:  To update this specific install path, first use "pgtle.uninstall_update_path".
2023-07-22 05:29:32.943 UTC [2715088] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'new_ext',
	 '1.0',
	 '1.1',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION fun()
	  RETURNS INT AS $$ SELECT 2; $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:32.952 UTC [2715088] ERROR:  Extension new_ext does not exist
2023-07-22 05:29:32.952 UTC [2715088] CONTEXT:  PL/pgSQL function uninstall_update_path(text,text,text) line 16 at RAISE
2023-07-22 05:29:32.952 UTC [2715088] STATEMENT:  SELECT pgtle.uninstall_update_path('new_ext', '1.1', '1.0');
2023-07-22 05:29:32.971 UTC [2715088] ERROR:  extension and version do not exist
2023-07-22 05:29:32.971 UTC [2715088] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 05:29:32.971 UTC [2715088] STATEMENT:  SELECT pgtle.set_default_version('new_ext', '1.2');
2023-07-22 05:29:32.973 UTC [2715088] ERROR:  extension and version do not exist
2023-07-22 05:29:32.973 UTC [2715088] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 05:29:32.973 UTC [2715088] STATEMENT:  SELECT pgtle.set_default_version('bogus', '1.2');
2023-07-22 05:29:32.982 UTC [2715088] ERROR:  syntax error in extension control function for "broken_ext"
2023-07-22 05:29:32.982 UTC [2715088] DETAIL:  Could not parse extension control function "pgtle"."broken_ext.control".
2023-07-22 05:29:32.982 UTC [2715088] HINT:  You may need to reinstall the extension to correct this error.
2023-07-22 05:29:32.982 UTC [2715088] STATEMENT:  SELECT * FROM pgtle.available_extensions();
2023-07-22 05:29:32.988 UTC [2715088] ERROR:  Extension bogus does not exist
2023-07-22 05:29:32.988 UTC [2715088] CONTEXT:  PL/pgSQL function uninstall_extension(text) line 18 at RAISE
2023-07-22 05:29:32.988 UTC [2715088] STATEMENT:  SELECT pgtle.uninstall_extension('bogus');
2023-07-22 05:29:33.013 UTC [2715088] ERROR:  version "2.0" of extension "test42" already installed
2023-07-22 05:29:33.013 UTC [2715088] STATEMENT:  SELECT pgtle.install_extension_version_sql
	(
	 'test42',
	 '2.0',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test42_func()
	  RETURNS INT AS $$
	  (
	    SELECT 4242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 05:29:33.016 UTC [2715088] ERROR:  Can not uninstall default version of extension test42, use set_default_version to update the default to another available version and retry
2023-07-22 05:29:33.016 UTC [2715088] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 28 at RAISE
2023-07-22 05:29:33.016 UTC [2715088] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '1.0');
2023-07-22 05:29:33.027 UTC [2715088] ERROR:  Version test42 of extension 3.0 is not installed and therefore can not be uninstalled
2023-07-22 05:29:33.027 UTC [2715088] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 50 at RAISE
2023-07-22 05:29:33.027 UTC [2715088] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '3.0');
2023-07-22 05:29:33.106 UTC [2715092] ERROR:  invalid character in extension definition
2023-07-22 05:29:33.106 UTC [2715092] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:29:33.106 UTC [2715092] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:29:33.106 UTC [2715092] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:33.106 UTC [2715092] ERROR:  invalid character in extension definition
2023-07-22 05:29:33.106 UTC [2715092] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:29:33.106 UTC [2715092] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:29:33.106 UTC [2715092] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:33.108 UTC [2715092] ERROR:  invalid character in extension update definition
2023-07-22 05:29:33.108 UTC [2715092] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:29:33.108 UTC [2715092] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:29:33.108 UTC [2715092] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:33.119 UTC [2715092] ERROR:  invalid character in extension definition
2023-07-22 05:29:33.119 UTC [2715092] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:29:33.119 UTC [2715092] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:29:33.119 UTC [2715092] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:33.120 UTC [2715092] ERROR:  invalid character in extension definition
2023-07-22 05:29:33.120 UTC [2715092] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:29:33.120 UTC [2715092] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:29:33.120 UTC [2715092] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:33.122 UTC [2715092] ERROR:  invalid character in extension update definition
2023-07-22 05:29:33.122 UTC [2715092] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 05:29:33.122 UTC [2715092] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 05:29:33.122 UTC [2715092] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 05:29:33.126 UTC [2715092] ERROR:  invalid extension name: "test9.control"(),pg_sleep(10),pgtle."test9"
2023-07-22 05:29:33.126 UTC [2715092] DETAIL:  Extension names must only contain alphanumeric characters or valid separators.
2023-07-22 05:29:33.126 UTC [2715092] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test9.control"(),pg_sleep(10),pgtle."test9',
	 '0.1',
	 'comment',
	$_pg_tle_$
	    CREATE FUNCTION dist(x1 numeric, y1 numeric, x2 numeric, y2 numeric, l numeric)
	    RETURNS numeric
	    AS $$
	      SELECT ((x2 ^ l - x1 ^ l) ^ (1 / l)) + ((y2 ^ l - y1 ^ l) ^ (1 / l));
	    $$ LANGUAGE SQL;
	$_pg_tle_$
	);
2023-07-22 05:29:33.187 UTC [2715096] ERROR:  permission denied for schema public
2023-07-22 05:29:33.187 UTC [2715096] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:29:33.216 UTC [2715096] ERROR:  must be owner of extension no_features
2023-07-22 05:29:33.216 UTC [2715096] STATEMENT:  DROP EXTENSION no_features;
2023-07-22 05:29:33.227 UTC [2715096] ERROR:  permission denied for function register_feature
2023-07-22 05:29:33.227 UTC [2715096] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 05:29:33.230 UTC [2715096] ERROR:  permission denied for table feature_info
2023-07-22 05:29:33.230 UTC [2715096] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'public', 'other_passcheck_hook', '');
2023-07-22 05:29:33.231 UTC [2715096] ERROR:  must have admin option on role "pgtle_admin"
2023-07-22 05:29:33.231 UTC [2715096] STATEMENT:  GRANT pgtle_admin to tle_person;
2023-07-22 05:29:33.248 UTC [2715096] ERROR:  permission denied for function unregister_feature
2023-07-22 05:29:33.248 UTC [2715096] STATEMENT:  SELECT pgtle.unregister_feature('passcheck_hook', 'passcheck');
2023-07-22 05:29:33.249 UTC [2715096] ERROR:  permission denied for function unregister_feature
2023-07-22 05:29:33.249 UTC [2715096] STATEMENT:  SELECT pgtle.unregister_feature('other_passcheck_hook', 'passcheck');
2023-07-22 05:29:33.249 UTC [2715096] ERROR:  permission denied for table feature_info
2023-07-22 05:29:33.249 UTC [2715096] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'passcheck_hook';
2023-07-22 05:29:33.250 UTC [2715096] ERROR:  permission denied for table feature_info
2023-07-22 05:29:33.250 UTC [2715096] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'other_passcheck_hook';
2023-07-22 05:29:33.277 UTC [2715096] ERROR:  permission denied for schema public
2023-07-22 05:29:33.277 UTC [2715096] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:29:33.284 UTC [2715096] ERROR:  permission denied for schema public
2023-07-22 05:29:33.284 UTC [2715096] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:29:33.290 UTC [2715096] ERROR:  permission denied for schema public
2023-07-22 05:29:33.290 UTC [2715096] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 05:29:33.291 UTC [2715096] ERROR:  permission denied for schema public
2023-07-22 05:29:33.291 UTC [2715096] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 05:29:33.383 UTC [2715100] ERROR:  "requires" limited to 1024 entries for "pg_tle" extensions
2023-07-22 05:29:33.383 UTC [2715100] STATEMENT:  SELECT pgtle.install_extension
	(
	 't',
	 '1',
	 '1',
	$_pg_tle_$
	CREATE FUNCTION pgtle."test12--0.1FOOBAR.control"()
	RETURNS void
	AS $$
	    BEGIN
	    RAISE NOTICE 'called';
	    END
	$$ LANGUAGE SQL;
	$_pg_tle_$,
	'{a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a}'
	);
2023-07-22 05:30:06.051 UTC [2715060] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:30:06.219 UTC [2715060] LOG:  checkpoint complete: wrote 971 buffers (5.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.050 s, sync=0.045 s, total=0.168 s; sync files=273, longest=0.009 s, average=0.001 s; distance=137970 kB, estimate=137970 kB
2023-07-22 05:30:38.218 UTC [2715060] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:30:38.331 UTC [2715060] LOG:  checkpoint complete: wrote 51 buffers (0.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.011 s, total=0.114 s; sync files=16, longest=0.008 s, average=0.001 s; distance=133258 kB, estimate=137499 kB
2023-07-22 05:30:38.398 UTC [2715059] LOG:  received fast shutdown request
2023-07-22 05:30:38.406 UTC [2715059] LOG:  aborting any active transactions
2023-07-22 05:30:38.407 UTC [2715059] LOG:  background worker "logical replication launcher" (PID 2715065) exited with exit code 1
2023-07-22 05:30:38.408 UTC [2715060] LOG:  shutting down
2023-07-22 05:30:38.415 UTC [2715060] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:30:38.452 UTC [2715060] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.045 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123749 kB
2023-07-22 05:30:38.473 UTC [2715059] LOG:  database system is shut down
2023-07-22 05:30:39.273 UTC [2715235] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:30:39.273 UTC [2715235] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:30:39.284 UTC [2715235] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:30:39.296 UTC [2715238] LOG:  database system was shut down at 2023-07-22 05:30:38 UTC
2023-07-22 05:30:39.307 UTC [2715235] LOG:  database system is ready to accept connections
2023-07-22 05:30:39.532 UTC [2715254] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 05:30:39.532 UTC [2715254] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 05:30:39.532 UTC [2715254] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=0));
2023-07-22 05:30:39.532 UTC [2715254] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 05:30:39.532 UTC [2715254] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 05:30:39.532 UTC [2715254] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=2025));
2023-07-22 05:30:39.950 UTC [2715262] ERROR:  relation "test_trgm3" does not exist
2023-07-22 05:30:39.950 UTC [2715262] STATEMENT:  COPY  test_trgm3 FROM STDIN 
2023-07-22 05:30:40.001 UTC [2715236] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:30:40.063 UTC [2715236] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.016 s, sync=0.014 s, total=0.063 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4797 kB, estimate=4797 kB
2023-07-22 05:30:40.203 UTC [2715277] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:30:40.203 UTC [2715277] STATEMENT:  select gen_salt('foo');
2023-07-22 05:30:40.203 UTC [2715277] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:30:40.203 UTC [2715277] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:30:40.203 UTC [2715277] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:30:40.203 UTC [2715277] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:30:40.203 UTC [2715277] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:30:40.203 UTC [2715277] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:30:40.244 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.244 UTC [2715297] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:30:40.244 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.244 UTC [2715297] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:30:40.244 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.244 UTC [2715297] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:30:40.244 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.244 UTC [2715297] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Key was too big
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Key was too big
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Key was too big
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Key was too big
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:30:40.245 UTC [2715297] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:30:40.245 UTC [2715297] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:30:40.246 UTC [2715297] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:30:40.246 UTC [2715297] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:30:40.246 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.246 UTC [2715297] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:30:40.246 UTC [2715297] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.246 UTC [2715297] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:30:40.255 UTC [2715303] ERROR:  encrypt error: Encryption failed
2023-07-22 05:30:40.255 UTC [2715303] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:30:40.256 UTC [2715303] ERROR:  decrypt error: Decryption failed
2023-07-22 05:30:40.256 UTC [2715303] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:30:40.256 UTC [2715303] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:30:40.256 UTC [2715303] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:30:40.272 UTC [2715311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.272 UTC [2715311] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:30:40.272 UTC [2715311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.272 UTC [2715311] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:30:40.272 UTC [2715311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.272 UTC [2715311] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:30:40.273 UTC [2715311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.273 UTC [2715311] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:30:40.273 UTC [2715311] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:30:40.273 UTC [2715311] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:30:40.273 UTC [2715311] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:30:40.273 UTC [2715311] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:30:40.273 UTC [2715311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.273 UTC [2715311] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:30:40.273 UTC [2715311] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.273 UTC [2715311] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:30:40.290 UTC [2715321] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:30:40.290 UTC [2715321] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:30:40.291 UTC [2715321] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:30:40.291 UTC [2715321] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:30:40.291 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.291 UTC [2715321] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:30:40.291 UTC [2715321] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:30:40.291 UTC [2715321] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:30:40.300 UTC [2715327] ERROR:  invalid salt
2023-07-22 05:30:40.300 UTC [2715327] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:30:40.454 UTC [2715335] ERROR:  invalid salt
2023-07-22 05:30:40.454 UTC [2715335] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:30:40.455 UTC [2715335] ERROR:  invalid salt
2023-07-22 05:30:40.455 UTC [2715335] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:30:40.455 UTC [2715335] ERROR:  invalid salt
2023-07-22 05:30:40.455 UTC [2715335] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:30:40.531 UTC [2715339] ERROR:  invalid salt
2023-07-22 05:30:40.531 UTC [2715339] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:30:40.531 UTC [2715339] ERROR:  crypt(3) returned NULL
2023-07-22 05:30:40.531 UTC [2715339] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:30:40.531 UTC [2715339] ERROR:  crypt(3) returned NULL
2023-07-22 05:30:40.531 UTC [2715339] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:30:40.593 UTC [2715343] ERROR:  Corrupt ascii-armor
2023-07-22 05:30:40.593 UTC [2715343] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:30:40.594 UTC [2715343] ERROR:  Corrupt ascii-armor
2023-07-22 05:30:40.594 UTC [2715343] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:30:40.595 UTC [2715343] ERROR:  Corrupt ascii-armor
2023-07-22 05:30:40.595 UTC [2715343] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:30:40.604 UTC [2715343] ERROR:  mismatched array dimensions
2023-07-22 05:30:40.604 UTC [2715343] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:30:40.605 UTC [2715343] ERROR:  mismatched array dimensions
2023-07-22 05:30:40.605 UTC [2715343] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:30:40.605 UTC [2715343] ERROR:  wrong number of array subscripts
2023-07-22 05:30:40.605 UTC [2715343] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:30:40.606 UTC [2715343] ERROR:  wrong number of array subscripts
2023-07-22 05:30:40.606 UTC [2715343] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:30:40.606 UTC [2715343] ERROR:  null value not allowed for header key
2023-07-22 05:30:40.606 UTC [2715343] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:30:40.607 UTC [2715343] ERROR:  null value not allowed for header value
2023-07-22 05:30:40.607 UTC [2715343] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:30:40.608 UTC [2715343] ERROR:  header key must not contain newlines
2023-07-22 05:30:40.608 UTC [2715343] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:30:40.608 UTC [2715343] ERROR:  header value must not contain newlines
2023-07-22 05:30:40.608 UTC [2715343] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:30:40.609 UTC [2715343] ERROR:  header key must not contain ": "
2023-07-22 05:30:40.609 UTC [2715343] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:30:40.636 UTC [2715347] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:40.636 UTC [2715347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:30:40.682 UTC [2715347] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:40.682 UTC [2715347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:30:40.683 UTC [2715347] ERROR:  Not text data
2023-07-22 05:30:40.683 UTC [2715347] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:30:40.684 UTC [2715347] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:40.684 UTC [2715347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:30:40.684 UTC [2715347] ERROR:  Unsupported compression algorithm
2023-07-22 05:30:40.684 UTC [2715347] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:30:40.702 UTC [2715353] ERROR:  Not text data
2023-07-22 05:30:40.702 UTC [2715353] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:30:41.187 UTC [2715361] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:41.187 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:30:41.207 UTC [2715361] ERROR:  Wrong key
2023-07-22 05:30:41.207 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:30:41.208 UTC [2715361] ERROR:  No encryption key found
2023-07-22 05:30:41.208 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:30:41.209 UTC [2715361] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:41.209 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:30:41.215 UTC [2715361] ERROR:  Need password for secret key
2023-07-22 05:30:41.215 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:30:41.216 UTC [2715361] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:41.216 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:30:41.220 UTC [2715361] ERROR:  Wrong key or corrupt data
2023-07-22 05:30:41.220 UTC [2715361] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:30:41.243 UTC [2715367] ERROR:  No encryption key found
2023-07-22 05:30:41.243 UTC [2715367] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:30:41.243 UTC [2715367] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:30:41.243 UTC [2715367] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:30:41.244 UTC [2715367] ERROR:  Not text data
2023-07-22 05:30:41.244 UTC [2715367] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:30:41.253 UTC [2715371] ERROR:  No encryption key found
2023-07-22 05:30:41.253 UTC [2715371] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:30:41.254 UTC [2715371] ERROR:  No encryption key found
2023-07-22 05:30:41.254 UTC [2715371] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:31:13.685 UTC [2715236] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:31:13.809 UTC [2715236] LOG:  checkpoint complete: wrote 932 buffers (5.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.028 s, sync=0.035 s, total=0.125 s; sync files=260, longest=0.010 s, average=0.001 s; distance=139378 kB, estimate=139378 kB
2023-07-22 05:31:45.718 UTC [2715236] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:31:45.806 UTC [2715236] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.009 s, total=0.088 s; sync files=4, longest=0.005 s, average=0.003 s; distance=134043 kB, estimate=138844 kB
2023-07-22 05:31:45.871 UTC [2715235] LOG:  received fast shutdown request
2023-07-22 05:31:45.878 UTC [2715235] LOG:  aborting any active transactions
2023-07-22 05:31:45.880 UTC [2715235] LOG:  background worker "logical replication launcher" (PID 2715241) exited with exit code 1
2023-07-22 05:31:45.880 UTC [2715236] LOG:  shutting down
2023-07-22 05:31:45.883 UTC [2715236] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:31:45.900 UTC [2715236] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=124960 kB
2023-07-22 05:31:45.919 UTC [2715235] LOG:  database system is shut down
2023-07-22 05:31:46.612 UTC [2715499] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:31:46.612 UTC [2715499] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:31:46.618 UTC [2715499] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:31:46.626 UTC [2715502] LOG:  database system was shut down at 2023-07-22 05:31:46 UTC
2023-07-22 05:31:46.631 UTC [2715499] LOG:  database system is ready to accept connections
2023-07-22 05:31:46.860 UTC [2715521] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 05:31:46.860 UTC [2715521] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 05:31:46.860 UTC [2715521] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=0));
2023-07-22 05:31:46.861 UTC [2715521] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 05:31:46.861 UTC [2715521] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 05:31:46.861 UTC [2715521] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=2025));
2023-07-22 05:31:47.243 UTC [2715529] ERROR:  relation "test_trgm3" does not exist
2023-07-22 05:31:47.243 UTC [2715529] STATEMENT:  COPY  test_trgm3 FROM STDIN 
2023-07-22 05:32:18.900 UTC [2715500] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:32:19.028 UTC [2715500] LOG:  checkpoint complete: wrote 971 buffers (5.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.023 s, sync=0.046 s, total=0.129 s; sync files=266, longest=0.017 s, average=0.001 s; distance=141331 kB, estimate=141331 kB
2023-07-22 05:32:50.812 UTC [2715500] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:32:50.916 UTC [2715500] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.014 s, sync=0.007 s, total=0.105 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133112 kB, estimate=140509 kB
2023-07-22 05:32:50.984 UTC [2715499] LOG:  received fast shutdown request
2023-07-22 05:32:50.994 UTC [2715499] LOG:  aborting any active transactions
2023-07-22 05:32:50.996 UTC [2715499] LOG:  background worker "logical replication launcher" (PID 2715505) exited with exit code 1
2023-07-22 05:32:50.996 UTC [2715500] LOG:  shutting down
2023-07-22 05:32:51.002 UTC [2715500] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:32:51.043 UTC [2715500] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.047 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126458 kB
2023-07-22 05:32:51.073 UTC [2715499] LOG:  database system is shut down
2023-07-22 05:32:51.822 UTC [2715659] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:32:51.822 UTC [2715659] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:32:51.834 UTC [2715659] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:32:51.848 UTC [2715662] LOG:  database system was shut down at 2023-07-22 05:32:51 UTC
2023-07-22 05:32:51.859 UTC [2715659] LOG:  database system is ready to accept connections
2023-07-22 05:32:52.016 UTC [2715678] ERROR:  package name can not be NULL
2023-07-22 05:32:52.016 UTC [2715678] STATEMENT:  SELECT pgv_exists(NULL);
2023-07-22 05:32:52.016 UTC [2715678] ERROR:  package name can not be NULL
2023-07-22 05:32:52.016 UTC [2715678] STATEMENT:  SELECT pgv_remove(NULL);
2023-07-22 05:32:52.016 UTC [2715678] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.016 UTC [2715678] STATEMENT:  SELECT pgv_remove('vars');
2023-07-22 05:32:52.016 UTC [2715678] ERROR:  name "vars111111111111111111111111111111111111111111111111111111111111" is too long
2023-07-22 05:32:52.016 UTC [2715678] STATEMENT:  SELECT pgv_exists('vars111111111111111111111111111111111111111111111111111111111111');
2023-07-22 05:32:52.017 UTC [2715678] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.017 UTC [2715678] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 05:32:52.017 UTC [2715678] ERROR:  unrecognized variable "int3"
2023-07-22 05:32:52.017 UTC [2715678] STATEMENT:  SELECT pgv_get_int('vars', 'int3');
2023-07-22 05:32:52.018 UTC [2715678] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:32:52.018 UTC [2715678] STATEMENT:  SELECT pgv_set_text('vars', 'int1', 's101');
2023-07-22 05:32:52.018 UTC [2715678] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.018 UTC [2715678] STATEMENT:  SELECT pgv_set_int('vars', 'str1', 101);
2023-07-22 05:32:52.018 UTC [2715678] ERROR:  unrecognized variable "str3"
2023-07-22 05:32:52.018 UTC [2715678] STATEMENT:  SELECT pgv_get_text('vars', 'str3');
2023-07-22 05:32:52.018 UTC [2715678] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:32:52.018 UTC [2715678] STATEMENT:  SELECT pgv_get_text('vars', 'int1');
2023-07-22 05:32:52.018 UTC [2715678] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.018 UTC [2715678] STATEMENT:  SELECT pgv_get_int('vars', 'str1');
2023-07-22 05:32:52.019 UTC [2715678] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.019 UTC [2715678] STATEMENT:  SELECT pgv_set_numeric('vars', 'str1', 1.01);
2023-07-22 05:32:52.019 UTC [2715678] ERROR:  unrecognized variable "num3"
2023-07-22 05:32:52.019 UTC [2715678] STATEMENT:  SELECT pgv_get_numeric('vars', 'num3');
2023-07-22 05:32:52.019 UTC [2715678] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.019 UTC [2715678] STATEMENT:  SELECT pgv_get_numeric('vars', 'str1');
2023-07-22 05:32:52.020 UTC [2715678] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:32:52.020 UTC [2715678] STATEMENT:  SELECT pgv_set_timestamp('vars', 'num1', '2016-03-30 12:00:00');
2023-07-22 05:32:52.020 UTC [2715678] ERROR:  unrecognized variable "ts3"
2023-07-22 05:32:52.020 UTC [2715678] STATEMENT:  SELECT pgv_get_timestamp('vars', 'ts3');
2023-07-22 05:32:52.020 UTC [2715678] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:32:52.020 UTC [2715678] STATEMENT:  SELECT pgv_get_timestamp('vars', 'num1');
2023-07-22 05:32:52.021 UTC [2715678] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:32:52.021 UTC [2715678] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'ts1', '2016-03-30 12:00:00 GMT+03');
2023-07-22 05:32:52.021 UTC [2715678] ERROR:  unrecognized variable "tstz3"
2023-07-22 05:32:52.021 UTC [2715678] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'tstz3');
2023-07-22 05:32:52.021 UTC [2715678] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:32:52.021 UTC [2715678] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'ts1');
2023-07-22 05:32:52.021 UTC [2715678] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:32:52.021 UTC [2715678] STATEMENT:  SELECT pgv_set_date('vars', 'tstz1', '2016-04-01');
2023-07-22 05:32:52.022 UTC [2715678] ERROR:  unrecognized variable "d3"
2023-07-22 05:32:52.022 UTC [2715678] STATEMENT:  SELECT pgv_get_date('vars', 'd3');
2023-07-22 05:32:52.022 UTC [2715678] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:32:52.022 UTC [2715678] STATEMENT:  SELECT pgv_get_date('vars', 'tstz1');
2023-07-22 05:32:52.022 UTC [2715678] ERROR:  variable "d1" requires "date" value
2023-07-22 05:32:52.022 UTC [2715678] STATEMENT:  SELECT pgv_set_jsonb('vars', 'd1', '[1, 2, "foo", null]');
2023-07-22 05:32:52.022 UTC [2715678] ERROR:  unrecognized variable "j3"
2023-07-22 05:32:52.022 UTC [2715678] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j3');
2023-07-22 05:32:52.023 UTC [2715678] ERROR:  variable "d1" requires "date" value
2023-07-22 05:32:52.023 UTC [2715678] STATEMENT:  SELECT pgv_get_jsonb('vars', 'd1');
2023-07-22 05:32:52.035 UTC [2715678] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:32:52.035 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars2', 'j1', tab) FROM tab;
2023-07-22 05:32:52.035 UTC [2715678] ERROR:  there is a record in the variable "r1" with same key
2023-07-22 05:32:52.035 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars3', 'r1', tab) FROM tab;
2023-07-22 05:32:52.036 UTC [2715678] ERROR:  new record structure have 3 attributes, but variable "r1" structure have 2.
2023-07-22 05:32:52.036 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 'str1', 'str2'));
2023-07-22 05:32:52.036 UTC [2715678] ERROR:  new record attribute type for attribute number 2 differs from variable "r1" structure.
2023-07-22 05:32:52.036 UTC [2715678] HINT:  You may need explicit type casts.
2023-07-22 05:32:52.036 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 1));
2023-07-22 05:32:52.036 UTC [2715678] ERROR:  new record attribute type for attribute number 1 differs from variable "r1" structure.
2023-07-22 05:32:52.036 UTC [2715678] HINT:  You may need explicit type casts.
2023-07-22 05:32:52.036 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row('str1', 'str1'));
2023-07-22 05:32:52.036 UTC [2715678] ERROR:  searching for elements in multidimensional arrays is not supported
2023-07-22 05:32:52.036 UTC [2715678] STATEMENT:  SELECT pgv_select('vars3', 'r1', ARRAY[[1,2]]);
2023-07-22 05:32:52.036 UTC [2715678] ERROR:  unrecognized package "vars4"
2023-07-22 05:32:52.036 UTC [2715678] STATEMENT:  SELECT pgv_update('vars4', 'r1', row(3, 'str22'::varchar));
2023-07-22 05:32:52.037 UTC [2715678] ERROR:  unrecognized package "vars4"
2023-07-22 05:32:52.037 UTC [2715678] STATEMENT:  select pgv_delete('vars4', 'r2', NULL::int);
2023-07-22 05:32:52.037 UTC [2715678] ERROR:  record argument can not be NULL
2023-07-22 05:32:52.037 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars3', 'r2', NULL);
2023-07-22 05:32:52.037 UTC [2715678] ERROR:  record argument can not be NULL
2023-07-22 05:32:52.037 UTC [2715678] STATEMENT:  SELECT pgv_update('vars3', 'r2', NULL);
2023-07-22 05:32:52.037 UTC [2715678] ERROR:  array argument can not be NULL
2023-07-22 05:32:52.037 UTC [2715678] STATEMENT:  SELECT pgv_select('vars3', 'r1', NULL::int[]);
2023-07-22 05:32:52.037 UTC [2715678] ERROR:  requested value type differs from variable "r1" key type
2023-07-22 05:32:52.037 UTC [2715678] STATEMENT:  SELECT pgv_select('vars3', 'r1', 1::float);
2023-07-22 05:32:52.040 UTC [2715678] ERROR:  unrecognized variable "r3"
2023-07-22 05:32:52.040 UTC [2715678] STATEMENT:  SELECT pgv_select('vars3', 'r3');
2023-07-22 05:32:52.040 UTC [2715678] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:32:52.040 UTC [2715678] STATEMENT:  SELECT pgv_select('vars2', 'j1');
2023-07-22 05:32:52.044 UTC [2715678] ERROR:  unrecognized variable "r3"
2023-07-22 05:32:52.044 UTC [2715678] CONTEXT:  SQL statement "SELECT pgv_select('vars3', 'r3')"
	PL/pgSQL function inline_code_block line 3 at PERFORM
2023-07-22 05:32:52.044 UTC [2715678] STATEMENT:  DO
	$$BEGIN
	    PERFORM pgv_select('vars3', 'r1') LIMIT 2 OFFSET 2;
	    PERFORM pgv_select('vars3', 'r3');
	END$$;
2023-07-22 05:32:52.045 UTC [2715678] ERROR:  could not identify a hash function for type record
2023-07-22 05:32:52.045 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 05:32:52.046 UTC [2715678] ERROR:  variable "r1" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.046 UTC [2715678] STATEMENT:  SELECT pgv_set('vars5', 'r1', row(1, 'str11'), true);
2023-07-22 05:32:52.046 UTC [2715678] ERROR:  "r1" isn't a record variable
2023-07-22 05:32:52.046 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars5', 'r1', row(1, 'str11'));
2023-07-22 05:32:52.046 UTC [2715678] ERROR:  "r1" isn't a record variable
2023-07-22 05:32:52.046 UTC [2715678] STATEMENT:  SELECT pgv_select('vars5', 'r1');
2023-07-22 05:32:52.046 UTC [2715678] ERROR:  "r1" isn't a scalar variable
2023-07-22 05:32:52.046 UTC [2715678] STATEMENT:  SELECT pgv_get('vars3', 'r1', NULL::record);
2023-07-22 05:32:52.047 UTC [2715678] ERROR:  unrecognized variable "int3"
2023-07-22 05:32:52.047 UTC [2715678] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 05:32:52.047 UTC [2715678] ERROR:  unrecognized variable "int1"
2023-07-22 05:32:52.047 UTC [2715678] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 05:32:52.048 UTC [2715678] ERROR:  unrecognized package "vars2"
2023-07-22 05:32:52.048 UTC [2715678] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j1');
2023-07-22 05:32:52.053 UTC [2715678] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 05:32:52.053 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars', 'r1', foo) FROM foo;
2023-07-22 05:32:52.055 UTC [2715678] ERROR:  new record attribute type for attribute number 2 differs from variable "r4" structure.
2023-07-22 05:32:52.055 UTC [2715678] HINT:  You may need explicit type casts.
2023-07-22 05:32:52.055 UTC [2715678] STATEMENT:  SELECT pgv_insert('vars', 'r4', row(0, 'str1'));
2023-07-22 05:32:52.075 UTC [2715682] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.075 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 05:32:52.078 UTC [2715682] ERROR:  unrecognized variable "int3"
2023-07-22 05:32:52.078 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'int3', NULL::int);
2023-07-22 05:32:52.081 UTC [2715682] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:32:52.081 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'int1', 's101'::text);
2023-07-22 05:32:52.081 UTC [2715682] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.081 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'str1', 101);
2023-07-22 05:32:52.083 UTC [2715682] ERROR:  unrecognized variable "str3"
2023-07-22 05:32:52.083 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'str3', NULL::text);
2023-07-22 05:32:52.084 UTC [2715682] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:32:52.084 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::text);
2023-07-22 05:32:52.085 UTC [2715682] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.085 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::int);
2023-07-22 05:32:52.086 UTC [2715682] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.086 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'str1', 1.01::numeric);
2023-07-22 05:32:52.087 UTC [2715682] ERROR:  unrecognized variable "num3"
2023-07-22 05:32:52.087 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'num3', NULL::numeric);
2023-07-22 05:32:52.087 UTC [2715682] ERROR:  variable "str1" requires "text" value
2023-07-22 05:32:52.087 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::numeric);
2023-07-22 05:32:52.089 UTC [2715682] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:32:52.089 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'num1', '2016-03-30 12:00:00'::timestamp);
2023-07-22 05:32:52.090 UTC [2715682] ERROR:  unrecognized variable "ts3"
2023-07-22 05:32:52.090 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'ts3', NULL::timestamp);
2023-07-22 05:32:52.091 UTC [2715682] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:32:52.091 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'num1', NULL::timestamp);
2023-07-22 05:32:52.093 UTC [2715682] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:32:52.093 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'ts1', '2016-03-30 12:00:00 GMT+03'::timestamptz);
2023-07-22 05:32:52.094 UTC [2715682] ERROR:  unrecognized variable "tstz3"
2023-07-22 05:32:52.094 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'tstz3', NULL::timestamptz);
2023-07-22 05:32:52.095 UTC [2715682] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:32:52.095 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'ts1', NULL::timestamptz);
2023-07-22 05:32:52.096 UTC [2715682] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:32:52.096 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'tstz1', '2016-04-01'::date);
2023-07-22 05:32:52.096 UTC [2715682] ERROR:  unrecognized variable "d3"
2023-07-22 05:32:52.096 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'd3', NULL::date);
2023-07-22 05:32:52.097 UTC [2715682] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:32:52.097 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'tstz1', NULL::date);
2023-07-22 05:32:52.098 UTC [2715682] ERROR:  variable "d1" requires "date" value
2023-07-22 05:32:52.098 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'd1', '[1, 2, "foo", null]'::jsonb);
2023-07-22 05:32:52.099 UTC [2715682] ERROR:  unrecognized variable "j3"
2023-07-22 05:32:52.099 UTC [2715682] STATEMENT:  SELECT pgv_get('vars2', 'j3', NULL::jsonb);
2023-07-22 05:32:52.100 UTC [2715682] ERROR:  variable "d1" requires "date" value
2023-07-22 05:32:52.100 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'd1', NULL::jsonb);
2023-07-22 05:32:52.101 UTC [2715682] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:32:52.101 UTC [2715682] STATEMENT:  SELECT pgv_set('vars2', 'j1', '{1, 2, null}'::int[]);
2023-07-22 05:32:52.101 UTC [2715682] ERROR:  variable "arr2" requires "text[]" value
2023-07-22 05:32:52.101 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'arr2', NULL::int[]);
2023-07-22 05:32:52.102 UTC [2715682] ERROR:  variable "arr1" requires "integer[]" value
2023-07-22 05:32:52.102 UTC [2715682] STATEMENT:  SELECT pgv_set('vars', 'arr1', '{"bar", "balance", "active"}'::text[]);
2023-07-22 05:32:52.102 UTC [2715682] ERROR:  unrecognized variable "arr3"
2023-07-22 05:32:52.102 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'arr3', NULL::int[]);
2023-07-22 05:32:52.103 UTC [2715682] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:32:52.103 UTC [2715682] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::int[]);
2023-07-22 05:32:52.105 UTC [2715682] ERROR:  unrecognized variable "int3"
2023-07-22 05:32:52.105 UTC [2715682] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 05:32:52.105 UTC [2715682] ERROR:  unrecognized variable "int1"
2023-07-22 05:32:52.105 UTC [2715682] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 05:32:52.106 UTC [2715682] ERROR:  unrecognized package "vars2"
2023-07-22 05:32:52.106 UTC [2715682] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::jsonb);
2023-07-22 05:32:52.182 UTC [2715686] ERROR:  variable "any1" already created as TRANSACTIONAL
2023-07-22 05:32:52.182 UTC [2715686] STATEMENT:  SELECT pgv_set('vars', 'any1', 'value'::text);
2023-07-22 05:32:52.182 UTC [2715686] ERROR:  variable "any2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.182 UTC [2715686] STATEMENT:  SELECT pgv_set('vars', 'any2', 'value'::text, true);
2023-07-22 05:32:52.182 UTC [2715686] ERROR:  variable "int1" already created as TRANSACTIONAL
2023-07-22 05:32:52.182 UTC [2715686] STATEMENT:  SELECT pgv_set_int('vars', 'int1', 301);
2023-07-22 05:32:52.182 UTC [2715686] ERROR:  variable "int2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.182 UTC [2715686] STATEMENT:  SELECT pgv_set_int('vars', 'int2', 302, true);
2023-07-22 05:32:52.183 UTC [2715686] ERROR:  variable "str1" already created as TRANSACTIONAL
2023-07-22 05:32:52.183 UTC [2715686] STATEMENT:  SELECT pgv_set_text('vars', 'str1', 's301');
2023-07-22 05:32:52.183 UTC [2715686] ERROR:  variable "str2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.183 UTC [2715686] STATEMENT:  SELECT pgv_set_text('vars', 'str2', 's302', true);
2023-07-22 05:32:52.184 UTC [2715686] ERROR:  variable "num1" already created as TRANSACTIONAL
2023-07-22 05:32:52.184 UTC [2715686] STATEMENT:  SELECT pgv_set_numeric('vars', 'num1', 3.01);
2023-07-22 05:32:52.184 UTC [2715686] ERROR:  variable "num2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.184 UTC [2715686] STATEMENT:  SELECT pgv_set_numeric('vars', 'num2', 3.02, true);
2023-07-22 05:32:52.184 UTC [2715686] ERROR:  variable "ts1" already created as TRANSACTIONAL
2023-07-22 05:32:52.184 UTC [2715686] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts1', '2016-03-30 20:00:00');
2023-07-22 05:32:52.185 UTC [2715686] ERROR:  variable "ts2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.185 UTC [2715686] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts2', '2016-03-30 21:00:00', true);
2023-07-22 05:32:52.185 UTC [2715686] ERROR:  variable "tstz1" already created as TRANSACTIONAL
2023-07-22 05:32:52.185 UTC [2715686] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz1', '2016-03-30 20:00:00 GMT+01');
2023-07-22 05:32:52.185 UTC [2715686] ERROR:  variable "tstz2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.185 UTC [2715686] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz2', '2016-03-30 21:00:00 GMT+02', true);
2023-07-22 05:32:52.186 UTC [2715686] ERROR:  variable "d1" already created as TRANSACTIONAL
2023-07-22 05:32:52.186 UTC [2715686] STATEMENT:  SELECT pgv_set_date('vars', 'd1', '2016-04-29');
2023-07-22 05:32:52.186 UTC [2715686] ERROR:  variable "d2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.186 UTC [2715686] STATEMENT:  SELECT pgv_set_date('vars', 'd2', '2016-04-30', true);
2023-07-22 05:32:52.186 UTC [2715686] ERROR:  variable "j1" already created as TRANSACTIONAL
2023-07-22 05:32:52.186 UTC [2715686] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j1', '[1, 2, "foo2", null]');
2023-07-22 05:32:52.187 UTC [2715686] ERROR:  variable "j2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.187 UTC [2715686] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j2', '{"bar": "baz2", "balance": 7.77, "active": true}', true);
2023-07-22 05:32:52.187 UTC [2715686] ERROR:  variable "r1" already created as TRANSACTIONAL
2023-07-22 05:32:52.187 UTC [2715686] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(6 :: integer, 'str66' :: varchar));
2023-07-22 05:32:52.187 UTC [2715686] ERROR:  variable "r2" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.187 UTC [2715686] STATEMENT:  SELECT pgv_insert('vars3', 'r2', row(6 :: integer, 'str66' :: varchar),true);
2023-07-22 05:32:52.192 UTC [2715686] ERROR:  unrecognized variable "any1"
2023-07-22 05:32:52.192 UTC [2715686] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:32:52.193 UTC [2715686] ERROR:  unrecognized variable "r1"
2023-07-22 05:32:52.193 UTC [2715686] STATEMENT:  SELECT pgv_select('vars3', 'r1');
2023-07-22 05:32:52.198 UTC [2715686] ERROR:  unrecognized package "vars2"
2023-07-22 05:32:52.198 UTC [2715686] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 05:32:52.212 UTC [2715686] ERROR:  unrecognized variable "any1"
2023-07-22 05:32:52.212 UTC [2715686] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:32:52.212 UTC [2715686] ERROR:  unrecognized variable "r1"
2023-07-22 05:32:52.212 UTC [2715686] STATEMENT:  SELECT pgv_select('vars', 'r1');
2023-07-22 05:32:52.215 UTC [2715686] ERROR:  unrecognized package "vars2"
2023-07-22 05:32:52.215 UTC [2715686] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 05:32:52.224 UTC [2715686] ERROR:  variable "any1" requires "text" value
2023-07-22 05:32:52.224 UTC [2715686] STATEMENT:  SELECT pgv_set('vars', 'any1', 'wrong type'::varchar, true);
2023-07-22 05:32:52.227 UTC [2715686] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.227 UTC [2715686] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:32:52.236 UTC [2715686] ERROR:  division by zero
2023-07-22 05:32:52.236 UTC [2715686] STATEMENT:  SELECT pgv_insert('package', 'errs',row(n), true)
	FROM generate_series(1,5) AS gs(n) WHERE 1.0/(n-3)<>0;
2023-07-22 05:32:52.237 UTC [2715686] ERROR:  could not identify a hash function for type record
2023-07-22 05:32:52.237 UTC [2715686] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 05:32:52.238 UTC [2715686] ERROR:  unrecognized package "vars4"
2023-07-22 05:32:52.238 UTC [2715686] STATEMENT:  SELECT pgv_select('vars4', 'r1', 0);
2023-07-22 05:32:52.238 UTC [2715686] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.238 UTC [2715686] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:32:52.240 UTC [2715686] ERROR:  syntax error at or near "ERROR" at character 1
2023-07-22 05:32:52.240 UTC [2715686] STATEMENT:  ERROR;
2023-07-22 05:32:52.260 UTC [2715686] ERROR:  unrecognized variable "y"
2023-07-22 05:32:52.260 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:32:52.261 UTC [2715686] ERROR:  unrecognized variable "y"
2023-07-22 05:32:52.261 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:32:52.262 UTC [2715686] ERROR:  unrecognized variable "y"
2023-07-22 05:32:52.262 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:32:52.263 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.263 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.264 UTC [2715686] ERROR:  unrecognized variable "y"
2023-07-22 05:32:52.264 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.264 UTC [2715686] ERROR:  unrecognized variable "y"
2023-07-22 05:32:52.264 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:32:52.265 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.265 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.266 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.266 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.266 UTC [2715686] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 05:32:52.266 UTC [2715686] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:32:52.266 UTC [2715686] STATEMENT:  SELECT pgv_select('test');
2023-07-22 05:32:52.267 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.267 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.268 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.268 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.269 UTC [2715686] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 05:32:52.269 UTC [2715686] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:32:52.269 UTC [2715686] STATEMENT:  SELECT pgv_select('test');
2023-07-22 05:32:52.269 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.269 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.270 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.270 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:32:52.270 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.270 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.271 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.271 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:32:52.271 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.271 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.272 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.272 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:32:52.272 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.272 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.274 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.274 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.275 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.275 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.278 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.278 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:32:52.279 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.279 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:32:52.280 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.280 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:32:52.281 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.281 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.281 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.281 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.282 UTC [2715686] ERROR:  unrecognized package "test"
2023-07-22 05:32:52.282 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.301 UTC [2715686] ERROR:  unrecognized variable "z1"
2023-07-22 05:32:52.301 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.303 UTC [2715686] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:32:52.303 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.303 UTC [2715686] ERROR:  unrecognized variable "z2"
2023-07-22 05:32:52.303 UTC [2715686] STATEMENT:  SELECT pgv_select('test', 'z2');
2023-07-22 05:32:52.305 UTC [2715686] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:32:52.305 UTC [2715686] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:32:52.314 UTC [2715686] ERROR:  there is a record in the variable "y" with same key
2023-07-22 05:32:52.314 UTC [2715686] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), TRUE);
2023-07-22 05:32:52.316 UTC [2715686] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:32:52.316 UTC [2715686] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:32:52.316 UTC [2715686] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:32:52.316 UTC [2715686] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:32:52.317 UTC [2715686] ERROR:  variable "x" already created as TRANSACTIONAL
2023-07-22 05:32:52.317 UTC [2715686] STATEMENT:  SELECT pgv_insert('test1', 'x', ROW (2::float, 1::float), FALSE);
2023-07-22 05:32:52.319 UTC [2715686] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:32:52.319 UTC [2715686] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:32:52.321 UTC [2715686] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:32:52.321 UTC [2715686] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:32:52.343 UTC [2715686] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 05:32:52.343 UTC [2715686] STATEMENT:  SELECT pgv_insert('vars', 'r1', tab) FROM tab;
2023-07-22 05:32:52.345 UTC [2715686] ERROR:  could not identify a hash function for type record
2023-07-22 05:32:52.345 UTC [2715686] STATEMENT:  SELECT pgv_insert('test', 'x5', ROW ((2::int, 1::int)), TRUE);
2023-07-22 05:32:52.370 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.370 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.370 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.370 UTC [2715690] STATEMENT:  select pgv_set('vars', 'int3', 103);
2023-07-22 05:32:52.370 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.370 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 05:32:52.371 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.371 UTC [2715690] STATEMENT:  select pgv_set('vars', 'int1', 1001);
2023-07-22 05:32:52.371 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.371 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.371 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.371 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 05:32:52.371 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.371 UTC [2715690] STATEMENT:  select pgv_set('vars', 'int2', 1002);
2023-07-22 05:32:52.372 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.372 UTC [2715690] ERROR:  unrecognized variable "int3"
2023-07-22 05:32:52.372 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 05:32:52.373 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.376 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.376 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.376 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.376 UTC [2715690] STATEMENT:  select pgv_set('vars', 'int3', 103, true);
2023-07-22 05:32:52.376 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.376 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 05:32:52.376 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.376 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.377 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.377 UTC [2715690] STATEMENT:  select pgv_set('vars', 'int2', 1002, true);
2023-07-22 05:32:52.377 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.377 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 05:32:52.377 UTC [2715690] ERROR:  unrecognized variable "int3"
2023-07-22 05:32:52.377 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 05:32:52.377 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.378 UTC [2715690] ERROR:  unrecognized variable "int2"
2023-07-22 05:32:52.378 UTC [2715690] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 05:32:52.378 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.381 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.381 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.381 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.381 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.381 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.381 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.381 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.381 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.382 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.382 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.382 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.382 UTC [2715690] STATEMENT:  select pgv_insert('test', 'z', row (11::int, 22::int), false);
2023-07-22 05:32:52.382 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.382 UTC [2715690] STATEMENT:  select pgv_insert('test', 'z', row (22::int, 33::int), false);
2023-07-22 05:32:52.382 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.382 UTC [2715690] STATEMENT:  select pgv_insert('test', 'z', row (33::int, 44::int), false);
2023-07-22 05:32:52.382 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.382 UTC [2715690] STATEMENT:  declare r11_cur cursor for select pgv_select('test', 'x');
2023-07-22 05:32:52.383 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.383 UTC [2715690] STATEMENT:  fetch 2 in r11_cur;
2023-07-22 05:32:52.383 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.383 UTC [2715690] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 05:32:52.383 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.383 UTC [2715690] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 05:32:52.383 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.383 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.383 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.383 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.383 UTC [2715690] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 05:32:52.383 UTC [2715690] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 05:32:52.384 UTC [2715690] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 05:32:52.384 UTC [2715690] STATEMENT:  declare r3_cur cursor for select pgv_select('test', 'z');
2023-07-22 05:32:52.384 UTC [2715690] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:32:52.384 UTC [2715690] STATEMENT:  fetch 2 in r1_cur;
2023-07-22 05:32:52.384 UTC [2715690] ERROR:  cursor "r2_cur" does not exist
2023-07-22 05:32:52.384 UTC [2715690] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 05:32:52.384 UTC [2715690] ERROR:  cursor "r3_cur" does not exist
2023-07-22 05:32:52.384 UTC [2715690] STATEMENT:  fetch 2 in r3_cur;
2023-07-22 05:32:52.384 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.386 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.386 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.386 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.386 UTC [2715690] STATEMENT:  select pgv_set('vars', 'trans_int', 103, true);
2023-07-22 05:32:52.386 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.386 UTC [2715690] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:32:52.386 UTC [2715690] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.386 UTC [2715690] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:32:52.386 UTC [2715690] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 05:32:52.386 UTC [2715690] STATEMENT:  rollback to sp1;
2023-07-22 05:32:52.386 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.387 UTC [2715690] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.387 UTC [2715690] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:32:52.387 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.387 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'int1', 2);
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  savepoint sp2;
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'trans_int1', 4, true);
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  savepoint "sp2" does not exist
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  rollback to sp2;
2023-07-22 05:32:52.388 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.388 UTC [2715690] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 05:32:52.389 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.389 UTC [2715690] STATEMENT:  select * from pgv_list() order by package, name;
2023-07-22 05:32:52.389 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.389 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'trans_int2', 4, true);
2023-07-22 05:32:52.389 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.389 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'trans_int3', 5, true);
2023-07-22 05:32:52.389 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.389 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'int2', 3);
2023-07-22 05:32:52.389 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.389 UTC [2715690] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 05:32:52.389 UTC [2715690] STATEMENT:  rollback to sp1;
2023-07-22 05:32:52.389 UTC [2715690] ERROR:  unrecognized package "vars"
2023-07-22 05:32:52.389 UTC [2715690] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:32:52.390 UTC [2715690] ERROR:  unrecognized package "vars1"
2023-07-22 05:32:52.390 UTC [2715690] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 05:32:52.390 UTC [2715690] ERROR:  unrecognized package "vars1"
2023-07-22 05:32:52.390 UTC [2715690] STATEMENT:  select pgv_get('vars1', 'int2', null::int);
2023-07-22 05:32:52.390 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.391 UTC [2715690] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:32:52.391 UTC [2715690] STATEMENT:  begin autonomous;
2023-07-22 05:32:52.391 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.391 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'int1', 1);
2023-07-22 05:32:52.391 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.391 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'trans_int1', 2, true);
2023-07-22 05:32:52.391 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.391 UTC [2715690] STATEMENT:  savepoint sp2;
2023-07-22 05:32:52.391 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.391 UTC [2715690] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 05:32:52.391 UTC [2715690] ERROR:  savepoint "sp2" does not exist
2023-07-22 05:32:52.391 UTC [2715690] STATEMENT:  rollback to sp2;
2023-07-22 05:32:52.392 UTC [2715690] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.392 UTC [2715690] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 05:32:52.392 UTC [2715690] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.412 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.412 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.413 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.413 UTC [2715696] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:32:52.413 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.413 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.413 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.413 UTC [2715696] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:32:52.414 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.414 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.414 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.415 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.415 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.415 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.416 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.416 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.416 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.416 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.416 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.417 UTC [2715696] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.417 UTC [2715696] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 05:32:52.417 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.417 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.417 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.417 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.417 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.417 UTC [2715696] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.417 UTC [2715696] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 05:32:52.417 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.417 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.417 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.417 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.418 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.418 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.418 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.418 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.418 UTC [2715696] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 05:32:52.418 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.418 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.418 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.418 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.418 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.418 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.418 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.419 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.419 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.419 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.419 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.419 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.419 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.419 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.419 UTC [2715696] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:32:52.419 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.419 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.419 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.419 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.420 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.420 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.420 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.420 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.420 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.420 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.420 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.420 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.420 UTC [2715696] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:32:52.420 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.420 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.420 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.420 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.421 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.421 UTC [2715696] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 05:32:52.421 UTC [2715696] STATEMENT:  SELECT pgv_set('vars', 'int1', 2, true);
2023-07-22 05:32:52.421 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.421 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.422 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.422 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.423 UTC [2715696] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:32:52.423 UTC [2715696] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 05:32:52.423 UTC [2715696] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:32:52.423 UTC [2715696] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 05:32:52.423 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.424 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.424 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.424 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.424 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.424 UTC [2715696] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:32:52.424 UTC [2715696] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 05:32:52.424 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.424 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.424 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.424 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.424 UTC [2715696] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 05:32:52.424 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.424 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.424 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.424 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.425 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.425 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.425 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.425 UTC [2715696] STATEMENT:  SELECT pgv_set('vars', 'int1', 2);
2023-07-22 05:32:52.425 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.425 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.425 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.425 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  SAVEPOINT sp1;
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  SELECT pgv_set('vars1', 'int1', 0);
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  savepoint "sp1" does not exist
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  ROLLBACK TO sp1;
2023-07-22 05:32:52.426 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  unrecognized package "vars1"
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  SELECT pgv_remove('vars1', 'int1');
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  SAVEPOINT sp1;
2023-07-22 05:32:52.426 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.426 UTC [2715696] STATEMENT:  SELECT pgv_set('vars2', 'any1', 'variable exists'::text, true);
2023-07-22 05:32:52.427 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.427 UTC [2715696] STATEMENT:  SELECT pgv_free();
2023-07-22 05:32:52.427 UTC [2715696] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:32:52.427 UTC [2715696] STATEMENT:  RELEASE sp1;
2023-07-22 05:32:52.427 UTC [2715696] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:32:52.427 UTC [2715696] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:32:52.427 UTC [2715696] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 05:32:52.427 UTC [2715696] STATEMENT:  SAVEPOINT sp2;
2023-07-22 05:32:52.427 UTC [2715696] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 05:32:52.427 UTC [2715696] STATEMENT:  SAVEPOINT sp3;
2023-07-22 05:32:52.427 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.427 UTC [2715696] WARNING:  there is no transaction in progress
2023-07-22 05:32:52.573 UTC [2715713] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:32:52.573 UTC [2715713] STATEMENT:  select gen_salt('foo');
2023-07-22 05:32:52.573 UTC [2715713] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:32:52.573 UTC [2715713] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:32:52.573 UTC [2715713] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:32:52.573 UTC [2715713] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:32:52.574 UTC [2715713] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:32:52.574 UTC [2715713] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:32:52.628 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.628 UTC [2715733] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:32:52.628 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.628 UTC [2715733] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:32:52.629 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.629 UTC [2715733] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Key was too big
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Key was too big
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Key was too big
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Key was too big
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:32:52.630 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.630 UTC [2715733] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:32:52.631 UTC [2715733] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.631 UTC [2715733] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:32:52.643 UTC [2715739] ERROR:  encrypt error: Encryption failed
2023-07-22 05:32:52.643 UTC [2715739] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:32:52.645 UTC [2715739] ERROR:  decrypt error: Decryption failed
2023-07-22 05:32:52.645 UTC [2715739] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:32:52.645 UTC [2715739] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:32:52.645 UTC [2715739] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:32:52.668 UTC [2715747] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.668 UTC [2715747] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:32:52.668 UTC [2715747] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.668 UTC [2715747] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:32:52.668 UTC [2715747] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.668 UTC [2715747] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:32:52.669 UTC [2715747] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.669 UTC [2715747] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:32:52.669 UTC [2715747] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:32:52.669 UTC [2715747] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:32:52.669 UTC [2715747] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:32:52.669 UTC [2715747] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:32:52.669 UTC [2715747] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.669 UTC [2715747] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:32:52.669 UTC [2715747] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.669 UTC [2715747] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:32:52.693 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.693 UTC [2715757] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:32:52.693 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.693 UTC [2715757] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:32:52.693 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.693 UTC [2715757] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:32:52.693 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.693 UTC [2715757] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:32:52.693 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.693 UTC [2715757] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:32:52.693 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.693 UTC [2715757] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:32:52.694 UTC [2715757] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:32:52.694 UTC [2715757] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:32:52.694 UTC [2715757] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:32:52.694 UTC [2715757] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:32:52.694 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.694 UTC [2715757] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:32:52.694 UTC [2715757] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:32:52.694 UTC [2715757] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:32:52.707 UTC [2715763] ERROR:  invalid salt
2023-07-22 05:32:52.707 UTC [2715763] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:32:52.861 UTC [2715771] ERROR:  invalid salt
2023-07-22 05:32:52.861 UTC [2715771] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:32:52.862 UTC [2715771] ERROR:  invalid salt
2023-07-22 05:32:52.862 UTC [2715771] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:32:52.862 UTC [2715771] ERROR:  invalid salt
2023-07-22 05:32:52.862 UTC [2715771] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:32:52.945 UTC [2715775] ERROR:  invalid salt
2023-07-22 05:32:52.945 UTC [2715775] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:32:52.945 UTC [2715775] ERROR:  crypt(3) returned NULL
2023-07-22 05:32:52.945 UTC [2715775] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:32:52.945 UTC [2715775] ERROR:  crypt(3) returned NULL
2023-07-22 05:32:52.945 UTC [2715775] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:32:53.003 UTC [2715779] ERROR:  Corrupt ascii-armor
2023-07-22 05:32:53.003 UTC [2715779] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:32:53.004 UTC [2715779] ERROR:  Corrupt ascii-armor
2023-07-22 05:32:53.004 UTC [2715779] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:32:53.004 UTC [2715779] ERROR:  Corrupt ascii-armor
2023-07-22 05:32:53.004 UTC [2715779] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:32:53.014 UTC [2715779] ERROR:  mismatched array dimensions
2023-07-22 05:32:53.014 UTC [2715779] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:32:53.015 UTC [2715779] ERROR:  mismatched array dimensions
2023-07-22 05:32:53.015 UTC [2715779] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:32:53.015 UTC [2715779] ERROR:  wrong number of array subscripts
2023-07-22 05:32:53.015 UTC [2715779] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:32:53.015 UTC [2715779] ERROR:  wrong number of array subscripts
2023-07-22 05:32:53.015 UTC [2715779] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:32:53.016 UTC [2715779] ERROR:  null value not allowed for header key
2023-07-22 05:32:53.016 UTC [2715779] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:32:53.016 UTC [2715779] ERROR:  null value not allowed for header value
2023-07-22 05:32:53.016 UTC [2715779] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:32:53.018 UTC [2715779] ERROR:  header key must not contain newlines
2023-07-22 05:32:53.018 UTC [2715779] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:32:53.018 UTC [2715779] ERROR:  header value must not contain newlines
2023-07-22 05:32:53.018 UTC [2715779] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:32:53.018 UTC [2715779] ERROR:  header key must not contain ": "
2023-07-22 05:32:53.018 UTC [2715779] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:32:53.046 UTC [2715783] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.046 UTC [2715783] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:32:53.090 UTC [2715783] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.090 UTC [2715783] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:32:53.092 UTC [2715783] ERROR:  Not text data
2023-07-22 05:32:53.092 UTC [2715783] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:32:53.093 UTC [2715783] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.093 UTC [2715783] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:32:53.093 UTC [2715783] ERROR:  Unsupported compression algorithm
2023-07-22 05:32:53.093 UTC [2715783] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:32:53.109 UTC [2715789] ERROR:  Not text data
2023-07-22 05:32:53.109 UTC [2715789] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:32:53.608 UTC [2715797] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.608 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:32:53.629 UTC [2715797] ERROR:  Wrong key
2023-07-22 05:32:53.629 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:32:53.630 UTC [2715797] ERROR:  No encryption key found
2023-07-22 05:32:53.630 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:32:53.632 UTC [2715797] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.632 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:32:53.638 UTC [2715797] ERROR:  Need password for secret key
2023-07-22 05:32:53.638 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:32:53.639 UTC [2715797] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.639 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:32:53.644 UTC [2715797] ERROR:  Wrong key or corrupt data
2023-07-22 05:32:53.644 UTC [2715797] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:32:53.666 UTC [2715803] ERROR:  No encryption key found
2023-07-22 05:32:53.666 UTC [2715803] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:32:53.667 UTC [2715803] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:32:53.667 UTC [2715803] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:32:53.668 UTC [2715803] ERROR:  Not text data
2023-07-22 05:32:53.668 UTC [2715803] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:32:53.676 UTC [2715807] ERROR:  No encryption key found
2023-07-22 05:32:53.676 UTC [2715807] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:32:53.677 UTC [2715807] ERROR:  No encryption key found
2023-07-22 05:32:53.677 UTC [2715807] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:33:25.841 UTC [2715660] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:33:25.959 UTC [2715660] LOG:  checkpoint complete: wrote 1115 buffers (6.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.027 s, sync=0.044 s, total=0.118 s; sync files=508, longest=0.004 s, average=0.001 s; distance=145525 kB, estimate=145525 kB
2023-07-22 05:33:57.326 UTC [2715660] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:33:57.394 UTC [2715660] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.004 s, total=0.069 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136143 kB, estimate=144587 kB
2023-07-22 05:33:57.462 UTC [2715659] LOG:  received fast shutdown request
2023-07-22 05:33:57.468 UTC [2715659] LOG:  aborting any active transactions
2023-07-22 05:33:57.469 UTC [2715659] LOG:  background worker "logical replication launcher" (PID 2715665) exited with exit code 1
2023-07-22 05:33:57.470 UTC [2715660] LOG:  shutting down
2023-07-22 05:33:57.472 UTC [2715660] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:33:57.493 UTC [2715660] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.024 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130128 kB
2023-07-22 05:33:57.516 UTC [2715659] LOG:  database system is shut down
2023-07-22 05:33:58.372 UTC [2715933] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:33:58.372 UTC [2715933] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:33:58.383 UTC [2715933] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:33:58.395 UTC [2715936] LOG:  database system was shut down at 2023-07-22 05:33:58 UTC
2023-07-22 05:33:58.403 UTC [2715933] LOG:  database system is ready to accept connections
2023-07-22 05:33:58.572 UTC [2715955] ERROR:  package name can not be NULL
2023-07-22 05:33:58.572 UTC [2715955] STATEMENT:  SELECT pgv_exists(NULL);
2023-07-22 05:33:58.573 UTC [2715955] ERROR:  package name can not be NULL
2023-07-22 05:33:58.573 UTC [2715955] STATEMENT:  SELECT pgv_remove(NULL);
2023-07-22 05:33:58.573 UTC [2715955] ERROR:  unrecognized package "vars"
2023-07-22 05:33:58.573 UTC [2715955] STATEMENT:  SELECT pgv_remove('vars');
2023-07-22 05:33:58.574 UTC [2715955] ERROR:  name "vars111111111111111111111111111111111111111111111111111111111111" is too long
2023-07-22 05:33:58.574 UTC [2715955] STATEMENT:  SELECT pgv_exists('vars111111111111111111111111111111111111111111111111111111111111');
2023-07-22 05:33:58.574 UTC [2715955] ERROR:  unrecognized package "vars"
2023-07-22 05:33:58.574 UTC [2715955] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 05:33:58.578 UTC [2715955] ERROR:  unrecognized variable "int3"
2023-07-22 05:33:58.578 UTC [2715955] STATEMENT:  SELECT pgv_get_int('vars', 'int3');
2023-07-22 05:33:58.582 UTC [2715955] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:33:58.582 UTC [2715955] STATEMENT:  SELECT pgv_set_text('vars', 'int1', 's101');
2023-07-22 05:33:58.582 UTC [2715955] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.582 UTC [2715955] STATEMENT:  SELECT pgv_set_int('vars', 'str1', 101);
2023-07-22 05:33:58.585 UTC [2715955] ERROR:  unrecognized variable "str3"
2023-07-22 05:33:58.585 UTC [2715955] STATEMENT:  SELECT pgv_get_text('vars', 'str3');
2023-07-22 05:33:58.587 UTC [2715955] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:33:58.587 UTC [2715955] STATEMENT:  SELECT pgv_get_text('vars', 'int1');
2023-07-22 05:33:58.587 UTC [2715955] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.587 UTC [2715955] STATEMENT:  SELECT pgv_get_int('vars', 'str1');
2023-07-22 05:33:58.589 UTC [2715955] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.589 UTC [2715955] STATEMENT:  SELECT pgv_set_numeric('vars', 'str1', 1.01);
2023-07-22 05:33:58.592 UTC [2715955] ERROR:  unrecognized variable "num3"
2023-07-22 05:33:58.592 UTC [2715955] STATEMENT:  SELECT pgv_get_numeric('vars', 'num3');
2023-07-22 05:33:58.593 UTC [2715955] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.593 UTC [2715955] STATEMENT:  SELECT pgv_get_numeric('vars', 'str1');
2023-07-22 05:33:58.596 UTC [2715955] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:33:58.596 UTC [2715955] STATEMENT:  SELECT pgv_set_timestamp('vars', 'num1', '2016-03-30 12:00:00');
2023-07-22 05:33:58.597 UTC [2715955] ERROR:  unrecognized variable "ts3"
2023-07-22 05:33:58.597 UTC [2715955] STATEMENT:  SELECT pgv_get_timestamp('vars', 'ts3');
2023-07-22 05:33:58.599 UTC [2715955] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:33:58.599 UTC [2715955] STATEMENT:  SELECT pgv_get_timestamp('vars', 'num1');
2023-07-22 05:33:58.601 UTC [2715955] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:33:58.601 UTC [2715955] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'ts1', '2016-03-30 12:00:00 GMT+03');
2023-07-22 05:33:58.603 UTC [2715955] ERROR:  unrecognized variable "tstz3"
2023-07-22 05:33:58.603 UTC [2715955] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'tstz3');
2023-07-22 05:33:58.605 UTC [2715955] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:33:58.605 UTC [2715955] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'ts1');
2023-07-22 05:33:58.608 UTC [2715955] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:33:58.608 UTC [2715955] STATEMENT:  SELECT pgv_set_date('vars', 'tstz1', '2016-04-01');
2023-07-22 05:33:58.610 UTC [2715955] ERROR:  unrecognized variable "d3"
2023-07-22 05:33:58.610 UTC [2715955] STATEMENT:  SELECT pgv_get_date('vars', 'd3');
2023-07-22 05:33:58.612 UTC [2715955] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:33:58.612 UTC [2715955] STATEMENT:  SELECT pgv_get_date('vars', 'tstz1');
2023-07-22 05:33:58.614 UTC [2715955] ERROR:  variable "d1" requires "date" value
2023-07-22 05:33:58.614 UTC [2715955] STATEMENT:  SELECT pgv_set_jsonb('vars', 'd1', '[1, 2, "foo", null]');
2023-07-22 05:33:58.617 UTC [2715955] ERROR:  unrecognized variable "j3"
2023-07-22 05:33:58.617 UTC [2715955] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j3');
2023-07-22 05:33:58.618 UTC [2715955] ERROR:  variable "d1" requires "date" value
2023-07-22 05:33:58.618 UTC [2715955] STATEMENT:  SELECT pgv_get_jsonb('vars', 'd1');
2023-07-22 05:33:58.637 UTC [2715955] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:33:58.637 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars2', 'j1', tab) FROM tab;
2023-07-22 05:33:58.638 UTC [2715955] ERROR:  there is a record in the variable "r1" with same key
2023-07-22 05:33:58.638 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars3', 'r1', tab) FROM tab;
2023-07-22 05:33:58.638 UTC [2715955] ERROR:  new record structure have 3 attributes, but variable "r1" structure have 2.
2023-07-22 05:33:58.638 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 'str1', 'str2'));
2023-07-22 05:33:58.639 UTC [2715955] ERROR:  new record attribute type for attribute number 2 differs from variable "r1" structure.
2023-07-22 05:33:58.639 UTC [2715955] HINT:  You may need explicit type casts.
2023-07-22 05:33:58.639 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 1));
2023-07-22 05:33:58.639 UTC [2715955] ERROR:  new record attribute type for attribute number 1 differs from variable "r1" structure.
2023-07-22 05:33:58.639 UTC [2715955] HINT:  You may need explicit type casts.
2023-07-22 05:33:58.639 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row('str1', 'str1'));
2023-07-22 05:33:58.640 UTC [2715955] ERROR:  searching for elements in multidimensional arrays is not supported
2023-07-22 05:33:58.640 UTC [2715955] STATEMENT:  SELECT pgv_select('vars3', 'r1', ARRAY[[1,2]]);
2023-07-22 05:33:58.642 UTC [2715955] ERROR:  unrecognized package "vars4"
2023-07-22 05:33:58.642 UTC [2715955] STATEMENT:  SELECT pgv_update('vars4', 'r1', row(3, 'str22'::varchar));
2023-07-22 05:33:58.643 UTC [2715955] ERROR:  unrecognized package "vars4"
2023-07-22 05:33:58.643 UTC [2715955] STATEMENT:  select pgv_delete('vars4', 'r2', NULL::int);
2023-07-22 05:33:58.643 UTC [2715955] ERROR:  record argument can not be NULL
2023-07-22 05:33:58.643 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars3', 'r2', NULL);
2023-07-22 05:33:58.643 UTC [2715955] ERROR:  record argument can not be NULL
2023-07-22 05:33:58.643 UTC [2715955] STATEMENT:  SELECT pgv_update('vars3', 'r2', NULL);
2023-07-22 05:33:58.644 UTC [2715955] ERROR:  array argument can not be NULL
2023-07-22 05:33:58.644 UTC [2715955] STATEMENT:  SELECT pgv_select('vars3', 'r1', NULL::int[]);
2023-07-22 05:33:58.646 UTC [2715955] ERROR:  requested value type differs from variable "r1" key type
2023-07-22 05:33:58.646 UTC [2715955] STATEMENT:  SELECT pgv_select('vars3', 'r1', 1::float);
2023-07-22 05:33:58.652 UTC [2715955] ERROR:  unrecognized variable "r3"
2023-07-22 05:33:58.652 UTC [2715955] STATEMENT:  SELECT pgv_select('vars3', 'r3');
2023-07-22 05:33:58.653 UTC [2715955] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:33:58.653 UTC [2715955] STATEMENT:  SELECT pgv_select('vars2', 'j1');
2023-07-22 05:33:58.660 UTC [2715955] ERROR:  unrecognized variable "r3"
2023-07-22 05:33:58.660 UTC [2715955] CONTEXT:  SQL statement "SELECT pgv_select('vars3', 'r3')"
	PL/pgSQL function inline_code_block line 3 at PERFORM
2023-07-22 05:33:58.660 UTC [2715955] STATEMENT:  DO
	$$BEGIN
	    PERFORM pgv_select('vars3', 'r1') LIMIT 2 OFFSET 2;
	    PERFORM pgv_select('vars3', 'r3');
	END$$;
2023-07-22 05:33:58.665 UTC [2715955] ERROR:  could not identify a hash function for type record
2023-07-22 05:33:58.665 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 05:33:58.669 UTC [2715955] ERROR:  variable "r1" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.669 UTC [2715955] STATEMENT:  SELECT pgv_set('vars5', 'r1', row(1, 'str11'), true);
2023-07-22 05:33:58.669 UTC [2715955] ERROR:  "r1" isn't a record variable
2023-07-22 05:33:58.669 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars5', 'r1', row(1, 'str11'));
2023-07-22 05:33:58.670 UTC [2715955] ERROR:  "r1" isn't a record variable
2023-07-22 05:33:58.670 UTC [2715955] STATEMENT:  SELECT pgv_select('vars5', 'r1');
2023-07-22 05:33:58.670 UTC [2715955] ERROR:  "r1" isn't a scalar variable
2023-07-22 05:33:58.670 UTC [2715955] STATEMENT:  SELECT pgv_get('vars3', 'r1', NULL::record);
2023-07-22 05:33:58.673 UTC [2715955] ERROR:  unrecognized variable "int3"
2023-07-22 05:33:58.673 UTC [2715955] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 05:33:58.674 UTC [2715955] ERROR:  unrecognized variable "int1"
2023-07-22 05:33:58.674 UTC [2715955] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 05:33:58.675 UTC [2715955] ERROR:  unrecognized package "vars2"
2023-07-22 05:33:58.675 UTC [2715955] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j1');
2023-07-22 05:33:58.687 UTC [2715955] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 05:33:58.687 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars', 'r1', foo) FROM foo;
2023-07-22 05:33:58.691 UTC [2715955] ERROR:  new record attribute type for attribute number 2 differs from variable "r4" structure.
2023-07-22 05:33:58.691 UTC [2715955] HINT:  You may need explicit type casts.
2023-07-22 05:33:58.691 UTC [2715955] STATEMENT:  SELECT pgv_insert('vars', 'r4', row(0, 'str1'));
2023-07-22 05:33:58.718 UTC [2715959] ERROR:  unrecognized package "vars"
2023-07-22 05:33:58.718 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 05:33:58.722 UTC [2715959] ERROR:  unrecognized variable "int3"
2023-07-22 05:33:58.722 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'int3', NULL::int);
2023-07-22 05:33:58.727 UTC [2715959] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:33:58.727 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'int1', 's101'::text);
2023-07-22 05:33:58.727 UTC [2715959] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.727 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'str1', 101);
2023-07-22 05:33:58.730 UTC [2715959] ERROR:  unrecognized variable "str3"
2023-07-22 05:33:58.730 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'str3', NULL::text);
2023-07-22 05:33:58.732 UTC [2715959] ERROR:  variable "int1" requires "integer" value
2023-07-22 05:33:58.732 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::text);
2023-07-22 05:33:58.732 UTC [2715959] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.732 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::int);
2023-07-22 05:33:58.734 UTC [2715959] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.734 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'str1', 1.01::numeric);
2023-07-22 05:33:58.736 UTC [2715959] ERROR:  unrecognized variable "num3"
2023-07-22 05:33:58.736 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'num3', NULL::numeric);
2023-07-22 05:33:58.737 UTC [2715959] ERROR:  variable "str1" requires "text" value
2023-07-22 05:33:58.737 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::numeric);
2023-07-22 05:33:58.739 UTC [2715959] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:33:58.739 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'num1', '2016-03-30 12:00:00'::timestamp);
2023-07-22 05:33:58.741 UTC [2715959] ERROR:  unrecognized variable "ts3"
2023-07-22 05:33:58.741 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'ts3', NULL::timestamp);
2023-07-22 05:33:58.743 UTC [2715959] ERROR:  variable "num1" requires "numeric" value
2023-07-22 05:33:58.743 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'num1', NULL::timestamp);
2023-07-22 05:33:58.745 UTC [2715959] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:33:58.745 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'ts1', '2016-03-30 12:00:00 GMT+03'::timestamptz);
2023-07-22 05:33:58.748 UTC [2715959] ERROR:  unrecognized variable "tstz3"
2023-07-22 05:33:58.748 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'tstz3', NULL::timestamptz);
2023-07-22 05:33:58.749 UTC [2715959] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 05:33:58.749 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'ts1', NULL::timestamptz);
2023-07-22 05:33:58.751 UTC [2715959] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:33:58.751 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'tstz1', '2016-04-01'::date);
2023-07-22 05:33:58.752 UTC [2715959] ERROR:  unrecognized variable "d3"
2023-07-22 05:33:58.752 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'd3', NULL::date);
2023-07-22 05:33:58.754 UTC [2715959] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 05:33:58.754 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'tstz1', NULL::date);
2023-07-22 05:33:58.756 UTC [2715959] ERROR:  variable "d1" requires "date" value
2023-07-22 05:33:58.756 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'd1', '[1, 2, "foo", null]'::jsonb);
2023-07-22 05:33:58.758 UTC [2715959] ERROR:  unrecognized variable "j3"
2023-07-22 05:33:58.758 UTC [2715959] STATEMENT:  SELECT pgv_get('vars2', 'j3', NULL::jsonb);
2023-07-22 05:33:58.759 UTC [2715959] ERROR:  variable "d1" requires "date" value
2023-07-22 05:33:58.759 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'd1', NULL::jsonb);
2023-07-22 05:33:58.761 UTC [2715959] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:33:58.761 UTC [2715959] STATEMENT:  SELECT pgv_set('vars2', 'j1', '{1, 2, null}'::int[]);
2023-07-22 05:33:58.762 UTC [2715959] ERROR:  variable "arr2" requires "text[]" value
2023-07-22 05:33:58.762 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'arr2', NULL::int[]);
2023-07-22 05:33:58.763 UTC [2715959] ERROR:  variable "arr1" requires "integer[]" value
2023-07-22 05:33:58.763 UTC [2715959] STATEMENT:  SELECT pgv_set('vars', 'arr1', '{"bar", "balance", "active"}'::text[]);
2023-07-22 05:33:58.764 UTC [2715959] ERROR:  unrecognized variable "arr3"
2023-07-22 05:33:58.764 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'arr3', NULL::int[]);
2023-07-22 05:33:58.766 UTC [2715959] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 05:33:58.766 UTC [2715959] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::int[]);
2023-07-22 05:33:58.769 UTC [2715959] ERROR:  unrecognized variable "int3"
2023-07-22 05:33:58.769 UTC [2715959] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 05:33:58.770 UTC [2715959] ERROR:  unrecognized variable "int1"
2023-07-22 05:33:58.770 UTC [2715959] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 05:33:58.771 UTC [2715959] ERROR:  unrecognized package "vars2"
2023-07-22 05:33:58.771 UTC [2715959] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::jsonb);
2023-07-22 05:33:58.844 UTC [2715963] ERROR:  variable "any1" already created as TRANSACTIONAL
2023-07-22 05:33:58.844 UTC [2715963] STATEMENT:  SELECT pgv_set('vars', 'any1', 'value'::text);
2023-07-22 05:33:58.845 UTC [2715963] ERROR:  variable "any2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.845 UTC [2715963] STATEMENT:  SELECT pgv_set('vars', 'any2', 'value'::text, true);
2023-07-22 05:33:58.845 UTC [2715963] ERROR:  variable "int1" already created as TRANSACTIONAL
2023-07-22 05:33:58.845 UTC [2715963] STATEMENT:  SELECT pgv_set_int('vars', 'int1', 301);
2023-07-22 05:33:58.846 UTC [2715963] ERROR:  variable "int2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.846 UTC [2715963] STATEMENT:  SELECT pgv_set_int('vars', 'int2', 302, true);
2023-07-22 05:33:58.846 UTC [2715963] ERROR:  variable "str1" already created as TRANSACTIONAL
2023-07-22 05:33:58.846 UTC [2715963] STATEMENT:  SELECT pgv_set_text('vars', 'str1', 's301');
2023-07-22 05:33:58.846 UTC [2715963] ERROR:  variable "str2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.846 UTC [2715963] STATEMENT:  SELECT pgv_set_text('vars', 'str2', 's302', true);
2023-07-22 05:33:58.847 UTC [2715963] ERROR:  variable "num1" already created as TRANSACTIONAL
2023-07-22 05:33:58.847 UTC [2715963] STATEMENT:  SELECT pgv_set_numeric('vars', 'num1', 3.01);
2023-07-22 05:33:58.847 UTC [2715963] ERROR:  variable "num2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.847 UTC [2715963] STATEMENT:  SELECT pgv_set_numeric('vars', 'num2', 3.02, true);
2023-07-22 05:33:58.848 UTC [2715963] ERROR:  variable "ts1" already created as TRANSACTIONAL
2023-07-22 05:33:58.848 UTC [2715963] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts1', '2016-03-30 20:00:00');
2023-07-22 05:33:58.848 UTC [2715963] ERROR:  variable "ts2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.848 UTC [2715963] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts2', '2016-03-30 21:00:00', true);
2023-07-22 05:33:58.848 UTC [2715963] ERROR:  variable "tstz1" already created as TRANSACTIONAL
2023-07-22 05:33:58.848 UTC [2715963] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz1', '2016-03-30 20:00:00 GMT+01');
2023-07-22 05:33:58.849 UTC [2715963] ERROR:  variable "tstz2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.849 UTC [2715963] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz2', '2016-03-30 21:00:00 GMT+02', true);
2023-07-22 05:33:58.849 UTC [2715963] ERROR:  variable "d1" already created as TRANSACTIONAL
2023-07-22 05:33:58.849 UTC [2715963] STATEMENT:  SELECT pgv_set_date('vars', 'd1', '2016-04-29');
2023-07-22 05:33:58.850 UTC [2715963] ERROR:  variable "d2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.850 UTC [2715963] STATEMENT:  SELECT pgv_set_date('vars', 'd2', '2016-04-30', true);
2023-07-22 05:33:58.850 UTC [2715963] ERROR:  variable "j1" already created as TRANSACTIONAL
2023-07-22 05:33:58.850 UTC [2715963] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j1', '[1, 2, "foo2", null]');
2023-07-22 05:33:58.851 UTC [2715963] ERROR:  variable "j2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.851 UTC [2715963] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j2', '{"bar": "baz2", "balance": 7.77, "active": true}', true);
2023-07-22 05:33:58.851 UTC [2715963] ERROR:  variable "r1" already created as TRANSACTIONAL
2023-07-22 05:33:58.851 UTC [2715963] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(6 :: integer, 'str66' :: varchar));
2023-07-22 05:33:58.852 UTC [2715963] ERROR:  variable "r2" already created as NOT TRANSACTIONAL
2023-07-22 05:33:58.852 UTC [2715963] STATEMENT:  SELECT pgv_insert('vars3', 'r2', row(6 :: integer, 'str66' :: varchar),true);
2023-07-22 05:33:58.858 UTC [2715963] ERROR:  unrecognized variable "any1"
2023-07-22 05:33:58.858 UTC [2715963] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:33:58.858 UTC [2715963] ERROR:  unrecognized variable "r1"
2023-07-22 05:33:58.858 UTC [2715963] STATEMENT:  SELECT pgv_select('vars3', 'r1');
2023-07-22 05:33:58.866 UTC [2715963] ERROR:  unrecognized package "vars2"
2023-07-22 05:33:58.866 UTC [2715963] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 05:33:58.885 UTC [2715963] ERROR:  unrecognized variable "any1"
2023-07-22 05:33:58.885 UTC [2715963] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:33:58.886 UTC [2715963] ERROR:  unrecognized variable "r1"
2023-07-22 05:33:58.886 UTC [2715963] STATEMENT:  SELECT pgv_select('vars', 'r1');
2023-07-22 05:33:58.894 UTC [2715963] ERROR:  unrecognized package "vars2"
2023-07-22 05:33:58.894 UTC [2715963] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 05:33:58.910 UTC [2715963] ERROR:  variable "any1" requires "text" value
2023-07-22 05:33:58.910 UTC [2715963] STATEMENT:  SELECT pgv_set('vars', 'any1', 'wrong type'::varchar, true);
2023-07-22 05:33:58.913 UTC [2715963] ERROR:  unrecognized package "vars"
2023-07-22 05:33:58.913 UTC [2715963] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:33:58.934 UTC [2715963] ERROR:  division by zero
2023-07-22 05:33:58.934 UTC [2715963] STATEMENT:  SELECT pgv_insert('package', 'errs',row(n), true)
	FROM generate_series(1,5) AS gs(n) WHERE 1.0/(n-3)<>0;
2023-07-22 05:33:58.935 UTC [2715963] ERROR:  could not identify a hash function for type record
2023-07-22 05:33:58.935 UTC [2715963] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 05:33:58.936 UTC [2715963] ERROR:  unrecognized package "vars4"
2023-07-22 05:33:58.936 UTC [2715963] STATEMENT:  SELECT pgv_select('vars4', 'r1', 0);
2023-07-22 05:33:58.938 UTC [2715963] ERROR:  unrecognized package "vars"
2023-07-22 05:33:58.938 UTC [2715963] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 05:33:58.943 UTC [2715963] ERROR:  syntax error at or near "ERROR" at character 1
2023-07-22 05:33:58.943 UTC [2715963] STATEMENT:  ERROR;
2023-07-22 05:33:58.983 UTC [2715963] ERROR:  unrecognized variable "y"
2023-07-22 05:33:58.983 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:33:58.985 UTC [2715963] ERROR:  unrecognized variable "y"
2023-07-22 05:33:58.985 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:33:58.987 UTC [2715963] ERROR:  unrecognized variable "y"
2023-07-22 05:33:58.987 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:33:58.989 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:58.989 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:58.991 UTC [2715963] ERROR:  unrecognized variable "y"
2023-07-22 05:33:58.991 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:58.992 UTC [2715963] ERROR:  unrecognized variable "y"
2023-07-22 05:33:58.992 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 05:33:58.994 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:58.994 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:58.995 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:58.995 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:58.996 UTC [2715963] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 05:33:58.996 UTC [2715963] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:33:58.996 UTC [2715963] STATEMENT:  SELECT pgv_select('test');
2023-07-22 05:33:58.997 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:58.997 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:58.998 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:58.998 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:58.999 UTC [2715963] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 05:33:58.999 UTC [2715963] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:33:58.999 UTC [2715963] STATEMENT:  SELECT pgv_select('test');
2023-07-22 05:33:59.000 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.000 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.000 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.000 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:33:59.001 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.001 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.001 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.001 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:33:59.002 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.002 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.002 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.002 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:33:59.003 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.003 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.004 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.004 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.006 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.006 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.007 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.007 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:33:59.009 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.009 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:33:59.011 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.011 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 05:33:59.013 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.013 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.016 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.016 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.017 UTC [2715963] ERROR:  unrecognized package "test"
2023-07-22 05:33:59.017 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.049 UTC [2715963] ERROR:  unrecognized variable "z1"
2023-07-22 05:33:59.049 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.052 UTC [2715963] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:33:59.052 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.053 UTC [2715963] ERROR:  unrecognized variable "z2"
2023-07-22 05:33:59.053 UTC [2715963] STATEMENT:  SELECT pgv_select('test', 'z2');
2023-07-22 05:33:59.056 UTC [2715963] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:33:59.056 UTC [2715963] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 05:33:59.073 UTC [2715963] ERROR:  there is a record in the variable "y" with same key
2023-07-22 05:33:59.073 UTC [2715963] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), TRUE);
2023-07-22 05:33:59.076 UTC [2715963] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:33:59.076 UTC [2715963] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:33:59.076 UTC [2715963] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:33:59.076 UTC [2715963] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:33:59.077 UTC [2715963] ERROR:  variable "x" already created as TRANSACTIONAL
2023-07-22 05:33:59.077 UTC [2715963] STATEMENT:  SELECT pgv_insert('test1', 'x', ROW (2::float, 1::float), FALSE);
2023-07-22 05:33:59.079 UTC [2715963] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:33:59.079 UTC [2715963] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:33:59.082 UTC [2715963] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 05:33:59.082 UTC [2715963] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 05:33:59.109 UTC [2715963] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 05:33:59.109 UTC [2715963] STATEMENT:  SELECT pgv_insert('vars', 'r1', tab) FROM tab;
2023-07-22 05:33:59.112 UTC [2715963] ERROR:  could not identify a hash function for type record
2023-07-22 05:33:59.112 UTC [2715963] STATEMENT:  SELECT pgv_insert('test', 'x5', ROW ((2::int, 1::int)), TRUE);
2023-07-22 05:33:59.144 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.144 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.145 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.145 UTC [2715967] STATEMENT:  select pgv_set('vars', 'int3', 103);
2023-07-22 05:33:59.145 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.145 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 05:33:59.145 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.145 UTC [2715967] STATEMENT:  select pgv_set('vars', 'int1', 1001);
2023-07-22 05:33:59.146 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.146 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.146 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.146 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 05:33:59.146 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.146 UTC [2715967] STATEMENT:  select pgv_set('vars', 'int2', 1002);
2023-07-22 05:33:59.147 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.148 UTC [2715967] ERROR:  unrecognized variable "int3"
2023-07-22 05:33:59.148 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 05:33:59.149 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.153 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.153 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.154 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.154 UTC [2715967] STATEMENT:  select pgv_set('vars', 'int3', 103, true);
2023-07-22 05:33:59.154 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.154 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 05:33:59.154 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.154 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.155 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.155 UTC [2715967] STATEMENT:  select pgv_set('vars', 'int2', 1002, true);
2023-07-22 05:33:59.155 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.155 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 05:33:59.156 UTC [2715967] ERROR:  unrecognized variable "int3"
2023-07-22 05:33:59.156 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 05:33:59.156 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.157 UTC [2715967] ERROR:  unrecognized variable "int2"
2023-07-22 05:33:59.157 UTC [2715967] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 05:33:59.158 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.164 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.164 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.164 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.164 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.164 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.164 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.164 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.164 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.165 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.165 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.165 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.165 UTC [2715967] STATEMENT:  select pgv_insert('test', 'z', row (11::int, 22::int), false);
2023-07-22 05:33:59.165 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.165 UTC [2715967] STATEMENT:  select pgv_insert('test', 'z', row (22::int, 33::int), false);
2023-07-22 05:33:59.166 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.166 UTC [2715967] STATEMENT:  select pgv_insert('test', 'z', row (33::int, 44::int), false);
2023-07-22 05:33:59.166 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.166 UTC [2715967] STATEMENT:  declare r11_cur cursor for select pgv_select('test', 'x');
2023-07-22 05:33:59.166 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.166 UTC [2715967] STATEMENT:  fetch 2 in r11_cur;
2023-07-22 05:33:59.167 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.167 UTC [2715967] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 05:33:59.167 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.167 UTC [2715967] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 05:33:59.167 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.167 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.168 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.168 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.168 UTC [2715967] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 05:33:59.168 UTC [2715967] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 05:33:59.168 UTC [2715967] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 05:33:59.168 UTC [2715967] STATEMENT:  declare r3_cur cursor for select pgv_select('test', 'z');
2023-07-22 05:33:59.168 UTC [2715967] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:33:59.168 UTC [2715967] STATEMENT:  fetch 2 in r1_cur;
2023-07-22 05:33:59.168 UTC [2715967] ERROR:  cursor "r2_cur" does not exist
2023-07-22 05:33:59.168 UTC [2715967] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 05:33:59.169 UTC [2715967] ERROR:  cursor "r3_cur" does not exist
2023-07-22 05:33:59.169 UTC [2715967] STATEMENT:  fetch 2 in r3_cur;
2023-07-22 05:33:59.169 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.171 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.171 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.171 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.171 UTC [2715967] STATEMENT:  select pgv_set('vars', 'trans_int', 103, true);
2023-07-22 05:33:59.171 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.171 UTC [2715967] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:33:59.172 UTC [2715967] ERROR:  unrecognized package "vars"
2023-07-22 05:33:59.172 UTC [2715967] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:33:59.172 UTC [2715967] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 05:33:59.172 UTC [2715967] STATEMENT:  rollback to sp1;
2023-07-22 05:33:59.173 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.173 UTC [2715967] ERROR:  unrecognized package "vars"
2023-07-22 05:33:59.173 UTC [2715967] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:33:59.176 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.176 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.176 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.176 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.176 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.176 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'int1', 2);
2023-07-22 05:33:59.177 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.177 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 05:33:59.177 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.177 UTC [2715967] STATEMENT:  savepoint sp2;
2023-07-22 05:33:59.177 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.177 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'trans_int1', 4, true);
2023-07-22 05:33:59.177 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.177 UTC [2715967] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 05:33:59.177 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.177 UTC [2715967] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 05:33:59.178 UTC [2715967] ERROR:  savepoint "sp2" does not exist
2023-07-22 05:33:59.178 UTC [2715967] STATEMENT:  rollback to sp2;
2023-07-22 05:33:59.178 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.178 UTC [2715967] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 05:33:59.179 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.179 UTC [2715967] STATEMENT:  select * from pgv_list() order by package, name;
2023-07-22 05:33:59.179 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.179 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'trans_int2', 4, true);
2023-07-22 05:33:59.179 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.179 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'trans_int3', 5, true);
2023-07-22 05:33:59.180 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.180 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'int2', 3);
2023-07-22 05:33:59.181 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.181 UTC [2715967] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 05:33:59.181 UTC [2715967] STATEMENT:  rollback to sp1;
2023-07-22 05:33:59.181 UTC [2715967] ERROR:  unrecognized package "vars"
2023-07-22 05:33:59.181 UTC [2715967] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 05:33:59.182 UTC [2715967] ERROR:  unrecognized package "vars1"
2023-07-22 05:33:59.182 UTC [2715967] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 05:33:59.182 UTC [2715967] ERROR:  unrecognized package "vars1"
2023-07-22 05:33:59.182 UTC [2715967] STATEMENT:  select pgv_get('vars1', 'int2', null::int);
2023-07-22 05:33:59.183 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.185 UTC [2715967] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 05:33:59.185 UTC [2715967] STATEMENT:  begin autonomous;
2023-07-22 05:33:59.185 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.185 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'int1', 1);
2023-07-22 05:33:59.185 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.185 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'trans_int1', 2, true);
2023-07-22 05:33:59.185 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.185 UTC [2715967] STATEMENT:  savepoint sp2;
2023-07-22 05:33:59.185 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.185 UTC [2715967] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 05:33:59.186 UTC [2715967] ERROR:  savepoint "sp2" does not exist
2023-07-22 05:33:59.186 UTC [2715967] STATEMENT:  rollback to sp2;
2023-07-22 05:33:59.186 UTC [2715967] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.186 UTC [2715967] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 05:33:59.187 UTC [2715967] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.212 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.212 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.212 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.212 UTC [2715973] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:33:59.213 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.213 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.213 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.213 UTC [2715973] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:33:59.213 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.213 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.213 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.213 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.213 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.213 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.213 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.213 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.213 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.213 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.214 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.214 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.214 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.214 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.214 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.214 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.214 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.214 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.215 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.215 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.215 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.215 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.215 UTC [2715973] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 05:33:59.215 UTC [2715973] STATEMENT:  SELECT pgv_set('vars', 'int1', 2, true);
2023-07-22 05:33:59.215 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.216 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.216 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.216 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.216 UTC [2715973] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:33:59.216 UTC [2715973] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 05:33:59.216 UTC [2715973] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:33:59.216 UTC [2715973] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 05:33:59.216 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.216 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.216 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.216 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.216 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  cursor "r1_cur" does not exist
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 05:33:59.217 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.217 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.217 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  SELECT pgv_set('vars', 'int1', 2);
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.217 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.217 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  SAVEPOINT sp1;
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  SELECT pgv_set('vars1', 'int1', 0);
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  savepoint "sp1" does not exist
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  ROLLBACK TO sp1;
2023-07-22 05:33:59.217 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.217 UTC [2715973] ERROR:  unrecognized package "vars1"
2023-07-22 05:33:59.217 UTC [2715973] STATEMENT:  SELECT pgv_remove('vars1', 'int1');
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  SAVEPOINT sp1;
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  SELECT pgv_set('vars2', 'any1', 'variable exists'::text, true);
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  SELECT pgv_free();
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  RELEASE sp1;
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  SAVEPOINT sp2;
2023-07-22 05:33:59.218 UTC [2715973] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 05:33:59.218 UTC [2715973] STATEMENT:  SAVEPOINT sp3;
2023-07-22 05:33:59.218 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:33:59.218 UTC [2715973] WARNING:  there is no transaction in progress
2023-07-22 05:34:31.884 UTC [2715934] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:34:32.030 UTC [2715934] LOG:  checkpoint complete: wrote 920 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.045 s, sync=0.034 s, total=0.146 s; sync files=254, longest=0.008 s, average=0.001 s; distance=137736 kB, estimate=137736 kB
2023-07-22 05:35:03.851 UTC [2715934] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:35:03.939 UTC [2715934] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.009 s, total=0.089 s; sync files=4, longest=0.005 s, average=0.003 s; distance=133583 kB, estimate=137320 kB
2023-07-22 05:35:04.007 UTC [2715933] LOG:  received fast shutdown request
2023-07-22 05:35:04.014 UTC [2715933] LOG:  aborting any active transactions
2023-07-22 05:35:04.017 UTC [2715933] LOG:  background worker "logical replication launcher" (PID 2715939) exited with exit code 1
2023-07-22 05:35:04.017 UTC [2715934] LOG:  shutting down
2023-07-22 05:35:04.024 UTC [2715934] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:35:04.053 UTC [2715934] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.036 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123588 kB
2023-07-22 05:35:04.078 UTC [2715933] LOG:  database system is shut down
2023-07-22 05:35:04.790 UTC [2716108] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:35:04.790 UTC [2716108] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:35:04.796 UTC [2716108] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:35:04.806 UTC [2716111] LOG:  database system was shut down at 2023-07-22 05:35:04 UTC
2023-07-22 05:35:04.812 UTC [2716108] LOG:  database system is ready to accept connections
2023-07-22 05:35:04.985 UTC [2716127] ERROR:  could not open relation with OID 16431
2023-07-22 05:35:04.985 UTC [2716127] STATEMENT:  SELECT * FROM pg_visibility_map(16431);
2023-07-22 05:35:04.985 UTC [2716127] ERROR:  could not open relation with OID 16431
2023-07-22 05:35:04.985 UTC [2716127] STATEMENT:  SELECT * FROM pg_visibility_map(16431);
2023-07-22 05:35:04.987 UTC [2716127] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:35:04.987 UTC [2716127] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:35:04.987 UTC [2716127] STATEMENT:  select pg_visibility('test_partitioned', 0);
2023-07-22 05:35:04.988 UTC [2716127] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:35:04.988 UTC [2716127] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:35:04.988 UTC [2716127] STATEMENT:  select pg_visibility_map('test_partitioned');
2023-07-22 05:35:04.988 UTC [2716127] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:35:04.988 UTC [2716127] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:35:04.988 UTC [2716127] STATEMENT:  select pg_visibility_map_summary('test_partitioned');
2023-07-22 05:35:04.988 UTC [2716127] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:35:04.988 UTC [2716127] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:35:04.988 UTC [2716127] STATEMENT:  select pg_check_frozen('test_partitioned');
2023-07-22 05:35:04.988 UTC [2716127] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:35:04.988 UTC [2716127] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:35:04.988 UTC [2716127] STATEMENT:  select pg_truncate_visibility_map('test_partitioned');
2023-07-22 05:35:04.998 UTC [2716127] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:35:04.998 UTC [2716127] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:35:04.998 UTC [2716127] STATEMENT:  select pg_visibility('test_index', 0);
2023-07-22 05:35:04.998 UTC [2716127] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:35:04.998 UTC [2716127] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:35:04.998 UTC [2716127] STATEMENT:  select pg_visibility_map('test_index');
2023-07-22 05:35:04.998 UTC [2716127] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:35:04.998 UTC [2716127] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:35:04.998 UTC [2716127] STATEMENT:  select pg_visibility_map_summary('test_index');
2023-07-22 05:35:04.998 UTC [2716127] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:35:04.998 UTC [2716127] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:35:04.998 UTC [2716127] STATEMENT:  select pg_check_frozen('test_index');
2023-07-22 05:35:04.998 UTC [2716127] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:35:04.998 UTC [2716127] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:35:04.998 UTC [2716127] STATEMENT:  select pg_truncate_visibility_map('test_index');
2023-07-22 05:35:05.000 UTC [2716127] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:35:05.000 UTC [2716127] DETAIL:  This operation is not supported for views.
2023-07-22 05:35:05.000 UTC [2716127] STATEMENT:  select pg_visibility('test_view', 0);
2023-07-22 05:35:05.000 UTC [2716127] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:35:05.000 UTC [2716127] DETAIL:  This operation is not supported for views.
2023-07-22 05:35:05.000 UTC [2716127] STATEMENT:  select pg_visibility_map('test_view');
2023-07-22 05:35:05.000 UTC [2716127] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:35:05.000 UTC [2716127] DETAIL:  This operation is not supported for views.
2023-07-22 05:35:05.000 UTC [2716127] STATEMENT:  select pg_visibility_map_summary('test_view');
2023-07-22 05:35:05.000 UTC [2716127] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:35:05.000 UTC [2716127] DETAIL:  This operation is not supported for views.
2023-07-22 05:35:05.000 UTC [2716127] STATEMENT:  select pg_check_frozen('test_view');
2023-07-22 05:35:05.000 UTC [2716127] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:35:05.000 UTC [2716127] DETAIL:  This operation is not supported for views.
2023-07-22 05:35:05.000 UTC [2716127] STATEMENT:  select pg_truncate_visibility_map('test_view');
2023-07-22 05:35:05.004 UTC [2716127] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:35:05.004 UTC [2716127] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:35:05.004 UTC [2716127] STATEMENT:  select pg_visibility('test_sequence', 0);
2023-07-22 05:35:05.004 UTC [2716127] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:35:05.004 UTC [2716127] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:35:05.004 UTC [2716127] STATEMENT:  select pg_visibility_map('test_sequence');
2023-07-22 05:35:05.005 UTC [2716127] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:35:05.005 UTC [2716127] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:35:05.005 UTC [2716127] STATEMENT:  select pg_visibility_map_summary('test_sequence');
2023-07-22 05:35:05.005 UTC [2716127] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:35:05.005 UTC [2716127] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:35:05.005 UTC [2716127] STATEMENT:  select pg_check_frozen('test_sequence');
2023-07-22 05:35:05.006 UTC [2716127] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:35:05.006 UTC [2716127] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:35:05.006 UTC [2716127] STATEMENT:  select pg_truncate_visibility_map('test_sequence');
2023-07-22 05:35:05.012 UTC [2716127] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:35:05.012 UTC [2716127] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:35:05.012 UTC [2716127] STATEMENT:  select pg_visibility('test_foreign_table', 0);
2023-07-22 05:35:05.012 UTC [2716127] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:35:05.012 UTC [2716127] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:35:05.012 UTC [2716127] STATEMENT:  select pg_visibility_map('test_foreign_table');
2023-07-22 05:35:05.012 UTC [2716127] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:35:05.012 UTC [2716127] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:35:05.012 UTC [2716127] STATEMENT:  select pg_visibility_map_summary('test_foreign_table');
2023-07-22 05:35:05.013 UTC [2716127] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:35:05.013 UTC [2716127] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:35:05.013 UTC [2716127] STATEMENT:  select pg_check_frozen('test_foreign_table');
2023-07-22 05:35:05.013 UTC [2716127] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:35:05.013 UTC [2716127] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:35:05.013 UTC [2716127] STATEMENT:  select pg_truncate_visibility_map('test_foreign_table');
2023-07-22 05:35:05.171 UTC [2716109] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:35:05.217 UTC [2716109] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.014 s, sync=0.013 s, total=0.046 s; sync files=7, longest=0.007 s, average=0.002 s; distance=4415 kB, estimate=4415 kB
2023-07-22 05:35:05.353 UTC [2716142] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:35:05.353 UTC [2716142] STATEMENT:  select gen_salt('foo');
2023-07-22 05:35:05.354 UTC [2716142] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:35:05.354 UTC [2716142] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:35:05.354 UTC [2716142] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:35:05.354 UTC [2716142] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:35:05.354 UTC [2716142] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:35:05.354 UTC [2716142] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:35:05.395 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.395 UTC [2716162] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:35:05.395 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.395 UTC [2716162] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:35:05.395 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.395 UTC [2716162] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Key was too big
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Key was too big
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:35:05.396 UTC [2716162] ERROR:  encrypt error: Key was too big
2023-07-22 05:35:05.396 UTC [2716162] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt error: Key was too big
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:35:05.397 UTC [2716162] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.397 UTC [2716162] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:35:05.407 UTC [2716168] ERROR:  encrypt error: Encryption failed
2023-07-22 05:35:05.407 UTC [2716168] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:35:05.408 UTC [2716168] ERROR:  decrypt error: Decryption failed
2023-07-22 05:35:05.408 UTC [2716168] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:35:05.408 UTC [2716168] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:35:05.408 UTC [2716168] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:35:05.426 UTC [2716176] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.426 UTC [2716176] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:35:05.427 UTC [2716176] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.427 UTC [2716176] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:35:05.427 UTC [2716176] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.427 UTC [2716176] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:35:05.427 UTC [2716176] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.427 UTC [2716176] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:35:05.427 UTC [2716176] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:35:05.427 UTC [2716176] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:35:05.427 UTC [2716176] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:35:05.427 UTC [2716176] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:35:05.428 UTC [2716176] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.428 UTC [2716176] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:35:05.428 UTC [2716176] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.428 UTC [2716176] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:35:05.446 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.446 UTC [2716186] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:35:05.446 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.446 UTC [2716186] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:35:05.446 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.446 UTC [2716186] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:35:05.447 UTC [2716186] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:35:05.447 UTC [2716186] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:35:05.457 UTC [2716192] ERROR:  invalid salt
2023-07-22 05:35:05.457 UTC [2716192] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:35:05.589 UTC [2716200] ERROR:  invalid salt
2023-07-22 05:35:05.589 UTC [2716200] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:35:05.589 UTC [2716200] ERROR:  invalid salt
2023-07-22 05:35:05.589 UTC [2716200] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:35:05.590 UTC [2716200] ERROR:  invalid salt
2023-07-22 05:35:05.590 UTC [2716200] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:35:05.654 UTC [2716204] ERROR:  invalid salt
2023-07-22 05:35:05.654 UTC [2716204] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:35:05.654 UTC [2716204] ERROR:  crypt(3) returned NULL
2023-07-22 05:35:05.654 UTC [2716204] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:35:05.654 UTC [2716204] ERROR:  crypt(3) returned NULL
2023-07-22 05:35:05.654 UTC [2716204] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:35:05.705 UTC [2716208] ERROR:  Corrupt ascii-armor
2023-07-22 05:35:05.705 UTC [2716208] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:35:05.706 UTC [2716208] ERROR:  Corrupt ascii-armor
2023-07-22 05:35:05.706 UTC [2716208] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:35:05.706 UTC [2716208] ERROR:  Corrupt ascii-armor
2023-07-22 05:35:05.706 UTC [2716208] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:35:05.716 UTC [2716208] ERROR:  mismatched array dimensions
2023-07-22 05:35:05.716 UTC [2716208] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:35:05.717 UTC [2716208] ERROR:  mismatched array dimensions
2023-07-22 05:35:05.717 UTC [2716208] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:35:05.717 UTC [2716208] ERROR:  wrong number of array subscripts
2023-07-22 05:35:05.717 UTC [2716208] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:35:05.717 UTC [2716208] ERROR:  wrong number of array subscripts
2023-07-22 05:35:05.717 UTC [2716208] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:35:05.718 UTC [2716208] ERROR:  null value not allowed for header key
2023-07-22 05:35:05.718 UTC [2716208] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:35:05.718 UTC [2716208] ERROR:  null value not allowed for header value
2023-07-22 05:35:05.718 UTC [2716208] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:35:05.720 UTC [2716208] ERROR:  header key must not contain newlines
2023-07-22 05:35:05.720 UTC [2716208] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:35:05.720 UTC [2716208] ERROR:  header value must not contain newlines
2023-07-22 05:35:05.720 UTC [2716208] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:35:05.720 UTC [2716208] ERROR:  header key must not contain ": "
2023-07-22 05:35:05.720 UTC [2716208] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:35:05.748 UTC [2716212] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:05.748 UTC [2716212] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:35:05.784 UTC [2716212] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:05.784 UTC [2716212] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:35:05.786 UTC [2716212] ERROR:  Not text data
2023-07-22 05:35:05.786 UTC [2716212] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:35:05.787 UTC [2716212] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:05.787 UTC [2716212] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:35:05.787 UTC [2716212] ERROR:  Unsupported compression algorithm
2023-07-22 05:35:05.787 UTC [2716212] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:35:05.802 UTC [2716218] ERROR:  Not text data
2023-07-22 05:35:05.802 UTC [2716218] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:35:06.246 UTC [2716228] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:06.246 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:35:06.253 UTC [2716228] ERROR:  Wrong key
2023-07-22 05:35:06.253 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:35:06.253 UTC [2716228] ERROR:  No encryption key found
2023-07-22 05:35:06.253 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:35:06.254 UTC [2716228] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:06.254 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:35:06.258 UTC [2716228] ERROR:  Need password for secret key
2023-07-22 05:35:06.258 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:35:06.258 UTC [2716228] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:06.258 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:35:06.262 UTC [2716228] ERROR:  Wrong key or corrupt data
2023-07-22 05:35:06.262 UTC [2716228] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:35:06.290 UTC [2716234] ERROR:  No encryption key found
2023-07-22 05:35:06.290 UTC [2716234] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:35:06.291 UTC [2716234] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:35:06.291 UTC [2716234] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:35:06.292 UTC [2716234] ERROR:  Not text data
2023-07-22 05:35:06.292 UTC [2716234] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:35:06.303 UTC [2716238] ERROR:  No encryption key found
2023-07-22 05:35:06.303 UTC [2716238] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:35:06.304 UTC [2716238] ERROR:  No encryption key found
2023-07-22 05:35:06.304 UTC [2716238] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:35:38.752 UTC [2716109] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:35:38.861 UTC [2716109] LOG:  checkpoint complete: wrote 926 buffers (5.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.024 s, sync=0.033 s, total=0.109 s; sync files=260, longest=0.013 s, average=0.001 s; distance=138993 kB, estimate=138993 kB
2023-07-22 05:36:10.311 UTC [2716109] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:36:10.360 UTC [2716109] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136805 kB, estimate=138774 kB
2023-07-22 05:36:10.424 UTC [2716108] LOG:  received fast shutdown request
2023-07-22 05:36:10.427 UTC [2716108] LOG:  aborting any active transactions
2023-07-22 05:36:10.428 UTC [2716108] LOG:  background worker "logical replication launcher" (PID 2716114) exited with exit code 1
2023-07-22 05:36:10.428 UTC [2716109] LOG:  shutting down
2023-07-22 05:36:10.431 UTC [2716109] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:36:10.448 UTC [2716109] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=124897 kB
2023-07-22 05:36:10.468 UTC [2716108] LOG:  database system is shut down
2023-07-22 05:36:11.145 UTC [2716404] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:36:11.145 UTC [2716404] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:36:11.151 UTC [2716404] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:36:11.161 UTC [2716407] LOG:  database system was shut down at 2023-07-22 05:36:10 UTC
2023-07-22 05:36:11.172 UTC [2716404] LOG:  database system is ready to accept connections
2023-07-22 05:36:11.381 UTC [2716426] ERROR:  could not open relation with OID 16438
2023-07-22 05:36:11.381 UTC [2716426] STATEMENT:  SELECT * FROM pg_visibility_map(16438);
2023-07-22 05:36:11.383 UTC [2716426] ERROR:  could not open relation with OID 16438
2023-07-22 05:36:11.383 UTC [2716426] STATEMENT:  SELECT * FROM pg_visibility_map(16438);
2023-07-22 05:36:11.386 UTC [2716426] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:36:11.386 UTC [2716426] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:36:11.386 UTC [2716426] STATEMENT:  select pg_visibility('test_partitioned', 0);
2023-07-22 05:36:11.386 UTC [2716426] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:36:11.386 UTC [2716426] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:36:11.386 UTC [2716426] STATEMENT:  select pg_visibility_map('test_partitioned');
2023-07-22 05:36:11.387 UTC [2716426] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:36:11.387 UTC [2716426] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:36:11.387 UTC [2716426] STATEMENT:  select pg_visibility_map_summary('test_partitioned');
2023-07-22 05:36:11.387 UTC [2716426] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:36:11.387 UTC [2716426] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:36:11.387 UTC [2716426] STATEMENT:  select pg_check_frozen('test_partitioned');
2023-07-22 05:36:11.387 UTC [2716426] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 05:36:11.387 UTC [2716426] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:36:11.387 UTC [2716426] STATEMENT:  select pg_truncate_visibility_map('test_partitioned');
2023-07-22 05:36:11.398 UTC [2716426] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:36:11.398 UTC [2716426] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:36:11.398 UTC [2716426] STATEMENT:  select pg_visibility('test_index', 0);
2023-07-22 05:36:11.398 UTC [2716426] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:36:11.398 UTC [2716426] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:36:11.398 UTC [2716426] STATEMENT:  select pg_visibility_map('test_index');
2023-07-22 05:36:11.399 UTC [2716426] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:36:11.399 UTC [2716426] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:36:11.399 UTC [2716426] STATEMENT:  select pg_visibility_map_summary('test_index');
2023-07-22 05:36:11.399 UTC [2716426] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:36:11.399 UTC [2716426] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:36:11.399 UTC [2716426] STATEMENT:  select pg_check_frozen('test_index');
2023-07-22 05:36:11.399 UTC [2716426] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 05:36:11.399 UTC [2716426] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:36:11.399 UTC [2716426] STATEMENT:  select pg_truncate_visibility_map('test_index');
2023-07-22 05:36:11.402 UTC [2716426] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:36:11.402 UTC [2716426] DETAIL:  This operation is not supported for views.
2023-07-22 05:36:11.402 UTC [2716426] STATEMENT:  select pg_visibility('test_view', 0);
2023-07-22 05:36:11.402 UTC [2716426] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:36:11.402 UTC [2716426] DETAIL:  This operation is not supported for views.
2023-07-22 05:36:11.402 UTC [2716426] STATEMENT:  select pg_visibility_map('test_view');
2023-07-22 05:36:11.402 UTC [2716426] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:36:11.402 UTC [2716426] DETAIL:  This operation is not supported for views.
2023-07-22 05:36:11.402 UTC [2716426] STATEMENT:  select pg_visibility_map_summary('test_view');
2023-07-22 05:36:11.403 UTC [2716426] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:36:11.403 UTC [2716426] DETAIL:  This operation is not supported for views.
2023-07-22 05:36:11.403 UTC [2716426] STATEMENT:  select pg_check_frozen('test_view');
2023-07-22 05:36:11.403 UTC [2716426] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 05:36:11.403 UTC [2716426] DETAIL:  This operation is not supported for views.
2023-07-22 05:36:11.403 UTC [2716426] STATEMENT:  select pg_truncate_visibility_map('test_view');
2023-07-22 05:36:11.405 UTC [2716426] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:36:11.405 UTC [2716426] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:36:11.405 UTC [2716426] STATEMENT:  select pg_visibility('test_sequence', 0);
2023-07-22 05:36:11.405 UTC [2716426] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:36:11.405 UTC [2716426] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:36:11.405 UTC [2716426] STATEMENT:  select pg_visibility_map('test_sequence');
2023-07-22 05:36:11.406 UTC [2716426] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:36:11.406 UTC [2716426] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:36:11.406 UTC [2716426] STATEMENT:  select pg_visibility_map_summary('test_sequence');
2023-07-22 05:36:11.406 UTC [2716426] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:36:11.406 UTC [2716426] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:36:11.406 UTC [2716426] STATEMENT:  select pg_check_frozen('test_sequence');
2023-07-22 05:36:11.406 UTC [2716426] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 05:36:11.406 UTC [2716426] DETAIL:  This operation is not supported for sequences.
2023-07-22 05:36:11.406 UTC [2716426] STATEMENT:  select pg_truncate_visibility_map('test_sequence');
2023-07-22 05:36:11.414 UTC [2716426] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:36:11.414 UTC [2716426] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:36:11.414 UTC [2716426] STATEMENT:  select pg_visibility('test_foreign_table', 0);
2023-07-22 05:36:11.414 UTC [2716426] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:36:11.414 UTC [2716426] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:36:11.414 UTC [2716426] STATEMENT:  select pg_visibility_map('test_foreign_table');
2023-07-22 05:36:11.415 UTC [2716426] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:36:11.415 UTC [2716426] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:36:11.415 UTC [2716426] STATEMENT:  select pg_visibility_map_summary('test_foreign_table');
2023-07-22 05:36:11.415 UTC [2716426] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:36:11.415 UTC [2716426] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:36:11.415 UTC [2716426] STATEMENT:  select pg_check_frozen('test_foreign_table');
2023-07-22 05:36:11.416 UTC [2716426] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 05:36:11.416 UTC [2716426] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:36:11.416 UTC [2716426] STATEMENT:  select pg_truncate_visibility_map('test_foreign_table');
2023-07-22 05:36:44.058 UTC [2716405] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:36:44.168 UTC [2716405] LOG:  checkpoint complete: wrote 938 buffers (5.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.023 s, sync=0.032 s, total=0.110 s; sync files=269, longest=0.014 s, average=0.001 s; distance=139973 kB, estimate=139973 kB
2023-07-22 05:37:15.944 UTC [2716405] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:37:16.027 UTC [2716405] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.009 s, total=0.083 s; sync files=4, longest=0.006 s, average=0.003 s; distance=134350 kB, estimate=139410 kB
2023-07-22 05:37:16.071 UTC [2716404] LOG:  received fast shutdown request
2023-07-22 05:37:16.079 UTC [2716404] LOG:  aborting any active transactions
2023-07-22 05:37:16.080 UTC [2716404] LOG:  background worker "logical replication launcher" (PID 2716410) exited with exit code 1
2023-07-22 05:37:16.080 UTC [2716405] LOG:  shutting down
2023-07-22 05:37:16.087 UTC [2716405] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:37:16.112 UTC [2716405] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.033 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=125469 kB
2023-07-22 05:37:16.134 UTC [2716404] LOG:  database system is shut down
2023-07-22 05:37:16.932 UTC [2716559] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:37:16.932 UTC [2716559] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:37:16.945 UTC [2716559] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:37:16.956 UTC [2716562] LOG:  database system was shut down at 2023-07-22 05:37:16 UTC
2023-07-22 05:37:16.966 UTC [2716559] LOG:  database system is ready to accept connections
2023-07-22 05:37:16.967 UTC [2716565] LOG:  pg_wait_sampling collector started
2023-07-22 05:37:17.296 UTC [2716600] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:37:17.296 UTC [2716600] STATEMENT:  select gen_salt('foo');
2023-07-22 05:37:17.296 UTC [2716600] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:37:17.296 UTC [2716600] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:37:17.296 UTC [2716600] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:37:17.296 UTC [2716600] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:37:17.297 UTC [2716600] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:37:17.297 UTC [2716600] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:37:17.351 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.351 UTC [2716620] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:37:17.351 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.351 UTC [2716620] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:37:17.351 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.351 UTC [2716620] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:37:17.351 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.351 UTC [2716620] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:37:17.352 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.352 UTC [2716620] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:37:17.352 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.352 UTC [2716620] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:37:17.352 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.352 UTC [2716620] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:37:17.352 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.352 UTC [2716620] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:37:17.352 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.352 UTC [2716620] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:37:17.352 UTC [2716620] ERROR:  encrypt error: Key was too big
2023-07-22 05:37:17.352 UTC [2716620] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Key was too big
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Key was too big
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Key was too big
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:37:17.353 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.353 UTC [2716620] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:37:17.354 UTC [2716620] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.354 UTC [2716620] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:37:17.369 UTC [2716626] ERROR:  encrypt error: Encryption failed
2023-07-22 05:37:17.369 UTC [2716626] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:37:17.371 UTC [2716626] ERROR:  decrypt error: Decryption failed
2023-07-22 05:37:17.371 UTC [2716626] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:37:17.371 UTC [2716626] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:37:17.371 UTC [2716626] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:37:17.398 UTC [2716634] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.398 UTC [2716634] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:37:17.398 UTC [2716634] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.398 UTC [2716634] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:37:17.398 UTC [2716634] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.398 UTC [2716634] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:37:17.398 UTC [2716634] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.398 UTC [2716634] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:37:17.399 UTC [2716634] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:37:17.399 UTC [2716634] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:37:17.399 UTC [2716634] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:37:17.399 UTC [2716634] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:37:17.399 UTC [2716634] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.399 UTC [2716634] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:37:17.399 UTC [2716634] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.399 UTC [2716634] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:37:17.427 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.427 UTC [2716644] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:37:17.427 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.427 UTC [2716644] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:37:17.427 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.427 UTC [2716644] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:37:17.427 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.427 UTC [2716644] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:37:17.428 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.428 UTC [2716644] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:37:17.428 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.428 UTC [2716644] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:37:17.428 UTC [2716644] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:37:17.428 UTC [2716644] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:37:17.428 UTC [2716644] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:37:17.428 UTC [2716644] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:37:17.429 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.429 UTC [2716644] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:37:17.429 UTC [2716644] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:37:17.429 UTC [2716644] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:37:17.444 UTC [2716650] ERROR:  invalid salt
2023-07-22 05:37:17.444 UTC [2716650] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:37:17.585 UTC [2716658] ERROR:  invalid salt
2023-07-22 05:37:17.585 UTC [2716658] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:37:17.585 UTC [2716658] ERROR:  invalid salt
2023-07-22 05:37:17.585 UTC [2716658] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:37:17.585 UTC [2716658] ERROR:  invalid salt
2023-07-22 05:37:17.585 UTC [2716658] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:37:17.665 UTC [2716662] ERROR:  invalid salt
2023-07-22 05:37:17.665 UTC [2716662] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:37:17.665 UTC [2716662] ERROR:  crypt(3) returned NULL
2023-07-22 05:37:17.665 UTC [2716662] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:37:17.665 UTC [2716662] ERROR:  crypt(3) returned NULL
2023-07-22 05:37:17.665 UTC [2716662] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:37:17.726 UTC [2716666] ERROR:  Corrupt ascii-armor
2023-07-22 05:37:17.726 UTC [2716666] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:37:17.727 UTC [2716666] ERROR:  Corrupt ascii-armor
2023-07-22 05:37:17.727 UTC [2716666] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:37:17.727 UTC [2716666] ERROR:  Corrupt ascii-armor
2023-07-22 05:37:17.727 UTC [2716666] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:37:17.737 UTC [2716666] ERROR:  mismatched array dimensions
2023-07-22 05:37:17.737 UTC [2716666] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:37:17.737 UTC [2716666] ERROR:  mismatched array dimensions
2023-07-22 05:37:17.737 UTC [2716666] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:37:17.738 UTC [2716666] ERROR:  wrong number of array subscripts
2023-07-22 05:37:17.738 UTC [2716666] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:37:17.738 UTC [2716666] ERROR:  wrong number of array subscripts
2023-07-22 05:37:17.738 UTC [2716666] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:37:17.738 UTC [2716666] ERROR:  null value not allowed for header key
2023-07-22 05:37:17.738 UTC [2716666] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:37:17.739 UTC [2716666] ERROR:  null value not allowed for header value
2023-07-22 05:37:17.739 UTC [2716666] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:37:17.740 UTC [2716666] ERROR:  header key must not contain newlines
2023-07-22 05:37:17.740 UTC [2716666] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:37:17.740 UTC [2716666] ERROR:  header value must not contain newlines
2023-07-22 05:37:17.740 UTC [2716666] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:37:17.741 UTC [2716666] ERROR:  header key must not contain ": "
2023-07-22 05:37:17.741 UTC [2716666] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:37:17.768 UTC [2716670] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:17.768 UTC [2716670] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:37:17.805 UTC [2716670] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:17.805 UTC [2716670] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:37:17.807 UTC [2716670] ERROR:  Not text data
2023-07-22 05:37:17.807 UTC [2716670] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:37:17.807 UTC [2716670] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:17.807 UTC [2716670] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:37:17.808 UTC [2716670] ERROR:  Unsupported compression algorithm
2023-07-22 05:37:17.808 UTC [2716670] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:37:17.823 UTC [2716676] ERROR:  Not text data
2023-07-22 05:37:17.823 UTC [2716676] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:37:18.292 UTC [2716684] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:18.292 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:37:18.312 UTC [2716684] ERROR:  Wrong key
2023-07-22 05:37:18.312 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:37:18.313 UTC [2716684] ERROR:  No encryption key found
2023-07-22 05:37:18.313 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:37:18.315 UTC [2716684] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:18.315 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:37:18.321 UTC [2716684] ERROR:  Need password for secret key
2023-07-22 05:37:18.321 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:37:18.322 UTC [2716684] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:18.322 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:37:18.326 UTC [2716684] ERROR:  Wrong key or corrupt data
2023-07-22 05:37:18.326 UTC [2716684] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:37:18.350 UTC [2716690] ERROR:  No encryption key found
2023-07-22 05:37:18.350 UTC [2716690] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:37:18.350 UTC [2716690] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:37:18.350 UTC [2716690] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:37:18.352 UTC [2716690] ERROR:  Not text data
2023-07-22 05:37:18.352 UTC [2716690] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:37:18.361 UTC [2716694] ERROR:  No encryption key found
2023-07-22 05:37:18.361 UTC [2716694] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:37:18.362 UTC [2716694] ERROR:  No encryption key found
2023-07-22 05:37:18.362 UTC [2716694] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:37:50.820 UTC [2716560] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:37:50.936 UTC [2716560] LOG:  checkpoint complete: wrote 1834 buffers (11.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.037 s, sync=0.037 s, total=0.117 s; sync files=506, longest=0.005 s, average=0.001 s; distance=142348 kB, estimate=142348 kB
2023-07-22 05:38:22.345 UTC [2716560] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:38:22.414 UTC [2716560] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.007 s, total=0.070 s; sync files=4, longest=0.005 s, average=0.002 s; distance=136887 kB, estimate=141802 kB
2023-07-22 05:38:22.480 UTC [2716559] LOG:  received fast shutdown request
2023-07-22 05:38:22.485 UTC [2716559] LOG:  aborting any active transactions
2023-07-22 05:38:22.485 UTC [2716565] LOG:  pg_wait_sampling collector shutting down
2023-07-22 05:38:22.486 UTC [2716559] LOG:  background worker "logical replication launcher" (PID 2716566) exited with exit code 1
2023-07-22 05:38:22.487 UTC [2716560] LOG:  shutting down
2023-07-22 05:38:22.489 UTC [2716560] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:38:22.510 UTC [2716560] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.023 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127622 kB
2023-07-22 05:38:22.531 UTC [2716559] LOG:  database system is shut down
2023-07-22 05:38:23.375 UTC [2716818] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:38:23.375 UTC [2716818] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:38:23.381 UTC [2716818] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:38:23.391 UTC [2716821] LOG:  database system was shut down at 2023-07-22 05:38:23 UTC
2023-07-22 05:38:23.397 UTC [2716818] LOG:  database system is ready to accept connections
2023-07-22 05:38:23.397 UTC [2716824] LOG:  pg_wait_sampling collector started
2023-07-22 05:38:56.061 UTC [2716819] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:38:56.175 UTC [2716819] LOG:  checkpoint complete: wrote 921 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.040 s, sync=0.026 s, total=0.114 s; sync files=252, longest=0.007 s, average=0.001 s; distance=139220 kB, estimate=139220 kB
2023-07-22 05:39:27.994 UTC [2716819] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:39:28.080 UTC [2716819] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.006 s, total=0.086 s; sync files=4, longest=0.005 s, average=0.002 s; distance=135177 kB, estimate=138815 kB
2023-07-22 05:39:28.146 UTC [2716818] LOG:  received fast shutdown request
2023-07-22 05:39:28.151 UTC [2716818] LOG:  aborting any active transactions
2023-07-22 05:39:28.152 UTC [2716824] LOG:  pg_wait_sampling collector shutting down
2023-07-22 05:39:28.153 UTC [2716818] LOG:  background worker "logical replication launcher" (PID 2716825) exited with exit code 1
2023-07-22 05:39:28.153 UTC [2716819] LOG:  shutting down
2023-07-22 05:39:28.158 UTC [2716819] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:39:28.180 UTC [2716819] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.028 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=124934 kB
2023-07-22 05:39:28.206 UTC [2716818] LOG:  database system is shut down
2023-07-22 05:39:29.046 UTC [2716979] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:39:29.046 UTC [2716979] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:39:29.059 UTC [2716979] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:39:29.069 UTC [2716982] LOG:  database system was shut down at 2023-07-22 05:39:28 UTC
2023-07-22 05:39:29.077 UTC [2716979] LOG:  database system is ready to accept connections
2023-07-22 05:39:29.224 UTC [2716998] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 05:39:29.224 UTC [2716998] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_records_info('0/18E8098', '0/18E7FA0');
2023-07-22 05:39:29.225 UTC [2716998] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 05:39:29.225 UTC [2716998] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_stats('0/18E8098', '0/18E7FA0');
2023-07-22 05:39:29.304 UTC [2716980] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:39:29.351 UTC [2716980] LOG:  checkpoint complete: wrote 22 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.013 s, sync=0.016 s, total=0.048 s; sync files=18, longest=0.006 s, average=0.001 s; distance=4201 kB, estimate=4201 kB
2023-07-22 05:39:29.483 UTC [2717013] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:39:29.483 UTC [2717013] STATEMENT:  select gen_salt('foo');
2023-07-22 05:39:29.483 UTC [2717013] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:39:29.483 UTC [2717013] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:39:29.483 UTC [2717013] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:39:29.483 UTC [2717013] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:39:29.483 UTC [2717013] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:39:29.483 UTC [2717013] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:39:29.524 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.524 UTC [2717033] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:39:29.524 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.524 UTC [2717033] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:39:29.524 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.524 UTC [2717033] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:39:29.524 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.524 UTC [2717033] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:39:29.524 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.524 UTC [2717033] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Key was too big
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Key was too big
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Key was too big
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Key was too big
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:39:29.525 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.525 UTC [2717033] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:39:29.526 UTC [2717033] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:39:29.526 UTC [2717033] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:39:29.526 UTC [2717033] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:39:29.526 UTC [2717033] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:39:29.526 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.526 UTC [2717033] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:39:29.526 UTC [2717033] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.526 UTC [2717033] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:39:29.535 UTC [2717039] ERROR:  encrypt error: Encryption failed
2023-07-22 05:39:29.535 UTC [2717039] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:39:29.536 UTC [2717039] ERROR:  decrypt error: Decryption failed
2023-07-22 05:39:29.536 UTC [2717039] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:39:29.536 UTC [2717039] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:39:29.536 UTC [2717039] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:39:29.553 UTC [2717047] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.553 UTC [2717047] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:39:29.553 UTC [2717047] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.553 UTC [2717047] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:39:29.553 UTC [2717047] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.553 UTC [2717047] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:39:29.553 UTC [2717047] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.553 UTC [2717047] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:39:29.554 UTC [2717047] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:39:29.554 UTC [2717047] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:39:29.554 UTC [2717047] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:39:29.554 UTC [2717047] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:39:29.554 UTC [2717047] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.554 UTC [2717047] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:39:29.554 UTC [2717047] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.554 UTC [2717047] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:39:29.571 UTC [2717057] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:39:29.571 UTC [2717057] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:39:29.572 UTC [2717057] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:39:29.572 UTC [2717057] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:39:29.572 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.572 UTC [2717057] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:39:29.572 UTC [2717057] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:39:29.572 UTC [2717057] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:39:29.581 UTC [2717063] ERROR:  invalid salt
2023-07-22 05:39:29.581 UTC [2717063] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:39:29.716 UTC [2717071] ERROR:  invalid salt
2023-07-22 05:39:29.716 UTC [2717071] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:39:29.717 UTC [2717071] ERROR:  invalid salt
2023-07-22 05:39:29.717 UTC [2717071] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:39:29.717 UTC [2717071] ERROR:  invalid salt
2023-07-22 05:39:29.717 UTC [2717071] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:39:29.784 UTC [2717075] ERROR:  invalid salt
2023-07-22 05:39:29.784 UTC [2717075] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:39:29.784 UTC [2717075] ERROR:  crypt(3) returned NULL
2023-07-22 05:39:29.784 UTC [2717075] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:39:29.784 UTC [2717075] ERROR:  crypt(3) returned NULL
2023-07-22 05:39:29.784 UTC [2717075] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:39:29.833 UTC [2717079] ERROR:  Corrupt ascii-armor
2023-07-22 05:39:29.833 UTC [2717079] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:39:29.834 UTC [2717079] ERROR:  Corrupt ascii-armor
2023-07-22 05:39:29.834 UTC [2717079] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:39:29.834 UTC [2717079] ERROR:  Corrupt ascii-armor
2023-07-22 05:39:29.834 UTC [2717079] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:39:29.844 UTC [2717079] ERROR:  mismatched array dimensions
2023-07-22 05:39:29.844 UTC [2717079] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:39:29.844 UTC [2717079] ERROR:  mismatched array dimensions
2023-07-22 05:39:29.844 UTC [2717079] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:39:29.845 UTC [2717079] ERROR:  wrong number of array subscripts
2023-07-22 05:39:29.845 UTC [2717079] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:39:29.845 UTC [2717079] ERROR:  wrong number of array subscripts
2023-07-22 05:39:29.845 UTC [2717079] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:39:29.846 UTC [2717079] ERROR:  null value not allowed for header key
2023-07-22 05:39:29.846 UTC [2717079] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:39:29.846 UTC [2717079] ERROR:  null value not allowed for header value
2023-07-22 05:39:29.846 UTC [2717079] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:39:29.847 UTC [2717079] ERROR:  header key must not contain newlines
2023-07-22 05:39:29.847 UTC [2717079] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:39:29.848 UTC [2717079] ERROR:  header value must not contain newlines
2023-07-22 05:39:29.848 UTC [2717079] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:39:29.848 UTC [2717079] ERROR:  header key must not contain ": "
2023-07-22 05:39:29.848 UTC [2717079] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:39:29.876 UTC [2717083] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:29.876 UTC [2717083] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:39:29.913 UTC [2717083] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:29.913 UTC [2717083] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:39:29.916 UTC [2717083] ERROR:  Not text data
2023-07-22 05:39:29.916 UTC [2717083] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:39:29.917 UTC [2717083] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:29.917 UTC [2717083] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:39:29.917 UTC [2717083] ERROR:  Unsupported compression algorithm
2023-07-22 05:39:29.917 UTC [2717083] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:39:29.932 UTC [2717089] ERROR:  Not text data
2023-07-22 05:39:29.932 UTC [2717089] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:39:30.384 UTC [2717097] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:30.384 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:39:30.405 UTC [2717097] ERROR:  Wrong key
2023-07-22 05:39:30.405 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:39:30.406 UTC [2717097] ERROR:  No encryption key found
2023-07-22 05:39:30.406 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:39:30.408 UTC [2717097] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:30.408 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:39:30.415 UTC [2717097] ERROR:  Need password for secret key
2023-07-22 05:39:30.415 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:39:30.416 UTC [2717097] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:30.416 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:39:30.421 UTC [2717097] ERROR:  Wrong key or corrupt data
2023-07-22 05:39:30.421 UTC [2717097] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:39:30.445 UTC [2717103] ERROR:  No encryption key found
2023-07-22 05:39:30.445 UTC [2717103] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:39:30.446 UTC [2717103] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:39:30.446 UTC [2717103] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:39:30.447 UTC [2717103] ERROR:  Not text data
2023-07-22 05:39:30.447 UTC [2717103] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:39:30.456 UTC [2717107] ERROR:  No encryption key found
2023-07-22 05:39:30.456 UTC [2717107] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:39:30.457 UTC [2717107] ERROR:  No encryption key found
2023-07-22 05:39:30.457 UTC [2717107] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:40:02.200 UTC [2716980] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:40:02.415 UTC [2716980] LOG:  checkpoint complete: wrote 526 buffers (3.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.036 s, sync=0.043 s, total=0.215 s; sync files=260, longest=0.009 s, average=0.001 s; distance=141430 kB, estimate=141430 kB
2023-07-22 05:40:34.207 UTC [2716980] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:40:34.302 UTC [2716980] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.013 s, total=0.096 s; sync files=4, longest=0.008 s, average=0.004 s; distance=133859 kB, estimate=140673 kB
2023-07-22 05:40:34.366 UTC [2716979] LOG:  received fast shutdown request
2023-07-22 05:40:34.371 UTC [2716979] LOG:  aborting any active transactions
2023-07-22 05:40:34.372 UTC [2716979] LOG:  background worker "logical replication launcher" (PID 2716985) exited with exit code 1
2023-07-22 05:40:34.373 UTC [2716980] LOG:  shutting down
2023-07-22 05:40:34.378 UTC [2716980] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:40:34.409 UTC [2716980] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.036 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126605 kB
2023-07-22 05:40:34.432 UTC [2716979] LOG:  database system is shut down
2023-07-22 05:40:35.241 UTC [2717233] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:40:35.241 UTC [2717233] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:40:35.252 UTC [2717233] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:40:35.266 UTC [2717236] LOG:  database system was shut down at 2023-07-22 05:40:34 UTC
2023-07-22 05:40:35.274 UTC [2717233] LOG:  database system is ready to accept connections
2023-07-22 05:40:35.495 UTC [2717255] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 05:40:35.495 UTC [2717255] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_records_info('0/18EA710', '0/18EA668');
2023-07-22 05:40:35.496 UTC [2717255] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 05:40:35.496 UTC [2717255] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_stats('0/18EA710', '0/18EA668');
2023-07-22 05:41:08.170 UTC [2717234] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:41:08.297 UTC [2717234] LOG:  checkpoint complete: wrote 931 buffers (5.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.029 s, sync=0.035 s, total=0.127 s; sync files=264, longest=0.011 s, average=0.001 s; distance=137485 kB, estimate=137485 kB
2023-07-22 05:41:40.033 UTC [2717234] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:41:40.086 UTC [2717234] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.005 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.002 s; distance=133276 kB, estimate=137064 kB
2023-07-22 05:41:40.150 UTC [2717233] LOG:  received fast shutdown request
2023-07-22 05:41:40.153 UTC [2717233] LOG:  aborting any active transactions
2023-07-22 05:41:40.155 UTC [2717233] LOG:  background worker "logical replication launcher" (PID 2717239) exited with exit code 1
2023-07-22 05:41:40.155 UTC [2717234] LOG:  shutting down
2023-07-22 05:41:40.158 UTC [2717234] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:41:40.177 UTC [2717234] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.023 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123357 kB
2023-07-22 05:41:40.230 UTC [2717233] LOG:  database system is shut down
2023-07-22 05:41:40.847 UTC [2717387] LOG:  pgaudit extension initialized
2023-07-22 05:41:40.859 UTC [2717387] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:41:40.860 UTC [2717387] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:41:40.866 UTC [2717387] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:41:40.876 UTC [2717390] LOG:  database system was shut down at 2023-07-22 05:41:40 UTC
2023-07-22 05:41:40.885 UTC [2717387] LOG:  database system is ready to accept connections
2023-07-22 05:41:41.036 UTC [2717406] LOG:  AUDIT: SESSION,1,1,MISC,SET,,,SET pgaudit.log = 'all';,<not logged>
2023-07-22 05:41:41.037 UTC [2717406] LOG:  AUDIT: SESSION,2,1,MISC,SET,,,SET pgaudit.log_client = ON;,<not logged>
2023-07-22 05:41:41.054 UTC [2717406] LOG:  AUDIT: SESSION,6,1,MISC,RESET,,,RESET pgaudit.log_client;,<not logged>
2023-07-22 05:41:41.056 UTC [2717406] LOG:  AUDIT: SESSION,7,1,DDL,DROP TABLE,TABLE,public.tmp,DROP TABLE tmp;,<not logged>
2023-07-22 05:41:41.060 UTC [2717406] LOG:  AUDIT: SESSION,8,1,DDL,DROP TABLE,TABLE,public.tmp2,DROP TABLE tmp2;,<not logged>
2023-07-22 05:41:41.174 UTC [2717410] WARNING:  AUDIT: SESSION,1,1,READ,SELECT,,,"SELECT *
	  FROM test3, test2;",<not logged>
2023-07-22 05:41:41.175 UTC [2717410] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.176 UTC [2717410] WARNING:  AUDIT: SESSION,2,1,READ,SELECT,,,"SELECT *
	  FROM vw_test3, test2;",<not logged>
2023-07-22 05:41:41.176 UTC [2717410] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.176 UTC [2717410] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,VIEW,public.vw_test3,<previously logged>,<previously logged>
2023-07-22 05:41:41.176 UTC [2717410] WARNING:  AUDIT: SESSION,3,1,WRITE,INSERT,,,"WITH CTE AS
	(
		SELECT id
		  FROM test2
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 05:41:41.176 UTC [2717410] WARNING:  AUDIT: OBJECT,3,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 05:41:41.176 UTC [2717410] WARNING:  AUDIT: OBJECT,3,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.177 UTC [2717410] WARNING:  AUDIT: SESSION,4,1,WRITE,INSERT,,,"WITH CTE AS
	(
		INSERT INTO test3 VALUES (1)
					   RETURNING id
	)
	INSERT INTO test2
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 05:41:41.177 UTC [2717410] WARNING:  AUDIT: OBJECT,4,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 05:41:41.182 UTC [2717410] WARNING:  AUDIT: SESSION,5,1,READ,SELECT,,,SELECT test2_change(91),<not logged>
2023-07-22 05:41:41.182 UTC [2717410] WARNING:  AUDIT: SESSION,5,2,WRITE,UPDATE,,,"UPDATE test2
		   SET id = id + 1
		 WHERE id = change_id",<not logged>
2023-07-22 05:41:41.182 UTC [2717410] WARNING:  AUDIT: OBJECT,5,2,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.184 UTC [2717410] WARNING:  AUDIT: SESSION,6,1,WRITE,INSERT,,,"WITH CTE AS
	(
		UPDATE test2
		   SET id = 45
		 WHERE id = 92
		RETURNING id
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 05:41:41.184 UTC [2717410] WARNING:  AUDIT: OBJECT,6,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 05:41:41.184 UTC [2717410] WARNING:  AUDIT: OBJECT,6,1,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.186 UTC [2717410] WARNING:  AUDIT: SESSION,7,1,WRITE,UPDATE,,,"WITH CTE AS
	(
		INSERT INTO test2 VALUES (37)
					   RETURNING id
	)
	UPDATE test3
	   SET id = cte.id
	  FROM cte
	 WHERE test3.id <> cte.id;",<not logged>
2023-07-22 05:41:41.186 UTC [2717410] WARNING:  AUDIT: OBJECT,7,1,WRITE,INSERT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.188 UTC [2717410] WARNING:  AUDIT: SESSION,8,1,READ,SELECT,,,"SELECT *
	  FROM test2
	 ORDER BY ID;",<not logged>
2023-07-22 05:41:41.188 UTC [2717410] WARNING:  AUDIT: OBJECT,8,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:41:41.218 UTC [2717412] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test4,"SELECT name
	  FROM public.test4;",<not logged>
2023-07-22 05:41:41.220 UTC [2717412] WARNING:  AUDIT: OBJECT,2,1,WRITE,INSERT,TABLE,public.test4,"INSERT INTO public.test4 (name)
					  VALUES ('test');",<not logged>
2023-07-22 05:41:41.223 UTC [2717412] WARNING:  AUDIT: OBJECT,3,1,WRITE,UPDATE,TABLE,public.test4,"UPDATE public.test4
	   SET id = 1;",<not logged>
2023-07-22 05:41:41.225 UTC [2717412] WARNING:  AUDIT: OBJECT,4,1,WRITE,UPDATE,TABLE,public.test4,update public.test4 set name = 'foo' where name = 'bar';,<not logged>
2023-07-22 05:41:41.415 UTC [2717421] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 05:41:41.415 UTC [2717421] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 05:41:41.415 UTC [2717421] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 05:41:41.415 UTC [2717421] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 05:41:41.496 UTC [2717388] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:41:41.590 UTC [2717388] LOG:  checkpoint complete: wrote 938 buffers (5.7%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.021 s, total=0.094 s; sync files=269, longest=0.003 s, average=0.001 s; distance=8468 kB, estimate=8468 kB
2023-07-22 05:41:41.879 UTC [2717422] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 05:41:41.879 UTC [2717422] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 05:41:41.879 UTC [2717422] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 05:41:41.879 UTC [2717422] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 05:41:41.964 UTC [2717388] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:41:41.999 UTC [2717388] LOG:  checkpoint complete: wrote 111 buffers (0.7%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.006 s, sync=0.013 s, total=0.036 s; sync files=84, longest=0.007 s, average=0.001 s; distance=4711 kB, estimate=8092 kB
2023-07-22 05:41:42.162 UTC [2717425] WARNING:  AUDIT: SESSION,3,1,DDL,CREATE EXTENSION,,,CREATE EXTENSION pg_stat_statements;,<not logged>
2023-07-22 05:41:42.170 UTC [2717425] WARNING:  AUDIT: SESSION,4,1,DDL,ALTER EXTENSION,,,ALTER EXTENSION pg_stat_statements UPDATE TO '1.10';,<not logged>
2023-07-22 05:41:42.171 UTC [2717425] WARNING:  AUDIT: SESSION,5,1,DDL,DROP EXTENSION,,,DROP EXTENSION pg_stat_statements;,<not logged>
2023-07-22 05:41:42.284 UTC [2717440] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:41:42.284 UTC [2717440] STATEMENT:  select gen_salt('foo');
2023-07-22 05:41:42.284 UTC [2717440] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:41:42.284 UTC [2717440] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:41:42.285 UTC [2717440] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:41:42.285 UTC [2717440] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:41:42.285 UTC [2717440] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:41:42.285 UTC [2717440] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:41:42.324 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.324 UTC [2717460] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:41:42.324 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.324 UTC [2717460] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:41:42.324 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.324 UTC [2717460] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:41:42.324 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.324 UTC [2717460] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Key was too big
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Key was too big
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Key was too big
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Key was too big
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:41:42.325 UTC [2717460] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:41:42.325 UTC [2717460] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:41:42.326 UTC [2717460] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:41:42.326 UTC [2717460] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:41:42.326 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.326 UTC [2717460] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:41:42.326 UTC [2717460] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.326 UTC [2717460] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:41:42.335 UTC [2717466] ERROR:  encrypt error: Encryption failed
2023-07-22 05:41:42.335 UTC [2717466] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:41:42.336 UTC [2717466] ERROR:  decrypt error: Decryption failed
2023-07-22 05:41:42.336 UTC [2717466] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:41:42.336 UTC [2717466] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:41:42.336 UTC [2717466] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:41:42.352 UTC [2717474] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.352 UTC [2717474] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:41:42.352 UTC [2717474] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.352 UTC [2717474] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:41:42.352 UTC [2717474] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.352 UTC [2717474] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:41:42.352 UTC [2717474] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.352 UTC [2717474] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:41:42.353 UTC [2717474] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:41:42.353 UTC [2717474] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:41:42.353 UTC [2717474] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:41:42.353 UTC [2717474] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:41:42.353 UTC [2717474] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.353 UTC [2717474] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:41:42.353 UTC [2717474] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.353 UTC [2717474] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:41:42.369 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.369 UTC [2717484] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:41:42.369 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.369 UTC [2717484] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:41:42.369 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.369 UTC [2717484] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:41:42.369 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.369 UTC [2717484] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:41:42.370 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.370 UTC [2717484] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:41:42.370 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.370 UTC [2717484] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:41:42.370 UTC [2717484] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:41:42.370 UTC [2717484] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:41:42.370 UTC [2717484] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:41:42.370 UTC [2717484] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:41:42.370 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.370 UTC [2717484] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:41:42.370 UTC [2717484] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:41:42.370 UTC [2717484] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:41:42.379 UTC [2717490] ERROR:  invalid salt
2023-07-22 05:41:42.379 UTC [2717490] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:41:42.476 UTC [2717498] ERROR:  invalid salt
2023-07-22 05:41:42.476 UTC [2717498] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:41:42.476 UTC [2717498] ERROR:  invalid salt
2023-07-22 05:41:42.476 UTC [2717498] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:41:42.477 UTC [2717498] ERROR:  invalid salt
2023-07-22 05:41:42.477 UTC [2717498] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:41:42.536 UTC [2717502] ERROR:  invalid salt
2023-07-22 05:41:42.536 UTC [2717502] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:41:42.536 UTC [2717502] ERROR:  crypt(3) returned NULL
2023-07-22 05:41:42.536 UTC [2717502] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:41:42.536 UTC [2717502] ERROR:  crypt(3) returned NULL
2023-07-22 05:41:42.536 UTC [2717502] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:41:42.554 UTC [2717506] ERROR:  Corrupt ascii-armor
2023-07-22 05:41:42.554 UTC [2717506] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:41:42.554 UTC [2717506] ERROR:  Corrupt ascii-armor
2023-07-22 05:41:42.554 UTC [2717506] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:41:42.554 UTC [2717506] ERROR:  Corrupt ascii-armor
2023-07-22 05:41:42.554 UTC [2717506] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:41:42.555 UTC [2717506] ERROR:  mismatched array dimensions
2023-07-22 05:41:42.555 UTC [2717506] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:41:42.555 UTC [2717506] ERROR:  mismatched array dimensions
2023-07-22 05:41:42.555 UTC [2717506] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:41:42.555 UTC [2717506] ERROR:  wrong number of array subscripts
2023-07-22 05:41:42.555 UTC [2717506] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:41:42.555 UTC [2717506] ERROR:  wrong number of array subscripts
2023-07-22 05:41:42.555 UTC [2717506] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:41:42.555 UTC [2717506] ERROR:  null value not allowed for header key
2023-07-22 05:41:42.555 UTC [2717506] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:41:42.555 UTC [2717506] ERROR:  null value not allowed for header value
2023-07-22 05:41:42.555 UTC [2717506] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:41:42.556 UTC [2717506] ERROR:  header key must not contain newlines
2023-07-22 05:41:42.556 UTC [2717506] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:41:42.556 UTC [2717506] ERROR:  header value must not contain newlines
2023-07-22 05:41:42.556 UTC [2717506] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:41:42.556 UTC [2717506] ERROR:  header key must not contain ": "
2023-07-22 05:41:42.556 UTC [2717506] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:41:42.563 UTC [2717510] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:42.563 UTC [2717510] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:41:42.574 UTC [2717510] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:42.574 UTC [2717510] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:41:42.575 UTC [2717510] ERROR:  Not text data
2023-07-22 05:41:42.575 UTC [2717510] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:41:42.575 UTC [2717510] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:42.575 UTC [2717510] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:41:42.576 UTC [2717510] ERROR:  Unsupported compression algorithm
2023-07-22 05:41:42.576 UTC [2717510] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:41:42.588 UTC [2717516] ERROR:  Not text data
2023-07-22 05:41:42.588 UTC [2717516] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:41:43.019 UTC [2717524] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:43.019 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:41:43.024 UTC [2717524] ERROR:  Wrong key
2023-07-22 05:41:43.024 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:41:43.024 UTC [2717524] ERROR:  No encryption key found
2023-07-22 05:41:43.024 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:41:43.025 UTC [2717524] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:43.025 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:41:43.027 UTC [2717524] ERROR:  Need password for secret key
2023-07-22 05:41:43.027 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:41:43.028 UTC [2717524] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:43.028 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:41:43.030 UTC [2717524] ERROR:  Wrong key or corrupt data
2023-07-22 05:41:43.030 UTC [2717524] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:41:43.049 UTC [2717530] ERROR:  No encryption key found
2023-07-22 05:41:43.049 UTC [2717530] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:41:43.049 UTC [2717530] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:41:43.049 UTC [2717530] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:41:43.050 UTC [2717530] ERROR:  Not text data
2023-07-22 05:41:43.050 UTC [2717530] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:41:43.057 UTC [2717534] ERROR:  No encryption key found
2023-07-22 05:41:43.057 UTC [2717534] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:41:43.058 UTC [2717534] ERROR:  No encryption key found
2023-07-22 05:41:43.058 UTC [2717534] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:42:14.594 UTC [2717388] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:42:14.691 UTC [2717388] LOG:  checkpoint complete: wrote 877 buffers (5.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.037 s, total=0.097 s; sync files=339, longest=0.004 s, average=0.001 s; distance=141971 kB, estimate=141971 kB
2023-07-22 05:42:46.221 UTC [2717388] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:42:46.340 UTC [2717388] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.119 s; sync files=5, longest=0.008 s, average=0.003 s; distance=134425 kB, estimate=141217 kB
2023-07-22 05:42:46.404 UTC [2717387] LOG:  received fast shutdown request
2023-07-22 05:42:46.412 UTC [2717387] LOG:  aborting any active transactions
2023-07-22 05:42:46.413 UTC [2717387] LOG:  background worker "logical replication launcher" (PID 2717393) exited with exit code 1
2023-07-22 05:42:46.413 UTC [2717388] LOG:  shutting down
2023-07-22 05:42:46.420 UTC [2717388] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:42:46.458 UTC [2717388] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.045 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=127095 kB
2023-07-22 05:42:46.489 UTC [2717387] LOG:  database system is shut down
2023-07-22 05:42:47.240 UTC [2717660] LOG:  pgaudit extension initialized
2023-07-22 05:42:47.255 UTC [2717660] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:42:47.255 UTC [2717660] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:42:47.267 UTC [2717660] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:42:47.283 UTC [2717663] LOG:  database system was shut down at 2023-07-22 05:42:46 UTC
2023-07-22 05:42:47.292 UTC [2717660] LOG:  database system is ready to accept connections
2023-07-22 05:42:47.496 UTC [2717682] LOG:  AUDIT: SESSION,1,1,MISC,SET,,,SET pgaudit.log = 'all';,<not logged>
2023-07-22 05:42:47.496 UTC [2717682] LOG:  AUDIT: SESSION,2,1,MISC,SET,,,SET pgaudit.log_client = ON;,<not logged>
2023-07-22 05:42:47.527 UTC [2717682] LOG:  AUDIT: SESSION,6,1,MISC,RESET,,,RESET pgaudit.log_client;,<not logged>
2023-07-22 05:42:47.529 UTC [2717682] LOG:  AUDIT: SESSION,7,1,DDL,DROP TABLE,TABLE,public.tmp,DROP TABLE tmp;,<not logged>
2023-07-22 05:42:47.535 UTC [2717682] LOG:  AUDIT: SESSION,8,1,DDL,DROP TABLE,TABLE,public.tmp2,DROP TABLE tmp2;,<not logged>
2023-07-22 05:42:47.768 UTC [2717686] WARNING:  AUDIT: SESSION,1,1,READ,SELECT,,,"SELECT *
	  FROM test3, test2;",<not logged>
2023-07-22 05:42:47.768 UTC [2717686] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.769 UTC [2717686] WARNING:  AUDIT: SESSION,2,1,READ,SELECT,,,"SELECT *
	  FROM vw_test3, test2;",<not logged>
2023-07-22 05:42:47.769 UTC [2717686] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.769 UTC [2717686] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,VIEW,public.vw_test3,<previously logged>,<previously logged>
2023-07-22 05:42:47.770 UTC [2717686] WARNING:  AUDIT: SESSION,3,1,WRITE,INSERT,,,"WITH CTE AS
	(
		SELECT id
		  FROM test2
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 05:42:47.770 UTC [2717686] WARNING:  AUDIT: OBJECT,3,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 05:42:47.770 UTC [2717686] WARNING:  AUDIT: OBJECT,3,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.771 UTC [2717686] WARNING:  AUDIT: SESSION,4,1,WRITE,INSERT,,,"WITH CTE AS
	(
		INSERT INTO test3 VALUES (1)
					   RETURNING id
	)
	INSERT INTO test2
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 05:42:47.771 UTC [2717686] WARNING:  AUDIT: OBJECT,4,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 05:42:47.779 UTC [2717686] WARNING:  AUDIT: SESSION,5,1,READ,SELECT,,,SELECT test2_change(91),<not logged>
2023-07-22 05:42:47.780 UTC [2717686] WARNING:  AUDIT: SESSION,5,2,WRITE,UPDATE,,,"UPDATE test2
		   SET id = id + 1
		 WHERE id = change_id",<not logged>
2023-07-22 05:42:47.780 UTC [2717686] WARNING:  AUDIT: OBJECT,5,2,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.784 UTC [2717686] WARNING:  AUDIT: SESSION,6,1,WRITE,INSERT,,,"WITH CTE AS
	(
		UPDATE test2
		   SET id = 45
		 WHERE id = 92
		RETURNING id
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 05:42:47.784 UTC [2717686] WARNING:  AUDIT: OBJECT,6,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 05:42:47.784 UTC [2717686] WARNING:  AUDIT: OBJECT,6,1,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.789 UTC [2717686] WARNING:  AUDIT: SESSION,7,1,WRITE,UPDATE,,,"WITH CTE AS
	(
		INSERT INTO test2 VALUES (37)
					   RETURNING id
	)
	UPDATE test3
	   SET id = cte.id
	  FROM cte
	 WHERE test3.id <> cte.id;",<not logged>
2023-07-22 05:42:47.789 UTC [2717686] WARNING:  AUDIT: OBJECT,7,1,WRITE,INSERT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.793 UTC [2717686] WARNING:  AUDIT: SESSION,8,1,READ,SELECT,,,"SELECT *
	  FROM test2
	 ORDER BY ID;",<not logged>
2023-07-22 05:42:47.793 UTC [2717686] WARNING:  AUDIT: OBJECT,8,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 05:42:47.845 UTC [2717688] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test4,"SELECT name
	  FROM public.test4;",<not logged>
2023-07-22 05:42:47.849 UTC [2717688] WARNING:  AUDIT: OBJECT,2,1,WRITE,INSERT,TABLE,public.test4,"INSERT INTO public.test4 (name)
					  VALUES ('test');",<not logged>
2023-07-22 05:42:47.857 UTC [2717688] WARNING:  AUDIT: OBJECT,3,1,WRITE,UPDATE,TABLE,public.test4,"UPDATE public.test4
	   SET id = 1;",<not logged>
2023-07-22 05:42:47.862 UTC [2717688] WARNING:  AUDIT: OBJECT,4,1,WRITE,UPDATE,TABLE,public.test4,update public.test4 set name = 'foo' where name = 'bar';,<not logged>
2023-07-22 05:42:48.174 UTC [2717697] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 05:42:48.174 UTC [2717697] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 05:42:48.174 UTC [2717697] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 05:42:48.174 UTC [2717697] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 05:42:48.319 UTC [2717661] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:42:48.506 UTC [2717661] LOG:  checkpoint complete: wrote 938 buffers (5.7%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.041 s, sync=0.033 s, total=0.188 s; sync files=269, longest=0.009 s, average=0.001 s; distance=8478 kB, estimate=8478 kB
2023-07-22 05:42:49.089 UTC [2717698] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 05:42:49.089 UTC [2717698] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 05:42:49.089 UTC [2717698] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 05:42:49.089 UTC [2717698] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 05:42:49.240 UTC [2717661] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:42:49.320 UTC [2717661] LOG:  checkpoint complete: wrote 112 buffers (0.7%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.017 s, sync=0.027 s, total=0.081 s; sync files=84, longest=0.012 s, average=0.001 s; distance=4713 kB, estimate=8102 kB
2023-07-22 05:42:49.654 UTC [2717701] WARNING:  AUDIT: SESSION,3,1,DDL,CREATE EXTENSION,,,CREATE EXTENSION pg_stat_statements;,<not logged>
2023-07-22 05:42:49.685 UTC [2717701] WARNING:  AUDIT: SESSION,4,1,DDL,ALTER EXTENSION,,,ALTER EXTENSION pg_stat_statements UPDATE TO '1.10';,<not logged>
2023-07-22 05:42:49.686 UTC [2717701] WARNING:  AUDIT: SESSION,5,1,DDL,DROP EXTENSION,,,DROP EXTENSION pg_stat_statements;,<not logged>
2023-07-22 05:43:22.327 UTC [2717661] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:43:22.454 UTC [2717661] LOG:  checkpoint complete: wrote 136 buffers (0.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.019 s, total=0.127 s; sync files=84, longest=0.009 s, average=0.001 s; distance=133384 kB, estimate=133384 kB
2023-07-22 05:43:54.325 UTC [2717661] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:43:54.433 UTC [2717661] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.009 s, total=0.108 s; sync files=5, longest=0.006 s, average=0.002 s; distance=132721 kB, estimate=133317 kB
2023-07-22 05:43:54.498 UTC [2717660] LOG:  received fast shutdown request
2023-07-22 05:43:54.503 UTC [2717660] LOG:  aborting any active transactions
2023-07-22 05:43:54.505 UTC [2717660] LOG:  background worker "logical replication launcher" (PID 2717666) exited with exit code 1
2023-07-22 05:43:54.505 UTC [2717661] LOG:  shutting down
2023-07-22 05:43:54.509 UTC [2717661] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:43:54.547 UTC [2717661] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.043 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=119986 kB
2023-07-22 05:43:54.568 UTC [2717660] LOG:  database system is shut down
2023-07-22 05:43:55.220 UTC [2717831] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:43:55.220 UTC [2717831] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:43:55.226 UTC [2717831] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:43:55.234 UTC [2717834] LOG:  database system was shut down at 2023-07-22 05:43:55 UTC
2023-07-22 05:43:55.239 UTC [2717831] LOG:  database system is ready to accept connections
2023-07-22 05:43:55.411 UTC [2717850] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:43:55.411 UTC [2717850] STATEMENT:  select gen_salt('foo');
2023-07-22 05:43:55.411 UTC [2717850] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:43:55.411 UTC [2717850] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:43:55.411 UTC [2717850] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:43:55.411 UTC [2717850] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:43:55.411 UTC [2717850] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:43:55.411 UTC [2717850] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:43:55.459 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.459 UTC [2717870] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:43:55.459 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.459 UTC [2717870] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:43:55.459 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.459 UTC [2717870] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Key was too big
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:43:55.460 UTC [2717870] ERROR:  encrypt error: Key was too big
2023-07-22 05:43:55.460 UTC [2717870] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Key was too big
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Key was too big
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:43:55.461 UTC [2717870] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.461 UTC [2717870] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:43:55.473 UTC [2717876] ERROR:  encrypt error: Encryption failed
2023-07-22 05:43:55.473 UTC [2717876] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:43:55.475 UTC [2717876] ERROR:  decrypt error: Decryption failed
2023-07-22 05:43:55.475 UTC [2717876] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:43:55.475 UTC [2717876] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:43:55.475 UTC [2717876] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:43:55.496 UTC [2717884] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.496 UTC [2717884] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:43:55.497 UTC [2717884] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.497 UTC [2717884] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:43:55.497 UTC [2717884] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.497 UTC [2717884] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:43:55.497 UTC [2717884] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.497 UTC [2717884] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:43:55.497 UTC [2717884] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:43:55.497 UTC [2717884] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:43:55.497 UTC [2717884] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:43:55.497 UTC [2717884] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:43:55.497 UTC [2717884] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.497 UTC [2717884] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:43:55.498 UTC [2717884] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.498 UTC [2717884] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:43:55.520 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.520 UTC [2717894] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:43:55.520 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.520 UTC [2717894] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:43:55.520 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.520 UTC [2717894] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:43:55.521 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.521 UTC [2717894] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:43:55.521 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.521 UTC [2717894] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:43:55.521 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.521 UTC [2717894] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:43:55.521 UTC [2717894] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:43:55.521 UTC [2717894] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:43:55.521 UTC [2717894] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:43:55.521 UTC [2717894] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:43:55.521 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.521 UTC [2717894] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:43:55.522 UTC [2717894] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:43:55.522 UTC [2717894] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:43:55.534 UTC [2717900] ERROR:  invalid salt
2023-07-22 05:43:55.534 UTC [2717900] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:43:55.639 UTC [2717908] ERROR:  invalid salt
2023-07-22 05:43:55.639 UTC [2717908] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:43:55.639 UTC [2717908] ERROR:  invalid salt
2023-07-22 05:43:55.639 UTC [2717908] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:43:55.639 UTC [2717908] ERROR:  invalid salt
2023-07-22 05:43:55.639 UTC [2717908] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:43:55.683 UTC [2717912] ERROR:  invalid salt
2023-07-22 05:43:55.683 UTC [2717912] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:43:55.684 UTC [2717912] ERROR:  crypt(3) returned NULL
2023-07-22 05:43:55.684 UTC [2717912] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:43:55.684 UTC [2717912] ERROR:  crypt(3) returned NULL
2023-07-22 05:43:55.684 UTC [2717912] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:43:55.728 UTC [2717916] ERROR:  Corrupt ascii-armor
2023-07-22 05:43:55.728 UTC [2717916] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:43:55.729 UTC [2717916] ERROR:  Corrupt ascii-armor
2023-07-22 05:43:55.729 UTC [2717916] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:43:55.730 UTC [2717916] ERROR:  Corrupt ascii-armor
2023-07-22 05:43:55.730 UTC [2717916] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:43:55.740 UTC [2717916] ERROR:  mismatched array dimensions
2023-07-22 05:43:55.740 UTC [2717916] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:43:55.740 UTC [2717916] ERROR:  mismatched array dimensions
2023-07-22 05:43:55.740 UTC [2717916] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:43:55.741 UTC [2717916] ERROR:  wrong number of array subscripts
2023-07-22 05:43:55.741 UTC [2717916] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:43:55.741 UTC [2717916] ERROR:  wrong number of array subscripts
2023-07-22 05:43:55.741 UTC [2717916] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:43:55.742 UTC [2717916] ERROR:  null value not allowed for header key
2023-07-22 05:43:55.742 UTC [2717916] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:43:55.742 UTC [2717916] ERROR:  null value not allowed for header value
2023-07-22 05:43:55.742 UTC [2717916] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:43:55.744 UTC [2717916] ERROR:  header key must not contain newlines
2023-07-22 05:43:55.744 UTC [2717916] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:43:55.744 UTC [2717916] ERROR:  header value must not contain newlines
2023-07-22 05:43:55.744 UTC [2717916] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:43:55.744 UTC [2717916] ERROR:  header key must not contain ": "
2023-07-22 05:43:55.744 UTC [2717916] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:43:55.768 UTC [2717920] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:55.768 UTC [2717920] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:43:55.797 UTC [2717920] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:55.797 UTC [2717920] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:43:55.800 UTC [2717920] ERROR:  Not text data
2023-07-22 05:43:55.800 UTC [2717920] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:43:55.800 UTC [2717920] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:55.800 UTC [2717920] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:43:55.801 UTC [2717920] ERROR:  Unsupported compression algorithm
2023-07-22 05:43:55.801 UTC [2717920] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:43:55.819 UTC [2717926] ERROR:  Not text data
2023-07-22 05:43:55.819 UTC [2717926] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:43:56.270 UTC [2717934] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:56.270 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:43:56.283 UTC [2717934] ERROR:  Wrong key
2023-07-22 05:43:56.283 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:43:56.283 UTC [2717934] ERROR:  No encryption key found
2023-07-22 05:43:56.283 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:43:56.284 UTC [2717934] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:56.284 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:43:56.288 UTC [2717934] ERROR:  Need password for secret key
2023-07-22 05:43:56.288 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:43:56.289 UTC [2717934] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:56.289 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:43:56.293 UTC [2717934] ERROR:  Wrong key or corrupt data
2023-07-22 05:43:56.293 UTC [2717934] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:43:56.313 UTC [2717940] ERROR:  No encryption key found
2023-07-22 05:43:56.313 UTC [2717940] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:43:56.313 UTC [2717940] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:43:56.313 UTC [2717940] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:43:56.314 UTC [2717940] ERROR:  Not text data
2023-07-22 05:43:56.314 UTC [2717940] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:43:56.322 UTC [2717944] ERROR:  No encryption key found
2023-07-22 05:43:56.322 UTC [2717944] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:43:56.322 UTC [2717944] ERROR:  No encryption key found
2023-07-22 05:43:56.322 UTC [2717944] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:43:56.409 UTC [2717959] ERROR:  file "test_file1" exists
2023-07-22 05:43:56.409 UTC [2717959] STATEMENT:  SELECT pg_file_write('test_file1', 'test1', false);
2023-07-22 05:43:56.415 UTC [2717959] ERROR:  path must be in or below the current directory
2023-07-22 05:43:56.415 UTC [2717959] STATEMENT:  SELECT pg_file_write('../test_file0', 'test0', false);
2023-07-22 05:43:56.416 UTC [2717959] ERROR:  absolute path not allowed
2023-07-22 05:43:56.416 UTC [2717959] STATEMENT:  SELECT pg_file_write('/tmp/test_file0', 'test0', false);
2023-07-22 05:43:56.417 UTC [2717959] ERROR:  absolute path not allowed
2023-07-22 05:43:56.417 UTC [2717959] STATEMENT:  SELECT pg_file_write(current_setting('data_directory') || '/../test_file4', 'test4', false);
2023-07-22 05:43:56.430 UTC [2717959] ERROR:  could not stat file "test_file2": No such file or directory
2023-07-22 05:43:56.430 UTC [2717959] STATEMENT:  SELECT pg_file_sync('test_file2');
2023-07-22 05:43:56.431 UTC [2717959] ERROR:  could not open file "test_file1" for reading: No such file or directory
2023-07-22 05:43:56.431 UTC [2717959] STATEMENT:  SELECT pg_read_file('test_file1');
2023-07-22 05:43:56.433 UTC [2717959] WARNING:  file "test_file1" is not accessible: No such file or directory
2023-07-22 05:43:56.433 UTC [2717959] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 05:43:56.435 UTC [2717959] ERROR:  could not open file "test_file2" for reading: No such file or directory
2023-07-22 05:43:56.435 UTC [2717959] STATEMENT:  SELECT pg_read_file('test_file2');
2023-07-22 05:43:56.441 UTC [2717959] ERROR:  permission denied for function pg_file_write
2023-07-22 05:43:56.441 UTC [2717959] STATEMENT:  SELECT pg_file_write('test_file0', 'test0', false);
2023-07-22 05:43:56.441 UTC [2717959] ERROR:  permission denied for function pg_file_sync
2023-07-22 05:43:56.441 UTC [2717959] STATEMENT:  SELECT pg_file_sync('test_file0');
2023-07-22 05:43:56.442 UTC [2717959] ERROR:  permission denied for function pg_file_rename
2023-07-22 05:43:56.442 UTC [2717959] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 05:43:56.442 UTC [2717959] STATEMENT:  SELECT pg_file_rename('test_file0', 'test_file0');
2023-07-22 05:43:56.442 UTC [2717959] ERROR:  permission denied for function pg_file_unlink
2023-07-22 05:43:56.442 UTC [2717959] STATEMENT:  SELECT pg_file_unlink('test_file0');
2023-07-22 05:43:56.443 UTC [2717959] ERROR:  permission denied for function pg_logdir_ls
2023-07-22 05:43:56.443 UTC [2717959] STATEMENT:  SELECT pg_logdir_ls();
2023-07-22 05:44:28.095 UTC [2717832] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:44:28.395 UTC [2717832] LOG:  checkpoint complete: wrote 1210 buffers (7.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.040 s, sync=0.209 s, total=0.301 s; sync files=517, longest=0.057 s, average=0.001 s; distance=145305 kB, estimate=145305 kB
2023-07-22 05:44:59.715 UTC [2717832] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:44:59.807 UTC [2717832] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.013 s, sync=0.008 s, total=0.092 s; sync files=4, longest=0.006 s, average=0.002 s; distance=135787 kB, estimate=144353 kB
2023-07-22 05:44:59.871 UTC [2717831] LOG:  received fast shutdown request
2023-07-22 05:44:59.879 UTC [2717831] LOG:  aborting any active transactions
2023-07-22 05:44:59.880 UTC [2717831] LOG:  background worker "logical replication launcher" (PID 2717837) exited with exit code 1
2023-07-22 05:44:59.880 UTC [2717832] LOG:  shutting down
2023-07-22 05:44:59.885 UTC [2717832] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:44:59.916 UTC [2717832] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.037 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=129918 kB
2023-07-22 05:44:59.938 UTC [2717831] LOG:  database system is shut down
2023-07-22 05:45:00.733 UTC [2718085] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:45:00.733 UTC [2718085] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:45:00.746 UTC [2718085] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:45:00.756 UTC [2718088] LOG:  database system was shut down at 2023-07-22 05:45:00 UTC
2023-07-22 05:45:00.764 UTC [2718085] LOG:  database system is ready to accept connections
2023-07-22 05:45:00.963 UTC [2718104] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:45:00.963 UTC [2718104] STATEMENT:  select gen_salt('foo');
2023-07-22 05:45:00.963 UTC [2718104] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:45:00.963 UTC [2718104] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:45:00.964 UTC [2718104] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:45:00.964 UTC [2718104] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:45:00.964 UTC [2718104] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:45:00.964 UTC [2718104] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:45:01.006 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.006 UTC [2718124] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:45:01.006 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.006 UTC [2718124] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:45:01.006 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.006 UTC [2718124] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Key was too big
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Key was too big
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Key was too big
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:45:01.007 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.007 UTC [2718124] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  encrypt error: Key was too big
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:45:01.008 UTC [2718124] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.008 UTC [2718124] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:45:01.018 UTC [2718130] ERROR:  encrypt error: Encryption failed
2023-07-22 05:45:01.018 UTC [2718130] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:45:01.019 UTC [2718130] ERROR:  decrypt error: Decryption failed
2023-07-22 05:45:01.019 UTC [2718130] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:45:01.019 UTC [2718130] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:45:01.019 UTC [2718130] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:45:01.037 UTC [2718138] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.037 UTC [2718138] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:45:01.037 UTC [2718138] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.037 UTC [2718138] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:45:01.037 UTC [2718138] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.037 UTC [2718138] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:45:01.038 UTC [2718138] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.038 UTC [2718138] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:45:01.038 UTC [2718138] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:45:01.038 UTC [2718138] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:45:01.038 UTC [2718138] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:45:01.038 UTC [2718138] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:45:01.038 UTC [2718138] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.038 UTC [2718138] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:45:01.038 UTC [2718138] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.038 UTC [2718138] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:45:01.056 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.056 UTC [2718148] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:45:01.057 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.057 UTC [2718148] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:45:01.058 UTC [2718148] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:45:01.058 UTC [2718148] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:45:01.067 UTC [2718154] ERROR:  invalid salt
2023-07-22 05:45:01.067 UTC [2718154] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:45:01.209 UTC [2718162] ERROR:  invalid salt
2023-07-22 05:45:01.209 UTC [2718162] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:45:01.210 UTC [2718162] ERROR:  invalid salt
2023-07-22 05:45:01.210 UTC [2718162] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:45:01.210 UTC [2718162] ERROR:  invalid salt
2023-07-22 05:45:01.210 UTC [2718162] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:45:01.305 UTC [2718166] ERROR:  invalid salt
2023-07-22 05:45:01.305 UTC [2718166] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:45:01.305 UTC [2718166] ERROR:  crypt(3) returned NULL
2023-07-22 05:45:01.305 UTC [2718166] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:45:01.305 UTC [2718166] ERROR:  crypt(3) returned NULL
2023-07-22 05:45:01.305 UTC [2718166] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:45:01.359 UTC [2718170] ERROR:  Corrupt ascii-armor
2023-07-22 05:45:01.359 UTC [2718170] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:45:01.360 UTC [2718170] ERROR:  Corrupt ascii-armor
2023-07-22 05:45:01.360 UTC [2718170] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:45:01.361 UTC [2718170] ERROR:  Corrupt ascii-armor
2023-07-22 05:45:01.361 UTC [2718170] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:45:01.370 UTC [2718170] ERROR:  mismatched array dimensions
2023-07-22 05:45:01.370 UTC [2718170] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:45:01.370 UTC [2718170] ERROR:  mismatched array dimensions
2023-07-22 05:45:01.370 UTC [2718170] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:45:01.371 UTC [2718170] ERROR:  wrong number of array subscripts
2023-07-22 05:45:01.371 UTC [2718170] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:45:01.371 UTC [2718170] ERROR:  wrong number of array subscripts
2023-07-22 05:45:01.371 UTC [2718170] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:45:01.372 UTC [2718170] ERROR:  null value not allowed for header key
2023-07-22 05:45:01.372 UTC [2718170] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:45:01.372 UTC [2718170] ERROR:  null value not allowed for header value
2023-07-22 05:45:01.372 UTC [2718170] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:45:01.373 UTC [2718170] ERROR:  header key must not contain newlines
2023-07-22 05:45:01.373 UTC [2718170] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:45:01.374 UTC [2718170] ERROR:  header value must not contain newlines
2023-07-22 05:45:01.374 UTC [2718170] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:45:01.374 UTC [2718170] ERROR:  header key must not contain ": "
2023-07-22 05:45:01.374 UTC [2718170] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:45:01.402 UTC [2718174] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.402 UTC [2718174] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:45:01.442 UTC [2718174] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.442 UTC [2718174] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:45:01.445 UTC [2718174] ERROR:  Not text data
2023-07-22 05:45:01.445 UTC [2718174] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:45:01.445 UTC [2718174] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.445 UTC [2718174] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:45:01.446 UTC [2718174] ERROR:  Unsupported compression algorithm
2023-07-22 05:45:01.446 UTC [2718174] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:45:01.462 UTC [2718180] ERROR:  Not text data
2023-07-22 05:45:01.462 UTC [2718180] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:45:01.950 UTC [2718191] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.950 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:45:01.971 UTC [2718191] ERROR:  Wrong key
2023-07-22 05:45:01.971 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:45:01.971 UTC [2718191] ERROR:  No encryption key found
2023-07-22 05:45:01.971 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:45:01.973 UTC [2718191] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.973 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:45:01.979 UTC [2718191] ERROR:  Need password for secret key
2023-07-22 05:45:01.979 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:45:01.980 UTC [2718191] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.980 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:45:01.984 UTC [2718191] ERROR:  Wrong key or corrupt data
2023-07-22 05:45:01.984 UTC [2718191] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:45:02.007 UTC [2718197] ERROR:  No encryption key found
2023-07-22 05:45:02.007 UTC [2718197] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:45:02.007 UTC [2718197] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:45:02.007 UTC [2718197] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:45:02.008 UTC [2718197] ERROR:  Not text data
2023-07-22 05:45:02.008 UTC [2718197] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:45:02.016 UTC [2718201] ERROR:  No encryption key found
2023-07-22 05:45:02.016 UTC [2718201] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:45:02.017 UTC [2718201] ERROR:  No encryption key found
2023-07-22 05:45:02.017 UTC [2718201] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:45:02.026 UTC [2718086] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:45:02.069 UTC [2718086] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.013 s, sync=0.007 s, total=0.043 s; sync files=7, longest=0.003 s, average=0.001 s; distance=4296 kB, estimate=4296 kB
2023-07-22 05:45:02.883 UTC [2718220] ERROR:  permission denied for function bt_index_check
2023-07-22 05:45:02.883 UTC [2718220] STATEMENT:  SELECT bt_index_check('bttest_a_idx'::regclass);
2023-07-22 05:45:02.883 UTC [2718220] ERROR:  permission denied for function bt_index_parent_check
2023-07-22 05:45:02.883 UTC [2718220] STATEMENT:  SELECT bt_index_parent_check('bttest_a_idx'::regclass);
2023-07-22 05:45:02.913 UTC [2718220] ERROR:  "bttest_a" is not an index
2023-07-22 05:45:02.913 UTC [2718220] STATEMENT:  SELECT bt_index_check('bttest_a');
2023-07-22 05:45:02.913 UTC [2718220] ERROR:  "bttest_a" is not an index
2023-07-22 05:45:02.913 UTC [2718220] STATEMENT:  SELECT bt_index_parent_check('bttest_a');
2023-07-22 05:45:02.913 UTC [2718220] ERROR:  could not open relation with OID 17
2023-07-22 05:45:02.913 UTC [2718220] STATEMENT:  SELECT bt_index_check(17);
2023-07-22 05:45:02.913 UTC [2718220] ERROR:  could not open relation with OID 17
2023-07-22 05:45:02.913 UTC [2718220] STATEMENT:  SELECT bt_index_parent_check(17);
2023-07-22 05:45:02.927 UTC [2718220] ERROR:  only B-Tree indexes are supported as targets for verification
2023-07-22 05:45:02.927 UTC [2718220] DETAIL:  Relation "bttest_a_brin_idx" is not a B-Tree index.
2023-07-22 05:45:02.927 UTC [2718220] STATEMENT:  SELECT bt_index_parent_check('bttest_a_brin_idx');
2023-07-22 05:45:04.034 UTC [2718224] ERROR:  invalid skip option
2023-07-22 05:45:04.034 UTC [2718224] HINT:  Valid skip options are "all-visible", "all-frozen", and "none".
2023-07-22 05:45:04.034 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'rope');
2023-07-22 05:45:04.042 UTC [2718224] ERROR:  permission denied for function verify_heapam
2023-07-22 05:45:04.042 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest');
2023-07-22 05:45:04.046 UTC [2718224] ERROR:  ending block number must be between 0 and 0
2023-07-22 05:45:04.046 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 10000);
2023-07-22 05:45:04.046 UTC [2718224] ERROR:  starting block number must be between 0 and 0
2023-07-22 05:45:04.046 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 10000, endblock := 11000);
2023-07-22 05:45:04.057 UTC [2718224] ERROR:  cannot check relation "test_partitioned"
2023-07-22 05:45:04.057 UTC [2718224] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 05:45:04.057 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam('test_partitioned',
								startblock := NULL,
								endblock := NULL);
2023-07-22 05:45:04.122 UTC [2718224] ERROR:  cannot check relation "test_index"
2023-07-22 05:45:04.122 UTC [2718224] DETAIL:  This operation is not supported for indexes.
2023-07-22 05:45:04.122 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam('test_index',
								startblock := NULL,
								endblock := NULL);
2023-07-22 05:45:04.126 UTC [2718224] ERROR:  cannot check relation "test_view"
2023-07-22 05:45:04.126 UTC [2718224] DETAIL:  This operation is not supported for views.
2023-07-22 05:45:04.126 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam('test_view',
								startblock := NULL,
								endblock := NULL);
2023-07-22 05:45:04.135 UTC [2718224] ERROR:  cannot check relation "test_foreign_table"
2023-07-22 05:45:04.135 UTC [2718224] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 05:45:04.135 UTC [2718224] STATEMENT:  SELECT * FROM verify_heapam('test_foreign_table',
								startblock := NULL,
								endblock := NULL);
2023-07-22 05:45:36.515 UTC [2718086] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:45:36.682 UTC [2718086] LOG:  checkpoint complete: wrote 611 buffers (3.7%); 0 WAL file(s) added, 0 removed, 12 recycled; write=0.040 s, sync=0.057 s, total=0.167 s; sync files=281, longest=0.007 s, average=0.001 s; distance=198177 kB, estimate=198177 kB
2023-07-22 05:46:08.415 UTC [2718086] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:46:08.509 UTC [2718086] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.014 s, sync=0.008 s, total=0.095 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133657 kB, estimate=191725 kB
2023-07-22 05:46:08.578 UTC [2718085] LOG:  received fast shutdown request
2023-07-22 05:46:08.586 UTC [2718085] LOG:  aborting any active transactions
2023-07-22 05:46:08.587 UTC [2718085] LOG:  background worker "logical replication launcher" (PID 2718091) exited with exit code 1
2023-07-22 05:46:08.587 UTC [2718086] LOG:  shutting down
2023-07-22 05:46:08.592 UTC [2718086] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:46:08.625 UTC [2718086] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.038 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=172553 kB
2023-07-22 05:46:08.648 UTC [2718085] LOG:  database system is shut down
2023-07-22 05:46:09.474 UTC [2718393] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:46:09.474 UTC [2718393] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:46:09.487 UTC [2718393] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:46:09.501 UTC [2718396] LOG:  database system was shut down at 2023-07-22 05:46:09 UTC
2023-07-22 05:46:09.510 UTC [2718393] LOG:  database system is ready to accept connections
2023-07-22 05:46:09.653 UTC [2718410] ERROR:  extension "auth_delay" is not available
2023-07-22 05:46:09.653 UTC [2718410] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auth_delay.control": No such file or directory.
2023-07-22 05:46:09.653 UTC [2718410] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 05:46:09.653 UTC [2718410] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auth_delay"
2023-07-22 05:46:09.659 UTC [2718393] LOG:  received fast shutdown request
2023-07-22 05:46:09.665 UTC [2718393] LOG:  aborting any active transactions
2023-07-22 05:46:09.666 UTC [2718393] LOG:  background worker "logical replication launcher" (PID 2718399) exited with exit code 1
2023-07-22 05:46:09.667 UTC [2718394] LOG:  shutting down
2023-07-22 05:46:09.672 UTC [2718394] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:46:09.760 UTC [2718394] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.027 s, sync=0.040 s, total=0.093 s; sync files=252, longest=0.014 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 05:46:09.782 UTC [2718393] LOG:  database system is shut down
2023-07-22 05:46:10.600 UTC [2718439] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:46:10.600 UTC [2718439] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:46:10.609 UTC [2718439] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:46:10.623 UTC [2718442] LOG:  database system was shut down at 2023-07-22 05:46:10 UTC
2023-07-22 05:46:10.629 UTC [2718439] LOG:  database system is ready to accept connections
2023-07-22 05:46:10.839 UTC [2718456] ERROR:  extension "auto_explain" is not available
2023-07-22 05:46:10.839 UTC [2718456] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auto_explain.control": No such file or directory.
2023-07-22 05:46:10.839 UTC [2718456] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 05:46:10.839 UTC [2718456] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auto_explain"
2023-07-22 05:46:10.847 UTC [2718439] LOG:  received fast shutdown request
2023-07-22 05:46:10.855 UTC [2718439] LOG:  aborting any active transactions
2023-07-22 05:46:10.857 UTC [2718439] LOG:  background worker "logical replication launcher" (PID 2718445) exited with exit code 1
2023-07-22 05:46:10.857 UTC [2718440] LOG:  shutting down
2023-07-22 05:46:10.862 UTC [2718440] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:46:10.956 UTC [2718440] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.045 s, sync=0.031 s, total=0.100 s; sync files=252, longest=0.006 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 05:46:10.970 UTC [2718439] LOG:  database system is shut down
2023-07-22 05:46:11.667 UTC [2718485] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:46:11.668 UTC [2718485] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:46:11.674 UTC [2718485] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:46:11.685 UTC [2718488] LOG:  database system was shut down at 2023-07-22 05:46:11 UTC
2023-07-22 05:46:11.695 UTC [2718485] LOG:  database system is ready to accept connections
2023-07-22 05:46:11.835 UTC [2718502] ERROR:  extension "basebackup_to_shell" is not available
2023-07-22 05:46:11.835 UTC [2718502] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/basebackup_to_shell.control": No such file or directory.
2023-07-22 05:46:11.835 UTC [2718502] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 05:46:11.835 UTC [2718502] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "basebackup_to_shell"
2023-07-22 05:46:11.843 UTC [2718485] LOG:  received fast shutdown request
2023-07-22 05:46:11.846 UTC [2718485] LOG:  aborting any active transactions
2023-07-22 05:46:11.847 UTC [2718485] LOG:  background worker "logical replication launcher" (PID 2718491) exited with exit code 1
2023-07-22 05:46:11.848 UTC [2718486] LOG:  shutting down
2023-07-22 05:46:11.850 UTC [2718486] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:46:11.903 UTC [2718486] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.019 s, sync=0.022 s, total=0.056 s; sync files=252, longest=0.003 s, average=0.001 s; distance=4127 kB, estimate=4127 kB
2023-07-22 05:46:11.917 UTC [2718485] LOG:  database system is shut down
2023-07-22 05:46:12.560 UTC [2718531] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:46:12.560 UTC [2718531] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:46:12.566 UTC [2718531] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:46:12.577 UTC [2718534] LOG:  database system was shut down at 2023-07-22 05:46:12 UTC
2023-07-22 05:46:12.587 UTC [2718531] LOG:  database system is ready to accept connections
2023-07-22 05:46:12.785 UTC [2718548] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:46:12.785 UTC [2718548] STATEMENT:  select gen_salt('foo');
2023-07-22 05:46:12.786 UTC [2718548] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:46:12.786 UTC [2718548] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:46:12.787 UTC [2718548] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:46:12.787 UTC [2718548] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:46:12.787 UTC [2718548] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:46:12.787 UTC [2718548] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:46:12.842 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.842 UTC [2718568] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:46:12.842 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.842 UTC [2718568] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:46:12.842 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.842 UTC [2718568] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:46:12.842 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.842 UTC [2718568] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:46:12.842 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.842 UTC [2718568] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:46:12.842 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.842 UTC [2718568] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Key was too big
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Key was too big
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Key was too big
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Key was too big
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:46:12.843 UTC [2718568] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:46:12.843 UTC [2718568] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:46:12.844 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.844 UTC [2718568] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:46:12.844 UTC [2718568] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.844 UTC [2718568] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:46:12.855 UTC [2718574] ERROR:  encrypt error: Encryption failed
2023-07-22 05:46:12.855 UTC [2718574] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:46:12.856 UTC [2718574] ERROR:  decrypt error: Decryption failed
2023-07-22 05:46:12.856 UTC [2718574] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:46:12.856 UTC [2718574] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:46:12.856 UTC [2718574] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:46:12.876 UTC [2718582] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.876 UTC [2718582] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:46:12.876 UTC [2718582] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.876 UTC [2718582] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:46:12.877 UTC [2718582] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.877 UTC [2718582] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:46:12.877 UTC [2718582] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.877 UTC [2718582] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:46:12.877 UTC [2718582] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:46:12.877 UTC [2718582] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:46:12.877 UTC [2718582] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:46:12.877 UTC [2718582] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:46:12.877 UTC [2718582] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.877 UTC [2718582] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:46:12.877 UTC [2718582] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.877 UTC [2718582] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:46:12.898 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.898 UTC [2718592] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:46:12.898 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.898 UTC [2718592] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:46:12.898 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.898 UTC [2718592] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:46:12.898 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.898 UTC [2718592] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:46:12.899 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.899 UTC [2718592] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:46:12.899 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.899 UTC [2718592] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:46:12.899 UTC [2718592] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:46:12.899 UTC [2718592] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:46:12.899 UTC [2718592] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:46:12.899 UTC [2718592] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:46:12.899 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.899 UTC [2718592] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:46:12.899 UTC [2718592] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:46:12.899 UTC [2718592] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:46:12.911 UTC [2718598] ERROR:  invalid salt
2023-07-22 05:46:12.911 UTC [2718598] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:46:12.966 UTC [2718606] ERROR:  invalid salt
2023-07-22 05:46:12.966 UTC [2718606] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:46:12.967 UTC [2718606] ERROR:  invalid salt
2023-07-22 05:46:12.967 UTC [2718606] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:46:12.967 UTC [2718606] ERROR:  invalid salt
2023-07-22 05:46:12.967 UTC [2718606] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:46:13.034 UTC [2718610] ERROR:  invalid salt
2023-07-22 05:46:13.034 UTC [2718610] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:46:13.034 UTC [2718610] ERROR:  crypt(3) returned NULL
2023-07-22 05:46:13.034 UTC [2718610] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:46:13.034 UTC [2718610] ERROR:  crypt(3) returned NULL
2023-07-22 05:46:13.034 UTC [2718610] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:46:13.051 UTC [2718614] ERROR:  Corrupt ascii-armor
2023-07-22 05:46:13.051 UTC [2718614] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:46:13.052 UTC [2718614] ERROR:  Corrupt ascii-armor
2023-07-22 05:46:13.052 UTC [2718614] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:46:13.052 UTC [2718614] ERROR:  Corrupt ascii-armor
2023-07-22 05:46:13.052 UTC [2718614] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  mismatched array dimensions
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  mismatched array dimensions
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  wrong number of array subscripts
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  wrong number of array subscripts
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  null value not allowed for header key
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  null value not allowed for header value
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  header key must not contain newlines
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  header value must not contain newlines
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:46:13.053 UTC [2718614] ERROR:  header key must not contain ": "
2023-07-22 05:46:13.053 UTC [2718614] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:46:13.061 UTC [2718618] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.061 UTC [2718618] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:46:13.072 UTC [2718618] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.072 UTC [2718618] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:46:13.072 UTC [2718618] ERROR:  Not text data
2023-07-22 05:46:13.072 UTC [2718618] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:46:13.073 UTC [2718618] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.073 UTC [2718618] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:46:13.073 UTC [2718618] ERROR:  Unsupported compression algorithm
2023-07-22 05:46:13.073 UTC [2718618] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:46:13.084 UTC [2718624] ERROR:  Not text data
2023-07-22 05:46:13.084 UTC [2718624] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:46:13.512 UTC [2718632] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.512 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:46:13.518 UTC [2718632] ERROR:  Wrong key
2023-07-22 05:46:13.518 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:46:13.518 UTC [2718632] ERROR:  No encryption key found
2023-07-22 05:46:13.518 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:46:13.518 UTC [2718632] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.518 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:46:13.521 UTC [2718632] ERROR:  Need password for secret key
2023-07-22 05:46:13.521 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:46:13.522 UTC [2718632] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.522 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:46:13.524 UTC [2718632] ERROR:  Wrong key or corrupt data
2023-07-22 05:46:13.524 UTC [2718632] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:46:13.544 UTC [2718638] ERROR:  No encryption key found
2023-07-22 05:46:13.544 UTC [2718638] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:46:13.544 UTC [2718638] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:46:13.544 UTC [2718638] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:46:13.545 UTC [2718638] ERROR:  Not text data
2023-07-22 05:46:13.545 UTC [2718638] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:46:13.552 UTC [2718642] ERROR:  No encryption key found
2023-07-22 05:46:13.552 UTC [2718642] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:46:13.553 UTC [2718642] ERROR:  No encryption key found
2023-07-22 05:46:13.553 UTC [2718642] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:46:13.561 UTC [2718532] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:46:13.588 UTC [2718532] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.005 s, total=0.027 s; sync files=7, longest=0.004 s, average=0.001 s; distance=4285 kB, estimate=4285 kB
2023-07-22 05:46:45.586 UTC [2718532] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:46:45.725 UTC [2718532] LOG:  checkpoint complete: wrote 557 buffers (3.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.030 s, sync=0.062 s, total=0.140 s; sync files=251, longest=0.004 s, average=0.001 s; distance=144268 kB, estimate=144268 kB
2023-07-22 05:47:17.663 UTC [2718532] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:47:17.774 UTC [2718532] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.012 s, total=0.112 s; sync files=4, longest=0.009 s, average=0.003 s; distance=133190 kB, estimate=143160 kB
2023-07-22 05:47:17.841 UTC [2718531] LOG:  received fast shutdown request
2023-07-22 05:47:17.849 UTC [2718531] LOG:  aborting any active transactions
2023-07-22 05:47:17.850 UTC [2718531] LOG:  background worker "logical replication launcher" (PID 2718538) exited with exit code 1
2023-07-22 05:47:17.851 UTC [2718532] LOG:  shutting down
2023-07-22 05:47:17.894 UTC [2718532] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:47:17.992 UTC [2718532] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.014 s, sync=0.004 s, total=0.110 s; sync files=1, longest=0.004 s, average=0.004 s; distance=8239 kB, estimate=129668 kB
2023-07-22 05:47:18.048 UTC [2718531] LOG:  database system is shut down
2023-07-22 05:47:18.956 UTC [2718778] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:47:18.956 UTC [2718778] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:47:18.971 UTC [2718778] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:47:18.988 UTC [2718781] LOG:  database system was shut down at 2023-07-22 05:47:18 UTC
2023-07-22 05:47:19.001 UTC [2718778] LOG:  database system is ready to accept connections
2023-07-22 05:47:19.254 UTC [2718797] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:47:19.254 UTC [2718797] STATEMENT:  select gen_salt('foo');
2023-07-22 05:47:19.254 UTC [2718797] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:47:19.254 UTC [2718797] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:47:19.254 UTC [2718797] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:47:19.254 UTC [2718797] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:47:19.254 UTC [2718797] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:47:19.254 UTC [2718797] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:47:19.293 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.293 UTC [2718817] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:47:19.293 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.293 UTC [2718817] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:47:19.293 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.293 UTC [2718817] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:47:19.293 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.293 UTC [2718817] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:47:19.293 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.293 UTC [2718817] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Key was too big
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Key was too big
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Key was too big
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Key was too big
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:47:19.294 UTC [2718817] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.294 UTC [2718817] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:47:19.304 UTC [2718823] ERROR:  encrypt error: Encryption failed
2023-07-22 05:47:19.304 UTC [2718823] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:47:19.305 UTC [2718823] ERROR:  decrypt error: Decryption failed
2023-07-22 05:47:19.305 UTC [2718823] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:47:19.305 UTC [2718823] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:47:19.305 UTC [2718823] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:47:19.320 UTC [2718831] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.320 UTC [2718831] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:47:19.321 UTC [2718831] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.321 UTC [2718831] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:47:19.338 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.338 UTC [2718841] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:47:19.338 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.338 UTC [2718841] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:47:19.338 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.338 UTC [2718841] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:47:19.338 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.338 UTC [2718841] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:47:19.338 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.338 UTC [2718841] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:47:19.339 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.339 UTC [2718841] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:47:19.339 UTC [2718841] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:47:19.339 UTC [2718841] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:47:19.339 UTC [2718841] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:47:19.339 UTC [2718841] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:47:19.339 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.339 UTC [2718841] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:47:19.339 UTC [2718841] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:47:19.339 UTC [2718841] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:47:19.348 UTC [2718847] ERROR:  invalid salt
2023-07-22 05:47:19.348 UTC [2718847] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:47:19.490 UTC [2718855] ERROR:  invalid salt
2023-07-22 05:47:19.490 UTC [2718855] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:47:19.490 UTC [2718855] ERROR:  invalid salt
2023-07-22 05:47:19.490 UTC [2718855] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:47:19.490 UTC [2718855] ERROR:  invalid salt
2023-07-22 05:47:19.490 UTC [2718855] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:47:19.571 UTC [2718859] ERROR:  invalid salt
2023-07-22 05:47:19.571 UTC [2718859] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:47:19.571 UTC [2718859] ERROR:  crypt(3) returned NULL
2023-07-22 05:47:19.571 UTC [2718859] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:47:19.571 UTC [2718859] ERROR:  crypt(3) returned NULL
2023-07-22 05:47:19.571 UTC [2718859] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:47:19.628 UTC [2718863] ERROR:  Corrupt ascii-armor
2023-07-22 05:47:19.628 UTC [2718863] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:47:19.629 UTC [2718863] ERROR:  Corrupt ascii-armor
2023-07-22 05:47:19.629 UTC [2718863] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:47:19.630 UTC [2718863] ERROR:  Corrupt ascii-armor
2023-07-22 05:47:19.630 UTC [2718863] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:47:19.639 UTC [2718863] ERROR:  mismatched array dimensions
2023-07-22 05:47:19.639 UTC [2718863] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:47:19.640 UTC [2718863] ERROR:  mismatched array dimensions
2023-07-22 05:47:19.640 UTC [2718863] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:47:19.640 UTC [2718863] ERROR:  wrong number of array subscripts
2023-07-22 05:47:19.640 UTC [2718863] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:47:19.641 UTC [2718863] ERROR:  wrong number of array subscripts
2023-07-22 05:47:19.641 UTC [2718863] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:47:19.641 UTC [2718863] ERROR:  null value not allowed for header key
2023-07-22 05:47:19.641 UTC [2718863] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:47:19.641 UTC [2718863] ERROR:  null value not allowed for header value
2023-07-22 05:47:19.641 UTC [2718863] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:47:19.643 UTC [2718863] ERROR:  header key must not contain newlines
2023-07-22 05:47:19.643 UTC [2718863] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:47:19.643 UTC [2718863] ERROR:  header value must not contain newlines
2023-07-22 05:47:19.643 UTC [2718863] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:47:19.644 UTC [2718863] ERROR:  header key must not contain ": "
2023-07-22 05:47:19.644 UTC [2718863] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:47:19.671 UTC [2718867] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:19.671 UTC [2718867] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:47:19.705 UTC [2718867] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:19.705 UTC [2718867] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:47:19.708 UTC [2718867] ERROR:  Not text data
2023-07-22 05:47:19.708 UTC [2718867] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:47:19.709 UTC [2718867] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:19.709 UTC [2718867] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:47:19.709 UTC [2718867] ERROR:  Unsupported compression algorithm
2023-07-22 05:47:19.709 UTC [2718867] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:47:19.723 UTC [2718873] ERROR:  Not text data
2023-07-22 05:47:19.723 UTC [2718873] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:47:20.212 UTC [2718881] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:20.212 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:47:20.232 UTC [2718881] ERROR:  Wrong key
2023-07-22 05:47:20.232 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:47:20.233 UTC [2718881] ERROR:  No encryption key found
2023-07-22 05:47:20.233 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:47:20.234 UTC [2718881] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:20.234 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:47:20.240 UTC [2718881] ERROR:  Need password for secret key
2023-07-22 05:47:20.240 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:47:20.241 UTC [2718881] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:20.241 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:47:20.245 UTC [2718881] ERROR:  Wrong key or corrupt data
2023-07-22 05:47:20.245 UTC [2718881] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:47:20.267 UTC [2718887] ERROR:  No encryption key found
2023-07-22 05:47:20.267 UTC [2718887] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:47:20.268 UTC [2718887] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:47:20.268 UTC [2718887] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:47:20.269 UTC [2718887] ERROR:  Not text data
2023-07-22 05:47:20.269 UTC [2718887] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:47:20.277 UTC [2718891] ERROR:  No encryption key found
2023-07-22 05:47:20.277 UTC [2718891] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:47:20.277 UTC [2718891] ERROR:  No encryption key found
2023-07-22 05:47:20.277 UTC [2718891] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:47:20.286 UTC [2718779] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:47:20.346 UTC [2718779] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.019 s, sync=0.015 s, total=0.060 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4294 kB, estimate=4294 kB
2023-07-22 05:47:20.670 UTC [2718906] ERROR:  value 0 out of bounds for option "length"
2023-07-22 05:47:20.670 UTC [2718906] DETAIL:  Valid values are between "1" and "4096".
2023-07-22 05:47:20.670 UTC [2718906] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (length=0);
2023-07-22 05:47:20.670 UTC [2718906] ERROR:  value 0 out of bounds for option "col1"
2023-07-22 05:47:20.670 UTC [2718906] DETAIL:  Valid values are between "1" and "4095".
2023-07-22 05:47:20.670 UTC [2718906] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (col1=0);
2023-07-22 05:47:53.424 UTC [2718779] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:47:53.558 UTC [2718779] LOG:  checkpoint complete: wrote 920 buffers (5.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.046 s, sync=0.027 s, total=0.134 s; sync files=258, longest=0.007 s, average=0.001 s; distance=139419 kB, estimate=139419 kB
2023-07-22 05:48:25.323 UTC [2718779] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:48:25.407 UTC [2718779] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.007 s, total=0.085 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133874 kB, estimate=138864 kB
2023-07-22 05:48:25.467 UTC [2718778] LOG:  received fast shutdown request
2023-07-22 05:48:25.476 UTC [2718778] LOG:  aborting any active transactions
2023-07-22 05:48:25.478 UTC [2718778] LOG:  background worker "logical replication launcher" (PID 2718784) exited with exit code 1
2023-07-22 05:48:25.478 UTC [2718779] LOG:  shutting down
2023-07-22 05:48:25.483 UTC [2718779] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:48:25.517 UTC [2718779] LOG:  checkpoint complete: wrote 15 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.009 s, total=0.039 s; sync files=3, longest=0.006 s, average=0.003 s; distance=0 kB, estimate=124978 kB
2023-07-22 05:48:25.537 UTC [2718778] LOG:  database system is shut down
2023-07-22 05:48:26.323 UTC [2719030] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:48:26.323 UTC [2719030] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:48:26.333 UTC [2719030] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:48:26.348 UTC [2719033] LOG:  database system was shut down at 2023-07-22 05:48:26 UTC
2023-07-22 05:48:26.360 UTC [2719030] LOG:  database system is ready to accept connections
2023-07-22 05:48:26.574 UTC [2719049] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:48:26.574 UTC [2719049] STATEMENT:  select gen_salt('foo');
2023-07-22 05:48:26.575 UTC [2719049] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:48:26.575 UTC [2719049] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:48:26.575 UTC [2719049] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:48:26.575 UTC [2719049] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:48:26.575 UTC [2719049] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:48:26.575 UTC [2719049] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:48:26.614 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.614 UTC [2719069] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:48:26.614 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.614 UTC [2719069] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:48:26.614 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.614 UTC [2719069] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:48:26.614 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.614 UTC [2719069] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:48:26.614 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.614 UTC [2719069] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:48:26.614 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.614 UTC [2719069] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Key was too big
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Key was too big
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Key was too big
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Key was too big
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:48:26.615 UTC [2719069] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.615 UTC [2719069] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:48:26.625 UTC [2719075] ERROR:  encrypt error: Encryption failed
2023-07-22 05:48:26.625 UTC [2719075] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:48:26.625 UTC [2719075] ERROR:  decrypt error: Decryption failed
2023-07-22 05:48:26.625 UTC [2719075] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:48:26.626 UTC [2719075] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:48:26.626 UTC [2719075] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:48:26.641 UTC [2719083] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.641 UTC [2719083] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:48:26.641 UTC [2719083] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.641 UTC [2719083] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:48:26.642 UTC [2719083] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.642 UTC [2719083] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:48:26.642 UTC [2719083] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.642 UTC [2719083] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:48:26.642 UTC [2719083] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:48:26.642 UTC [2719083] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:48:26.642 UTC [2719083] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:48:26.642 UTC [2719083] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:48:26.642 UTC [2719083] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.642 UTC [2719083] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:48:26.642 UTC [2719083] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.642 UTC [2719083] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:48:26.659 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.659 UTC [2719093] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:48:26.659 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.659 UTC [2719093] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:48:26.659 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.659 UTC [2719093] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:48:26.659 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.659 UTC [2719093] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:48:26.660 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.660 UTC [2719093] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:48:26.660 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.660 UTC [2719093] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:48:26.660 UTC [2719093] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:48:26.660 UTC [2719093] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:48:26.660 UTC [2719093] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:48:26.660 UTC [2719093] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:48:26.660 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.660 UTC [2719093] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:48:26.660 UTC [2719093] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:48:26.660 UTC [2719093] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:48:26.669 UTC [2719099] ERROR:  invalid salt
2023-07-22 05:48:26.669 UTC [2719099] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:48:26.812 UTC [2719107] ERROR:  invalid salt
2023-07-22 05:48:26.812 UTC [2719107] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:48:26.812 UTC [2719107] ERROR:  invalid salt
2023-07-22 05:48:26.812 UTC [2719107] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:48:26.812 UTC [2719107] ERROR:  invalid salt
2023-07-22 05:48:26.812 UTC [2719107] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:48:26.876 UTC [2719111] ERROR:  invalid salt
2023-07-22 05:48:26.876 UTC [2719111] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:48:26.876 UTC [2719111] ERROR:  crypt(3) returned NULL
2023-07-22 05:48:26.876 UTC [2719111] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:48:26.876 UTC [2719111] ERROR:  crypt(3) returned NULL
2023-07-22 05:48:26.876 UTC [2719111] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:48:26.929 UTC [2719115] ERROR:  Corrupt ascii-armor
2023-07-22 05:48:26.929 UTC [2719115] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:48:26.930 UTC [2719115] ERROR:  Corrupt ascii-armor
2023-07-22 05:48:26.930 UTC [2719115] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:48:26.931 UTC [2719115] ERROR:  Corrupt ascii-armor
2023-07-22 05:48:26.931 UTC [2719115] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:48:26.941 UTC [2719115] ERROR:  mismatched array dimensions
2023-07-22 05:48:26.941 UTC [2719115] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:48:26.941 UTC [2719115] ERROR:  mismatched array dimensions
2023-07-22 05:48:26.941 UTC [2719115] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:48:26.941 UTC [2719115] ERROR:  wrong number of array subscripts
2023-07-22 05:48:26.941 UTC [2719115] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:48:26.942 UTC [2719115] ERROR:  wrong number of array subscripts
2023-07-22 05:48:26.942 UTC [2719115] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:48:26.942 UTC [2719115] ERROR:  null value not allowed for header key
2023-07-22 05:48:26.942 UTC [2719115] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:48:26.943 UTC [2719115] ERROR:  null value not allowed for header value
2023-07-22 05:48:26.943 UTC [2719115] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:48:26.944 UTC [2719115] ERROR:  header key must not contain newlines
2023-07-22 05:48:26.944 UTC [2719115] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:48:26.944 UTC [2719115] ERROR:  header value must not contain newlines
2023-07-22 05:48:26.944 UTC [2719115] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:48:26.945 UTC [2719115] ERROR:  header key must not contain ": "
2023-07-22 05:48:26.945 UTC [2719115] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:48:26.973 UTC [2719119] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:26.973 UTC [2719119] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:48:27.003 UTC [2719119] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:27.003 UTC [2719119] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:48:27.004 UTC [2719119] ERROR:  Not text data
2023-07-22 05:48:27.004 UTC [2719119] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:48:27.005 UTC [2719119] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:27.005 UTC [2719119] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:48:27.006 UTC [2719119] ERROR:  Unsupported compression algorithm
2023-07-22 05:48:27.006 UTC [2719119] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:48:27.019 UTC [2719127] ERROR:  Not text data
2023-07-22 05:48:27.019 UTC [2719127] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:48:27.471 UTC [2719135] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:27.471 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:48:27.477 UTC [2719135] ERROR:  Wrong key
2023-07-22 05:48:27.477 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:48:27.477 UTC [2719135] ERROR:  No encryption key found
2023-07-22 05:48:27.477 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:48:27.477 UTC [2719135] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:27.477 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:48:27.480 UTC [2719135] ERROR:  Need password for secret key
2023-07-22 05:48:27.480 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:48:27.481 UTC [2719135] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:27.481 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:48:27.484 UTC [2719135] ERROR:  Wrong key or corrupt data
2023-07-22 05:48:27.484 UTC [2719135] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:48:27.505 UTC [2719141] ERROR:  No encryption key found
2023-07-22 05:48:27.505 UTC [2719141] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:48:27.505 UTC [2719141] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:48:27.505 UTC [2719141] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:48:27.507 UTC [2719141] ERROR:  Not text data
2023-07-22 05:48:27.507 UTC [2719141] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:48:27.514 UTC [2719145] ERROR:  No encryption key found
2023-07-22 05:48:27.514 UTC [2719145] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:48:27.515 UTC [2719145] ERROR:  No encryption key found
2023-07-22 05:48:27.515 UTC [2719145] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:48:27.524 UTC [2719031] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:48:27.562 UTC [2719031] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.008 s, total=0.038 s; sync files=7, longest=0.005 s, average=0.002 s; distance=4629 kB, estimate=4629 kB
2023-07-22 05:49:01.550 UTC [2719031] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:49:01.669 UTC [2719031] LOG:  checkpoint complete: wrote 1507 buffers (9.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.045 s, sync=0.030 s, total=0.119 s; sync files=312, longest=0.006 s, average=0.001 s; distance=144878 kB, estimate=144878 kB
2023-07-22 05:49:33.037 UTC [2719031] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:49:33.099 UTC [2719031] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.062 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137133 kB, estimate=144104 kB
2023-07-22 05:49:33.166 UTC [2719030] LOG:  received fast shutdown request
2023-07-22 05:49:33.169 UTC [2719030] LOG:  aborting any active transactions
2023-07-22 05:49:33.170 UTC [2719030] LOG:  background worker "logical replication launcher" (PID 2719036) exited with exit code 1
2023-07-22 05:49:33.171 UTC [2719031] LOG:  shutting down
2023-07-22 05:49:33.174 UTC [2719031] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:49:33.190 UTC [2719031] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129693 kB
2023-07-22 05:49:33.209 UTC [2719030] LOG:  database system is shut down
2023-07-22 05:49:34.030 UTC [2719400] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:49:34.030 UTC [2719400] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:49:34.039 UTC [2719400] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:49:34.046 UTC [2719403] LOG:  database system was shut down at 2023-07-22 05:49:33 UTC
2023-07-22 05:49:34.055 UTC [2719400] LOG:  database system is ready to accept connections
2023-07-22 05:49:34.235 UTC [2719419] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:49:34.235 UTC [2719419] STATEMENT:  select gen_salt('foo');
2023-07-22 05:49:34.235 UTC [2719419] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:49:34.235 UTC [2719419] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:49:34.235 UTC [2719419] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:49:34.235 UTC [2719419] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:49:34.236 UTC [2719419] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:49:34.236 UTC [2719419] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:49:34.275 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.275 UTC [2719439] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Key was too big
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Key was too big
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Key was too big
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Key was too big
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:49:34.276 UTC [2719439] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.276 UTC [2719439] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:49:34.285 UTC [2719445] ERROR:  encrypt error: Encryption failed
2023-07-22 05:49:34.285 UTC [2719445] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:49:34.287 UTC [2719445] ERROR:  decrypt error: Decryption failed
2023-07-22 05:49:34.287 UTC [2719445] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:49:34.287 UTC [2719445] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:49:34.287 UTC [2719445] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:49:34.303 UTC [2719453] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.303 UTC [2719453] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:49:34.303 UTC [2719453] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.303 UTC [2719453] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:49:34.303 UTC [2719453] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.303 UTC [2719453] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:49:34.303 UTC [2719453] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.303 UTC [2719453] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:49:34.304 UTC [2719453] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:49:34.304 UTC [2719453] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:49:34.304 UTC [2719453] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:49:34.304 UTC [2719453] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:49:34.304 UTC [2719453] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.304 UTC [2719453] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:49:34.304 UTC [2719453] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.304 UTC [2719453] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:49:34.321 UTC [2719463] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:49:34.321 UTC [2719463] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:49:34.322 UTC [2719463] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:49:34.322 UTC [2719463] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:49:34.322 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.322 UTC [2719463] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:49:34.322 UTC [2719463] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:49:34.322 UTC [2719463] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:49:34.331 UTC [2719469] ERROR:  invalid salt
2023-07-22 05:49:34.331 UTC [2719469] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:49:34.389 UTC [2719477] ERROR:  invalid salt
2023-07-22 05:49:34.389 UTC [2719477] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:49:34.389 UTC [2719477] ERROR:  invalid salt
2023-07-22 05:49:34.389 UTC [2719477] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:49:34.389 UTC [2719477] ERROR:  invalid salt
2023-07-22 05:49:34.389 UTC [2719477] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:49:34.464 UTC [2719481] ERROR:  invalid salt
2023-07-22 05:49:34.464 UTC [2719481] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:49:34.464 UTC [2719481] ERROR:  crypt(3) returned NULL
2023-07-22 05:49:34.464 UTC [2719481] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:49:34.464 UTC [2719481] ERROR:  crypt(3) returned NULL
2023-07-22 05:49:34.464 UTC [2719481] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:49:34.494 UTC [2719485] ERROR:  Corrupt ascii-armor
2023-07-22 05:49:34.494 UTC [2719485] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:49:34.494 UTC [2719485] ERROR:  Corrupt ascii-armor
2023-07-22 05:49:34.494 UTC [2719485] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:49:34.494 UTC [2719485] ERROR:  Corrupt ascii-armor
2023-07-22 05:49:34.494 UTC [2719485] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  mismatched array dimensions
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  mismatched array dimensions
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  wrong number of array subscripts
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  wrong number of array subscripts
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  null value not allowed for header key
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  null value not allowed for header value
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  header key must not contain newlines
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  header value must not contain newlines
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:49:34.496 UTC [2719485] ERROR:  header key must not contain ": "
2023-07-22 05:49:34.496 UTC [2719485] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:49:34.503 UTC [2719489] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:34.503 UTC [2719489] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:49:34.516 UTC [2719489] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:34.516 UTC [2719489] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:49:34.516 UTC [2719489] ERROR:  Not text data
2023-07-22 05:49:34.516 UTC [2719489] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:49:34.517 UTC [2719489] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:34.517 UTC [2719489] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:49:34.517 UTC [2719489] ERROR:  Unsupported compression algorithm
2023-07-22 05:49:34.517 UTC [2719489] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:49:34.530 UTC [2719495] ERROR:  Not text data
2023-07-22 05:49:34.530 UTC [2719495] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:49:34.993 UTC [2719503] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:34.993 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:49:35.010 UTC [2719503] ERROR:  Wrong key
2023-07-22 05:49:35.010 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:49:35.010 UTC [2719503] ERROR:  No encryption key found
2023-07-22 05:49:35.010 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:49:35.011 UTC [2719503] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:35.011 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:49:35.016 UTC [2719503] ERROR:  Need password for secret key
2023-07-22 05:49:35.016 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:49:35.017 UTC [2719503] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:35.017 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:49:35.020 UTC [2719503] ERROR:  Wrong key or corrupt data
2023-07-22 05:49:35.020 UTC [2719503] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:49:35.041 UTC [2719509] ERROR:  No encryption key found
2023-07-22 05:49:35.041 UTC [2719509] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:49:35.041 UTC [2719509] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:49:35.041 UTC [2719509] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:49:35.042 UTC [2719509] ERROR:  Not text data
2023-07-22 05:49:35.042 UTC [2719509] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:49:35.049 UTC [2719513] ERROR:  No encryption key found
2023-07-22 05:49:35.049 UTC [2719513] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:49:35.050 UTC [2719513] ERROR:  No encryption key found
2023-07-22 05:49:35.050 UTC [2719513] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:49:35.059 UTC [2719401] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:49:35.092 UTC [2719401] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.008 s, total=0.034 s; sync files=7, longest=0.003 s, average=0.002 s; distance=4957 kB, estimate=4957 kB
2023-07-22 05:49:36.301 UTC [2719632] ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
2023-07-22 05:49:36.301 UTC [2719632] DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
2023-07-22 05:49:36.301 UTC [2719632] STATEMENT:  INSERT INTO zoo VALUES(123, 'lion');
2023-07-22 05:50:08.818 UTC [2719401] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:50:08.974 UTC [2719401] LOG:  checkpoint complete: wrote 1279 buffers (7.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.029 s, sync=0.073 s, total=0.156 s; sync files=340, longest=0.021 s, average=0.001 s; distance=142707 kB, estimate=142707 kB
2023-07-22 05:50:40.840 UTC [2719401] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:50:40.956 UTC [2719401] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.017 s, sync=0.011 s, total=0.117 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133572 kB, estimate=141793 kB
2023-07-22 05:50:41.023 UTC [2719400] LOG:  received fast shutdown request
2023-07-22 05:50:41.030 UTC [2719400] LOG:  aborting any active transactions
2023-07-22 05:50:41.032 UTC [2719400] LOG:  background worker "logical replication launcher" (PID 2719406) exited with exit code 1
2023-07-22 05:50:41.032 UTC [2719401] LOG:  shutting down
2023-07-22 05:50:41.039 UTC [2719401] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:50:41.075 UTC [2719401] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.044 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=127614 kB
2023-07-22 05:50:41.124 UTC [2719400] LOG:  database system is shut down
2023-07-22 05:50:41.980 UTC [2719767] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:50:41.980 UTC [2719767] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:50:41.995 UTC [2719767] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:50:42.007 UTC [2719770] LOG:  database system was shut down at 2023-07-22 05:50:41 UTC
2023-07-22 05:50:42.018 UTC [2719767] LOG:  database system is ready to accept connections
2023-07-22 05:50:42.220 UTC [2719786] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:50:42.220 UTC [2719786] STATEMENT:  select gen_salt('foo');
2023-07-22 05:50:42.220 UTC [2719786] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:50:42.220 UTC [2719786] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:50:42.220 UTC [2719786] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:50:42.220 UTC [2719786] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:50:42.220 UTC [2719786] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:50:42.220 UTC [2719786] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:50:42.260 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.260 UTC [2719806] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:50:42.260 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.260 UTC [2719806] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:50:42.260 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.260 UTC [2719806] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Key was too big
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Key was too big
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Key was too big
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Key was too big
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:50:42.261 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.261 UTC [2719806] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:50:42.262 UTC [2719806] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:50:42.262 UTC [2719806] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:50:42.262 UTC [2719806] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:50:42.262 UTC [2719806] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:50:42.262 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.262 UTC [2719806] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:50:42.262 UTC [2719806] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.262 UTC [2719806] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:50:42.271 UTC [2719812] ERROR:  encrypt error: Encryption failed
2023-07-22 05:50:42.271 UTC [2719812] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:50:42.272 UTC [2719812] ERROR:  decrypt error: Decryption failed
2023-07-22 05:50:42.272 UTC [2719812] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:50:42.272 UTC [2719812] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:50:42.272 UTC [2719812] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:50:42.288 UTC [2719820] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.288 UTC [2719820] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:50:42.288 UTC [2719820] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.288 UTC [2719820] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:50:42.289 UTC [2719820] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.289 UTC [2719820] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:50:42.289 UTC [2719820] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.289 UTC [2719820] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:50:42.289 UTC [2719820] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:50:42.289 UTC [2719820] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:50:42.289 UTC [2719820] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:50:42.289 UTC [2719820] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:50:42.289 UTC [2719820] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.289 UTC [2719820] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:50:42.289 UTC [2719820] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.289 UTC [2719820] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:50:42.306 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.306 UTC [2719830] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:50:42.306 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.306 UTC [2719830] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:50:42.306 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.306 UTC [2719830] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:50:42.306 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.306 UTC [2719830] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:50:42.306 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.306 UTC [2719830] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:50:42.307 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.307 UTC [2719830] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:50:42.307 UTC [2719830] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:50:42.307 UTC [2719830] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:50:42.307 UTC [2719830] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:50:42.307 UTC [2719830] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:50:42.307 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.307 UTC [2719830] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:50:42.307 UTC [2719830] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:50:42.307 UTC [2719830] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:50:42.316 UTC [2719836] ERROR:  invalid salt
2023-07-22 05:50:42.316 UTC [2719836] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:50:42.471 UTC [2719844] ERROR:  invalid salt
2023-07-22 05:50:42.471 UTC [2719844] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:50:42.472 UTC [2719844] ERROR:  invalid salt
2023-07-22 05:50:42.472 UTC [2719844] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:50:42.472 UTC [2719844] ERROR:  invalid salt
2023-07-22 05:50:42.472 UTC [2719844] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:50:42.553 UTC [2719848] ERROR:  invalid salt
2023-07-22 05:50:42.553 UTC [2719848] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:50:42.553 UTC [2719848] ERROR:  crypt(3) returned NULL
2023-07-22 05:50:42.553 UTC [2719848] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:50:42.553 UTC [2719848] ERROR:  crypt(3) returned NULL
2023-07-22 05:50:42.553 UTC [2719848] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:50:42.586 UTC [2719852] ERROR:  Corrupt ascii-armor
2023-07-22 05:50:42.586 UTC [2719852] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:50:42.587 UTC [2719852] ERROR:  Corrupt ascii-armor
2023-07-22 05:50:42.587 UTC [2719852] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:50:42.587 UTC [2719852] ERROR:  Corrupt ascii-armor
2023-07-22 05:50:42.587 UTC [2719852] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  mismatched array dimensions
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  mismatched array dimensions
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  wrong number of array subscripts
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  wrong number of array subscripts
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  null value not allowed for header key
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  null value not allowed for header value
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  header key must not contain newlines
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  header value must not contain newlines
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:50:42.590 UTC [2719852] ERROR:  header key must not contain ": "
2023-07-22 05:50:42.590 UTC [2719852] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:50:42.602 UTC [2719856] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:42.602 UTC [2719856] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:50:42.623 UTC [2719856] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:42.623 UTC [2719856] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:50:42.624 UTC [2719856] ERROR:  Not text data
2023-07-22 05:50:42.624 UTC [2719856] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:50:42.625 UTC [2719856] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:42.625 UTC [2719856] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:50:42.626 UTC [2719856] ERROR:  Unsupported compression algorithm
2023-07-22 05:50:42.626 UTC [2719856] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:50:42.649 UTC [2719862] ERROR:  Not text data
2023-07-22 05:50:42.649 UTC [2719862] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:50:43.159 UTC [2719870] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:43.159 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:50:43.179 UTC [2719870] ERROR:  Wrong key
2023-07-22 05:50:43.179 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:50:43.179 UTC [2719870] ERROR:  No encryption key found
2023-07-22 05:50:43.179 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:50:43.181 UTC [2719870] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:43.181 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:50:43.187 UTC [2719870] ERROR:  Need password for secret key
2023-07-22 05:50:43.187 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:50:43.187 UTC [2719870] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:43.187 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:50:43.192 UTC [2719870] ERROR:  Wrong key or corrupt data
2023-07-22 05:50:43.192 UTC [2719870] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:50:43.214 UTC [2719876] ERROR:  No encryption key found
2023-07-22 05:50:43.214 UTC [2719876] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:50:43.214 UTC [2719876] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:50:43.214 UTC [2719876] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:50:43.215 UTC [2719876] ERROR:  Not text data
2023-07-22 05:50:43.215 UTC [2719876] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:50:43.223 UTC [2719880] ERROR:  No encryption key found
2023-07-22 05:50:43.223 UTC [2719880] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:50:43.224 UTC [2719880] ERROR:  No encryption key found
2023-07-22 05:50:43.224 UTC [2719880] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:50:43.232 UTC [2719768] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:50:43.290 UTC [2719768] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.016 s, sync=0.014 s, total=0.058 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4418 kB, estimate=4418 kB
2023-07-22 05:50:43.451 UTC [2719895] ERROR:  collation "coll" for encoding "UTF8" does not exist
2023-07-22 05:50:43.451 UTC [2719895] STATEMENT:  ALTER TABLE s.x ADD CONSTRAINT underqualified EXCLUDE USING btree
	  ((s.index_this_expr(y, s.const())) COLLATE coll WITH s.=)
	  USING INDEX TABLESPACE regress_create_idx_tblspace
	  WHERE (s.index_row_if(y));
2023-07-22 05:50:43.453 UTC [2719768] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:50:43.645 UTC [2719768] LOG:  checkpoint complete: wrote 931 buffers (5.7%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.043 s, sync=0.031 s, total=0.192 s; sync files=265, longest=0.007 s, average=0.001 s; distance=4340 kB, estimate=4410 kB
2023-07-22 05:50:43.695 UTC [2719899] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 05:50:43.695 UTC [2719899] DETAIL:  Key (name)=(a) already exists.
2023-07-22 05:50:43.695 UTC [2719899] STATEMENT:  INSERT INTO try (name) VALUES ('a');
2023-07-22 05:50:43.695 UTC [2719899] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 05:50:43.695 UTC [2719899] DETAIL:  Key (name)=(A) already exists.
2023-07-22 05:50:43.695 UTC [2719899] STATEMENT:  INSERT INTO try (name) VALUES ('A');
2023-07-22 05:50:43.695 UTC [2719899] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 05:50:43.695 UTC [2719899] DETAIL:  Key (name)=(aB) already exists.
2023-07-22 05:50:43.695 UTC [2719899] STATEMENT:  INSERT INTO try (name) VALUES ('aB');
2023-07-22 05:50:43.850 UTC [2719899] ERROR:  column "chr" is of type "char" but expression is of type citext at character 44
2023-07-22 05:50:43.850 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.850 UTC [2719899] STATEMENT:  INSERT INTO caster (chr)           VALUES ('f'::citext);
2023-07-22 05:50:43.874 UTC [2719899] ERROR:  column "bytea" is of type bytea but expression is of type text at character 44
2023-07-22 05:50:43.874 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.874 UTC [2719899] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::text);
2023-07-22 05:50:43.879 UTC [2719899] ERROR:  column "bytea" is of type bytea but expression is of type citext at character 44
2023-07-22 05:50:43.879 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.879 UTC [2719899] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::citext);
2023-07-22 05:50:43.883 UTC [2719899] ERROR:  column "boolean" is of type boolean but expression is of type text at character 44
2023-07-22 05:50:43.883 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.883 UTC [2719899] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::text);
2023-07-22 05:50:43.888 UTC [2719899] ERROR:  column "boolean" is of type boolean but expression is of type citext at character 44
2023-07-22 05:50:43.888 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.888 UTC [2719899] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::citext);
2023-07-22 05:50:43.892 UTC [2719899] ERROR:  column "float8" is of type double precision but expression is of type text at character 44
2023-07-22 05:50:43.892 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.892 UTC [2719899] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::text);
2023-07-22 05:50:43.896 UTC [2719899] ERROR:  column "float8" is of type double precision but expression is of type citext at character 44
2023-07-22 05:50:43.896 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.896 UTC [2719899] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::citext);
2023-07-22 05:50:43.901 UTC [2719899] ERROR:  column "float4" is of type real but expression is of type text at character 44
2023-07-22 05:50:43.901 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.901 UTC [2719899] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::text);
2023-07-22 05:50:43.905 UTC [2719899] ERROR:  column "float4" is of type real but expression is of type citext at character 44
2023-07-22 05:50:43.905 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.905 UTC [2719899] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::citext);
2023-07-22 05:50:43.910 UTC [2719899] ERROR:  column "numeric" is of type numeric but expression is of type text at character 44
2023-07-22 05:50:43.910 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.910 UTC [2719899] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::text);
2023-07-22 05:50:43.914 UTC [2719899] ERROR:  column "numeric" is of type numeric but expression is of type citext at character 44
2023-07-22 05:50:43.914 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.914 UTC [2719899] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::citext);
2023-07-22 05:50:43.919 UTC [2719899] ERROR:  column "int8" is of type bigint but expression is of type text at character 44
2023-07-22 05:50:43.919 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.919 UTC [2719899] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::text);
2023-07-22 05:50:43.923 UTC [2719899] ERROR:  column "int8" is of type bigint but expression is of type citext at character 44
2023-07-22 05:50:43.923 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.923 UTC [2719899] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::citext);
2023-07-22 05:50:43.927 UTC [2719899] ERROR:  column "int4" is of type integer but expression is of type text at character 44
2023-07-22 05:50:43.927 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.927 UTC [2719899] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::text);
2023-07-22 05:50:43.932 UTC [2719899] ERROR:  column "int4" is of type integer but expression is of type citext at character 44
2023-07-22 05:50:43.932 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.932 UTC [2719899] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::citext);
2023-07-22 05:50:43.936 UTC [2719899] ERROR:  column "int2" is of type smallint but expression is of type text at character 44
2023-07-22 05:50:43.936 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.936 UTC [2719899] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::text);
2023-07-22 05:50:43.941 UTC [2719899] ERROR:  column "int2" is of type smallint but expression is of type citext at character 44
2023-07-22 05:50:43.941 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.941 UTC [2719899] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::citext);
2023-07-22 05:50:43.945 UTC [2719899] ERROR:  column "cidr" is of type cidr but expression is of type text at character 44
2023-07-22 05:50:43.945 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.945 UTC [2719899] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::text);
2023-07-22 05:50:43.950 UTC [2719899] ERROR:  column "cidr" is of type cidr but expression is of type citext at character 44
2023-07-22 05:50:43.950 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.950 UTC [2719899] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::citext);
2023-07-22 05:50:43.954 UTC [2719899] ERROR:  column "inet" is of type inet but expression is of type text at character 44
2023-07-22 05:50:43.954 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.954 UTC [2719899] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::text);
2023-07-22 05:50:43.959 UTC [2719899] ERROR:  column "inet" is of type inet but expression is of type citext at character 44
2023-07-22 05:50:43.959 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.959 UTC [2719899] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::citext);
2023-07-22 05:50:43.963 UTC [2719899] ERROR:  column "macaddr" is of type macaddr but expression is of type text at character 44
2023-07-22 05:50:43.963 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.963 UTC [2719899] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::text);
2023-07-22 05:50:43.967 UTC [2719899] ERROR:  column "macaddr" is of type macaddr but expression is of type citext at character 44
2023-07-22 05:50:43.967 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.967 UTC [2719899] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::citext);
2023-07-22 05:50:43.972 UTC [2719899] ERROR:  column "money" is of type money but expression is of type text at character 44
2023-07-22 05:50:43.972 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.972 UTC [2719899] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::text);
2023-07-22 05:50:43.976 UTC [2719899] ERROR:  column "money" is of type money but expression is of type citext at character 44
2023-07-22 05:50:43.976 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.976 UTC [2719899] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::citext);
2023-07-22 05:50:43.981 UTC [2719899] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type text at character 44
2023-07-22 05:50:43.981 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.981 UTC [2719899] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 05:50:43.985 UTC [2719899] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type citext at character 44
2023-07-22 05:50:43.985 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.985 UTC [2719899] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 05:50:43.990 UTC [2719899] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type text at character 44
2023-07-22 05:50:43.990 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.990 UTC [2719899] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 05:50:43.994 UTC [2719899] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type citext at character 44
2023-07-22 05:50:43.994 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.994 UTC [2719899] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 05:50:43.999 UTC [2719899] ERROR:  column "interval" is of type interval but expression is of type text at character 44
2023-07-22 05:50:43.999 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:43.999 UTC [2719899] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::text);
2023-07-22 05:50:44.003 UTC [2719899] ERROR:  column "interval" is of type interval but expression is of type citext at character 44
2023-07-22 05:50:44.003 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.003 UTC [2719899] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::citext);
2023-07-22 05:50:44.007 UTC [2719899] ERROR:  column "date" is of type date but expression is of type text at character 44
2023-07-22 05:50:44.007 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.007 UTC [2719899] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::text);
2023-07-22 05:50:44.012 UTC [2719899] ERROR:  column "date" is of type date but expression is of type citext at character 44
2023-07-22 05:50:44.012 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.012 UTC [2719899] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::citext);
2023-07-22 05:50:44.016 UTC [2719899] ERROR:  column "time" is of type time without time zone but expression is of type text at character 44
2023-07-22 05:50:44.016 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.016 UTC [2719899] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::text);
2023-07-22 05:50:44.021 UTC [2719899] ERROR:  column "time" is of type time without time zone but expression is of type citext at character 44
2023-07-22 05:50:44.021 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.021 UTC [2719899] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::citext);
2023-07-22 05:50:44.025 UTC [2719899] ERROR:  column "timetz" is of type time with time zone but expression is of type text at character 44
2023-07-22 05:50:44.025 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.025 UTC [2719899] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::text);
2023-07-22 05:50:44.030 UTC [2719899] ERROR:  column "timetz" is of type time with time zone but expression is of type citext at character 44
2023-07-22 05:50:44.030 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.030 UTC [2719899] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::citext);
2023-07-22 05:50:44.034 UTC [2719899] ERROR:  column "point" is of type point but expression is of type text at character 44
2023-07-22 05:50:44.034 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.034 UTC [2719899] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::text);
2023-07-22 05:50:44.038 UTC [2719899] ERROR:  column "point" is of type point but expression is of type citext at character 44
2023-07-22 05:50:44.038 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.038 UTC [2719899] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::citext);
2023-07-22 05:50:44.043 UTC [2719899] ERROR:  column "lseg" is of type lseg but expression is of type text at character 44
2023-07-22 05:50:44.043 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.043 UTC [2719899] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::text);
2023-07-22 05:50:44.047 UTC [2719899] ERROR:  column "lseg" is of type lseg but expression is of type citext at character 44
2023-07-22 05:50:44.047 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.047 UTC [2719899] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::citext);
2023-07-22 05:50:44.052 UTC [2719899] ERROR:  column "box" is of type box but expression is of type text at character 44
2023-07-22 05:50:44.052 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.052 UTC [2719899] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::text);
2023-07-22 05:50:44.056 UTC [2719899] ERROR:  column "box" is of type box but expression is of type citext at character 44
2023-07-22 05:50:44.056 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.056 UTC [2719899] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::citext);
2023-07-22 05:50:44.061 UTC [2719899] ERROR:  column "path" is of type path but expression is of type text at character 44
2023-07-22 05:50:44.061 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.061 UTC [2719899] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::text);
2023-07-22 05:50:44.065 UTC [2719899] ERROR:  column "path" is of type path but expression is of type citext at character 44
2023-07-22 05:50:44.065 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.065 UTC [2719899] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::citext);
2023-07-22 05:50:44.070 UTC [2719899] ERROR:  column "polygon" is of type polygon but expression is of type text at character 44
2023-07-22 05:50:44.070 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.070 UTC [2719899] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::text);
2023-07-22 05:50:44.074 UTC [2719899] ERROR:  column "polygon" is of type polygon but expression is of type citext at character 44
2023-07-22 05:50:44.074 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.074 UTC [2719899] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::citext);
2023-07-22 05:50:44.079 UTC [2719899] ERROR:  column "circle" is of type circle but expression is of type text at character 44
2023-07-22 05:50:44.079 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.079 UTC [2719899] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::text);
2023-07-22 05:50:44.083 UTC [2719899] ERROR:  column "circle" is of type circle but expression is of type citext at character 44
2023-07-22 05:50:44.083 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.083 UTC [2719899] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::citext);
2023-07-22 05:50:44.088 UTC [2719899] ERROR:  column "bit" is of type bit but expression is of type text at character 44
2023-07-22 05:50:44.088 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.088 UTC [2719899] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::text);
2023-07-22 05:50:44.092 UTC [2719899] ERROR:  column "bit" is of type bit but expression is of type citext at character 44
2023-07-22 05:50:44.092 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.092 UTC [2719899] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::citext);
2023-07-22 05:50:44.097 UTC [2719899] ERROR:  column "bitv" is of type bit varying but expression is of type text at character 44
2023-07-22 05:50:44.097 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.097 UTC [2719899] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::text);
2023-07-22 05:50:44.101 UTC [2719899] ERROR:  column "bitv" is of type bit varying but expression is of type citext at character 44
2023-07-22 05:50:44.101 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.101 UTC [2719899] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::citext);
2023-07-22 05:50:44.106 UTC [2719899] ERROR:  column "tsvector" is of type tsvector but expression is of type text at character 44
2023-07-22 05:50:44.106 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.106 UTC [2719899] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::text);
2023-07-22 05:50:44.110 UTC [2719899] ERROR:  column "tsvector" is of type tsvector but expression is of type citext at character 44
2023-07-22 05:50:44.110 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.110 UTC [2719899] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::citext);
2023-07-22 05:50:44.115 UTC [2719899] ERROR:  column "tsquery" is of type tsquery but expression is of type text at character 44
2023-07-22 05:50:44.115 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.115 UTC [2719899] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::text);
2023-07-22 05:50:44.119 UTC [2719899] ERROR:  column "tsquery" is of type tsquery but expression is of type citext at character 44
2023-07-22 05:50:44.119 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.119 UTC [2719899] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::citext);
2023-07-22 05:50:44.124 UTC [2719899] ERROR:  column "uuid" is of type uuid but expression is of type text at character 44
2023-07-22 05:50:44.124 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.124 UTC [2719899] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::text);
2023-07-22 05:50:44.129 UTC [2719899] ERROR:  column "uuid" is of type uuid but expression is of type citext at character 44
2023-07-22 05:50:44.129 UTC [2719899] HINT:  You will need to rewrite or cast the expression.
2023-07-22 05:50:44.129 UTC [2719899] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::citext);
2023-07-22 05:50:44.164 UTC [2719899] ERROR:  regexp_match() does not support the "global" option
2023-07-22 05:50:44.164 UTC [2719899] HINT:  Use the regexp_matches function instead.
2023-07-22 05:50:44.164 UTC [2719899] CONTEXT:  SQL function "regexp_match" statement 1
2023-07-22 05:50:44.164 UTC [2719899] STATEMENT:  SELECT regexp_match('foobarbequebazmorebarbequetoo'::citext, '(BAR)(BEQUE)'::citext, 'g') AS "error";
2023-07-22 05:51:16.761 UTC [2719768] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:51:16.875 UTC [2719768] LOG:  checkpoint complete: wrote 195 buffers (1.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.016 s, total=0.114 s; sync files=93, longest=0.006 s, average=0.001 s; distance=134230 kB, estimate=134230 kB
2023-07-22 05:51:48.654 UTC [2719768] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:51:48.703 UTC [2719768] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137062 kB, estimate=137062 kB
2023-07-22 05:51:48.767 UTC [2719767] LOG:  received fast shutdown request
2023-07-22 05:51:48.770 UTC [2719767] LOG:  aborting any active transactions
2023-07-22 05:51:48.771 UTC [2719767] LOG:  background worker "logical replication launcher" (PID 2719773) exited with exit code 1
2023-07-22 05:51:48.771 UTC [2719768] LOG:  shutting down
2023-07-22 05:51:48.774 UTC [2719768] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:51:48.791 UTC [2719768] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123356 kB
2023-07-22 05:51:48.846 UTC [2719767] LOG:  database system is shut down
2023-07-22 05:51:49.483 UTC [2720031] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:51:49.483 UTC [2720031] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:51:49.489 UTC [2720031] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:51:49.499 UTC [2720034] LOG:  database system was shut down at 2023-07-22 05:51:49 UTC
2023-07-22 05:51:49.510 UTC [2720031] LOG:  database system is ready to accept connections
2023-07-22 05:51:49.718 UTC [2720050] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:51:49.718 UTC [2720050] STATEMENT:  select gen_salt('foo');
2023-07-22 05:51:49.718 UTC [2720050] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:51:49.718 UTC [2720050] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:51:49.719 UTC [2720050] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:51:49.719 UTC [2720050] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:51:49.719 UTC [2720050] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:51:49.719 UTC [2720050] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:51:49.777 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.777 UTC [2720070] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:51:49.777 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.777 UTC [2720070] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:51:49.777 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.777 UTC [2720070] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:51:49.778 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.778 UTC [2720070] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:51:49.778 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.778 UTC [2720070] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:51:49.778 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.778 UTC [2720070] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:51:49.778 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.778 UTC [2720070] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:51:49.778 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.778 UTC [2720070] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:51:49.778 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.778 UTC [2720070] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Key was too big
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Key was too big
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Key was too big
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Key was too big
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:51:49.779 UTC [2720070] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:51:49.779 UTC [2720070] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:51:49.780 UTC [2720070] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:51:49.780 UTC [2720070] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:51:49.780 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.780 UTC [2720070] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:51:49.780 UTC [2720070] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.780 UTC [2720070] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:51:49.793 UTC [2720076] ERROR:  encrypt error: Encryption failed
2023-07-22 05:51:49.793 UTC [2720076] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:51:49.795 UTC [2720076] ERROR:  decrypt error: Decryption failed
2023-07-22 05:51:49.795 UTC [2720076] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:51:49.795 UTC [2720076] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:51:49.795 UTC [2720076] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:51:49.819 UTC [2720084] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.819 UTC [2720084] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:51:49.820 UTC [2720084] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.820 UTC [2720084] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:51:49.820 UTC [2720084] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.820 UTC [2720084] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:51:49.820 UTC [2720084] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.820 UTC [2720084] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:51:49.820 UTC [2720084] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:51:49.820 UTC [2720084] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:51:49.820 UTC [2720084] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:51:49.820 UTC [2720084] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:51:49.821 UTC [2720084] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.821 UTC [2720084] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:51:49.821 UTC [2720084] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.821 UTC [2720084] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:51:49.846 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.846 UTC [2720094] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:51:49.846 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.846 UTC [2720094] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:51:49.846 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.846 UTC [2720094] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:51:49.846 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.846 UTC [2720094] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:51:49.846 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.846 UTC [2720094] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:51:49.847 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.847 UTC [2720094] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:51:49.847 UTC [2720094] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:51:49.847 UTC [2720094] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:51:49.847 UTC [2720094] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:51:49.847 UTC [2720094] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:51:49.847 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.847 UTC [2720094] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:51:49.847 UTC [2720094] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:51:49.847 UTC [2720094] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:51:49.861 UTC [2720100] ERROR:  invalid salt
2023-07-22 05:51:49.861 UTC [2720100] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:51:49.963 UTC [2720108] ERROR:  invalid salt
2023-07-22 05:51:49.963 UTC [2720108] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:51:49.963 UTC [2720108] ERROR:  invalid salt
2023-07-22 05:51:49.963 UTC [2720108] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:51:49.963 UTC [2720108] ERROR:  invalid salt
2023-07-22 05:51:49.963 UTC [2720108] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:51:50.008 UTC [2720112] ERROR:  invalid salt
2023-07-22 05:51:50.008 UTC [2720112] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:51:50.009 UTC [2720112] ERROR:  crypt(3) returned NULL
2023-07-22 05:51:50.009 UTC [2720112] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:51:50.009 UTC [2720112] ERROR:  crypt(3) returned NULL
2023-07-22 05:51:50.009 UTC [2720112] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:51:50.026 UTC [2720116] ERROR:  Corrupt ascii-armor
2023-07-22 05:51:50.026 UTC [2720116] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:51:50.026 UTC [2720116] ERROR:  Corrupt ascii-armor
2023-07-22 05:51:50.026 UTC [2720116] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:51:50.026 UTC [2720116] ERROR:  Corrupt ascii-armor
2023-07-22 05:51:50.026 UTC [2720116] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:51:50.028 UTC [2720116] ERROR:  mismatched array dimensions
2023-07-22 05:51:50.028 UTC [2720116] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:51:50.028 UTC [2720116] ERROR:  mismatched array dimensions
2023-07-22 05:51:50.028 UTC [2720116] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:51:50.028 UTC [2720116] ERROR:  wrong number of array subscripts
2023-07-22 05:51:50.028 UTC [2720116] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:51:50.028 UTC [2720116] ERROR:  wrong number of array subscripts
2023-07-22 05:51:50.028 UTC [2720116] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:51:50.028 UTC [2720116] ERROR:  null value not allowed for header key
2023-07-22 05:51:50.028 UTC [2720116] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:51:50.028 UTC [2720116] ERROR:  null value not allowed for header value
2023-07-22 05:51:50.028 UTC [2720116] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:51:50.029 UTC [2720116] ERROR:  header key must not contain newlines
2023-07-22 05:51:50.029 UTC [2720116] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:51:50.029 UTC [2720116] ERROR:  header value must not contain newlines
2023-07-22 05:51:50.029 UTC [2720116] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:51:50.029 UTC [2720116] ERROR:  header key must not contain ": "
2023-07-22 05:51:50.029 UTC [2720116] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:51:50.035 UTC [2720120] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.035 UTC [2720120] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:51:50.047 UTC [2720120] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.047 UTC [2720120] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:51:50.048 UTC [2720120] ERROR:  Not text data
2023-07-22 05:51:50.048 UTC [2720120] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:51:50.048 UTC [2720120] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.048 UTC [2720120] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:51:50.049 UTC [2720120] ERROR:  Unsupported compression algorithm
2023-07-22 05:51:50.049 UTC [2720120] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:51:50.061 UTC [2720126] ERROR:  Not text data
2023-07-22 05:51:50.061 UTC [2720126] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:51:50.512 UTC [2720134] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.512 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:51:50.529 UTC [2720134] ERROR:  Wrong key
2023-07-22 05:51:50.529 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:51:50.530 UTC [2720134] ERROR:  No encryption key found
2023-07-22 05:51:50.530 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:51:50.531 UTC [2720134] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.531 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:51:50.536 UTC [2720134] ERROR:  Need password for secret key
2023-07-22 05:51:50.536 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:51:50.537 UTC [2720134] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.537 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:51:50.541 UTC [2720134] ERROR:  Wrong key or corrupt data
2023-07-22 05:51:50.541 UTC [2720134] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:51:50.561 UTC [2720140] ERROR:  No encryption key found
2023-07-22 05:51:50.561 UTC [2720140] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:51:50.561 UTC [2720140] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:51:50.561 UTC [2720140] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:51:50.562 UTC [2720140] ERROR:  Not text data
2023-07-22 05:51:50.562 UTC [2720140] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:51:50.569 UTC [2720144] ERROR:  No encryption key found
2023-07-22 05:51:50.569 UTC [2720144] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:51:50.570 UTC [2720144] ERROR:  No encryption key found
2023-07-22 05:51:50.570 UTC [2720144] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:51:50.579 UTC [2720032] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:51:50.603 UTC [2720032] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.005 s, total=0.024 s; sync files=7, longest=0.003 s, average=0.001 s; distance=4395 kB, estimate=4395 kB
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at end of input
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT ''::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "A"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT 'ABC'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "]"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "]"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[()]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "]"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1)]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "]"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1),]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "2"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1),2]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ","
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1),(2),(3)]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at end of input
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '1,'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at end of input
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '1,2,'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ","
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '1,,2'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ")"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,)'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ")"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,2,)'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ","
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,,2)'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ","
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1),(2)],'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1,2,3),(2,3)]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '[(1,2),(1,2,3)]'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near ","
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1),(2),'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,2,3),(2,3)'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,2),(1,2,3)'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "a"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,2,3)ab'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "a"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,2,3)a'::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "("
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '(1,2)('::cube AS cube;
2023-07-22 05:51:50.682 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.682 UTC [2720159] DETAIL:  syntax error at or near "a"
2023-07-22 05:51:50.682 UTC [2720159] STATEMENT:  SELECT '1,2ab'::cube AS cube;
2023-07-22 05:51:50.683 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.683 UTC [2720159] DETAIL:  syntax error at or near "e"
2023-07-22 05:51:50.683 UTC [2720159] STATEMENT:  SELECT '1 e7'::cube AS cube;
2023-07-22 05:51:50.683 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.683 UTC [2720159] DETAIL:  syntax error at or near "a"
2023-07-22 05:51:50.683 UTC [2720159] STATEMENT:  SELECT '1,2a'::cube AS cube;
2023-07-22 05:51:50.683 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.683 UTC [2720159] DETAIL:  syntax error at or near ".2"
2023-07-22 05:51:50.683 UTC [2720159] STATEMENT:  SELECT '1..2'::cube AS cube;
2023-07-22 05:51:50.683 UTC [2720159] ERROR:  "-1e-700" is out of range for type double precision at character 8
2023-07-22 05:51:50.683 UTC [2720159] STATEMENT:  SELECT '-1e-700'::cube AS cube;
2023-07-22 05:51:50.683 UTC [2720159] ERROR:  UR and LL arrays must be of same length
2023-07-22 05:51:50.683 UTC [2720159] STATEMENT:  SELECT cube('{0,1,2}'::float[], '{3}'::float[]);
2023-07-22 05:51:50.684 UTC [2720159] ERROR:  Index out of bounds
2023-07-22 05:51:50.684 UTC [2720159] STATEMENT:  SELECT cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[4,0]);
2023-07-22 05:51:50.684 UTC [2720159] ERROR:  Index out of bounds
2023-07-22 05:51:50.684 UTC [2720159] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), ARRAY[4,0]);
2023-07-22 05:51:50.684 UTC [2720159] ERROR:  array is too long
2023-07-22 05:51:50.684 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.684 UTC [2720159] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), array(SELECT 1 as a FROM generate_series(1,101)));
2023-07-22 05:51:50.685 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.685 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.685 UTC [2720159] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 05:51:50.685 UTC [2720159] ERROR:  invalid input syntax for cube at character 8
2023-07-22 05:51:50.685 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.685 UTC [2720159] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 05:51:50.685 UTC [2720159] ERROR:  array is too long
2023-07-22 05:51:50.685 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.685 UTC [2720159] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 05:51:50.685 UTC [2720159] ERROR:  can't extend cube
2023-07-22 05:51:50.685 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.685 UTC [2720159] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)),array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 05:51:50.685 UTC [2720159] ERROR:  can't extend cube
2023-07-22 05:51:50.685 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.685 UTC [2720159] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100))), 0);
2023-07-22 05:51:50.685 UTC [2720159] ERROR:  can't extend cube
2023-07-22 05:51:50.685 UTC [2720159] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 05:51:50.685 UTC [2720159] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100)),array(SELECT 0 as a FROM generate_series(1,100))), 0, 0);
2023-07-22 05:51:50.693 UTC [2720159] ERROR:  cube index 0 is out of bounds
2023-07-22 05:51:50.693 UTC [2720159] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->0;
2023-07-22 05:51:50.693 UTC [2720159] ERROR:  cube index 7 is out of bounds
2023-07-22 05:51:50.693 UTC [2720159] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->7;
2023-07-22 05:51:50.693 UTC [2720159] ERROR:  cube index -1 is out of bounds
2023-07-22 05:51:50.693 UTC [2720159] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-1;
2023-07-22 05:51:50.693 UTC [2720159] ERROR:  cube index -6 is out of bounds
2023-07-22 05:51:50.693 UTC [2720159] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-6;
2023-07-22 05:51:50.693 UTC [2720159] ERROR:  cube index -6 is out of bounds
2023-07-22 05:51:50.693 UTC [2720159] STATEMENT:  SELECT cube(array[10,20,30])->-6;
2023-07-22 05:51:50.694 UTC [2720159] ERROR:  zero cube index is not defined
2023-07-22 05:51:50.694 UTC [2720159] STATEMENT:  SELECT cube(array[40,50,60], array[10,20,30])~>0;
2023-07-22 05:52:22.418 UTC [2720032] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:52:22.528 UTC [2720032] LOG:  checkpoint complete: wrote 828 buffers (5.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.039 s, sync=0.030 s, total=0.111 s; sync files=254, longest=0.006 s, average=0.001 s; distance=141328 kB, estimate=141328 kB
2023-07-22 05:52:53.913 UTC [2720032] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:52:53.998 UTC [2720032] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.008 s, total=0.085 s; sync files=4, longest=0.005 s, average=0.002 s; distance=135442 kB, estimate=140739 kB
2023-07-22 05:52:54.062 UTC [2720031] LOG:  received fast shutdown request
2023-07-22 05:52:54.068 UTC [2720031] LOG:  aborting any active transactions
2023-07-22 05:52:54.069 UTC [2720031] LOG:  background worker "logical replication launcher" (PID 2720037) exited with exit code 1
2023-07-22 05:52:54.069 UTC [2720032] LOG:  shutting down
2023-07-22 05:52:54.072 UTC [2720032] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:52:54.096 UTC [2720032] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.028 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126665 kB
2023-07-22 05:52:54.117 UTC [2720031] LOG:  database system is shut down
2023-07-22 05:52:54.942 UTC [2720287] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:52:54.943 UTC [2720287] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:52:54.953 UTC [2720287] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:52:54.969 UTC [2720290] LOG:  database system was shut down at 2023-07-22 05:52:54 UTC
2023-07-22 05:52:54.978 UTC [2720287] LOG:  database system is ready to accept connections
2023-07-22 05:52:55.161 UTC [2720306] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:52:55.161 UTC [2720306] STATEMENT:  select gen_salt('foo');
2023-07-22 05:52:55.161 UTC [2720306] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:52:55.161 UTC [2720306] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:52:55.161 UTC [2720306] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:52:55.161 UTC [2720306] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:52:55.161 UTC [2720306] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:52:55.161 UTC [2720306] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:52:55.204 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.204 UTC [2720326] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Key was too big
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Key was too big
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Key was too big
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:52:55.205 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.205 UTC [2720326] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:52:55.206 UTC [2720326] ERROR:  encrypt error: Key was too big
2023-07-22 05:52:55.206 UTC [2720326] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:52:55.206 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.206 UTC [2720326] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:52:55.206 UTC [2720326] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:52:55.206 UTC [2720326] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:52:55.206 UTC [2720326] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:52:55.206 UTC [2720326] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:52:55.206 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.206 UTC [2720326] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:52:55.206 UTC [2720326] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.206 UTC [2720326] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:52:55.216 UTC [2720332] ERROR:  encrypt error: Encryption failed
2023-07-22 05:52:55.216 UTC [2720332] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:52:55.217 UTC [2720332] ERROR:  decrypt error: Decryption failed
2023-07-22 05:52:55.217 UTC [2720332] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:52:55.217 UTC [2720332] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:52:55.217 UTC [2720332] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:52:55.234 UTC [2720340] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.234 UTC [2720340] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:52:55.234 UTC [2720340] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.234 UTC [2720340] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:52:55.234 UTC [2720340] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.234 UTC [2720340] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:52:55.234 UTC [2720340] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.234 UTC [2720340] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:52:55.235 UTC [2720340] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:52:55.235 UTC [2720340] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:52:55.235 UTC [2720340] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:52:55.235 UTC [2720340] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:52:55.235 UTC [2720340] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.235 UTC [2720340] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:52:55.235 UTC [2720340] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.235 UTC [2720340] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:52:55.253 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.253 UTC [2720350] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:52:55.253 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.253 UTC [2720350] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:52:55.253 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.253 UTC [2720350] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:52:55.253 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.253 UTC [2720350] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:52:55.253 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.253 UTC [2720350] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:52:55.253 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.253 UTC [2720350] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:52:55.254 UTC [2720350] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:52:55.254 UTC [2720350] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:52:55.254 UTC [2720350] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:52:55.254 UTC [2720350] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:52:55.254 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.254 UTC [2720350] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:52:55.254 UTC [2720350] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:52:55.254 UTC [2720350] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:52:55.263 UTC [2720356] ERROR:  invalid salt
2023-07-22 05:52:55.263 UTC [2720356] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:52:55.405 UTC [2720364] ERROR:  invalid salt
2023-07-22 05:52:55.405 UTC [2720364] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:52:55.405 UTC [2720364] ERROR:  invalid salt
2023-07-22 05:52:55.405 UTC [2720364] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:52:55.405 UTC [2720364] ERROR:  invalid salt
2023-07-22 05:52:55.405 UTC [2720364] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:52:55.479 UTC [2720368] ERROR:  invalid salt
2023-07-22 05:52:55.479 UTC [2720368] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:52:55.479 UTC [2720368] ERROR:  crypt(3) returned NULL
2023-07-22 05:52:55.479 UTC [2720368] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:52:55.479 UTC [2720368] ERROR:  crypt(3) returned NULL
2023-07-22 05:52:55.479 UTC [2720368] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:52:55.531 UTC [2720372] ERROR:  Corrupt ascii-armor
2023-07-22 05:52:55.531 UTC [2720372] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:52:55.532 UTC [2720372] ERROR:  Corrupt ascii-armor
2023-07-22 05:52:55.532 UTC [2720372] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:52:55.532 UTC [2720372] ERROR:  Corrupt ascii-armor
2023-07-22 05:52:55.532 UTC [2720372] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:52:55.541 UTC [2720372] ERROR:  mismatched array dimensions
2023-07-22 05:52:55.541 UTC [2720372] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:52:55.541 UTC [2720372] ERROR:  mismatched array dimensions
2023-07-22 05:52:55.541 UTC [2720372] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:52:55.541 UTC [2720372] ERROR:  wrong number of array subscripts
2023-07-22 05:52:55.541 UTC [2720372] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:52:55.542 UTC [2720372] ERROR:  wrong number of array subscripts
2023-07-22 05:52:55.542 UTC [2720372] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:52:55.542 UTC [2720372] ERROR:  null value not allowed for header key
2023-07-22 05:52:55.542 UTC [2720372] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:52:55.542 UTC [2720372] ERROR:  null value not allowed for header value
2023-07-22 05:52:55.542 UTC [2720372] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:52:55.544 UTC [2720372] ERROR:  header key must not contain newlines
2023-07-22 05:52:55.544 UTC [2720372] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:52:55.544 UTC [2720372] ERROR:  header value must not contain newlines
2023-07-22 05:52:55.544 UTC [2720372] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:52:55.544 UTC [2720372] ERROR:  header key must not contain ": "
2023-07-22 05:52:55.544 UTC [2720372] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:52:55.565 UTC [2720376] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:55.565 UTC [2720376] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:52:55.594 UTC [2720376] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:55.594 UTC [2720376] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:52:55.596 UTC [2720376] ERROR:  Not text data
2023-07-22 05:52:55.596 UTC [2720376] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:52:55.597 UTC [2720376] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:55.597 UTC [2720376] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:52:55.598 UTC [2720376] ERROR:  Unsupported compression algorithm
2023-07-22 05:52:55.598 UTC [2720376] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:52:55.616 UTC [2720382] ERROR:  Not text data
2023-07-22 05:52:55.616 UTC [2720382] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:52:56.069 UTC [2720390] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:56.069 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:52:56.082 UTC [2720390] ERROR:  Wrong key
2023-07-22 05:52:56.082 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:52:56.083 UTC [2720390] ERROR:  No encryption key found
2023-07-22 05:52:56.083 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:52:56.084 UTC [2720390] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:56.084 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:52:56.091 UTC [2720390] ERROR:  Need password for secret key
2023-07-22 05:52:56.091 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:52:56.092 UTC [2720390] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:56.092 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:52:56.098 UTC [2720390] ERROR:  Wrong key or corrupt data
2023-07-22 05:52:56.098 UTC [2720390] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:52:56.122 UTC [2720396] ERROR:  No encryption key found
2023-07-22 05:52:56.122 UTC [2720396] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:52:56.122 UTC [2720396] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:52:56.122 UTC [2720396] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:52:56.123 UTC [2720396] ERROR:  Not text data
2023-07-22 05:52:56.123 UTC [2720396] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:52:56.130 UTC [2720400] ERROR:  No encryption key found
2023-07-22 05:52:56.130 UTC [2720400] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:52:56.131 UTC [2720400] ERROR:  No encryption key found
2023-07-22 05:52:56.131 UTC [2720400] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:52:56.139 UTC [2720288] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:52:56.187 UTC [2720288] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.013 s, sync=0.012 s, total=0.048 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4338 kB, estimate=4338 kB
2023-07-22 05:52:56.382 UTC [2720415] ERROR:  invalid attribute number 4
2023-07-22 05:52:56.382 UTC [2720415] STATEMENT:  SELECT dblink_build_sql_insert('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 05:52:56.384 UTC [2720415] ERROR:  invalid attribute number 4
2023-07-22 05:52:56.384 UTC [2720415] STATEMENT:  SELECT dblink_build_sql_update('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 05:52:56.385 UTC [2720415] ERROR:  invalid attribute number 4
2023-07-22 05:52:56.385 UTC [2720415] STATEMENT:  SELECT dblink_build_sql_delete('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 05:52:56.439 UTC [2720415] ERROR:  invalid attribute number 4
2023-07-22 05:52:56.439 UTC [2720415] STATEMENT:  SELECT dblink_build_sql_insert('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 05:52:56.441 UTC [2720415] ERROR:  invalid attribute number 4
2023-07-22 05:52:56.441 UTC [2720415] STATEMENT:  SELECT dblink_build_sql_update('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 05:52:56.442 UTC [2720415] ERROR:  invalid attribute number 4
2023-07-22 05:52:56.442 UTC [2720415] STATEMENT:  SELECT dblink_build_sql_delete('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 05:52:56.487 UTC [2720415] ERROR:  connection not available
2023-07-22 05:52:56.487 UTC [2720415] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 05:52:56.501 UTC [2720417] ERROR:  could not establish connection
2023-07-22 05:52:56.501 UTC [2720417] DETAIL:  syntax error in service file "/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/dblink/pg_service.conf", line 7
2023-07-22 05:52:56.501 UTC [2720417] STATEMENT:  
			SELECT pg_backend_pid() FROM dblink(
				'service=test_ldap '||connection_parameters(),
				-- This string concatenation is a hack to shoehorn a
				-- set_pgservicefile call into the SQL statement.
				'SELECT 1' || set_pgservicefile('pg_service.conf')
			) t(c int)
		
2023-07-22 05:52:56.513 UTC [2720418] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 05:52:56.513 UTC [2720418] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 05:52:56.522 UTC [2720418] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 05:52:56.522 UTC [2720418] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 05:52:56.524 UTC [2720418] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 05:52:56.524 UTC [2720418] STATEMENT:  CLOSE rmt_foobar_cursor
2023-07-22 05:52:56.525 UTC [2720418] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 05:52:56.525 UTC [2720418] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 05:52:56.525 UTC [2720415] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 05:52:56.525 UTC [2720415] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on unnamed dblink connection
2023-07-22 05:52:56.525 UTC [2720415] STATEMENT:  SELECT *
	FROM dblink_fetch('rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 05:52:56.525 UTC [2720418] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 05:52:56.525 UTC [2720418] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 05:52:56.527 UTC [2720415] ERROR:  connection not available
2023-07-22 05:52:56.527 UTC [2720415] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 05:52:56.551 UTC [2720420] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 05:52:56.551 UTC [2720420] STATEMENT:  SELECT * FROM foobar
2023-07-22 05:52:56.556 UTC [2720420] ERROR:  relation "foobar" does not exist at character 8
2023-07-22 05:52:56.556 UTC [2720420] STATEMENT:  UPDATE foobar SET f3[2] = 'b99' WHERE f1 = 11
2023-07-22 05:52:56.561 UTC [2720415] ERROR:  could not establish connection
2023-07-22 05:52:56.561 UTC [2720415] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 05:52:56.561 UTC [2720415] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 05:52:56.572 UTC [2720421] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 05:52:56.572 UTC [2720421] STATEMENT:  SELECT * FROM foobar
2023-07-22 05:52:56.580 UTC [2720415] ERROR:  duplicate connection name
2023-07-22 05:52:56.580 UTC [2720415] STATEMENT:  SELECT dblink_connect('myconn',connection_parameters());
2023-07-22 05:52:56.592 UTC [2720421] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 05:52:56.592 UTC [2720421] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 05:52:56.603 UTC [2720421] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 05:52:56.603 UTC [2720421] STATEMENT:  DECLARE xact_test CURSOR FOR SELECT * FROM foo
2023-07-22 05:52:56.603 UTC [2720415] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 05:52:56.603 UTC [2720415] CONTEXT:  while executing command on dblink connection named "myconn"
2023-07-22 05:52:56.603 UTC [2720415] STATEMENT:  SELECT dblink_exec('myconn','DECLARE xact_test CURSOR FOR SELECT * FROM foo');
2023-07-22 05:52:56.604 UTC [2720421] WARNING:  there is no transaction in progress
WARNING:  there is no transaction in progress
2023-07-22 05:52:56.609 UTC [2720421] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 05:52:56.609 UTC [2720421] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 05:52:56.610 UTC [2720421] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 05:52:56.610 UTC [2720421] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 05:52:56.610 UTC [2720415] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 05:52:56.610 UTC [2720415] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on dblink connection named "myconn"
2023-07-22 05:52:56.610 UTC [2720415] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 05:52:56.611 UTC [2720415] ERROR:  could not establish connection
2023-07-22 05:52:56.611 UTC [2720415] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 05:52:56.611 UTC [2720415] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 05:52:56.632 UTC [2720415] ERROR:  connection "myconn" not available
2023-07-22 05:52:56.632 UTC [2720415] STATEMENT:  SELECT dblink_disconnect('myconn');
2023-07-22 05:52:56.695 UTC [2720415] ERROR:  invalid option "server"
2023-07-22 05:52:56.695 UTC [2720415] HINT:  Valid options in this context are: user, password, sslpassword
2023-07-22 05:52:56.695 UTC [2720415] STATEMENT:  CREATE USER MAPPING FOR public SERVER fdtest
	  OPTIONS (server 'localhost');
2023-07-22 05:52:56.702 UTC [2720415] ERROR:  password is required
2023-07-22 05:52:56.702 UTC [2720415] DETAIL:  Non-superusers must provide a password in the connection string.
2023-07-22 05:52:56.702 UTC [2720415] STATEMENT:  SELECT dblink_connect('myconn', 'fdtest');
2023-07-22 05:52:56.739 UTC [2720431] ERROR:  invalid option "nonexistent"
2023-07-22 05:52:56.739 UTC [2720431] HINT:  There are no valid options in this context.
2023-07-22 05:52:56.739 UTC [2720431] STATEMENT:  ALTER FOREIGN DATA WRAPPER dblink_fdw OPTIONS (nonexistent 'fdw');
2023-07-22 05:52:56.820 UTC [2720431] ERROR:  invalid input syntax for type integer: "not an int"
2023-07-22 05:52:56.820 UTC [2720431] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','error_cursor', 1) AS t(i int);
2023-07-22 05:53:29.371 UTC [2720288] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:53:29.518 UTC [2720288] LOG:  checkpoint complete: wrote 948 buffers (5.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.052 s, sync=0.032 s, total=0.147 s; sync files=269, longest=0.007 s, average=0.001 s; distance=137654 kB, estimate=137654 kB
2023-07-22 05:54:01.345 UTC [2720288] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:54:01.454 UTC [2720288] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.014 s, sync=0.009 s, total=0.110 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133371 kB, estimate=137226 kB
2023-07-22 05:54:01.521 UTC [2720287] LOG:  received fast shutdown request
2023-07-22 05:54:01.528 UTC [2720287] LOG:  aborting any active transactions
2023-07-22 05:54:01.529 UTC [2720287] LOG:  background worker "logical replication launcher" (PID 2720293) exited with exit code 1
2023-07-22 05:54:01.530 UTC [2720288] LOG:  shutting down
2023-07-22 05:54:01.535 UTC [2720288] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:54:01.567 UTC [2720288] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.037 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=123503 kB
2023-07-22 05:54:01.602 UTC [2720287] LOG:  database system is shut down
2023-07-22 05:54:02.364 UTC [2720559] FATAL:  could not access file "decoderbufs": No such file or directory
2023-07-22 05:54:02.364 UTC [2720559] LOG:  database system is shut down
2023-07-22 05:54:03.203 UTC [2720592] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:54:03.203 UTC [2720592] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:54:03.216 UTC [2720592] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:54:03.233 UTC [2720595] LOG:  database system was shut down at 2023-07-22 05:54:02 UTC
2023-07-22 05:54:03.245 UTC [2720592] LOG:  database system is ready to accept connections
2023-07-22 05:54:03.427 UTC [2720611] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:54:03.427 UTC [2720611] STATEMENT:  select gen_salt('foo');
2023-07-22 05:54:03.427 UTC [2720611] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:54:03.427 UTC [2720611] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:54:03.428 UTC [2720611] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:54:03.428 UTC [2720611] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:54:03.428 UTC [2720611] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:54:03.428 UTC [2720611] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:54:03.524 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.524 UTC [2720631] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:54:03.524 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.524 UTC [2720631] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:54:03.524 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.524 UTC [2720631] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:54:03.525 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.525 UTC [2720631] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:54:03.525 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.525 UTC [2720631] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:54:03.525 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.525 UTC [2720631] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:54:03.526 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.526 UTC [2720631] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:54:03.526 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.526 UTC [2720631] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:54:03.526 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.526 UTC [2720631] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:54:03.526 UTC [2720631] ERROR:  encrypt error: Key was too big
2023-07-22 05:54:03.526 UTC [2720631] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:54:03.527 UTC [2720631] ERROR:  encrypt error: Key was too big
2023-07-22 05:54:03.527 UTC [2720631] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:54:03.527 UTC [2720631] ERROR:  encrypt error: Key was too big
2023-07-22 05:54:03.527 UTC [2720631] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:54:03.527 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.527 UTC [2720631] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:54:03.527 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.527 UTC [2720631] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:54:03.528 UTC [2720631] ERROR:  encrypt error: Key was too big
2023-07-22 05:54:03.528 UTC [2720631] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:54:03.528 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.528 UTC [2720631] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:54:03.528 UTC [2720631] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:54:03.528 UTC [2720631] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:54:03.529 UTC [2720631] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:54:03.529 UTC [2720631] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:54:03.529 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.529 UTC [2720631] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:54:03.529 UTC [2720631] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.529 UTC [2720631] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:54:03.552 UTC [2720637] ERROR:  encrypt error: Encryption failed
2023-07-22 05:54:03.552 UTC [2720637] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:54:03.555 UTC [2720637] ERROR:  decrypt error: Decryption failed
2023-07-22 05:54:03.555 UTC [2720637] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:54:03.555 UTC [2720637] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:54:03.555 UTC [2720637] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:54:03.597 UTC [2720645] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.597 UTC [2720645] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:54:03.597 UTC [2720645] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.597 UTC [2720645] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:54:03.598 UTC [2720645] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.598 UTC [2720645] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:54:03.598 UTC [2720645] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.598 UTC [2720645] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:54:03.598 UTC [2720645] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:54:03.598 UTC [2720645] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:54:03.599 UTC [2720645] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:54:03.599 UTC [2720645] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:54:03.599 UTC [2720645] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.599 UTC [2720645] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:54:03.599 UTC [2720645] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.599 UTC [2720645] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:54:03.640 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.640 UTC [2720655] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:54:03.640 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.640 UTC [2720655] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:54:03.641 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.641 UTC [2720655] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:54:03.641 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.641 UTC [2720655] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:54:03.641 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.641 UTC [2720655] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:54:03.642 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.642 UTC [2720655] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:54:03.642 UTC [2720655] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:54:03.642 UTC [2720655] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:54:03.642 UTC [2720655] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:54:03.642 UTC [2720655] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:54:03.643 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.643 UTC [2720655] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:54:03.643 UTC [2720655] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:54:03.643 UTC [2720655] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:54:03.665 UTC [2720661] ERROR:  invalid salt
2023-07-22 05:54:03.665 UTC [2720661] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:54:03.777 UTC [2720669] ERROR:  invalid salt
2023-07-22 05:54:03.777 UTC [2720669] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:54:03.777 UTC [2720669] ERROR:  invalid salt
2023-07-22 05:54:03.777 UTC [2720669] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:54:03.778 UTC [2720669] ERROR:  invalid salt
2023-07-22 05:54:03.778 UTC [2720669] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:54:03.853 UTC [2720673] ERROR:  invalid salt
2023-07-22 05:54:03.853 UTC [2720673] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:54:03.853 UTC [2720673] ERROR:  crypt(3) returned NULL
2023-07-22 05:54:03.853 UTC [2720673] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:54:03.853 UTC [2720673] ERROR:  crypt(3) returned NULL
2023-07-22 05:54:03.853 UTC [2720673] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:54:03.905 UTC [2720677] ERROR:  Corrupt ascii-armor
2023-07-22 05:54:03.905 UTC [2720677] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:54:03.906 UTC [2720677] ERROR:  Corrupt ascii-armor
2023-07-22 05:54:03.906 UTC [2720677] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:54:03.906 UTC [2720677] ERROR:  Corrupt ascii-armor
2023-07-22 05:54:03.906 UTC [2720677] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:54:03.916 UTC [2720677] ERROR:  mismatched array dimensions
2023-07-22 05:54:03.916 UTC [2720677] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:54:03.917 UTC [2720677] ERROR:  mismatched array dimensions
2023-07-22 05:54:03.917 UTC [2720677] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:54:03.917 UTC [2720677] ERROR:  wrong number of array subscripts
2023-07-22 05:54:03.917 UTC [2720677] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:54:03.917 UTC [2720677] ERROR:  wrong number of array subscripts
2023-07-22 05:54:03.917 UTC [2720677] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:54:03.918 UTC [2720677] ERROR:  null value not allowed for header key
2023-07-22 05:54:03.918 UTC [2720677] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:54:03.918 UTC [2720677] ERROR:  null value not allowed for header value
2023-07-22 05:54:03.918 UTC [2720677] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:54:03.920 UTC [2720677] ERROR:  header key must not contain newlines
2023-07-22 05:54:03.920 UTC [2720677] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:54:03.920 UTC [2720677] ERROR:  header value must not contain newlines
2023-07-22 05:54:03.920 UTC [2720677] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:54:03.920 UTC [2720677] ERROR:  header key must not contain ": "
2023-07-22 05:54:03.920 UTC [2720677] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:54:03.948 UTC [2720681] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:03.948 UTC [2720681] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:54:03.984 UTC [2720681] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:03.984 UTC [2720681] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:54:03.985 UTC [2720681] ERROR:  Not text data
2023-07-22 05:54:03.985 UTC [2720681] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:54:03.985 UTC [2720681] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:03.985 UTC [2720681] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:54:03.986 UTC [2720681] ERROR:  Unsupported compression algorithm
2023-07-22 05:54:03.986 UTC [2720681] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:54:04.000 UTC [2720687] ERROR:  Not text data
2023-07-22 05:54:04.000 UTC [2720687] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:54:04.483 UTC [2720695] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:04.483 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:54:04.503 UTC [2720695] ERROR:  Wrong key
2023-07-22 05:54:04.503 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:54:04.503 UTC [2720695] ERROR:  No encryption key found
2023-07-22 05:54:04.503 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:54:04.505 UTC [2720695] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:04.505 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:54:04.510 UTC [2720695] ERROR:  Need password for secret key
2023-07-22 05:54:04.510 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:54:04.511 UTC [2720695] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:04.511 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:54:04.515 UTC [2720695] ERROR:  Wrong key or corrupt data
2023-07-22 05:54:04.515 UTC [2720695] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:54:04.537 UTC [2720701] ERROR:  No encryption key found
2023-07-22 05:54:04.537 UTC [2720701] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:54:04.538 UTC [2720701] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:54:04.538 UTC [2720701] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:54:04.539 UTC [2720701] ERROR:  Not text data
2023-07-22 05:54:04.539 UTC [2720701] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:54:04.547 UTC [2720705] ERROR:  No encryption key found
2023-07-22 05:54:04.547 UTC [2720705] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:54:04.548 UTC [2720705] ERROR:  No encryption key found
2023-07-22 05:54:04.548 UTC [2720705] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:54:04.643 UTC [2720720] ERROR:  maxlen value has to be >= 1
2023-07-22 05:54:04.643 UTC [2720720] STATEMENT:  ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = -214783648);
2023-07-22 05:54:37.167 UTC [2720593] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:54:37.345 UTC [2720593] LOG:  checkpoint complete: wrote 1833 buffers (11.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.048 s, sync=0.059 s, total=0.178 s; sync files=506, longest=0.019 s, average=0.001 s; distance=141952 kB, estimate=141952 kB
2023-07-22 05:55:09.238 UTC [2720593] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:55:09.324 UTC [2720593] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.010 s, sync=0.007 s, total=0.086 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133211 kB, estimate=141078 kB
2023-07-22 05:55:09.364 UTC [2720592] LOG:  received fast shutdown request
2023-07-22 05:55:09.370 UTC [2720592] LOG:  aborting any active transactions
2023-07-22 05:55:09.371 UTC [2720592] LOG:  background worker "logical replication launcher" (PID 2720598) exited with exit code 1
2023-07-22 05:55:09.371 UTC [2720593] LOG:  shutting down
2023-07-22 05:55:09.376 UTC [2720593] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:55:09.402 UTC [2720593] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.031 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126971 kB
2023-07-22 05:55:09.441 UTC [2720592] LOG:  database system is shut down
2023-07-22 05:55:10.099 UTC [2720850] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:55:10.099 UTC [2720850] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:55:10.105 UTC [2720850] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:55:10.112 UTC [2720853] LOG:  database system was shut down at 2023-07-22 05:55:09 UTC
2023-07-22 05:55:10.117 UTC [2720850] LOG:  database system is ready to accept connections
2023-07-22 05:55:10.261 UTC [2720909] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:55:10.261 UTC [2720909] STATEMENT:  select gen_salt('foo');
2023-07-22 05:55:10.262 UTC [2720909] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:55:10.262 UTC [2720909] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:55:10.262 UTC [2720909] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:55:10.262 UTC [2720909] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:55:10.262 UTC [2720909] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:55:10.262 UTC [2720909] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Key was too big
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Key was too big
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:55:10.300 UTC [2720931] ERROR:  encrypt error: Key was too big
2023-07-22 05:55:10.300 UTC [2720931] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt error: Key was too big
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:55:10.301 UTC [2720931] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.301 UTC [2720931] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:55:10.309 UTC [2720937] ERROR:  encrypt error: Encryption failed
2023-07-22 05:55:10.309 UTC [2720937] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:55:10.310 UTC [2720937] ERROR:  decrypt error: Decryption failed
2023-07-22 05:55:10.310 UTC [2720937] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:55:10.310 UTC [2720937] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:55:10.310 UTC [2720937] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:55:10.325 UTC [2720945] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.325 UTC [2720945] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:55:10.326 UTC [2720945] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.326 UTC [2720945] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:55:10.341 UTC [2720955] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:55:10.341 UTC [2720955] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:55:10.350 UTC [2720961] ERROR:  invalid salt
2023-07-22 05:55:10.350 UTC [2720961] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:55:10.453 UTC [2720969] ERROR:  invalid salt
2023-07-22 05:55:10.453 UTC [2720969] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:55:10.453 UTC [2720969] ERROR:  invalid salt
2023-07-22 05:55:10.453 UTC [2720969] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:55:10.453 UTC [2720969] ERROR:  invalid salt
2023-07-22 05:55:10.453 UTC [2720969] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:55:10.496 UTC [2720973] ERROR:  invalid salt
2023-07-22 05:55:10.496 UTC [2720973] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:55:10.496 UTC [2720973] ERROR:  crypt(3) returned NULL
2023-07-22 05:55:10.496 UTC [2720973] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:55:10.496 UTC [2720973] ERROR:  crypt(3) returned NULL
2023-07-22 05:55:10.496 UTC [2720973] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:55:10.540 UTC [2720977] ERROR:  Corrupt ascii-armor
2023-07-22 05:55:10.540 UTC [2720977] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:55:10.541 UTC [2720977] ERROR:  Corrupt ascii-armor
2023-07-22 05:55:10.541 UTC [2720977] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:55:10.541 UTC [2720977] ERROR:  Corrupt ascii-armor
2023-07-22 05:55:10.541 UTC [2720977] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:55:10.551 UTC [2720977] ERROR:  mismatched array dimensions
2023-07-22 05:55:10.551 UTC [2720977] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:55:10.552 UTC [2720977] ERROR:  mismatched array dimensions
2023-07-22 05:55:10.552 UTC [2720977] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:55:10.552 UTC [2720977] ERROR:  wrong number of array subscripts
2023-07-22 05:55:10.552 UTC [2720977] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:55:10.552 UTC [2720977] ERROR:  wrong number of array subscripts
2023-07-22 05:55:10.552 UTC [2720977] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:55:10.553 UTC [2720977] ERROR:  null value not allowed for header key
2023-07-22 05:55:10.553 UTC [2720977] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:55:10.553 UTC [2720977] ERROR:  null value not allowed for header value
2023-07-22 05:55:10.553 UTC [2720977] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:55:10.555 UTC [2720977] ERROR:  header key must not contain newlines
2023-07-22 05:55:10.555 UTC [2720977] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:55:10.555 UTC [2720977] ERROR:  header value must not contain newlines
2023-07-22 05:55:10.555 UTC [2720977] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:55:10.556 UTC [2720977] ERROR:  header key must not contain ": "
2023-07-22 05:55:10.556 UTC [2720977] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:55:10.583 UTC [2720981] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:10.583 UTC [2720981] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:55:10.621 UTC [2720981] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:10.621 UTC [2720981] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:55:10.622 UTC [2720981] ERROR:  Not text data
2023-07-22 05:55:10.622 UTC [2720981] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:55:10.623 UTC [2720981] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:10.623 UTC [2720981] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:55:10.623 UTC [2720981] ERROR:  Unsupported compression algorithm
2023-07-22 05:55:10.623 UTC [2720981] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:55:10.638 UTC [2720987] ERROR:  Not text data
2023-07-22 05:55:10.638 UTC [2720987] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:55:11.087 UTC [2720995] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:11.087 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:55:11.102 UTC [2720995] ERROR:  Wrong key
2023-07-22 05:55:11.102 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:55:11.102 UTC [2720995] ERROR:  No encryption key found
2023-07-22 05:55:11.102 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:55:11.103 UTC [2720995] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:11.103 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:55:11.108 UTC [2720995] ERROR:  Need password for secret key
2023-07-22 05:55:11.108 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:55:11.108 UTC [2720995] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:11.108 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:55:11.112 UTC [2720995] ERROR:  Wrong key or corrupt data
2023-07-22 05:55:11.112 UTC [2720995] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:55:11.132 UTC [2721001] ERROR:  No encryption key found
2023-07-22 05:55:11.132 UTC [2721001] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:55:11.132 UTC [2721001] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:55:11.132 UTC [2721001] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:55:11.133 UTC [2721001] ERROR:  Not text data
2023-07-22 05:55:11.133 UTC [2721001] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:55:11.140 UTC [2721005] ERROR:  No encryption key found
2023-07-22 05:55:11.140 UTC [2721005] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:55:11.141 UTC [2721005] ERROR:  No encryption key found
2023-07-22 05:55:11.141 UTC [2721005] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:55:42.868 UTC [2720851] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:55:43.044 UTC [2720851] LOG:  checkpoint complete: wrote 1145 buffers (7.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.021 s, sync=0.111 s, total=0.177 s; sync files=506, longest=0.004 s, average=0.001 s; distance=145272 kB, estimate=145272 kB
2023-07-22 05:56:14.737 UTC [2720851] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:56:15.238 UTC [2720851] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.422 s, sync=0.008 s, total=0.502 s; sync files=4, longest=0.007 s, average=0.002 s; distance=134767 kB, estimate=144221 kB
2023-07-22 05:56:15.304 UTC [2720850] LOG:  received fast shutdown request
2023-07-22 05:56:15.310 UTC [2720850] LOG:  aborting any active transactions
2023-07-22 05:56:15.311 UTC [2720850] LOG:  background worker "logical replication launcher" (PID 2720856) exited with exit code 1
2023-07-22 05:56:15.311 UTC [2720851] LOG:  shutting down
2023-07-22 05:56:15.316 UTC [2720851] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:56:15.350 UTC [2720851] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.039 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129799 kB
2023-07-22 05:56:15.372 UTC [2720850] LOG:  database system is shut down
2023-07-22 05:56:16.151 UTC [2721144] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:56:16.151 UTC [2721144] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:56:16.163 UTC [2721144] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:56:16.177 UTC [2721147] LOG:  database system was shut down at 2023-07-22 05:56:15 UTC
2023-07-22 05:56:16.186 UTC [2721144] LOG:  database system is ready to accept connections
2023-07-22 05:56:16.402 UTC [2721163] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:56:16.402 UTC [2721163] STATEMENT:  select gen_salt('foo');
2023-07-22 05:56:16.402 UTC [2721163] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:56:16.402 UTC [2721163] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:56:16.403 UTC [2721163] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:56:16.403 UTC [2721163] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:56:16.404 UTC [2721163] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:56:16.404 UTC [2721163] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:56:16.501 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.501 UTC [2721183] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:56:16.501 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.501 UTC [2721183] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:56:16.501 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.501 UTC [2721183] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:56:16.502 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.502 UTC [2721183] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:56:16.502 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.502 UTC [2721183] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:56:16.502 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.502 UTC [2721183] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:56:16.503 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.503 UTC [2721183] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:56:16.503 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.503 UTC [2721183] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:56:16.503 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.503 UTC [2721183] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:56:16.503 UTC [2721183] ERROR:  encrypt error: Key was too big
2023-07-22 05:56:16.503 UTC [2721183] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:56:16.503 UTC [2721183] ERROR:  encrypt error: Key was too big
2023-07-22 05:56:16.503 UTC [2721183] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:56:16.504 UTC [2721183] ERROR:  encrypt error: Key was too big
2023-07-22 05:56:16.504 UTC [2721183] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:56:16.504 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.504 UTC [2721183] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:56:16.504 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.504 UTC [2721183] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:56:16.505 UTC [2721183] ERROR:  encrypt error: Key was too big
2023-07-22 05:56:16.505 UTC [2721183] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:56:16.505 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.505 UTC [2721183] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:56:16.505 UTC [2721183] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:56:16.505 UTC [2721183] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:56:16.506 UTC [2721183] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:56:16.506 UTC [2721183] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:56:16.506 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.506 UTC [2721183] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:56:16.506 UTC [2721183] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.506 UTC [2721183] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:56:16.528 UTC [2721189] ERROR:  encrypt error: Encryption failed
2023-07-22 05:56:16.528 UTC [2721189] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:56:16.531 UTC [2721189] ERROR:  decrypt error: Decryption failed
2023-07-22 05:56:16.531 UTC [2721189] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:56:16.531 UTC [2721189] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:56:16.531 UTC [2721189] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:56:16.573 UTC [2721197] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.573 UTC [2721197] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:56:16.573 UTC [2721197] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.573 UTC [2721197] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:56:16.573 UTC [2721197] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.573 UTC [2721197] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:56:16.574 UTC [2721197] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.574 UTC [2721197] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:56:16.574 UTC [2721197] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:56:16.574 UTC [2721197] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:56:16.575 UTC [2721197] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:56:16.575 UTC [2721197] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:56:16.575 UTC [2721197] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.575 UTC [2721197] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:56:16.575 UTC [2721197] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.575 UTC [2721197] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:56:16.616 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.616 UTC [2721207] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:56:16.616 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.616 UTC [2721207] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:56:16.616 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.616 UTC [2721207] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:56:16.617 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.617 UTC [2721207] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:56:16.617 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.617 UTC [2721207] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:56:16.617 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.617 UTC [2721207] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:56:16.618 UTC [2721207] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:56:16.618 UTC [2721207] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:56:16.618 UTC [2721207] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:56:16.618 UTC [2721207] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:56:16.618 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.618 UTC [2721207] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:56:16.619 UTC [2721207] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:56:16.619 UTC [2721207] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:56:16.641 UTC [2721213] ERROR:  invalid salt
2023-07-22 05:56:16.641 UTC [2721213] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:56:16.788 UTC [2721221] ERROR:  invalid salt
2023-07-22 05:56:16.788 UTC [2721221] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:56:16.789 UTC [2721221] ERROR:  invalid salt
2023-07-22 05:56:16.789 UTC [2721221] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:56:16.789 UTC [2721221] ERROR:  invalid salt
2023-07-22 05:56:16.789 UTC [2721221] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:56:16.870 UTC [2721225] ERROR:  invalid salt
2023-07-22 05:56:16.870 UTC [2721225] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:56:16.870 UTC [2721225] ERROR:  crypt(3) returned NULL
2023-07-22 05:56:16.870 UTC [2721225] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:56:16.870 UTC [2721225] ERROR:  crypt(3) returned NULL
2023-07-22 05:56:16.870 UTC [2721225] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:56:16.930 UTC [2721229] ERROR:  Corrupt ascii-armor
2023-07-22 05:56:16.930 UTC [2721229] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:56:16.931 UTC [2721229] ERROR:  Corrupt ascii-armor
2023-07-22 05:56:16.931 UTC [2721229] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:56:16.931 UTC [2721229] ERROR:  Corrupt ascii-armor
2023-07-22 05:56:16.931 UTC [2721229] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:56:16.941 UTC [2721229] ERROR:  mismatched array dimensions
2023-07-22 05:56:16.941 UTC [2721229] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:56:16.942 UTC [2721229] ERROR:  mismatched array dimensions
2023-07-22 05:56:16.942 UTC [2721229] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:56:16.942 UTC [2721229] ERROR:  wrong number of array subscripts
2023-07-22 05:56:16.942 UTC [2721229] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:56:16.942 UTC [2721229] ERROR:  wrong number of array subscripts
2023-07-22 05:56:16.942 UTC [2721229] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:56:16.943 UTC [2721229] ERROR:  null value not allowed for header key
2023-07-22 05:56:16.943 UTC [2721229] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:56:16.943 UTC [2721229] ERROR:  null value not allowed for header value
2023-07-22 05:56:16.943 UTC [2721229] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:56:16.945 UTC [2721229] ERROR:  header key must not contain newlines
2023-07-22 05:56:16.945 UTC [2721229] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:56:16.945 UTC [2721229] ERROR:  header value must not contain newlines
2023-07-22 05:56:16.945 UTC [2721229] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:56:16.945 UTC [2721229] ERROR:  header key must not contain ": "
2023-07-22 05:56:16.945 UTC [2721229] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:56:16.973 UTC [2721233] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:16.973 UTC [2721233] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:56:17.007 UTC [2721233] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:17.007 UTC [2721233] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:56:17.008 UTC [2721233] ERROR:  Not text data
2023-07-22 05:56:17.008 UTC [2721233] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:56:17.009 UTC [2721233] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:17.009 UTC [2721233] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:56:17.009 UTC [2721233] ERROR:  Unsupported compression algorithm
2023-07-22 05:56:17.009 UTC [2721233] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:56:17.026 UTC [2721239] ERROR:  Not text data
2023-07-22 05:56:17.026 UTC [2721239] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:56:17.500 UTC [2721247] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:17.500 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:56:17.519 UTC [2721247] ERROR:  Wrong key
2023-07-22 05:56:17.519 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:56:17.519 UTC [2721247] ERROR:  No encryption key found
2023-07-22 05:56:17.519 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:56:17.521 UTC [2721247] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:17.521 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:56:17.527 UTC [2721247] ERROR:  Need password for secret key
2023-07-22 05:56:17.527 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:56:17.528 UTC [2721247] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:17.528 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:56:17.533 UTC [2721247] ERROR:  Wrong key or corrupt data
2023-07-22 05:56:17.533 UTC [2721247] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:56:17.556 UTC [2721255] ERROR:  No encryption key found
2023-07-22 05:56:17.556 UTC [2721255] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:56:17.556 UTC [2721255] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:56:17.556 UTC [2721255] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:56:17.558 UTC [2721255] ERROR:  Not text data
2023-07-22 05:56:17.558 UTC [2721255] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:56:17.566 UTC [2721259] ERROR:  No encryption key found
2023-07-22 05:56:17.566 UTC [2721259] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:56:17.567 UTC [2721259] ERROR:  No encryption key found
2023-07-22 05:56:17.567 UTC [2721259] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:56:50.007 UTC [2721145] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:56:50.125 UTC [2721145] LOG:  checkpoint complete: wrote 929 buffers (5.7%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.024 s, sync=0.036 s, total=0.118 s; sync files=261, longest=0.015 s, average=0.001 s; distance=139129 kB, estimate=139129 kB
2023-07-22 05:57:21.866 UTC [2721145] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:57:21.954 UTC [2721145] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.013 s, sync=0.011 s, total=0.088 s; sync files=4, longest=0.007 s, average=0.003 s; distance=134692 kB, estimate=138686 kB
2023-07-22 05:57:21.995 UTC [2721144] LOG:  received fast shutdown request
2023-07-22 05:57:22.001 UTC [2721144] LOG:  aborting any active transactions
2023-07-22 05:57:22.002 UTC [2721144] LOG:  background worker "logical replication launcher" (PID 2721150) exited with exit code 1
2023-07-22 05:57:22.002 UTC [2721145] LOG:  shutting down
2023-07-22 05:57:22.007 UTC [2721145] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:57:22.030 UTC [2721145] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.028 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=124817 kB
2023-07-22 05:57:22.061 UTC [2721144] LOG:  database system is shut down
2023-07-22 05:57:22.829 UTC [2721384] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:57:22.829 UTC [2721384] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:57:22.837 UTC [2721384] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:57:22.850 UTC [2721387] LOG:  database system was shut down at 2023-07-22 05:57:22 UTC
2023-07-22 05:57:22.863 UTC [2721384] LOG:  database system is ready to accept connections
2023-07-22 05:57:23.027 UTC [2721406] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:57:23.027 UTC [2721406] STATEMENT:  select gen_salt('foo');
2023-07-22 05:57:23.027 UTC [2721406] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:57:23.027 UTC [2721406] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:57:23.027 UTC [2721406] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:57:23.027 UTC [2721406] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:57:23.028 UTC [2721406] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:57:23.028 UTC [2721406] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:57:23.068 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.068 UTC [2721426] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:57:23.068 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.068 UTC [2721426] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:57:23.068 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.068 UTC [2721426] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:57:23.069 UTC [2721426] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:23.069 UTC [2721426] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:57:23.070 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.070 UTC [2721426] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:57:23.070 UTC [2721426] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:23.070 UTC [2721426] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:57:23.070 UTC [2721426] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:23.070 UTC [2721426] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:57:23.070 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.070 UTC [2721426] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:57:23.070 UTC [2721426] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.070 UTC [2721426] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:57:23.079 UTC [2721432] ERROR:  encrypt error: Encryption failed
2023-07-22 05:57:23.079 UTC [2721432] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:57:23.080 UTC [2721432] ERROR:  decrypt error: Decryption failed
2023-07-22 05:57:23.080 UTC [2721432] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:57:23.080 UTC [2721432] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:57:23.080 UTC [2721432] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:57:23.097 UTC [2721440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.097 UTC [2721440] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:57:23.097 UTC [2721440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.097 UTC [2721440] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:57:23.097 UTC [2721440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.097 UTC [2721440] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:57:23.097 UTC [2721440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.097 UTC [2721440] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:57:23.097 UTC [2721440] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:23.097 UTC [2721440] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:57:23.097 UTC [2721440] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:23.097 UTC [2721440] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:57:23.098 UTC [2721440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.098 UTC [2721440] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:57:23.098 UTC [2721440] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.098 UTC [2721440] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:57:23.116 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.116 UTC [2721450] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:57:23.116 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.116 UTC [2721450] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:57:23.116 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.116 UTC [2721450] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:57:23.116 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.116 UTC [2721450] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:57:23.116 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.116 UTC [2721450] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:57:23.116 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.116 UTC [2721450] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:57:23.117 UTC [2721450] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:23.117 UTC [2721450] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:57:23.117 UTC [2721450] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:23.117 UTC [2721450] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:57:23.117 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.117 UTC [2721450] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:57:23.117 UTC [2721450] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:23.117 UTC [2721450] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:57:23.127 UTC [2721456] ERROR:  invalid salt
2023-07-22 05:57:23.127 UTC [2721456] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:57:23.262 UTC [2721464] ERROR:  invalid salt
2023-07-22 05:57:23.262 UTC [2721464] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:57:23.263 UTC [2721464] ERROR:  invalid salt
2023-07-22 05:57:23.263 UTC [2721464] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:57:23.263 UTC [2721464] ERROR:  invalid salt
2023-07-22 05:57:23.263 UTC [2721464] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:57:23.325 UTC [2721468] ERROR:  invalid salt
2023-07-22 05:57:23.325 UTC [2721468] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:57:23.325 UTC [2721468] ERROR:  crypt(3) returned NULL
2023-07-22 05:57:23.325 UTC [2721468] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:57:23.325 UTC [2721468] ERROR:  crypt(3) returned NULL
2023-07-22 05:57:23.325 UTC [2721468] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:57:23.380 UTC [2721472] ERROR:  Corrupt ascii-armor
2023-07-22 05:57:23.380 UTC [2721472] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:57:23.381 UTC [2721472] ERROR:  Corrupt ascii-armor
2023-07-22 05:57:23.381 UTC [2721472] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:57:23.381 UTC [2721472] ERROR:  Corrupt ascii-armor
2023-07-22 05:57:23.381 UTC [2721472] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:57:23.391 UTC [2721472] ERROR:  mismatched array dimensions
2023-07-22 05:57:23.391 UTC [2721472] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:57:23.391 UTC [2721472] ERROR:  mismatched array dimensions
2023-07-22 05:57:23.391 UTC [2721472] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:57:23.392 UTC [2721472] ERROR:  wrong number of array subscripts
2023-07-22 05:57:23.392 UTC [2721472] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:57:23.392 UTC [2721472] ERROR:  wrong number of array subscripts
2023-07-22 05:57:23.392 UTC [2721472] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:57:23.393 UTC [2721472] ERROR:  null value not allowed for header key
2023-07-22 05:57:23.393 UTC [2721472] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:57:23.393 UTC [2721472] ERROR:  null value not allowed for header value
2023-07-22 05:57:23.393 UTC [2721472] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:57:23.395 UTC [2721472] ERROR:  header key must not contain newlines
2023-07-22 05:57:23.395 UTC [2721472] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:57:23.395 UTC [2721472] ERROR:  header value must not contain newlines
2023-07-22 05:57:23.395 UTC [2721472] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:57:23.395 UTC [2721472] ERROR:  header key must not contain ": "
2023-07-22 05:57:23.395 UTC [2721472] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:57:23.419 UTC [2721476] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.419 UTC [2721476] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:57:23.449 UTC [2721476] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.449 UTC [2721476] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:57:23.451 UTC [2721476] ERROR:  Not text data
2023-07-22 05:57:23.451 UTC [2721476] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:57:23.452 UTC [2721476] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.452 UTC [2721476] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:57:23.453 UTC [2721476] ERROR:  Unsupported compression algorithm
2023-07-22 05:57:23.453 UTC [2721476] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:57:23.470 UTC [2721482] ERROR:  Not text data
2023-07-22 05:57:23.470 UTC [2721482] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:57:23.935 UTC [2721490] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.935 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:57:23.951 UTC [2721490] ERROR:  Wrong key
2023-07-22 05:57:23.951 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:57:23.952 UTC [2721490] ERROR:  No encryption key found
2023-07-22 05:57:23.952 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:57:23.954 UTC [2721490] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.954 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:57:23.963 UTC [2721490] ERROR:  Need password for secret key
2023-07-22 05:57:23.963 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:57:23.964 UTC [2721490] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.964 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:57:23.969 UTC [2721490] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:23.969 UTC [2721490] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:57:23.993 UTC [2721496] ERROR:  No encryption key found
2023-07-22 05:57:23.993 UTC [2721496] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:57:23.994 UTC [2721496] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:57:23.994 UTC [2721496] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:57:23.995 UTC [2721496] ERROR:  Not text data
2023-07-22 05:57:23.995 UTC [2721496] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:57:24.002 UTC [2721500] ERROR:  No encryption key found
2023-07-22 05:57:24.002 UTC [2721500] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:57:24.003 UTC [2721500] ERROR:  No encryption key found
2023-07-22 05:57:24.003 UTC [2721500] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:57:24.065 UTC [2721515] ERROR:  required extension "cube" is not installed
2023-07-22 05:57:24.065 UTC [2721515] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 05:57:24.065 UTC [2721515] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 05:57:24.111 UTC [2721515] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 05:57:24.111 UTC [2721515] DETAIL:  extension earthdistance depends on extension cube
2023-07-22 05:57:24.111 UTC [2721515] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 05:57:24.111 UTC [2721515] STATEMENT:  drop extension cube;
2023-07-22 05:57:24.112 UTC [2721515] ERROR:  cannot drop type cube because extension cube requires it
2023-07-22 05:57:24.112 UTC [2721515] HINT:  You can drop extension cube instead.
2023-07-22 05:57:24.112 UTC [2721515] STATEMENT:  drop type cube;
2023-07-22 05:57:24.115 UTC [2721515] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 05:57:24.115 UTC [2721515] DETAIL:  column f1 of table foo depends on type cube
2023-07-22 05:57:24.115 UTC [2721515] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 05:57:24.115 UTC [2721515] STATEMENT:  drop extension cube;
2023-07-22 05:57:24.187 UTC [2721515] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 05:57:24.187 UTC [2721515] DETAIL:  column f1 of table foo depends on type c.cube
2023-07-22 05:57:24.187 UTC [2721515] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 05:57:24.187 UTC [2721515] STATEMENT:  drop extension cube;
2023-07-22 05:57:24.188 UTC [2721515] ERROR:  cannot drop schema c because other objects depend on it
2023-07-22 05:57:24.188 UTC [2721515] DETAIL:  extension cube depends on schema c
	column f1 of table foo depends on type c.cube
2023-07-22 05:57:24.188 UTC [2721515] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 05:57:24.188 UTC [2721515] STATEMENT:  drop schema c;
2023-07-22 05:57:24.207 UTC [2721384] LOG:  received fast shutdown request
2023-07-22 05:57:24.211 UTC [2721384] LOG:  aborting any active transactions
2023-07-22 05:57:24.212 UTC [2721384] LOG:  background worker "logical replication launcher" (PID 2721390) exited with exit code 1
2023-07-22 05:57:24.212 UTC [2721385] LOG:  shutting down
2023-07-22 05:57:24.215 UTC [2721385] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:57:24.312 UTC [2721385] LOG:  checkpoint complete: wrote 1854 buffers (11.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.048 s, sync=0.037 s, total=0.101 s; sync files=506, longest=0.004 s, average=0.001 s; distance=8913 kB, estimate=8913 kB
2023-07-22 05:57:24.319 UTC [2721384] LOG:  database system is shut down
2023-07-22 05:57:25.059 UTC [2721550] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:57:25.059 UTC [2721550] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:57:25.065 UTC [2721550] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:57:25.077 UTC [2721553] LOG:  database system was shut down at 2023-07-22 05:57:24 UTC
2023-07-22 05:57:25.083 UTC [2721550] LOG:  database system is ready to accept connections
2023-07-22 05:57:25.203 UTC [2721569] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:57:25.203 UTC [2721569] STATEMENT:  select gen_salt('foo');
2023-07-22 05:57:25.203 UTC [2721569] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:57:25.203 UTC [2721569] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:57:25.203 UTC [2721569] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:57:25.203 UTC [2721569] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:57:25.203 UTC [2721569] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:57:25.203 UTC [2721569] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:57:25.242 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.242 UTC [2721589] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:57:25.242 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.242 UTC [2721589] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:57:25.242 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.242 UTC [2721589] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:57:25.242 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.242 UTC [2721589] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Key was too big
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:57:25.243 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.243 UTC [2721589] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:57:25.244 UTC [2721589] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:25.244 UTC [2721589] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:57:25.244 UTC [2721589] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:25.244 UTC [2721589] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:57:25.244 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.244 UTC [2721589] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:57:25.244 UTC [2721589] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.244 UTC [2721589] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:57:25.253 UTC [2721595] ERROR:  encrypt error: Encryption failed
2023-07-22 05:57:25.253 UTC [2721595] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:57:25.254 UTC [2721595] ERROR:  decrypt error: Decryption failed
2023-07-22 05:57:25.254 UTC [2721595] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:57:25.254 UTC [2721595] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:57:25.254 UTC [2721595] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:57:25.269 UTC [2721603] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.269 UTC [2721603] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:57:25.270 UTC [2721603] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.270 UTC [2721603] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:57:25.286 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.286 UTC [2721613] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:57:25.286 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.286 UTC [2721613] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:57:25.286 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.286 UTC [2721613] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:57:25.286 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.286 UTC [2721613] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:57:25.287 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.287 UTC [2721613] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:57:25.287 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.287 UTC [2721613] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:57:25.287 UTC [2721613] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:25.287 UTC [2721613] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:57:25.287 UTC [2721613] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:57:25.287 UTC [2721613] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:57:25.287 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.287 UTC [2721613] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:57:25.287 UTC [2721613] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:57:25.287 UTC [2721613] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:57:25.296 UTC [2721619] ERROR:  invalid salt
2023-07-22 05:57:25.296 UTC [2721619] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:57:25.410 UTC [2721627] ERROR:  invalid salt
2023-07-22 05:57:25.410 UTC [2721627] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:57:25.410 UTC [2721627] ERROR:  invalid salt
2023-07-22 05:57:25.410 UTC [2721627] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:57:25.410 UTC [2721627] ERROR:  invalid salt
2023-07-22 05:57:25.410 UTC [2721627] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:57:25.469 UTC [2721631] ERROR:  invalid salt
2023-07-22 05:57:25.469 UTC [2721631] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:57:25.469 UTC [2721631] ERROR:  crypt(3) returned NULL
2023-07-22 05:57:25.469 UTC [2721631] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:57:25.469 UTC [2721631] ERROR:  crypt(3) returned NULL
2023-07-22 05:57:25.469 UTC [2721631] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:57:25.502 UTC [2721635] ERROR:  Corrupt ascii-armor
2023-07-22 05:57:25.502 UTC [2721635] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:57:25.502 UTC [2721635] ERROR:  Corrupt ascii-armor
2023-07-22 05:57:25.502 UTC [2721635] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:57:25.502 UTC [2721635] ERROR:  Corrupt ascii-armor
2023-07-22 05:57:25.502 UTC [2721635] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:57:25.508 UTC [2721635] ERROR:  mismatched array dimensions
2023-07-22 05:57:25.508 UTC [2721635] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:57:25.509 UTC [2721635] ERROR:  mismatched array dimensions
2023-07-22 05:57:25.509 UTC [2721635] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:57:25.509 UTC [2721635] ERROR:  wrong number of array subscripts
2023-07-22 05:57:25.509 UTC [2721635] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:57:25.509 UTC [2721635] ERROR:  wrong number of array subscripts
2023-07-22 05:57:25.509 UTC [2721635] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:57:25.509 UTC [2721635] ERROR:  null value not allowed for header key
2023-07-22 05:57:25.509 UTC [2721635] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:57:25.509 UTC [2721635] ERROR:  null value not allowed for header value
2023-07-22 05:57:25.509 UTC [2721635] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:57:25.510 UTC [2721635] ERROR:  header key must not contain newlines
2023-07-22 05:57:25.510 UTC [2721635] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:57:25.510 UTC [2721635] ERROR:  header value must not contain newlines
2023-07-22 05:57:25.510 UTC [2721635] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:57:25.511 UTC [2721635] ERROR:  header key must not contain ": "
2023-07-22 05:57:25.511 UTC [2721635] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:57:25.529 UTC [2721639] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:25.529 UTC [2721639] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:57:25.555 UTC [2721639] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:25.555 UTC [2721639] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:57:25.556 UTC [2721639] ERROR:  Not text data
2023-07-22 05:57:25.556 UTC [2721639] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:57:25.557 UTC [2721639] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:25.557 UTC [2721639] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:57:25.557 UTC [2721639] ERROR:  Unsupported compression algorithm
2023-07-22 05:57:25.557 UTC [2721639] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:57:25.572 UTC [2721645] ERROR:  Not text data
2023-07-22 05:57:25.572 UTC [2721645] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:57:26.003 UTC [2721653] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:26.003 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:57:26.008 UTC [2721653] ERROR:  Wrong key
2023-07-22 05:57:26.008 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:57:26.008 UTC [2721653] ERROR:  No encryption key found
2023-07-22 05:57:26.008 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:57:26.009 UTC [2721653] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:26.009 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:57:26.012 UTC [2721653] ERROR:  Need password for secret key
2023-07-22 05:57:26.012 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:57:26.012 UTC [2721653] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:26.012 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:57:26.015 UTC [2721653] ERROR:  Wrong key or corrupt data
2023-07-22 05:57:26.015 UTC [2721653] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:57:26.034 UTC [2721659] ERROR:  No encryption key found
2023-07-22 05:57:26.034 UTC [2721659] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:57:26.034 UTC [2721659] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:57:26.034 UTC [2721659] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:57:26.036 UTC [2721659] ERROR:  Not text data
2023-07-22 05:57:26.036 UTC [2721659] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:57:26.043 UTC [2721663] ERROR:  No encryption key found
2023-07-22 05:57:26.043 UTC [2721663] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:57:26.044 UTC [2721663] ERROR:  No encryption key found
2023-07-22 05:57:26.044 UTC [2721663] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:57:26.113 UTC [2721678] ERROR:  permission denied to create foreign-data wrapper "file_fdw2"
2023-07-22 05:57:26.113 UTC [2721678] HINT:  Must be superuser to create a foreign-data wrapper.
2023-07-22 05:57:26.113 UTC [2721678] STATEMENT:  CREATE FOREIGN DATA WRAPPER file_fdw2 HANDLER file_fdw_handler VALIDATOR file_fdw_validator;
2023-07-22 05:57:26.113 UTC [2721678] ERROR:  permission denied for foreign-data wrapper file_fdw
2023-07-22 05:57:26.113 UTC [2721678] STATEMENT:  CREATE SERVER file_server2 FOREIGN DATA WRAPPER file_fdw;
2023-07-22 05:57:26.113 UTC [2721678] ERROR:  permission denied for foreign server file_server
2023-07-22 05:57:26.113 UTC [2721678] STATEMENT:  CREATE USER MAPPING FOR regress_file_fdw_user SERVER file_server;
2023-07-22 05:57:26.117 UTC [2721678] ERROR:  COPY format "xml" not recognized
2023-07-22 05:57:26.117 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'xml');
2023-07-22 05:57:26.118 UTC [2721678] ERROR:  COPY quote available only in CSV mode
2023-07-22 05:57:26.118 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', quote ':');
2023-07-22 05:57:26.118 UTC [2721678] ERROR:  COPY escape available only in CSV mode
2023-07-22 05:57:26.118 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape ':');
2023-07-22 05:57:26.118 UTC [2721678] ERROR:  cannot specify HEADER in BINARY mode
2023-07-22 05:57:26.118 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', header 'true');
2023-07-22 05:57:26.118 UTC [2721678] ERROR:  COPY quote available only in CSV mode
2023-07-22 05:57:26.118 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', quote ':');
2023-07-22 05:57:26.119 UTC [2721678] ERROR:  COPY escape available only in CSV mode
2023-07-22 05:57:26.119 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', escape ':');
2023-07-22 05:57:26.119 UTC [2721678] ERROR:  COPY delimiter cannot be "a"
2023-07-22 05:57:26.119 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 05:57:26.119 UTC [2721678] ERROR:  COPY escape available only in CSV mode
2023-07-22 05:57:26.119 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape '-');
2023-07-22 05:57:26.119 UTC [2721678] ERROR:  CSV quote character must not appear in the NULL specification
2023-07-22 05:57:26.119 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '-', null '=-=');
2023-07-22 05:57:26.119 UTC [2721678] ERROR:  COPY delimiter must not appear in the NULL specification
2023-07-22 05:57:26.119 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', null '=-=');
2023-07-22 05:57:26.119 UTC [2721678] ERROR:  COPY delimiter and quote must be different
2023-07-22 05:57:26.119 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', quote '-');
2023-07-22 05:57:26.120 UTC [2721678] ERROR:  COPY delimiter must be a single one-byte character
2023-07-22 05:57:26.120 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '---');
2023-07-22 05:57:26.120 UTC [2721678] ERROR:  COPY quote must be a single one-byte character
2023-07-22 05:57:26.120 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '---');
2023-07-22 05:57:26.120 UTC [2721678] ERROR:  COPY escape must be a single one-byte character
2023-07-22 05:57:26.120 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', escape '---');
2023-07-22 05:57:26.120 UTC [2721678] ERROR:  COPY delimiter cannot be "\"
2023-07-22 05:57:26.120 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '\');
2023-07-22 05:57:26.121 UTC [2721678] ERROR:  COPY delimiter cannot be "."
2023-07-22 05:57:26.121 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '.');
2023-07-22 05:57:26.121 UTC [2721678] ERROR:  COPY delimiter cannot be "1"
2023-07-22 05:57:26.121 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '1');
2023-07-22 05:57:26.121 UTC [2721678] ERROR:  COPY delimiter cannot be "a"
2023-07-22 05:57:26.121 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 05:57:26.121 UTC [2721678] ERROR:  COPY delimiter cannot be newline or carriage return
2023-07-22 05:57:26.121 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '
	');
2023-07-22 05:57:26.121 UTC [2721678] ERROR:  COPY null representation cannot use newline or carriage return
2023-07-22 05:57:26.121 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', null '
	');
2023-07-22 05:57:26.121 UTC [2721678] ERROR:  either filename or program is required for file_fdw foreign tables
2023-07-22 05:57:26.121 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server;
2023-07-22 05:57:26.139 UTC [2721678] ERROR:  column name mismatch in header line field 1: got "1", expected "a"
2023-07-22 05:57:26.139 UTC [2721678] CONTEXT:  COPY header_doesnt_match, line 1: "1,foo"
2023-07-22 05:57:26.139 UTC [2721678] STATEMENT:  SELECT * FROM header_doesnt_match;
2023-07-22 05:57:26.141 UTC [2721678] ERROR:  COPY force not null available only in CSV mode
2023-07-22 05:57:26.141 UTC [2721678] STATEMENT:  SELECT * FROM text_csv;
2023-07-22 05:57:26.147 UTC [2721678] ERROR:  invalid option "force_not_null"
2023-07-22 05:57:26.147 UTC [2721678] HINT:  There are no valid options in this context.
2023-07-22 05:57:26.147 UTC [2721678] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_not_null '*');
2023-07-22 05:57:26.147 UTC [2721678] ERROR:  invalid option "force_not_null"
2023-07-22 05:57:26.147 UTC [2721678] HINT:  There are no valid options in this context.
2023-07-22 05:57:26.147 UTC [2721678] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_not_null '*');
2023-07-22 05:57:26.147 UTC [2721678] ERROR:  invalid option "force_not_null"
2023-07-22 05:57:26.147 UTC [2721678] HINT:  There are no valid options in this context.
2023-07-22 05:57:26.147 UTC [2721678] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 05:57:26.148 UTC [2721678] ERROR:  invalid option "force_not_null"
2023-07-22 05:57:26.148 UTC [2721678] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 05:57:26.148 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 05:57:26.148 UTC [2721678] ERROR:  invalid option "force_null"
2023-07-22 05:57:26.148 UTC [2721678] HINT:  There are no valid options in this context.
2023-07-22 05:57:26.148 UTC [2721678] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_null '*');
2023-07-22 05:57:26.149 UTC [2721678] ERROR:  invalid option "force_null"
2023-07-22 05:57:26.149 UTC [2721678] HINT:  There are no valid options in this context.
2023-07-22 05:57:26.149 UTC [2721678] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_null '*');
2023-07-22 05:57:26.149 UTC [2721678] ERROR:  invalid option "force_null"
2023-07-22 05:57:26.149 UTC [2721678] HINT:  There are no valid options in this context.
2023-07-22 05:57:26.149 UTC [2721678] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_null '*');
2023-07-22 05:57:26.150 UTC [2721678] ERROR:  invalid option "force_null"
2023-07-22 05:57:26.150 UTC [2721678] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 05:57:26.150 UTC [2721678] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_null '*');
2023-07-22 05:57:26.154 UTC [2721678] ERROR:  invalid input syntax for type real: "aaa"
2023-07-22 05:57:26.154 UTC [2721678] CONTEXT:  COPY agg_bad, line 3, column b: "aaa"
2023-07-22 05:57:26.154 UTC [2721678] STATEMENT:  SELECT * FROM agg_bad;
2023-07-22 05:57:26.159 UTC [2721678] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 05:57:26.159 UTC [2721678] STATEMENT:  INSERT INTO agg_csv VALUES(1,2.0);
2023-07-22 05:57:26.160 UTC [2721678] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 05:57:26.160 UTC [2721678] STATEMENT:  UPDATE agg_csv SET a = 1;
2023-07-22 05:57:26.160 UTC [2721678] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 05:57:26.160 UTC [2721678] STATEMENT:  DELETE FROM agg_csv WHERE a = 100;
2023-07-22 05:57:26.161 UTC [2721678] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 05:57:26.161 UTC [2721678] STATEMENT:  COPY agg_csv FROM STDIN;
2023-07-22 05:57:26.170 UTC [2721678] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 05:57:26.170 UTC [2721678] STATEMENT:  UPDATE agg SET a = 1;
2023-07-22 05:57:26.171 UTC [2721678] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 05:57:26.171 UTC [2721678] STATEMENT:  DELETE FROM agg WHERE a = 100;
2023-07-22 05:57:26.193 UTC [2721678] ERROR:  cannot insert into foreign table "p1"
2023-07-22 05:57:26.193 UTC [2721678] CONTEXT:  COPY pt, line 2: "1,qux"
2023-07-22 05:57:26.193 UTC [2721678] STATEMENT:  COPY pt FROM '/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/file_fdw/data/list2.bad' with (format 'csv', delimiter ',');
2023-07-22 05:57:26.196 UTC [2721678] ERROR:  cannot insert into foreign table "p1"
2023-07-22 05:57:26.196 UTC [2721678] STATEMENT:  INSERT INTO pt VALUES (1, 'xyzzy');
2023-07-22 05:57:26.199 UTC [2721678] ERROR:  cannot insert into foreign table "p1"
2023-07-22 05:57:26.199 UTC [2721678] STATEMENT:  UPDATE pt set a = 1 where a = 2;
2023-07-22 05:57:26.212 UTC [2721678] ERROR:  permission denied for foreign table agg_text
2023-07-22 05:57:26.212 UTC [2721678] STATEMENT:  SELECT * FROM agg_text ORDER BY a;
2023-07-22 05:57:26.219 UTC [2721678] ERROR:  only superuser or a role with privileges of the pg_read_server_files role may specify the filename option of a file_fdw foreign table
2023-07-22 05:57:26.219 UTC [2721678] STATEMENT:  ALTER FOREIGN TABLE agg_text OPTIONS (SET format 'text');
2023-07-22 05:57:57.889 UTC [2721551] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:57:58.157 UTC [2721551] LOG:  checkpoint complete: wrote 1010 buffers (6.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.050 s, sync=0.140 s, total=0.269 s; sync files=522, longest=0.011 s, average=0.001 s; distance=145608 kB, estimate=145608 kB
2023-07-22 05:58:29.974 UTC [2721551] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:58:30.063 UTC [2721551] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.012 s, sync=0.007 s, total=0.089 s; sync files=4, longest=0.003 s, average=0.002 s; distance=133146 kB, estimate=144361 kB
2023-07-22 05:58:30.107 UTC [2721550] LOG:  received fast shutdown request
2023-07-22 05:58:30.115 UTC [2721550] LOG:  aborting any active transactions
2023-07-22 05:58:30.117 UTC [2721550] LOG:  background worker "logical replication launcher" (PID 2721556) exited with exit code 1
2023-07-22 05:58:30.117 UTC [2721551] LOG:  shutting down
2023-07-22 05:58:30.120 UTC [2721551] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:58:30.153 UTC [2721551] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.003 s, total=0.037 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=129925 kB
2023-07-22 05:58:30.207 UTC [2721550] LOG:  database system is shut down
2023-07-22 05:58:31.107 UTC [2721804] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:58:31.107 UTC [2721804] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:58:31.119 UTC [2721804] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:58:31.136 UTC [2721807] LOG:  database system was shut down at 2023-07-22 05:58:30 UTC
2023-07-22 05:58:31.151 UTC [2721804] LOG:  database system is ready to accept connections
2023-07-22 05:58:31.386 UTC [2721823] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:58:31.386 UTC [2721823] STATEMENT:  select gen_salt('foo');
2023-07-22 05:58:31.386 UTC [2721823] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:58:31.386 UTC [2721823] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:58:31.386 UTC [2721823] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:58:31.386 UTC [2721823] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:58:31.386 UTC [2721823] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:58:31.386 UTC [2721823] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:58:31.436 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.436 UTC [2721843] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:58:31.436 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.436 UTC [2721843] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:58:31.436 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.436 UTC [2721843] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:58:31.436 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.436 UTC [2721843] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:58:31.436 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.436 UTC [2721843] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Key was too big
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Key was too big
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Key was too big
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Key was too big
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:58:31.437 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.437 UTC [2721843] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:58:31.438 UTC [2721843] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:58:31.438 UTC [2721843] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:58:31.438 UTC [2721843] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:58:31.438 UTC [2721843] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:58:31.438 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.438 UTC [2721843] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:58:31.438 UTC [2721843] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.438 UTC [2721843] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:58:31.449 UTC [2721849] ERROR:  encrypt error: Encryption failed
2023-07-22 05:58:31.449 UTC [2721849] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:58:31.450 UTC [2721849] ERROR:  decrypt error: Decryption failed
2023-07-22 05:58:31.450 UTC [2721849] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:58:31.450 UTC [2721849] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:58:31.450 UTC [2721849] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:58:31.471 UTC [2721857] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.471 UTC [2721857] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:58:31.471 UTC [2721857] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.471 UTC [2721857] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:58:31.471 UTC [2721857] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.471 UTC [2721857] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:58:31.471 UTC [2721857] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.471 UTC [2721857] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:58:31.471 UTC [2721857] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:58:31.471 UTC [2721857] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:58:31.472 UTC [2721857] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:58:31.472 UTC [2721857] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:58:31.472 UTC [2721857] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.472 UTC [2721857] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:58:31.472 UTC [2721857] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.472 UTC [2721857] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:58:31.493 UTC [2721867] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:58:31.493 UTC [2721867] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:58:31.494 UTC [2721867] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:58:31.494 UTC [2721867] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:58:31.494 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.494 UTC [2721867] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:58:31.494 UTC [2721867] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:58:31.494 UTC [2721867] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:58:31.505 UTC [2721873] ERROR:  invalid salt
2023-07-22 05:58:31.505 UTC [2721873] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:58:31.625 UTC [2721881] ERROR:  invalid salt
2023-07-22 05:58:31.625 UTC [2721881] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:58:31.626 UTC [2721881] ERROR:  invalid salt
2023-07-22 05:58:31.626 UTC [2721881] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:58:31.626 UTC [2721881] ERROR:  invalid salt
2023-07-22 05:58:31.626 UTC [2721881] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:58:31.709 UTC [2721885] ERROR:  invalid salt
2023-07-22 05:58:31.709 UTC [2721885] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:58:31.710 UTC [2721885] ERROR:  crypt(3) returned NULL
2023-07-22 05:58:31.710 UTC [2721885] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:58:31.710 UTC [2721885] ERROR:  crypt(3) returned NULL
2023-07-22 05:58:31.710 UTC [2721885] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:58:31.770 UTC [2721889] ERROR:  Corrupt ascii-armor
2023-07-22 05:58:31.770 UTC [2721889] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:58:31.771 UTC [2721889] ERROR:  Corrupt ascii-armor
2023-07-22 05:58:31.771 UTC [2721889] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:58:31.772 UTC [2721889] ERROR:  Corrupt ascii-armor
2023-07-22 05:58:31.772 UTC [2721889] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:58:31.781 UTC [2721889] ERROR:  mismatched array dimensions
2023-07-22 05:58:31.781 UTC [2721889] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:58:31.781 UTC [2721889] ERROR:  mismatched array dimensions
2023-07-22 05:58:31.781 UTC [2721889] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:58:31.782 UTC [2721889] ERROR:  wrong number of array subscripts
2023-07-22 05:58:31.782 UTC [2721889] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:58:31.782 UTC [2721889] ERROR:  wrong number of array subscripts
2023-07-22 05:58:31.782 UTC [2721889] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:58:31.783 UTC [2721889] ERROR:  null value not allowed for header key
2023-07-22 05:58:31.783 UTC [2721889] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:58:31.783 UTC [2721889] ERROR:  null value not allowed for header value
2023-07-22 05:58:31.783 UTC [2721889] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:58:31.784 UTC [2721889] ERROR:  header key must not contain newlines
2023-07-22 05:58:31.784 UTC [2721889] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:58:31.785 UTC [2721889] ERROR:  header value must not contain newlines
2023-07-22 05:58:31.785 UTC [2721889] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:58:31.785 UTC [2721889] ERROR:  header key must not contain ": "
2023-07-22 05:58:31.785 UTC [2721889] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:58:31.813 UTC [2721893] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:31.813 UTC [2721893] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:58:31.847 UTC [2721893] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:31.847 UTC [2721893] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:58:31.849 UTC [2721893] ERROR:  Not text data
2023-07-22 05:58:31.849 UTC [2721893] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:58:31.850 UTC [2721893] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:31.850 UTC [2721893] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:58:31.850 UTC [2721893] ERROR:  Unsupported compression algorithm
2023-07-22 05:58:31.850 UTC [2721893] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:58:31.866 UTC [2721899] ERROR:  Not text data
2023-07-22 05:58:31.866 UTC [2721899] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:58:32.347 UTC [2721907] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:32.347 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:58:32.367 UTC [2721907] ERROR:  Wrong key
2023-07-22 05:58:32.367 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:58:32.368 UTC [2721907] ERROR:  No encryption key found
2023-07-22 05:58:32.368 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:58:32.369 UTC [2721907] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:32.369 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:58:32.375 UTC [2721907] ERROR:  Need password for secret key
2023-07-22 05:58:32.375 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:58:32.376 UTC [2721907] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:32.376 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:58:32.381 UTC [2721907] ERROR:  Wrong key or corrupt data
2023-07-22 05:58:32.381 UTC [2721907] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:58:32.405 UTC [2721913] ERROR:  No encryption key found
2023-07-22 05:58:32.405 UTC [2721913] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:58:32.405 UTC [2721913] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:58:32.405 UTC [2721913] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:58:32.406 UTC [2721913] ERROR:  Not text data
2023-07-22 05:58:32.406 UTC [2721913] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:58:32.415 UTC [2721917] ERROR:  No encryption key found
2023-07-22 05:58:32.415 UTC [2721917] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:58:32.417 UTC [2721917] ERROR:  No encryption key found
2023-07-22 05:58:32.417 UTC [2721917] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:59:04.528 UTC [2721805] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:59:04.714 UTC [2721805] LOG:  checkpoint complete: wrote 1213 buffers (7.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.049 s, sync=0.084 s, total=0.186 s; sync files=506, longest=0.005 s, average=0.001 s; distance=145090 kB, estimate=145090 kB
2023-07-22 05:59:36.122 UTC [2721805] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:59:36.194 UTC [2721805] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.009 s, total=0.073 s; sync files=4, longest=0.006 s, average=0.003 s; distance=136184 kB, estimate=144199 kB
2023-07-22 05:59:36.235 UTC [2721804] LOG:  received fast shutdown request
2023-07-22 05:59:36.241 UTC [2721804] LOG:  aborting any active transactions
2023-07-22 05:59:36.246 UTC [2721804] LOG:  background worker "logical replication launcher" (PID 2721810) exited with exit code 1
2023-07-22 05:59:36.246 UTC [2721805] LOG:  shutting down
2023-07-22 05:59:36.251 UTC [2721805] LOG:  checkpoint starting: shutdown immediate
2023-07-22 05:59:36.276 UTC [2721805] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.004 s, total=0.031 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=129779 kB
2023-07-22 05:59:36.333 UTC [2721804] LOG:  database system is shut down
2023-07-22 05:59:37.091 UTC [2722056] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 05:59:37.091 UTC [2722056] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 05:59:37.102 UTC [2722056] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 05:59:37.111 UTC [2722059] LOG:  database system was shut down at 2023-07-22 05:59:36 UTC
2023-07-22 05:59:37.120 UTC [2722056] LOG:  database system is ready to accept connections
2023-07-22 05:59:37.294 UTC [2722075] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 05:59:37.294 UTC [2722075] STATEMENT:  select gen_salt('foo');
2023-07-22 05:59:37.294 UTC [2722075] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:59:37.294 UTC [2722075] STATEMENT:  select digest('foo', 'foo');
2023-07-22 05:59:37.295 UTC [2722075] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 05:59:37.295 UTC [2722075] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 05:59:37.295 UTC [2722075] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 05:59:37.295 UTC [2722075] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 05:59:37.444 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.444 UTC [2722095] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:59:37.445 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.445 UTC [2722095] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 05:59:37.445 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.445 UTC [2722095] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:59:37.446 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.446 UTC [2722095] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 05:59:37.446 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.446 UTC [2722095] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:59:37.447 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.447 UTC [2722095] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 05:59:37.447 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.447 UTC [2722095] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 05:59:37.448 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.448 UTC [2722095] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 05:59:37.448 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.448 UTC [2722095] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 05:59:37.449 UTC [2722095] ERROR:  encrypt error: Key was too big
2023-07-22 05:59:37.449 UTC [2722095] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 05:59:37.449 UTC [2722095] ERROR:  encrypt error: Key was too big
2023-07-22 05:59:37.449 UTC [2722095] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 05:59:37.449 UTC [2722095] ERROR:  encrypt error: Key was too big
2023-07-22 05:59:37.449 UTC [2722095] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 05:59:37.450 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.450 UTC [2722095] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 05:59:37.450 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.450 UTC [2722095] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 05:59:37.450 UTC [2722095] ERROR:  encrypt error: Key was too big
2023-07-22 05:59:37.450 UTC [2722095] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 05:59:37.451 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.451 UTC [2722095] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 05:59:37.451 UTC [2722095] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:59:37.451 UTC [2722095] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 05:59:37.452 UTC [2722095] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:59:37.452 UTC [2722095] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 05:59:37.452 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.452 UTC [2722095] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 05:59:37.453 UTC [2722095] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.453 UTC [2722095] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 05:59:37.488 UTC [2722101] ERROR:  encrypt error: Encryption failed
2023-07-22 05:59:37.488 UTC [2722101] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 05:59:37.493 UTC [2722101] ERROR:  decrypt error: Decryption failed
2023-07-22 05:59:37.493 UTC [2722101] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 05:59:37.493 UTC [2722101] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 05:59:37.493 UTC [2722101] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 05:59:37.542 UTC [2722109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.542 UTC [2722109] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 05:59:37.543 UTC [2722109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.543 UTC [2722109] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 05:59:37.543 UTC [2722109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.543 UTC [2722109] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 05:59:37.543 UTC [2722109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.543 UTC [2722109] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 05:59:37.544 UTC [2722109] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:59:37.544 UTC [2722109] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 05:59:37.544 UTC [2722109] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:59:37.544 UTC [2722109] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 05:59:37.545 UTC [2722109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.545 UTC [2722109] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 05:59:37.545 UTC [2722109] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.545 UTC [2722109] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 05:59:37.586 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.586 UTC [2722119] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 05:59:37.586 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.586 UTC [2722119] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 05:59:37.587 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.587 UTC [2722119] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 05:59:37.587 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.587 UTC [2722119] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 05:59:37.587 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.587 UTC [2722119] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 05:59:37.588 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.588 UTC [2722119] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 05:59:37.588 UTC [2722119] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 05:59:37.588 UTC [2722119] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 05:59:37.589 UTC [2722119] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 05:59:37.589 UTC [2722119] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 05:59:37.589 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.589 UTC [2722119] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 05:59:37.589 UTC [2722119] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 05:59:37.589 UTC [2722119] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 05:59:37.612 UTC [2722125] ERROR:  invalid salt
2023-07-22 05:59:37.612 UTC [2722125] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 05:59:37.737 UTC [2722135] ERROR:  invalid salt
2023-07-22 05:59:37.737 UTC [2722135] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 05:59:37.737 UTC [2722135] ERROR:  invalid salt
2023-07-22 05:59:37.737 UTC [2722135] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:59:37.737 UTC [2722135] ERROR:  invalid salt
2023-07-22 05:59:37.737 UTC [2722135] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 05:59:37.795 UTC [2722139] ERROR:  invalid salt
2023-07-22 05:59:37.795 UTC [2722139] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 05:59:37.795 UTC [2722139] ERROR:  crypt(3) returned NULL
2023-07-22 05:59:37.795 UTC [2722139] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 05:59:37.795 UTC [2722139] ERROR:  crypt(3) returned NULL
2023-07-22 05:59:37.795 UTC [2722139] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 05:59:37.818 UTC [2722143] ERROR:  Corrupt ascii-armor
2023-07-22 05:59:37.818 UTC [2722143] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:59:37.818 UTC [2722143] ERROR:  Corrupt ascii-armor
2023-07-22 05:59:37.818 UTC [2722143] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:59:37.818 UTC [2722143] ERROR:  Corrupt ascii-armor
2023-07-22 05:59:37.818 UTC [2722143] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 05:59:37.819 UTC [2722143] ERROR:  mismatched array dimensions
2023-07-22 05:59:37.819 UTC [2722143] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 05:59:37.819 UTC [2722143] ERROR:  mismatched array dimensions
2023-07-22 05:59:37.819 UTC [2722143] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 05:59:37.819 UTC [2722143] ERROR:  wrong number of array subscripts
2023-07-22 05:59:37.819 UTC [2722143] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 05:59:37.819 UTC [2722143] ERROR:  wrong number of array subscripts
2023-07-22 05:59:37.819 UTC [2722143] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 05:59:37.819 UTC [2722143] ERROR:  null value not allowed for header key
2023-07-22 05:59:37.819 UTC [2722143] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 05:59:37.819 UTC [2722143] ERROR:  null value not allowed for header value
2023-07-22 05:59:37.819 UTC [2722143] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 05:59:37.820 UTC [2722143] ERROR:  header key must not contain newlines
2023-07-22 05:59:37.820 UTC [2722143] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 05:59:37.820 UTC [2722143] ERROR:  header value must not contain newlines
2023-07-22 05:59:37.820 UTC [2722143] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 05:59:37.820 UTC [2722143] ERROR:  header key must not contain ": "
2023-07-22 05:59:37.820 UTC [2722143] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 05:59:37.827 UTC [2722147] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:37.827 UTC [2722147] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 05:59:37.839 UTC [2722147] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:37.839 UTC [2722147] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:59:37.841 UTC [2722147] ERROR:  Not text data
2023-07-22 05:59:37.841 UTC [2722147] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 05:59:37.841 UTC [2722147] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:37.841 UTC [2722147] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 05:59:37.841 UTC [2722147] ERROR:  Unsupported compression algorithm
2023-07-22 05:59:37.841 UTC [2722147] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 05:59:37.854 UTC [2722153] ERROR:  Not text data
2023-07-22 05:59:37.854 UTC [2722153] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 05:59:38.317 UTC [2722161] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:38.317 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 05:59:38.336 UTC [2722161] ERROR:  Wrong key
2023-07-22 05:59:38.336 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 05:59:38.337 UTC [2722161] ERROR:  No encryption key found
2023-07-22 05:59:38.337 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 05:59:38.339 UTC [2722161] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:38.339 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 05:59:38.344 UTC [2722161] ERROR:  Need password for secret key
2023-07-22 05:59:38.344 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:59:38.345 UTC [2722161] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:38.345 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 05:59:38.349 UTC [2722161] ERROR:  Wrong key or corrupt data
2023-07-22 05:59:38.349 UTC [2722161] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 05:59:38.372 UTC [2722167] ERROR:  No encryption key found
2023-07-22 05:59:38.372 UTC [2722167] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 05:59:38.372 UTC [2722167] ERROR:  Refusing to encrypt with secret key
2023-07-22 05:59:38.372 UTC [2722167] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:59:38.373 UTC [2722167] ERROR:  Not text data
2023-07-22 05:59:38.373 UTC [2722167] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 05:59:38.381 UTC [2722171] ERROR:  No encryption key found
2023-07-22 05:59:38.381 UTC [2722171] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 05:59:38.382 UTC [2722171] ERROR:  No encryption key found
2023-07-22 05:59:38.382 UTC [2722171] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 05:59:38.391 UTC [2722057] LOG:  checkpoint starting: immediate force wait
2023-07-22 05:59:38.428 UTC [2722057] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.010 s, total=0.037 s; sync files=7, longest=0.006 s, average=0.002 s; distance=4450 kB, estimate=4450 kB
2023-07-22 05:59:38.599 UTC [2722190] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 05:59:38.599 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), -1))
	       from test_khvengxf;
2023-07-22 05:59:38.599 UTC [2722190] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 05:59:38.599 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 32))
	       from test_khvengxf;
2023-07-22 05:59:38.599 UTC [2722190] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 05:59:38.599 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, -1))
	       from test_khvengxf;
2023-07-22 05:59:38.600 UTC [2722190] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 05:59:38.600 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 8))
	       from test_khvengxf;
2023-07-22 05:59:38.600 UTC [2722190] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 05:59:38.600 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, -2))
	       from test_khvengxf;
2023-07-22 05:59:38.600 UTC [2722190] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 05:59:38.600 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 8589934592))
	       from test_khvengxf;
2023-07-22 05:59:38.600 UTC [2722190] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 05:59:38.600 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, -1))
	       from test_khvengxf;
2023-07-22 05:59:38.600 UTC [2722190] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 05:59:38.600 UTC [2722190] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, 2))
	       from test_khvengxf;
2023-07-22 05:59:38.716 UTC [2722202] ERROR:  operator does not exist: double precision || hll_hashval at character 31
2023-07-22 05:59:38.716 UTC [2722202] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:59:38.716 UTC [2722202] STATEMENT:  SELECT #hll_empty(11,5,256,1) || hll_hash_integer(1,0);
2023-07-22 05:59:38.736 UTC [2722206] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:38.736 UTC [2722206] STATEMENT:  SELECT E'\\x118b7f'::hll(10,5,-1,1);
2023-07-22 05:59:38.737 UTC [2722206] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 05:59:38.737 UTC [2722206] STATEMENT:  SELECT E'\\x118b7f'::hll(11,4,-1,1);
2023-07-22 05:59:38.737 UTC [2722206] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 05:59:38.737 UTC [2722206] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,64,1);
2023-07-22 05:59:38.737 UTC [2722206] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 05:59:38.737 UTC [2722206] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,-1,0);
2023-07-22 05:59:38.738 UTC [2722206] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:38.738 UTC [2722206] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(10,5,-1,1);
2023-07-22 05:59:38.738 UTC [2722206] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 05:59:38.738 UTC [2722206] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,4,-1,1);
2023-07-22 05:59:38.739 UTC [2722206] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 05:59:38.739 UTC [2722206] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,64,1);
2023-07-22 05:59:38.739 UTC [2722206] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 05:59:38.739 UTC [2722206] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,-1,0);
2023-07-22 05:59:38.740 UTC [2722206] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:38.740 UTC [2722206] STATEMENT:  SELECT E'\\x138b7f0001'::hll(10,5,-1,1);
2023-07-22 05:59:38.740 UTC [2722206] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 05:59:38.740 UTC [2722206] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,4,-1,1);
2023-07-22 05:59:38.740 UTC [2722206] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 05:59:38.740 UTC [2722206] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,64,1);
2023-07-22 05:59:38.740 UTC [2722206] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 05:59:38.740 UTC [2722206] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,-1,0);
2023-07-22 05:59:38.743 UTC [2722206] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:38.743 UTC [2722206] STATEMENT:  SELECT E'\\x148b7fhll(10,5,-1,1);
2023-07-22 05:59:38.743 UTC [2722206] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 05:59:38.743 UTC [2722206] STATEMENT:  SELECT E'\\x148b7fhll(11,4,-1,1);
2023-07-22 05:59:38.743 UTC [2722206] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 05:59:38.743 UTC [2722206] STATEMENT:  SELECT E'\\x148b7fhll(11,5,64,1);
2023-07-22 05:59:38.744 UTC [2722206] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 05:59:38.744 UTC [2722206] STATEMENT:  SELECT E'\\x148b7fhll(11,5,-1,0);
2023-07-22 05:59:55.217 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] ERROR:  function hll_hash_boolean(integer, integer) does not exist at character 8
2023-07-22 05:59:55.218 UTC [2722276] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:59:55.218 UTC [2722276] STATEMENT:  SELECT hll_hash_boolean(0, -1);
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.218 UTC [2722276] WARNING:  negative seed values not compatible
2023-07-22 05:59:55.220 UTC [2722276] ERROR:  operator does not exist: hll || integer at character 20
2023-07-22 05:59:55.220 UTC [2722276] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:59:55.220 UTC [2722276] STATEMENT:  SELECT hll_empty() || 42;
2023-07-22 05:59:55.220 UTC [2722276] ERROR:  operator does not exist: hll || bigint at character 20
2023-07-22 05:59:55.220 UTC [2722276] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 05:59:55.220 UTC [2722276] STATEMENT:  SELECT hll_empty() || 42::bigint;
2023-07-22 05:59:55.442 UTC [2722318] ERROR:  invalid number of type modifiers at character 32
2023-07-22 05:59:55.442 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(10, 4, 64, 0, 42));
2023-07-22 05:59:55.442 UTC [2722318] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 05:59:55.442 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(-1));
2023-07-22 05:59:55.456 UTC [2722318] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 05:59:55.456 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(31));
2023-07-22 05:59:55.457 UTC [2722318] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 05:59:55.457 UTC [2722318] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 05:59:55.457 UTC [2722318] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 05:59:55.457 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(32));
2023-07-22 05:59:55.458 UTC [2722318] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 05:59:55.458 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, -1));
2023-07-22 05:59:55.485 UTC [2722318] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 05:59:55.485 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 8));
2023-07-22 05:59:55.486 UTC [2722318] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 05:59:55.486 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, -2));
2023-07-22 05:59:55.526 UTC [2722318] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 05:59:55.526 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 4294967296));
2023-07-22 05:59:55.527 UTC [2722318] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 05:59:55.527 UTC [2722318] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 05:59:55.527 UTC [2722318] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 05:59:55.527 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 8589934592));
2023-07-22 05:59:55.528 UTC [2722318] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 05:59:55.528 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, -1));
2023-07-22 05:59:55.555 UTC [2722318] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 05:59:55.555 UTC [2722318] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, 2));
2023-07-22 05:59:55.581 UTC [2722322] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:55.581 UTC [2722322] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (
	E'\\x148b7fhll
	);
2023-07-22 05:59:55.581 UTC [2722322] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:55.581 UTC [2722322] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (hll_empty(11));
2023-07-22 05:59:55.581 UTC [2722322] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:55.581 UTC [2722322] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x118b7f');
2023-07-22 05:59:55.582 UTC [2722322] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 05:59:55.582 UTC [2722322] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x128b7f1111111111111111');
2023-07-22 06:00:27.223 UTC [2722057] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:00:27.321 UTC [2722057] LOG:  checkpoint complete: wrote 604 buffers (3.7%); 0 WAL file(s) added, 0 removed, 11 recycled; write=0.019 s, sync=0.031 s, total=0.098 s; sync files=295, longest=0.004 s, average=0.001 s; distance=170922 kB, estimate=170922 kB
2023-07-22 06:00:58.614 UTC [2722057] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:00:58.664 UTC [2722057] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.051 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138819 kB, estimate=167711 kB
2023-07-22 06:00:58.729 UTC [2722056] LOG:  received fast shutdown request
2023-07-22 06:00:58.732 UTC [2722056] LOG:  aborting any active transactions
2023-07-22 06:00:58.733 UTC [2722056] LOG:  background worker "logical replication launcher" (PID 2722062) exited with exit code 1
2023-07-22 06:00:58.733 UTC [2722057] LOG:  shutting down
2023-07-22 06:00:58.736 UTC [2722057] LOG:  checkpoint starting: shutdown immediate
2023-07-22 06:00:58.753 UTC [2722057] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=150940 kB
2023-07-22 06:00:58.780 UTC [2722056] LOG:  database system is shut down
2023-07-22 06:00:59.479 UTC [2722459] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 06:00:59.480 UTC [2722459] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 06:00:59.486 UTC [2722459] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 06:00:59.497 UTC [2722462] LOG:  database system was shut down at 2023-07-22 06:00:59 UTC
2023-07-22 06:00:59.507 UTC [2722459] LOG:  database system is ready to accept connections
2023-07-22 06:00:59.638 UTC [2722478] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 06:00:59.638 UTC [2722478] STATEMENT:  select gen_salt('foo');
2023-07-22 06:00:59.638 UTC [2722478] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 06:00:59.638 UTC [2722478] STATEMENT:  select digest('foo', 'foo');
2023-07-22 06:00:59.638 UTC [2722478] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 06:00:59.638 UTC [2722478] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 06:00:59.639 UTC [2722478] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 06:00:59.639 UTC [2722478] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 06:00:59.682 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.682 UTC [2722498] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:00:59.682 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.682 UTC [2722498] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 06:00:59.682 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.682 UTC [2722498] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:00:59.682 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.682 UTC [2722498] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Key was too big
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Key was too big
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Key was too big
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 06:00:59.683 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.683 UTC [2722498] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  encrypt error: Key was too big
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 06:00:59.684 UTC [2722498] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.684 UTC [2722498] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 06:00:59.695 UTC [2722504] ERROR:  encrypt error: Encryption failed
2023-07-22 06:00:59.695 UTC [2722504] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 06:00:59.696 UTC [2722504] ERROR:  decrypt error: Decryption failed
2023-07-22 06:00:59.696 UTC [2722504] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 06:00:59.696 UTC [2722504] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 06:00:59.696 UTC [2722504] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 06:00:59.715 UTC [2722512] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.715 UTC [2722512] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 06:00:59.716 UTC [2722512] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.716 UTC [2722512] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 06:00:59.716 UTC [2722512] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.716 UTC [2722512] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 06:00:59.716 UTC [2722512] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.716 UTC [2722512] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 06:00:59.716 UTC [2722512] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:00:59.716 UTC [2722512] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 06:00:59.716 UTC [2722512] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:00:59.716 UTC [2722512] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 06:00:59.716 UTC [2722512] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.716 UTC [2722512] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 06:00:59.717 UTC [2722512] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.717 UTC [2722512] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 06:00:59.737 UTC [2722522] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:00:59.737 UTC [2722522] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 06:00:59.738 UTC [2722522] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:00:59.738 UTC [2722522] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 06:00:59.738 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.738 UTC [2722522] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 06:00:59.738 UTC [2722522] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:00:59.738 UTC [2722522] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 06:00:59.748 UTC [2722528] ERROR:  invalid salt
2023-07-22 06:00:59.748 UTC [2722528] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 06:00:59.800 UTC [2722536] ERROR:  invalid salt
2023-07-22 06:00:59.800 UTC [2722536] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 06:00:59.801 UTC [2722536] ERROR:  invalid salt
2023-07-22 06:00:59.801 UTC [2722536] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 06:00:59.801 UTC [2722536] ERROR:  invalid salt
2023-07-22 06:00:59.801 UTC [2722536] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 06:00:59.846 UTC [2722540] ERROR:  invalid salt
2023-07-22 06:00:59.846 UTC [2722540] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 06:00:59.847 UTC [2722540] ERROR:  crypt(3) returned NULL
2023-07-22 06:00:59.847 UTC [2722540] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 06:00:59.847 UTC [2722540] ERROR:  crypt(3) returned NULL
2023-07-22 06:00:59.847 UTC [2722540] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 06:00:59.882 UTC [2722544] ERROR:  Corrupt ascii-armor
2023-07-22 06:00:59.882 UTC [2722544] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:00:59.883 UTC [2722544] ERROR:  Corrupt ascii-armor
2023-07-22 06:00:59.883 UTC [2722544] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:00:59.883 UTC [2722544] ERROR:  Corrupt ascii-armor
2023-07-22 06:00:59.883 UTC [2722544] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:00:59.888 UTC [2722544] ERROR:  mismatched array dimensions
2023-07-22 06:00:59.888 UTC [2722544] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 06:00:59.888 UTC [2722544] ERROR:  mismatched array dimensions
2023-07-22 06:00:59.888 UTC [2722544] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 06:00:59.889 UTC [2722544] ERROR:  wrong number of array subscripts
2023-07-22 06:00:59.889 UTC [2722544] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 06:00:59.889 UTC [2722544] ERROR:  wrong number of array subscripts
2023-07-22 06:00:59.889 UTC [2722544] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 06:00:59.889 UTC [2722544] ERROR:  null value not allowed for header key
2023-07-22 06:00:59.889 UTC [2722544] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 06:00:59.889 UTC [2722544] ERROR:  null value not allowed for header value
2023-07-22 06:00:59.889 UTC [2722544] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 06:00:59.890 UTC [2722544] ERROR:  header key must not contain newlines
2023-07-22 06:00:59.890 UTC [2722544] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 06:00:59.890 UTC [2722544] ERROR:  header value must not contain newlines
2023-07-22 06:00:59.890 UTC [2722544] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 06:00:59.890 UTC [2722544] ERROR:  header key must not contain ": "
2023-07-22 06:00:59.890 UTC [2722544] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 06:00:59.908 UTC [2722548] ERROR:  Wrong key or corrupt data
2023-07-22 06:00:59.908 UTC [2722548] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 06:00:59.933 UTC [2722548] ERROR:  Wrong key or corrupt data
2023-07-22 06:00:59.933 UTC [2722548] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 06:00:59.935 UTC [2722548] ERROR:  Not text data
2023-07-22 06:00:59.935 UTC [2722548] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 06:00:59.935 UTC [2722548] ERROR:  Wrong key or corrupt data
2023-07-22 06:00:59.935 UTC [2722548] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 06:00:59.936 UTC [2722548] ERROR:  Unsupported compression algorithm
2023-07-22 06:00:59.936 UTC [2722548] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 06:00:59.950 UTC [2722554] ERROR:  Not text data
2023-07-22 06:00:59.950 UTC [2722554] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 06:01:00.391 UTC [2722562] ERROR:  Wrong key or corrupt data
2023-07-22 06:01:00.391 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 06:01:00.406 UTC [2722562] ERROR:  Wrong key
2023-07-22 06:01:00.406 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 06:01:00.407 UTC [2722562] ERROR:  No encryption key found
2023-07-22 06:01:00.407 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 06:01:00.408 UTC [2722562] ERROR:  Wrong key or corrupt data
2023-07-22 06:01:00.408 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 06:01:00.412 UTC [2722562] ERROR:  Need password for secret key
2023-07-22 06:01:00.412 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 06:01:00.413 UTC [2722562] ERROR:  Wrong key or corrupt data
2023-07-22 06:01:00.413 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 06:01:00.417 UTC [2722562] ERROR:  Wrong key or corrupt data
2023-07-22 06:01:00.417 UTC [2722562] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 06:01:00.438 UTC [2722568] ERROR:  No encryption key found
2023-07-22 06:01:00.438 UTC [2722568] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 06:01:00.438 UTC [2722568] ERROR:  Refusing to encrypt with secret key
2023-07-22 06:01:00.438 UTC [2722568] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 06:01:00.439 UTC [2722568] ERROR:  Not text data
2023-07-22 06:01:00.439 UTC [2722568] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 06:01:00.447 UTC [2722572] ERROR:  No encryption key found
2023-07-22 06:01:00.447 UTC [2722572] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 06:01:00.448 UTC [2722572] ERROR:  No encryption key found
2023-07-22 06:01:00.448 UTC [2722572] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 06:01:00.457 UTC [2722460] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:01:00.482 UTC [2722460] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.005 s, total=0.025 s; sync files=7, longest=0.003 s, average=0.001 s; distance=4455 kB, estimate=4455 kB
2023-07-22 06:01:00.598 UTC [2722587] ERROR:  array must have even number of elements
2023-07-22 06:01:00.598 UTC [2722587] STATEMENT:  select ARRAY['a','g','b','h','asd']::hstore;
2023-07-22 06:01:00.598 UTC [2722587] ERROR:  array must have two columns
2023-07-22 06:01:00.598 UTC [2722587] STATEMENT:  select ARRAY[['a','g','b'],['h','asd','i']]::hstore;
2023-07-22 06:01:00.598 UTC [2722587] ERROR:  wrong number of array subscripts
2023-07-22 06:01:00.598 UTC [2722587] STATEMENT:  select ARRAY[[['a','g'],['b','h'],['asd','i']]]::hstore;
2023-07-22 06:01:00.598 UTC [2722587] ERROR:  array must have even number of elements
2023-07-22 06:01:00.598 UTC [2722587] STATEMENT:  select hstore(ARRAY['a','g','b','h','asd']);
2023-07-22 06:01:00.598 UTC [2722587] ERROR:  array must have two columns
2023-07-22 06:01:00.598 UTC [2722587] STATEMENT:  select hstore(ARRAY[['a','g','b'],['h','asd','i']]);
2023-07-22 06:01:00.598 UTC [2722587] ERROR:  wrong number of array subscripts
2023-07-22 06:01:00.598 UTC [2722587] STATEMENT:  select hstore(ARRAY[[['a','g'],['b','h'],['asd','i']]]);
2023-07-22 06:01:00.599 UTC [2722587] ERROR:  arrays must have same bounds
2023-07-22 06:01:00.599 UTC [2722587] STATEMENT:  select hstore(ARRAY['a'], '{}'::text[]);
2023-07-22 06:01:00.599 UTC [2722587] ERROR:  arrays must have same bounds
2023-07-22 06:01:00.599 UTC [2722587] STATEMENT:  select hstore('{}'::text[], ARRAY['a']);
2023-07-22 06:01:00.613 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.613 UTC [2722587] STATEMENT:  select populate_record(v, hstore('e', null)) from testhstore1 v;
2023-07-22 06:01:00.613 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.613 UTC [2722587] STATEMENT:  select populate_record(v, hstore('b', 'foo') || hstore('e', null)) from testhstore1 v;
2023-07-22 06:01:00.613 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.613 UTC [2722587] STATEMENT:  select populate_record(null::testhstore1, hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 06:01:00.614 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.614 UTC [2722587] STATEMENT:  select populate_record(null::testhstore1, '');
2023-07-22 06:01:00.614 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.614 UTC [2722587] STATEMENT:  select v #= hstore('e', null) from testhstore1 v;
2023-07-22 06:01:00.614 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.614 UTC [2722587] STATEMENT:  select null::testhstore1 #= (hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 06:01:00.614 UTC [2722587] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 06:01:00.614 UTC [2722587] STATEMENT:  select null::testhstore1 #= hstore '';
2023-07-22 06:01:00.650 UTC [2722587] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 06:01:00.650 UTC [2722587] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 06:01:00.650 UTC [2722587] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=0));
2023-07-22 06:01:00.650 UTC [2722587] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 06:01:00.650 UTC [2722587] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 06:01:00.650 UTC [2722587] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=2025));
2023-07-22 06:01:01.175 UTC [2722587] ERROR:  hstore allows only one subscript
2023-07-22 06:01:01.175 UTC [2722587] STATEMENT:  select f2['d']['e'] from test_json_agg;
2023-07-22 06:01:01.175 UTC [2722587] ERROR:  hstore allows only one subscript
2023-07-22 06:01:01.175 UTC [2722587] STATEMENT:  select f2['d':'e'] from test_json_agg;
2023-07-22 06:01:32.795 UTC [2722460] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:01:32.906 UTC [2722460] LOG:  checkpoint complete: wrote 590 buffers (3.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.029 s, sync=0.038 s, total=0.112 s; sync files=259, longest=0.004 s, average=0.001 s; distance=145371 kB, estimate=145371 kB
2023-07-22 06:02:04.250 UTC [2722460] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:02:04.299 UTC [2722460] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137318 kB, estimate=144566 kB
2023-07-22 06:02:04.361 UTC [2722459] LOG:  received fast shutdown request
2023-07-22 06:02:04.364 UTC [2722459] LOG:  aborting any active transactions
2023-07-22 06:02:04.365 UTC [2722459] LOG:  background worker "logical replication launcher" (PID 2722465) exited with exit code 1
2023-07-22 06:02:04.366 UTC [2722460] LOG:  shutting down
2023-07-22 06:02:04.369 UTC [2722460] LOG:  checkpoint starting: shutdown immediate
2023-07-22 06:02:04.385 UTC [2722460] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130109 kB
2023-07-22 06:02:04.406 UTC [2722459] LOG:  database system is shut down
2023-07-22 06:02:05.070 UTC [2722711] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 06:02:05.070 UTC [2722711] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 06:02:05.076 UTC [2722711] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 06:02:05.084 UTC [2722714] LOG:  database system was shut down at 2023-07-22 06:02:04 UTC
2023-07-22 06:02:05.089 UTC [2722711] LOG:  database system is ready to accept connections
2023-07-22 06:02:05.247 UTC [2722730] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 06:02:05.247 UTC [2722730] STATEMENT:  select gen_salt('foo');
2023-07-22 06:02:05.247 UTC [2722730] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 06:02:05.247 UTC [2722730] STATEMENT:  select digest('foo', 'foo');
2023-07-22 06:02:05.247 UTC [2722730] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 06:02:05.247 UTC [2722730] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 06:02:05.247 UTC [2722730] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 06:02:05.247 UTC [2722730] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 06:02:05.286 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.286 UTC [2722750] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:02:05.286 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.286 UTC [2722750] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Key was too big
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Key was too big
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Key was too big
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 06:02:05.287 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.287 UTC [2722750] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  encrypt error: Key was too big
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 06:02:05.288 UTC [2722750] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.288 UTC [2722750] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 06:02:05.297 UTC [2722756] ERROR:  encrypt error: Encryption failed
2023-07-22 06:02:05.297 UTC [2722756] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 06:02:05.298 UTC [2722756] ERROR:  decrypt error: Decryption failed
2023-07-22 06:02:05.298 UTC [2722756] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 06:02:05.298 UTC [2722756] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 06:02:05.298 UTC [2722756] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 06:02:05.314 UTC [2722764] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.314 UTC [2722764] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 06:02:05.314 UTC [2722764] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.314 UTC [2722764] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 06:02:05.315 UTC [2722764] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.315 UTC [2722764] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 06:02:05.315 UTC [2722764] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.315 UTC [2722764] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 06:02:05.315 UTC [2722764] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:02:05.315 UTC [2722764] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 06:02:05.315 UTC [2722764] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:02:05.315 UTC [2722764] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 06:02:05.315 UTC [2722764] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.315 UTC [2722764] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 06:02:05.315 UTC [2722764] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.315 UTC [2722764] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 06:02:05.332 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.332 UTC [2722774] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 06:02:05.332 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.332 UTC [2722774] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 06:02:05.332 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.332 UTC [2722774] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 06:02:05.332 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.332 UTC [2722774] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 06:02:05.332 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.332 UTC [2722774] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 06:02:05.333 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.333 UTC [2722774] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 06:02:05.333 UTC [2722774] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:02:05.333 UTC [2722774] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 06:02:05.333 UTC [2722774] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:02:05.333 UTC [2722774] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 06:02:05.333 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.333 UTC [2722774] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 06:02:05.333 UTC [2722774] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:02:05.333 UTC [2722774] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 06:02:05.342 UTC [2722780] ERROR:  invalid salt
2023-07-22 06:02:05.342 UTC [2722780] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 06:02:05.439 UTC [2722788] ERROR:  invalid salt
2023-07-22 06:02:05.439 UTC [2722788] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 06:02:05.440 UTC [2722788] ERROR:  invalid salt
2023-07-22 06:02:05.440 UTC [2722788] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 06:02:05.440 UTC [2722788] ERROR:  invalid salt
2023-07-22 06:02:05.440 UTC [2722788] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 06:02:05.507 UTC [2722792] ERROR:  invalid salt
2023-07-22 06:02:05.507 UTC [2722792] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 06:02:05.507 UTC [2722792] ERROR:  crypt(3) returned NULL
2023-07-22 06:02:05.507 UTC [2722792] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 06:02:05.507 UTC [2722792] ERROR:  crypt(3) returned NULL
2023-07-22 06:02:05.507 UTC [2722792] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 06:02:05.524 UTC [2722796] ERROR:  Corrupt ascii-armor
2023-07-22 06:02:05.524 UTC [2722796] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:02:05.524 UTC [2722796] ERROR:  Corrupt ascii-armor
2023-07-22 06:02:05.524 UTC [2722796] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:02:05.524 UTC [2722796] ERROR:  Corrupt ascii-armor
2023-07-22 06:02:05.524 UTC [2722796] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  mismatched array dimensions
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  mismatched array dimensions
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  wrong number of array subscripts
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  wrong number of array subscripts
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  null value not allowed for header key
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  null value not allowed for header value
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  header key must not contain newlines
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 06:02:05.526 UTC [2722796] ERROR:  header value must not contain newlines
2023-07-22 06:02:05.526 UTC [2722796] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 06:02:05.527 UTC [2722796] ERROR:  header key must not contain ": "
2023-07-22 06:02:05.527 UTC [2722796] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 06:02:05.533 UTC [2722800] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:05.533 UTC [2722800] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 06:02:05.545 UTC [2722800] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:05.545 UTC [2722800] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 06:02:05.545 UTC [2722800] ERROR:  Not text data
2023-07-22 06:02:05.545 UTC [2722800] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 06:02:05.546 UTC [2722800] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:05.546 UTC [2722800] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 06:02:05.546 UTC [2722800] ERROR:  Unsupported compression algorithm
2023-07-22 06:02:05.546 UTC [2722800] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 06:02:05.559 UTC [2722806] ERROR:  Not text data
2023-07-22 06:02:05.559 UTC [2722806] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 06:02:06.002 UTC [2722814] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:06.002 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 06:02:06.015 UTC [2722814] ERROR:  Wrong key
2023-07-22 06:02:06.015 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 06:02:06.015 UTC [2722814] ERROR:  No encryption key found
2023-07-22 06:02:06.015 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 06:02:06.016 UTC [2722814] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:06.016 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 06:02:06.021 UTC [2722814] ERROR:  Need password for secret key
2023-07-22 06:02:06.021 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 06:02:06.021 UTC [2722814] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:06.021 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 06:02:06.025 UTC [2722814] ERROR:  Wrong key or corrupt data
2023-07-22 06:02:06.025 UTC [2722814] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 06:02:06.046 UTC [2722820] ERROR:  No encryption key found
2023-07-22 06:02:06.046 UTC [2722820] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 06:02:06.046 UTC [2722820] ERROR:  Refusing to encrypt with secret key
2023-07-22 06:02:06.046 UTC [2722820] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 06:02:06.047 UTC [2722820] ERROR:  Not text data
2023-07-22 06:02:06.047 UTC [2722820] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 06:02:06.054 UTC [2722824] ERROR:  No encryption key found
2023-07-22 06:02:06.054 UTC [2722824] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 06:02:06.055 UTC [2722824] ERROR:  No encryption key found
2023-07-22 06:02:06.055 UTC [2722824] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 06:02:06.412 UTC [2722841] WARNING:  hypopg: SQL order #1 is not a CREATE INDEX statement
2023-07-22 06:02:06.412 UTC [2722841] WARNING:  hypopg: SQL order #3 is not a CREATE INDEX statement
2023-07-22 06:02:06.415 UTC [2722841] ERROR:  value 1 out of bounds for option "fillfactor"
2023-07-22 06:02:06.415 UTC [2722841] DETAIL:  Valid values are between "10" and "100".
2023-07-22 06:02:06.415 UTC [2722841] STATEMENT:  SELECT COUNT(*) AS NB
	FROM public.hypopg_create_index('CREATE INDEX ON hypo(id) WITH (fillfactor = 1)');
2023-07-22 06:02:06.415 UTC [2722841] ERROR:  oid 1 is not a hypothetical index
2023-07-22 06:02:06.415 UTC [2722841] STATEMENT:  SELECT hypopg_relation_size(1);
2023-07-22 06:02:38.382 UTC [2722712] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:02:38.604 UTC [2722712] LOG:  checkpoint complete: wrote 1251 buffers (7.6%); 0 WAL file(s) added, 0 removed, 10 recycled; write=0.047 s, sync=0.126 s, total=0.222 s; sync files=514, longest=0.007 s, average=0.001 s; distance=158926 kB, estimate=158926 kB
2023-07-22 06:03:09.935 UTC [2722712] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:03:09.989 UTC [2722712] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.005 s, total=0.054 s; sync files=4, longest=0.004 s, average=0.002 s; distance=136769 kB, estimate=156710 kB
2023-07-22 06:03:10.053 UTC [2722711] LOG:  received fast shutdown request
2023-07-22 06:03:10.056 UTC [2722711] LOG:  aborting any active transactions
2023-07-22 06:03:10.057 UTC [2722711] LOG:  background worker "logical replication launcher" (PID 2722717) exited with exit code 1
2023-07-22 06:03:10.058 UTC [2722712] LOG:  shutting down
2023-07-22 06:03:10.061 UTC [2722712] LOG:  checkpoint starting: shutdown immediate
2023-07-22 06:03:10.078 UTC [2722712] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=141039 kB
2023-07-22 06:03:10.098 UTC [2722711] LOG:  database system is shut down
2023-07-22 06:03:10.846 UTC [2722987] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 06:03:10.846 UTC [2722987] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 06:03:10.851 UTC [2722987] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 06:03:10.858 UTC [2722990] LOG:  database system was shut down at 2023-07-22 06:03:10 UTC
2023-07-22 06:03:10.863 UTC [2722987] LOG:  database system is ready to accept connections
2023-07-22 06:03:11.047 UTC [2723006] ERROR:  gen_salt: Unknown salt algorithm
2023-07-22 06:03:11.047 UTC [2723006] STATEMENT:  select gen_salt('foo');
2023-07-22 06:03:11.047 UTC [2723006] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 06:03:11.047 UTC [2723006] STATEMENT:  select digest('foo', 'foo');
2023-07-22 06:03:11.047 UTC [2723006] ERROR:  Cannot use "foo": No such hash algorithm
2023-07-22 06:03:11.047 UTC [2723006] STATEMENT:  select hmac('foo', 'foo', 'foo');
2023-07-22 06:03:11.047 UTC [2723006] ERROR:  Cannot use "foo": No such cipher algorithm
2023-07-22 06:03:11.047 UTC [2723006] STATEMENT:  select encrypt('foo', 'foo', 'foo');
2023-07-22 06:03:11.085 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.085 UTC [2723026] STATEMENT:  SELECT encrypt('\x0000000000000000', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:03:11.085 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.085 UTC [2723026] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\xffffffffffffffff', 'bf-ecb/pad:none');
2023-07-22 06:03:11.085 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.085 UTC [2723026] STATEMENT:  SELECT encrypt('\x1000000000000001', '\x3000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:03:11.085 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.085 UTC [2723026] STATEMENT:  SELECT encrypt('\x1111111111111111', '\x1111111111111111', 'bf-ecb/pad:none');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\x01a1d6d039776742', '\xfedcba9876543210', 'bf-ecb/pad:none');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\xffffffffffffffff', '\x0000000000000000', 'bf-ecb/pad:none');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\xfedcba9876543210', '\xf0e1d2c3b4a5968778695a4b3c2d1e0f', 'bf-ecb/pad:none');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\x01234567890123456789', '\x33443344334433443344334433443344', 'bf-ecb');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Key was too big
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5',
	               '\x37363534333231204e6f77206973207468652074696d6520666f7220',
	               'bf-cbc');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Key was too big
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\x6b77b4d63006dee605b156e27403979358deb9e7154616d959f1652bd5ff92cc',
	               '\x37363534333231204e6f77206973207468652074696d6520666f722000',
	               'bf-cbc');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Key was too big
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  SELECT encrypt('\xfedcba9876543210',
	               '\xf0e1d2c3b4a5968778695a4b3c2d1e0f001122334455667704689104c2fd3b2f584023641aba61761f1f1f1f0e0e0e0effffffffffffffff',
	               'bf-ecb/pad:none');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  select encrypt('', 'foo', 'bf');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  select encrypt('foo', '0123456789', 'bf');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Key was too big
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  select encrypt('foo', '0123456789012345678901', 'bf');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'bf'), '0123456', 'bf'), 'escape');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'bf');
2023-07-22 06:03:11.086 UTC [2723026] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:03:11.086 UTC [2723026] STATEMENT:  select encode(decrypt_iv('\x95c7e89322525d59', '0123456', 'abcd', 'bf'), 'escape');
2023-07-22 06:03:11.087 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.087 UTC [2723026] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'bf');
2023-07-22 06:03:11.087 UTC [2723026] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.087 UTC [2723026] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'bf'), '0123456789', 'bf'), 'escape');
2023-07-22 06:03:11.096 UTC [2723032] ERROR:  encrypt error: Encryption failed
2023-07-22 06:03:11.096 UTC [2723032] STATEMENT:  SELECT encrypt(
	'\x00112233445566778899aabbccddeeff00',
	'\x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f',
	'aes-cbc/pad:none');
2023-07-22 06:03:11.097 UTC [2723032] ERROR:  decrypt error: Decryption failed
2023-07-22 06:03:11.097 UTC [2723032] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'aes') || '\x00'::bytea, '0123456', 'aes'), 'escape');
2023-07-22 06:03:11.097 UTC [2723032] ERROR:  decrypt_iv error: Decryption failed
2023-07-22 06:03:11.097 UTC [2723032] STATEMENT:  select encode(decrypt_iv('\xa21a9c15231465964e3396d32095e67eb52bab05f556a581621dee1b85385789', '0123456', 'abcd', 'aes'), 'escape');
2023-07-22 06:03:11.113 UTC [2723040] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.113 UTC [2723040] STATEMENT:  SELECT encrypt('\x0123456789abcdef', '\xfedcba9876543210', 'des-ecb/pad:none');
2023-07-22 06:03:11.113 UTC [2723040] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.113 UTC [2723040] STATEMENT:  select encrypt('', 'foo', 'des');
2023-07-22 06:03:11.113 UTC [2723040] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.113 UTC [2723040] STATEMENT:  select encrypt('foo', '01234589', 'des');
2023-07-22 06:03:11.113 UTC [2723040] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.113 UTC [2723040] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'des'), '0123456', 'des'), 'escape');
2023-07-22 06:03:11.113 UTC [2723040] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:03:11.113 UTC [2723040] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'des');
2023-07-22 06:03:11.113 UTC [2723040] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:03:11.113 UTC [2723040] STATEMENT:  select encode(decrypt_iv('\x50735067b073bb93', '0123456', 'abcd', 'des'), 'escape');
2023-07-22 06:03:11.114 UTC [2723040] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.114 UTC [2723040] STATEMENT:  select encrypt('Lets try a longer message.', '01234567', 'des');
2023-07-22 06:03:11.114 UTC [2723040] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.114 UTC [2723040] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '01234567', 'des'), '01234567', 'des'), 'escape');
2023-07-22 06:03:11.130 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.130 UTC [2723050] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712345678234567893456789A', 'cast5-ecb/pad:none');
2023-07-22 06:03:11.130 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.130 UTC [2723050] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x01234567123456782345', 'cast5-ecb/pad:none');
2023-07-22 06:03:11.130 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.130 UTC [2723050] STATEMENT:  SELECT encrypt('\x0123456789ABCDEF', '\x0123456712', 'cast5-ecb/pad:none');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encrypt('', 'foo', 'cast5');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encrypt('foo', '0123456789', 'cast5');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encode(decrypt(encrypt('foo', '0123456', 'cast5'), '0123456', 'cast5'), 'escape');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  encrypt_iv error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encrypt_iv('foo', '0123456', 'abcd', 'cast5');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  decrypt_iv error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encode(decrypt_iv('\x384a970695ce016a', '0123456', 'abcd', 'cast5'), 'escape');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encrypt('Lets try a longer message.', '0123456789', 'cast5');
2023-07-22 06:03:11.131 UTC [2723050] ERROR:  encrypt error: Cipher cannot be initialized
2023-07-22 06:03:11.131 UTC [2723050] STATEMENT:  select encode(decrypt(encrypt('Lets try a longer message.', '0123456789', 'cast5'), '0123456789', 'cast5'), 'escape');
2023-07-22 06:03:11.140 UTC [2723056] ERROR:  invalid salt
2023-07-22 06:03:11.140 UTC [2723056] STATEMENT:  SELECT crypt('password', 'a');
2023-07-22 06:03:11.200 UTC [2723064] ERROR:  invalid salt
2023-07-22 06:03:11.200 UTC [2723064] STATEMENT:  SELECT crypt('foox', '$2a$');
2023-07-22 06:03:11.200 UTC [2723064] ERROR:  invalid salt
2023-07-22 06:03:11.200 UTC [2723064] STATEMENT:  SELECT crypt('foox', '$2a$40$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 06:03:11.200 UTC [2723064] ERROR:  invalid salt
2023-07-22 06:03:11.200 UTC [2723064] STATEMENT:  SELECT crypt('foox', '$2a$00$RQiOJ.3ELirrXwxIZY8q0O');
2023-07-22 06:03:11.248 UTC [2723068] ERROR:  invalid salt
2023-07-22 06:03:11.248 UTC [2723068] STATEMENT:  SELECT crypt('foox', '_J9..BWH');
2023-07-22 06:03:11.248 UTC [2723068] ERROR:  crypt(3) returned NULL
2023-07-22 06:03:11.248 UTC [2723068] STATEMENT:  SELECT crypt('password', '_........');
2023-07-22 06:03:11.248 UTC [2723068] ERROR:  crypt(3) returned NULL
2023-07-22 06:03:11.248 UTC [2723068] STATEMENT:  SELECT crypt('password', '_..!!!!!!');
2023-07-22 06:03:11.297 UTC [2723072] ERROR:  Corrupt ascii-armor
2023-07-22 06:03:11.297 UTC [2723072] STATEMENT:  select dearmor('
	-----BEGIN PGP MESSAGE-----
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:03:11.298 UTC [2723072] ERROR:  Corrupt ascii-armor
2023-07-22 06:03:11.298 UTC [2723072] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	foo:
	
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:03:11.298 UTC [2723072] ERROR:  Corrupt ascii-armor
2023-07-22 06:03:11.298 UTC [2723072] STATEMENT:  select * from pgp_armor_headers('
	-----BEGIN PGP MESSAGE-----
	em9va2E=
	=ZZZZ
	-----END PGP MESSAGE-----
	');
2023-07-22 06:03:11.308 UTC [2723072] ERROR:  mismatched array dimensions
2023-07-22 06:03:11.308 UTC [2723072] STATEMENT:  select armor('', array['foo'], array['too', 'many']);
2023-07-22 06:03:11.308 UTC [2723072] ERROR:  mismatched array dimensions
2023-07-22 06:03:11.308 UTC [2723072] STATEMENT:  select armor('', array['too', 'many'], array['foo']);
2023-07-22 06:03:11.309 UTC [2723072] ERROR:  wrong number of array subscripts
2023-07-22 06:03:11.309 UTC [2723072] STATEMENT:  select armor('', array[['']], array['foo']);
2023-07-22 06:03:11.309 UTC [2723072] ERROR:  wrong number of array subscripts
2023-07-22 06:03:11.309 UTC [2723072] STATEMENT:  select armor('', array['foo'], array[['']]);
2023-07-22 06:03:11.310 UTC [2723072] ERROR:  null value not allowed for header key
2023-07-22 06:03:11.310 UTC [2723072] STATEMENT:  select armor('', array[null], array['foo']);
2023-07-22 06:03:11.310 UTC [2723072] ERROR:  null value not allowed for header value
2023-07-22 06:03:11.310 UTC [2723072] STATEMENT:  select armor('', array['foo'], array[null]);
2023-07-22 06:03:11.311 UTC [2723072] ERROR:  header key must not contain newlines
2023-07-22 06:03:11.311 UTC [2723072] STATEMENT:  select armor('', array[E'embedded\nnewline'], array['foo']);
2023-07-22 06:03:11.312 UTC [2723072] ERROR:  header value must not contain newlines
2023-07-22 06:03:11.312 UTC [2723072] STATEMENT:  select armor('', array['foo'], array[E'embedded\nnewline']);
2023-07-22 06:03:11.312 UTC [2723072] ERROR:  header key must not contain ": "
2023-07-22 06:03:11.312 UTC [2723072] STATEMENT:  select armor('', array['embedded: colon+space'], array['foo']);
2023-07-22 06:03:11.340 UTC [2723076] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.340 UTC [2723076] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	Comment: dat1.blowfish.sha1.mdc.s2k3.z0
	
	jA0EBAMCfFNwxnvodX9g0jwB4n4s26/g5VmKzVab1bX1SmwY7gvgvlWdF3jKisvS
	yA6Ce1QTMK3KdL2MPfamsTUSAML8huCJMwYQFfE=
	=JcP+
	-----END PGP MESSAGE-----
	'), 'foobar');
2023-07-22 06:03:11.378 UTC [2723076] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.378 UTC [2723076] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMCxf8PTrQBmJdl0jcB6y2joE7GSLKRv7trbNsF5Z8ou5NISLUg31llVH/S0B2wl4bvzZjV
	VsxxqLSPzNLAeIspJk5G
	=mSd/
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 06:03:11.380 UTC [2723076] ERROR:  Not text data
2023-07-22 06:03:11.380 UTC [2723076] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('P', 'key'), 'key', 'debug=1');
2023-07-22 06:03:11.381 UTC [2723076] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.381 UTC [2723076] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	ww0EBwMC9rK/dMkF5Zlt0jcBlzAQ1mQY2qYbKYbw8h3EZ5Jk0K2IiY92R82TRhWzBIF/8cmXDPtP
	GXsd65oYJZp3Khz0qfyn
	=Nmpq
	-----END PGP MESSAGE-----
	'), 'wrong-key', 'debug=1');
2023-07-22 06:03:11.382 UTC [2723076] ERROR:  Unsupported compression algorithm
2023-07-22 06:03:11.382 UTC [2723076] STATEMENT:  select pgp_sym_decrypt(dearmor('
	-----BEGIN PGP MESSAGE-----
	
	jA0EBwMCRhFrAKNcLVJg0mMBLJG1cCASNk/x/3dt1zJ+2eo7jHfjgg3N6wpB3XIe
	QCwkWJwlBG5pzbO5gu7xuPQN+TbPJ7aQ2sLx3bAHhtYb0i3vV9RO10Gw++yUyd4R
	UCAAw2JRIISttRHMfDpDuZJpvYo=
	=AZ9M
	-----END PGP MESSAGE-----
	'), 'key', 'debug=1');
2023-07-22 06:03:11.402 UTC [2723092] ERROR:  Not text data
2023-07-22 06:03:11.402 UTC [2723092] STATEMENT:  select pgp_sym_decrypt(pgp_sym_encrypt_bytea('Binary', 'baz'), 'baz');
2023-07-22 06:03:11.861 UTC [2723132] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.861 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=2;
2023-07-22 06:03:11.882 UTC [2723132] ERROR:  Wrong key
2023-07-22 06:03:11.882 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=2 and encdata.id=1;
2023-07-22 06:03:11.883 UTC [2723132] ERROR:  No encryption key found
2023-07-22 06:03:11.883 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=4 and encdata.id=1;
2023-07-22 06:03:11.884 UTC [2723132] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.884 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), '123')
	from keytbl, encdata where keytbl.id=7 and encdata.id=4;
2023-07-22 06:03:11.890 UTC [2723132] ERROR:  Need password for secret key
2023-07-22 06:03:11.890 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 06:03:11.891 UTC [2723132] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.891 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey), 'foo')
	from keytbl, encdata where keytbl.id=5 and encdata.id=1;
2023-07-22 06:03:11.896 UTC [2723132] ERROR:  Wrong key or corrupt data
2023-07-22 06:03:11.896 UTC [2723132] STATEMENT:  select pgp_pub_decrypt(dearmor(data), dearmor(seckey))
	from keytbl, encdata where keytbl.id=6 and encdata.id=5;
2023-07-22 06:03:11.919 UTC [2723138] ERROR:  No encryption key found
2023-07-22 06:03:11.919 UTC [2723138] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=4;
2023-07-22 06:03:11.919 UTC [2723138] ERROR:  Refusing to encrypt with secret key
2023-07-22 06:03:11.919 UTC [2723138] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt('Secret msg', dearmor(seckey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 06:03:11.920 UTC [2723138] ERROR:  Not text data
2023-07-22 06:03:11.920 UTC [2723138] STATEMENT:  select pgp_pub_decrypt(
			pgp_pub_encrypt_bytea('Secret msg', dearmor(pubkey)),
			dearmor(seckey))
	from keytbl where keytbl.id=1;
2023-07-22 06:03:11.928 UTC [2723142] ERROR:  No encryption key found
2023-07-22 06:03:11.928 UTC [2723142] STATEMENT:  select pgp_key_id(dearmor(pubkey)) from keytbl where id=4;
2023-07-22 06:03:11.929 UTC [2723142] ERROR:  No encryption key found
2023-07-22 06:03:11.929 UTC [2723142] STATEMENT:  select pgp_key_id(dearmor(seckey)) from keytbl where id=4;
2023-07-22 06:03:12.130 UTC [2723185] ERROR:  Type of sequence element int4 doesn't match with function cs_to_float4_array return type
2023-07-22 06:03:12.130 UTC [2723185] STATEMENT:  select cs_to_float4_array('int4:{1,2,3,4,5}');
2023-07-22 06:03:12.300 UTC [2723261] ERROR:  no matching timestamp in timeseries
2023-07-22 06:03:12.300 UTC [2723261] STATEMENT:  select (Quote_project(Quote_get('IBM'), Quote_join('IBM', 'date:{2-Nov-2013,4-Nov-2013,03-Nov-2013,01-Nov-2013}', 0))).*;
2023-07-22 06:03:43.992 UTC [2722988] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:03:44.115 UTC [2722988] LOG:  checkpoint complete: wrote 1260 buffers (7.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.025 s, sync=0.057 s, total=0.124 s; sync files=511, longest=0.004 s, average=0.001 s; distance=146991 kB, estimate=146991 kB
2023-07-22 06:04:15.490 UTC [2722988] LOG:  checkpoint starting: immediate force wait
2023-07-22 06:04:15.537 UTC [2722988] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.048 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137608 kB, estimate=146053 kB
2023-07-22 06:04:15.599 UTC [2722987] LOG:  received fast shutdown request
2023-07-22 06:04:15.603 UTC [2722987] LOG:  aborting any active transactions
2023-07-22 06:04:15.604 UTC [2722987] LOG:  background worker "logical replication launcher" (PID 2722993) exited with exit code 1
2023-07-22 06:04:15.605 UTC [2722988] LOG:  shutting down
2023-07-22 06:04:15.607 UTC [2722988] LOG:  checkpoint starting: shutdown immediate
2023-07-22 06:04:15.628 UTC [2722988] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.023 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131447 kB
2023-07-22 06:04:15.648 UTC [2722987] LOG:  database system is shut down
2023-07-22 06:04:16.323 UTC [2723397] FATAL:  could not access file "intagg": No such file or directory
2023-07-22 06:04:16.323 UTC [2723397] LOG:  database system is shut down
