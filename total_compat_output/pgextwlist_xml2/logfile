2023-07-22 03:40:29.381 UTC [1612227] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:40:29.382 UTC [1612227] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:40:29.387 UTC [1612227] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:40:29.395 UTC [1612230] LOG:  database system was shut down at 2023-07-22 03:40:29 UTC
2023-07-22 03:40:29.404 UTC [1612227] LOG:  database system is ready to accept connections
2023-07-22 03:40:29.597 UTC [1612246] ERROR:  file "test_file1" exists
2023-07-22 03:40:29.597 UTC [1612246] STATEMENT:  SELECT pg_file_write('test_file1', 'test1', false);
2023-07-22 03:40:29.601 UTC [1612246] ERROR:  path must be in or below the current directory
2023-07-22 03:40:29.601 UTC [1612246] STATEMENT:  SELECT pg_file_write('../test_file0', 'test0', false);
2023-07-22 03:40:29.601 UTC [1612246] ERROR:  absolute path not allowed
2023-07-22 03:40:29.601 UTC [1612246] STATEMENT:  SELECT pg_file_write('/tmp/test_file0', 'test0', false);
2023-07-22 03:40:29.601 UTC [1612246] ERROR:  absolute path not allowed
2023-07-22 03:40:29.601 UTC [1612246] STATEMENT:  SELECT pg_file_write(current_setting('data_directory') || '/../test_file4', 'test4', false);
2023-07-22 03:40:29.610 UTC [1612246] ERROR:  could not stat file "test_file2": No such file or directory
2023-07-22 03:40:29.610 UTC [1612246] STATEMENT:  SELECT pg_file_sync('test_file2');
2023-07-22 03:40:29.612 UTC [1612246] ERROR:  could not open file "test_file1" for reading: No such file or directory
2023-07-22 03:40:29.612 UTC [1612246] STATEMENT:  SELECT pg_read_file('test_file1');
2023-07-22 03:40:29.613 UTC [1612246] WARNING:  file "test_file1" is not accessible: No such file or directory
2023-07-22 03:40:29.613 UTC [1612246] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:40:29.615 UTC [1612246] ERROR:  could not open file "test_file2" for reading: No such file or directory
2023-07-22 03:40:29.615 UTC [1612246] STATEMENT:  SELECT pg_read_file('test_file2');
2023-07-22 03:40:29.619 UTC [1612246] ERROR:  permission denied for function pg_file_write
2023-07-22 03:40:29.619 UTC [1612246] STATEMENT:  SELECT pg_file_write('test_file0', 'test0', false);
2023-07-22 03:40:29.619 UTC [1612246] ERROR:  permission denied for function pg_file_sync
2023-07-22 03:40:29.619 UTC [1612246] STATEMENT:  SELECT pg_file_sync('test_file0');
2023-07-22 03:40:29.620 UTC [1612246] ERROR:  permission denied for function pg_file_rename
2023-07-22 03:40:29.620 UTC [1612246] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:40:29.620 UTC [1612246] STATEMENT:  SELECT pg_file_rename('test_file0', 'test_file0');
2023-07-22 03:40:29.620 UTC [1612246] ERROR:  permission denied for function pg_file_unlink
2023-07-22 03:40:29.620 UTC [1612246] STATEMENT:  SELECT pg_file_unlink('test_file0');
2023-07-22 03:40:29.621 UTC [1612246] ERROR:  permission denied for function pg_logdir_ls
2023-07-22 03:40:29.621 UTC [1612246] STATEMENT:  SELECT pg_logdir_ls();
2023-07-22 03:40:29.735 UTC [1612261] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:40:29.735 UTC [1612261] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:40:29.765 UTC [1612261] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:40:29.765 UTC [1612261] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:40:29.765 UTC [1612261] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:40:29.765 UTC [1612261] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:40:29.783 UTC [1612261] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:40:29.783 UTC [1612261] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:40:29.784 UTC [1612261] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:40:29.784 UTC [1612261] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:41:01.695 UTC [1612228] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:41:02.129 UTC [1612228] LOG:  checkpoint complete: wrote 848 buffers (5.2%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.035 s, sync=0.061 s, total=0.434 s; sync files=512, longest=0.003 s, average=0.001 s; distance=145142 kB, estimate=145142 kB
2023-07-22 03:41:33.766 UTC [1612228] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:41:33.813 UTC [1612228] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.047 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136710 kB, estimate=144299 kB
2023-07-22 03:41:33.849 UTC [1612227] LOG:  received fast shutdown request
2023-07-22 03:41:33.852 UTC [1612227] LOG:  aborting any active transactions
2023-07-22 03:41:33.853 UTC [1612227] LOG:  background worker "logical replication launcher" (PID 1612233) exited with exit code 1
2023-07-22 03:41:33.853 UTC [1612228] LOG:  shutting down
2023-07-22 03:41:33.856 UTC [1612228] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:41:33.873 UTC [1612228] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129869 kB
2023-07-22 03:41:33.911 UTC [1612227] LOG:  database system is shut down
2023-07-22 03:41:34.576 UTC [1612335] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:41:34.576 UTC [1612335] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:41:34.582 UTC [1612335] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:41:34.593 UTC [1612338] LOG:  database system was shut down at 2023-07-22 03:41:34 UTC
2023-07-22 03:41:34.602 UTC [1612335] LOG:  database system is ready to accept connections
2023-07-22 03:41:35.205 UTC [1612358] ERROR:  permission denied for function bt_index_check
2023-07-22 03:41:35.205 UTC [1612358] STATEMENT:  SELECT bt_index_check('bttest_a_idx'::regclass);
2023-07-22 03:41:35.206 UTC [1612358] ERROR:  permission denied for function bt_index_parent_check
2023-07-22 03:41:35.206 UTC [1612358] STATEMENT:  SELECT bt_index_parent_check('bttest_a_idx'::regclass);
2023-07-22 03:41:35.237 UTC [1612358] ERROR:  "bttest_a" is not an index
2023-07-22 03:41:35.237 UTC [1612358] STATEMENT:  SELECT bt_index_check('bttest_a');
2023-07-22 03:41:35.237 UTC [1612358] ERROR:  "bttest_a" is not an index
2023-07-22 03:41:35.237 UTC [1612358] STATEMENT:  SELECT bt_index_parent_check('bttest_a');
2023-07-22 03:41:35.238 UTC [1612358] ERROR:  could not open relation with OID 17
2023-07-22 03:41:35.238 UTC [1612358] STATEMENT:  SELECT bt_index_check(17);
2023-07-22 03:41:35.238 UTC [1612358] ERROR:  could not open relation with OID 17
2023-07-22 03:41:35.238 UTC [1612358] STATEMENT:  SELECT bt_index_parent_check(17);
2023-07-22 03:41:35.255 UTC [1612358] ERROR:  only B-Tree indexes are supported as targets for verification
2023-07-22 03:41:35.255 UTC [1612358] DETAIL:  Relation "bttest_a_brin_idx" is not a B-Tree index.
2023-07-22 03:41:35.255 UTC [1612358] STATEMENT:  SELECT bt_index_parent_check('bttest_a_brin_idx');
2023-07-22 03:41:35.993 UTC [1612362] ERROR:  invalid skip option
2023-07-22 03:41:35.993 UTC [1612362] HINT:  Valid skip options are "all-visible", "all-frozen", and "none".
2023-07-22 03:41:35.993 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'rope');
2023-07-22 03:41:36.007 UTC [1612362] ERROR:  permission denied for function verify_heapam
2023-07-22 03:41:36.007 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest');
2023-07-22 03:41:36.012 UTC [1612362] ERROR:  ending block number must be between 0 and 0
2023-07-22 03:41:36.012 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 10000);
2023-07-22 03:41:36.012 UTC [1612362] ERROR:  starting block number must be between 0 and 0
2023-07-22 03:41:36.012 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 10000, endblock := 11000);
2023-07-22 03:41:36.021 UTC [1612362] ERROR:  cannot check relation "test_partitioned"
2023-07-22 03:41:36.021 UTC [1612362] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 03:41:36.021 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam('test_partitioned',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:41:36.117 UTC [1612362] ERROR:  cannot check relation "test_index"
2023-07-22 03:41:36.117 UTC [1612362] DETAIL:  This operation is not supported for indexes.
2023-07-22 03:41:36.117 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam('test_index',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:41:36.119 UTC [1612362] ERROR:  cannot check relation "test_view"
2023-07-22 03:41:36.119 UTC [1612362] DETAIL:  This operation is not supported for views.
2023-07-22 03:41:36.119 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam('test_view',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:41:36.124 UTC [1612362] ERROR:  cannot check relation "test_foreign_table"
2023-07-22 03:41:36.124 UTC [1612362] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 03:41:36.124 UTC [1612362] STATEMENT:  SELECT * FROM verify_heapam('test_foreign_table',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:41:36.142 UTC [1612336] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:41:36.186 UTC [1612336] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 4 recycled; write=0.015 s, sync=0.005 s, total=0.044 s; sync files=14, longest=0.003 s, average=0.001 s; distance=60969 kB, estimate=60969 kB
2023-07-22 03:41:36.292 UTC [1612377] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:41:36.292 UTC [1612377] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:41:36.313 UTC [1612377] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:41:36.313 UTC [1612377] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:41:36.314 UTC [1612377] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:41:36.314 UTC [1612377] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:41:36.334 UTC [1612377] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:41:36.334 UTC [1612377] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:41:36.334 UTC [1612377] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:41:36.334 UTC [1612377] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:42:07.859 UTC [1612336] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:42:07.992 UTC [1612336] LOG:  checkpoint complete: wrote 494 buffers (3.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.030 s, sync=0.060 s, total=0.134 s; sync files=255, longest=0.004 s, average=0.001 s; distance=141132 kB, estimate=141132 kB
2023-07-22 03:42:39.395 UTC [1612336] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:42:39.452 UTC [1612336] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.004 s, total=0.058 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136991 kB, estimate=140718 kB
2023-07-22 03:42:39.506 UTC [1612335] LOG:  received fast shutdown request
2023-07-22 03:42:39.510 UTC [1612335] LOG:  aborting any active transactions
2023-07-22 03:42:39.511 UTC [1612335] LOG:  background worker "logical replication launcher" (PID 1612341) exited with exit code 1
2023-07-22 03:42:39.511 UTC [1612336] LOG:  shutting down
2023-07-22 03:42:39.515 UTC [1612336] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:42:39.531 UTC [1612336] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126646 kB
2023-07-22 03:42:39.550 UTC [1612335] LOG:  database system is shut down
2023-07-22 03:42:40.387 UTC [1612449] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:42:40.388 UTC [1612449] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:42:40.396 UTC [1612449] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:42:40.404 UTC [1612452] LOG:  database system was shut down at 2023-07-22 03:42:40 UTC
2023-07-22 03:42:40.413 UTC [1612449] LOG:  database system is ready to accept connections
2023-07-22 03:42:40.582 UTC [1612466] ERROR:  extension "auth_delay" is not available
2023-07-22 03:42:40.582 UTC [1612466] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auth_delay.control": No such file or directory.
2023-07-22 03:42:40.582 UTC [1612466] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:42:40.582 UTC [1612466] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auth_delay"
2023-07-22 03:42:40.585 UTC [1612449] LOG:  received fast shutdown request
2023-07-22 03:42:40.590 UTC [1612449] LOG:  aborting any active transactions
2023-07-22 03:42:40.591 UTC [1612449] LOG:  background worker "logical replication launcher" (PID 1612455) exited with exit code 1
2023-07-22 03:42:40.591 UTC [1612450] LOG:  shutting down
2023-07-22 03:42:40.596 UTC [1612450] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:42:40.686 UTC [1612450] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.051 s, sync=0.026 s, total=0.095 s; sync files=252, longest=0.007 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 03:42:40.706 UTC [1612449] LOG:  database system is shut down
2023-07-22 03:42:41.515 UTC [1612495] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:42:41.515 UTC [1612495] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:42:41.523 UTC [1612495] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:42:41.529 UTC [1612498] LOG:  database system was shut down at 2023-07-22 03:42:41 UTC
2023-07-22 03:42:41.538 UTC [1612495] LOG:  database system is ready to accept connections
2023-07-22 03:42:41.704 UTC [1612512] ERROR:  extension "auto_explain" is not available
2023-07-22 03:42:41.704 UTC [1612512] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auto_explain.control": No such file or directory.
2023-07-22 03:42:41.704 UTC [1612512] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:42:41.704 UTC [1612512] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auto_explain"
2023-07-22 03:42:41.716 UTC [1612495] LOG:  received fast shutdown request
2023-07-22 03:42:41.722 UTC [1612495] LOG:  aborting any active transactions
2023-07-22 03:42:41.725 UTC [1612495] LOG:  background worker "logical replication launcher" (PID 1612501) exited with exit code 1
2023-07-22 03:42:41.725 UTC [1612496] LOG:  shutting down
2023-07-22 03:42:41.730 UTC [1612496] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:42:41.812 UTC [1612496] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.040 s, sync=0.028 s, total=0.087 s; sync files=252, longest=0.007 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 03:42:41.832 UTC [1612495] LOG:  database system is shut down
2023-07-22 03:42:42.660 UTC [1612541] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:42:42.661 UTC [1612541] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:42:42.668 UTC [1612541] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:42:42.676 UTC [1612544] LOG:  database system was shut down at 2023-07-22 03:42:42 UTC
2023-07-22 03:42:42.681 UTC [1612541] LOG:  database system is ready to accept connections
2023-07-22 03:42:42.852 UTC [1612558] ERROR:  extension "basebackup_to_shell" is not available
2023-07-22 03:42:42.852 UTC [1612558] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/basebackup_to_shell.control": No such file or directory.
2023-07-22 03:42:42.852 UTC [1612558] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:42:42.852 UTC [1612558] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "basebackup_to_shell"
2023-07-22 03:42:42.855 UTC [1612541] LOG:  received fast shutdown request
2023-07-22 03:42:42.861 UTC [1612541] LOG:  aborting any active transactions
2023-07-22 03:42:42.863 UTC [1612541] LOG:  background worker "logical replication launcher" (PID 1612547) exited with exit code 1
2023-07-22 03:42:42.863 UTC [1612542] LOG:  shutting down
2023-07-22 03:42:42.869 UTC [1612542] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:42:42.958 UTC [1612542] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.045 s, sync=0.026 s, total=0.095 s; sync files=252, longest=0.007 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 03:42:42.963 UTC [1612541] LOG:  database system is shut down
2023-07-22 03:42:43.784 UTC [1612587] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:42:43.784 UTC [1612587] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:42:43.790 UTC [1612587] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:42:43.800 UTC [1612590] LOG:  database system was shut down at 2023-07-22 03:42:43 UTC
2023-07-22 03:42:43.810 UTC [1612587] LOG:  database system is ready to accept connections
2023-07-22 03:42:44.262 UTC [1612588] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:42:44.304 UTC [1612588] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.010 s, sync=0.008 s, total=0.042 s; sync files=7, longest=0.006 s, average=0.002 s; distance=11698 kB, estimate=11698 kB
2023-07-22 03:42:44.395 UTC [1612619] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:42:44.395 UTC [1612619] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:42:44.427 UTC [1612619] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:42:44.427 UTC [1612619] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:42:44.427 UTC [1612619] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:42:44.427 UTC [1612619] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:42:44.445 UTC [1612619] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:42:44.445 UTC [1612619] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:42:44.446 UTC [1612619] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:42:44.446 UTC [1612619] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:43:16.809 UTC [1612588] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:43:16.897 UTC [1612588] LOG:  checkpoint complete: wrote 645 buffers (3.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.031 s, total=0.089 s; sync files=255, longest=0.004 s, average=0.001 s; distance=140847 kB, estimate=140847 kB
2023-07-22 03:43:48.496 UTC [1612588] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:43:48.573 UTC [1612588] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.007 s, total=0.078 s; sync files=4, longest=0.004 s, average=0.002 s; distance=134636 kB, estimate=140226 kB
2023-07-22 03:43:48.618 UTC [1612587] LOG:  received fast shutdown request
2023-07-22 03:43:48.624 UTC [1612587] LOG:  aborting any active transactions
2023-07-22 03:43:48.624 UTC [1612587] LOG:  background worker "logical replication launcher" (PID 1612594) exited with exit code 1
2023-07-22 03:43:48.625 UTC [1612588] LOG:  shutting down
2023-07-22 03:43:48.642 UTC [1612588] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:43:48.734 UTC [1612588] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.027 s, sync=0.005 s, total=0.095 s; sync files=1, longest=0.005 s, average=0.005 s; distance=3042 kB, estimate=126508 kB
2023-07-22 03:43:48.785 UTC [1612587] LOG:  database system is shut down
2023-07-22 03:43:49.562 UTC [1612685] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:43:49.562 UTC [1612685] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:43:49.571 UTC [1612685] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:43:49.583 UTC [1612688] LOG:  database system was shut down at 2023-07-22 03:43:49 UTC
2023-07-22 03:43:49.594 UTC [1612685] LOG:  database system is ready to accept connections
2023-07-22 03:43:49.923 UTC [1612704] ERROR:  value 0 out of bounds for option "length"
2023-07-22 03:43:49.923 UTC [1612704] DETAIL:  Valid values are between "1" and "4096".
2023-07-22 03:43:49.923 UTC [1612704] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (length=0);
2023-07-22 03:43:49.924 UTC [1612704] ERROR:  value 0 out of bounds for option "col1"
2023-07-22 03:43:49.924 UTC [1612704] DETAIL:  Valid values are between "1" and "4095".
2023-07-22 03:43:49.924 UTC [1612704] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (col1=0);
2023-07-22 03:43:49.952 UTC [1612686] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:43:49.991 UTC [1612686] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.009 s, total=0.039 s; sync files=7, longest=0.005 s, average=0.002 s; distance=5194 kB, estimate=5194 kB
2023-07-22 03:43:50.066 UTC [1612719] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:43:50.066 UTC [1612719] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:43:50.096 UTC [1612719] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:43:50.096 UTC [1612719] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:43:50.096 UTC [1612719] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:43:50.096 UTC [1612719] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:43:50.115 UTC [1612719] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:43:50.115 UTC [1612719] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:43:50.115 UTC [1612719] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:43:50.115 UTC [1612719] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:44:22.933 UTC [1612686] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:44:23.076 UTC [1612686] LOG:  checkpoint complete: wrote 899 buffers (5.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.028 s, sync=0.038 s, total=0.144 s; sync files=255, longest=0.014 s, average=0.001 s; distance=137884 kB, estimate=137884 kB
2023-07-22 03:44:55.062 UTC [1612686] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:44:55.145 UTC [1612686] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.006 s, total=0.083 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133637 kB, estimate=137459 kB
2023-07-22 03:44:55.194 UTC [1612685] LOG:  received fast shutdown request
2023-07-22 03:44:55.199 UTC [1612685] LOG:  aborting any active transactions
2023-07-22 03:44:55.200 UTC [1612685] LOG:  background worker "logical replication launcher" (PID 1612691) exited with exit code 1
2023-07-22 03:44:55.200 UTC [1612686] LOG:  shutting down
2023-07-22 03:44:55.203 UTC [1612686] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:44:55.231 UTC [1612686] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.031 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123713 kB
2023-07-22 03:44:55.272 UTC [1612685] LOG:  database system is shut down
2023-07-22 03:44:56.054 UTC [1612791] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:44:56.055 UTC [1612791] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:44:56.065 UTC [1612791] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:44:56.081 UTC [1612794] LOG:  database system was shut down at 2023-07-22 03:44:55 UTC
2023-07-22 03:44:56.092 UTC [1612791] LOG:  database system is ready to accept connections
2023-07-22 03:44:57.597 UTC [1612792] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:44:57.742 UTC [1612792] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.010 s, total=0.146 s; sync files=7, longest=0.006 s, average=0.002 s; distance=11000 kB, estimate=11000 kB
2023-07-22 03:44:57.898 UTC [1612941] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:44:57.898 UTC [1612941] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:44:57.943 UTC [1612941] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:44:57.943 UTC [1612941] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:44:57.944 UTC [1612941] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:44:57.944 UTC [1612941] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:44:57.974 UTC [1612941] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:44:57.974 UTC [1612941] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:44:57.975 UTC [1612941] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:44:57.975 UTC [1612941] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:45:30.987 UTC [1612792] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:45:31.150 UTC [1612792] LOG:  checkpoint complete: wrote 922 buffers (5.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.055 s, sync=0.026 s, total=0.164 s; sync files=255, longest=0.008 s, average=0.001 s; distance=138116 kB, estimate=138116 kB
2023-07-22 03:46:03.318 UTC [1612792] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:03.398 UTC [1612792] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.010 s, sync=0.008 s, total=0.080 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133785 kB, estimate=137683 kB
2023-07-22 03:46:03.443 UTC [1612791] LOG:  received fast shutdown request
2023-07-22 03:46:03.450 UTC [1612791] LOG:  aborting any active transactions
2023-07-22 03:46:03.451 UTC [1612791] LOG:  background worker "logical replication launcher" (PID 1612797) exited with exit code 1
2023-07-22 03:46:03.451 UTC [1612792] LOG:  shutting down
2023-07-22 03:46:03.456 UTC [1612792] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:46:03.480 UTC [1612792] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.002 s, total=0.029 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=123915 kB
2023-07-22 03:46:03.501 UTC [1612791] LOG:  database system is shut down
2023-07-22 03:46:04.330 UTC [1613016] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:46:04.330 UTC [1613016] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:46:04.339 UTC [1613016] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:46:04.356 UTC [1613019] LOG:  database system was shut down at 2023-07-22 03:46:03 UTC
2023-07-22 03:46:04.368 UTC [1613016] LOG:  database system is ready to accept connections
2023-07-22 03:46:05.744 UTC [1613139] ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
2023-07-22 03:46:05.744 UTC [1613139] DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
2023-07-22 03:46:05.744 UTC [1613139] STATEMENT:  INSERT INTO zoo VALUES(123, 'lion');
2023-07-22 03:46:05.844 UTC [1613017] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:05.893 UTC [1613017] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.014 s, sync=0.011 s, total=0.050 s; sync files=7, longest=0.006 s, average=0.002 s; distance=6319 kB, estimate=6319 kB
2023-07-22 03:46:06.091 UTC [1613162] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:46:06.091 UTC [1613162] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:46:06.135 UTC [1613162] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:46:06.135 UTC [1613162] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:46:06.135 UTC [1613162] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:46:06.135 UTC [1613162] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:46:06.159 UTC [1613162] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:46:06.159 UTC [1613162] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:46:06.160 UTC [1613162] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:46:06.160 UTC [1613162] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:46:39.036 UTC [1613017] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:39.195 UTC [1613017] LOG:  checkpoint complete: wrote 944 buffers (5.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.052 s, sync=0.026 s, total=0.159 s; sync files=255, longest=0.006 s, average=0.001 s; distance=138753 kB, estimate=138753 kB
2023-07-22 03:47:11.149 UTC [1613017] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:11.251 UTC [1613017] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.007 s, total=0.103 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133930 kB, estimate=138271 kB
2023-07-22 03:47:11.297 UTC [1613016] LOG:  received fast shutdown request
2023-07-22 03:47:11.304 UTC [1613016] LOG:  aborting any active transactions
2023-07-22 03:47:11.305 UTC [1613016] LOG:  background worker "logical replication launcher" (PID 1613022) exited with exit code 1
2023-07-22 03:47:11.305 UTC [1613017] LOG:  shutting down
2023-07-22 03:47:11.310 UTC [1613017] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:47:11.343 UTC [1613017] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.039 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=124444 kB
2023-07-22 03:47:11.361 UTC [1613016] LOG:  database system is shut down
2023-07-22 03:47:12.203 UTC [1613240] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:47:12.204 UTC [1613240] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:47:12.213 UTC [1613240] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:47:12.226 UTC [1613243] LOG:  database system was shut down at 2023-07-22 03:47:11 UTC
2023-07-22 03:47:12.237 UTC [1613240] LOG:  database system is ready to accept connections
2023-07-22 03:47:12.467 UTC [1613259] ERROR:  collation "coll" for encoding "UTF8" does not exist
2023-07-22 03:47:12.467 UTC [1613259] STATEMENT:  ALTER TABLE s.x ADD CONSTRAINT underqualified EXCLUDE USING btree
	  ((s.index_this_expr(y, s.const())) COLLATE coll WITH s.=)
	  USING INDEX TABLESPACE regress_create_idx_tblspace
	  WHERE (s.index_row_if(y));
2023-07-22 03:47:12.468 UTC [1613241] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:12.580 UTC [1613241] LOG:  checkpoint complete: wrote 914 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.048 s, sync=0.036 s, total=0.112 s; sync files=266, longest=0.009 s, average=0.001 s; distance=4180 kB, estimate=4180 kB
2023-07-22 03:47:12.652 UTC [1613263] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 03:47:12.652 UTC [1613263] DETAIL:  Key (name)=(a) already exists.
2023-07-22 03:47:12.652 UTC [1613263] STATEMENT:  INSERT INTO try (name) VALUES ('a');
2023-07-22 03:47:12.652 UTC [1613263] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 03:47:12.652 UTC [1613263] DETAIL:  Key (name)=(A) already exists.
2023-07-22 03:47:12.652 UTC [1613263] STATEMENT:  INSERT INTO try (name) VALUES ('A');
2023-07-22 03:47:12.652 UTC [1613263] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 03:47:12.652 UTC [1613263] DETAIL:  Key (name)=(aB) already exists.
2023-07-22 03:47:12.652 UTC [1613263] STATEMENT:  INSERT INTO try (name) VALUES ('aB');
2023-07-22 03:47:12.712 UTC [1613263] ERROR:  column "chr" is of type "char" but expression is of type citext at character 44
2023-07-22 03:47:12.712 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.712 UTC [1613263] STATEMENT:  INSERT INTO caster (chr)           VALUES ('f'::citext);
2023-07-22 03:47:12.724 UTC [1613263] ERROR:  column "bytea" is of type bytea but expression is of type text at character 44
2023-07-22 03:47:12.724 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.724 UTC [1613263] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::text);
2023-07-22 03:47:12.726 UTC [1613263] ERROR:  column "bytea" is of type bytea but expression is of type citext at character 44
2023-07-22 03:47:12.726 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.726 UTC [1613263] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::citext);
2023-07-22 03:47:12.728 UTC [1613263] ERROR:  column "boolean" is of type boolean but expression is of type text at character 44
2023-07-22 03:47:12.728 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.728 UTC [1613263] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::text);
2023-07-22 03:47:12.731 UTC [1613263] ERROR:  column "boolean" is of type boolean but expression is of type citext at character 44
2023-07-22 03:47:12.731 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.731 UTC [1613263] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::citext);
2023-07-22 03:47:12.733 UTC [1613263] ERROR:  column "float8" is of type double precision but expression is of type text at character 44
2023-07-22 03:47:12.733 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.733 UTC [1613263] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::text);
2023-07-22 03:47:12.735 UTC [1613263] ERROR:  column "float8" is of type double precision but expression is of type citext at character 44
2023-07-22 03:47:12.735 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.735 UTC [1613263] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::citext);
2023-07-22 03:47:12.737 UTC [1613263] ERROR:  column "float4" is of type real but expression is of type text at character 44
2023-07-22 03:47:12.737 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.737 UTC [1613263] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::text);
2023-07-22 03:47:12.739 UTC [1613263] ERROR:  column "float4" is of type real but expression is of type citext at character 44
2023-07-22 03:47:12.739 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.739 UTC [1613263] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::citext);
2023-07-22 03:47:12.741 UTC [1613263] ERROR:  column "numeric" is of type numeric but expression is of type text at character 44
2023-07-22 03:47:12.741 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.741 UTC [1613263] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::text);
2023-07-22 03:47:12.744 UTC [1613263] ERROR:  column "numeric" is of type numeric but expression is of type citext at character 44
2023-07-22 03:47:12.744 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.744 UTC [1613263] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::citext);
2023-07-22 03:47:12.746 UTC [1613263] ERROR:  column "int8" is of type bigint but expression is of type text at character 44
2023-07-22 03:47:12.746 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.746 UTC [1613263] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::text);
2023-07-22 03:47:12.751 UTC [1613263] ERROR:  column "int8" is of type bigint but expression is of type citext at character 44
2023-07-22 03:47:12.751 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.751 UTC [1613263] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::citext);
2023-07-22 03:47:12.753 UTC [1613263] ERROR:  column "int4" is of type integer but expression is of type text at character 44
2023-07-22 03:47:12.753 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.753 UTC [1613263] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::text);
2023-07-22 03:47:12.754 UTC [1613263] ERROR:  column "int4" is of type integer but expression is of type citext at character 44
2023-07-22 03:47:12.754 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.754 UTC [1613263] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::citext);
2023-07-22 03:47:12.757 UTC [1613263] ERROR:  column "int2" is of type smallint but expression is of type text at character 44
2023-07-22 03:47:12.757 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.757 UTC [1613263] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::text);
2023-07-22 03:47:12.759 UTC [1613263] ERROR:  column "int2" is of type smallint but expression is of type citext at character 44
2023-07-22 03:47:12.759 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.759 UTC [1613263] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::citext);
2023-07-22 03:47:12.761 UTC [1613263] ERROR:  column "cidr" is of type cidr but expression is of type text at character 44
2023-07-22 03:47:12.761 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.761 UTC [1613263] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::text);
2023-07-22 03:47:12.763 UTC [1613263] ERROR:  column "cidr" is of type cidr but expression is of type citext at character 44
2023-07-22 03:47:12.763 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.763 UTC [1613263] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::citext);
2023-07-22 03:47:12.765 UTC [1613263] ERROR:  column "inet" is of type inet but expression is of type text at character 44
2023-07-22 03:47:12.765 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.765 UTC [1613263] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::text);
2023-07-22 03:47:12.767 UTC [1613263] ERROR:  column "inet" is of type inet but expression is of type citext at character 44
2023-07-22 03:47:12.767 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.767 UTC [1613263] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::citext);
2023-07-22 03:47:12.769 UTC [1613263] ERROR:  column "macaddr" is of type macaddr but expression is of type text at character 44
2023-07-22 03:47:12.769 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.769 UTC [1613263] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::text);
2023-07-22 03:47:12.772 UTC [1613263] ERROR:  column "macaddr" is of type macaddr but expression is of type citext at character 44
2023-07-22 03:47:12.772 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.772 UTC [1613263] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::citext);
2023-07-22 03:47:12.774 UTC [1613263] ERROR:  column "money" is of type money but expression is of type text at character 44
2023-07-22 03:47:12.774 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.774 UTC [1613263] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::text);
2023-07-22 03:47:12.776 UTC [1613263] ERROR:  column "money" is of type money but expression is of type citext at character 44
2023-07-22 03:47:12.776 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.776 UTC [1613263] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::citext);
2023-07-22 03:47:12.781 UTC [1613263] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type text at character 44
2023-07-22 03:47:12.781 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.781 UTC [1613263] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 03:47:12.784 UTC [1613263] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type citext at character 44
2023-07-22 03:47:12.784 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.784 UTC [1613263] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 03:47:12.789 UTC [1613263] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type text at character 44
2023-07-22 03:47:12.789 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.789 UTC [1613263] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 03:47:12.793 UTC [1613263] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type citext at character 44
2023-07-22 03:47:12.793 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.793 UTC [1613263] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 03:47:12.797 UTC [1613263] ERROR:  column "interval" is of type interval but expression is of type text at character 44
2023-07-22 03:47:12.797 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.797 UTC [1613263] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::text);
2023-07-22 03:47:12.800 UTC [1613263] ERROR:  column "interval" is of type interval but expression is of type citext at character 44
2023-07-22 03:47:12.800 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.800 UTC [1613263] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::citext);
2023-07-22 03:47:12.805 UTC [1613263] ERROR:  column "date" is of type date but expression is of type text at character 44
2023-07-22 03:47:12.805 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.805 UTC [1613263] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::text);
2023-07-22 03:47:12.809 UTC [1613263] ERROR:  column "date" is of type date but expression is of type citext at character 44
2023-07-22 03:47:12.809 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.809 UTC [1613263] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::citext);
2023-07-22 03:47:12.813 UTC [1613263] ERROR:  column "time" is of type time without time zone but expression is of type text at character 44
2023-07-22 03:47:12.813 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.813 UTC [1613263] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::text);
2023-07-22 03:47:12.817 UTC [1613263] ERROR:  column "time" is of type time without time zone but expression is of type citext at character 44
2023-07-22 03:47:12.817 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.817 UTC [1613263] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::citext);
2023-07-22 03:47:12.822 UTC [1613263] ERROR:  column "timetz" is of type time with time zone but expression is of type text at character 44
2023-07-22 03:47:12.822 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.822 UTC [1613263] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::text);
2023-07-22 03:47:12.826 UTC [1613263] ERROR:  column "timetz" is of type time with time zone but expression is of type citext at character 44
2023-07-22 03:47:12.826 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.826 UTC [1613263] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::citext);
2023-07-22 03:47:12.830 UTC [1613263] ERROR:  column "point" is of type point but expression is of type text at character 44
2023-07-22 03:47:12.830 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.830 UTC [1613263] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::text);
2023-07-22 03:47:12.834 UTC [1613263] ERROR:  column "point" is of type point but expression is of type citext at character 44
2023-07-22 03:47:12.834 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.834 UTC [1613263] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::citext);
2023-07-22 03:47:12.838 UTC [1613263] ERROR:  column "lseg" is of type lseg but expression is of type text at character 44
2023-07-22 03:47:12.838 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.838 UTC [1613263] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::text);
2023-07-22 03:47:12.843 UTC [1613263] ERROR:  column "lseg" is of type lseg but expression is of type citext at character 44
2023-07-22 03:47:12.843 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.843 UTC [1613263] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::citext);
2023-07-22 03:47:12.847 UTC [1613263] ERROR:  column "box" is of type box but expression is of type text at character 44
2023-07-22 03:47:12.847 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.847 UTC [1613263] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::text);
2023-07-22 03:47:12.852 UTC [1613263] ERROR:  column "box" is of type box but expression is of type citext at character 44
2023-07-22 03:47:12.852 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.852 UTC [1613263] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::citext);
2023-07-22 03:47:12.856 UTC [1613263] ERROR:  column "path" is of type path but expression is of type text at character 44
2023-07-22 03:47:12.856 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.856 UTC [1613263] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::text);
2023-07-22 03:47:12.860 UTC [1613263] ERROR:  column "path" is of type path but expression is of type citext at character 44
2023-07-22 03:47:12.860 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.860 UTC [1613263] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::citext);
2023-07-22 03:47:12.865 UTC [1613263] ERROR:  column "polygon" is of type polygon but expression is of type text at character 44
2023-07-22 03:47:12.865 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.865 UTC [1613263] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::text);
2023-07-22 03:47:12.869 UTC [1613263] ERROR:  column "polygon" is of type polygon but expression is of type citext at character 44
2023-07-22 03:47:12.869 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.869 UTC [1613263] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::citext);
2023-07-22 03:47:12.874 UTC [1613263] ERROR:  column "circle" is of type circle but expression is of type text at character 44
2023-07-22 03:47:12.874 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.874 UTC [1613263] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::text);
2023-07-22 03:47:12.878 UTC [1613263] ERROR:  column "circle" is of type circle but expression is of type citext at character 44
2023-07-22 03:47:12.878 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.878 UTC [1613263] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::citext);
2023-07-22 03:47:12.882 UTC [1613263] ERROR:  column "bit" is of type bit but expression is of type text at character 44
2023-07-22 03:47:12.882 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.882 UTC [1613263] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::text);
2023-07-22 03:47:12.887 UTC [1613263] ERROR:  column "bit" is of type bit but expression is of type citext at character 44
2023-07-22 03:47:12.887 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.887 UTC [1613263] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::citext);
2023-07-22 03:47:12.892 UTC [1613263] ERROR:  column "bitv" is of type bit varying but expression is of type text at character 44
2023-07-22 03:47:12.892 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.892 UTC [1613263] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::text);
2023-07-22 03:47:12.896 UTC [1613263] ERROR:  column "bitv" is of type bit varying but expression is of type citext at character 44
2023-07-22 03:47:12.896 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.896 UTC [1613263] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::citext);
2023-07-22 03:47:12.901 UTC [1613263] ERROR:  column "tsvector" is of type tsvector but expression is of type text at character 44
2023-07-22 03:47:12.901 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.901 UTC [1613263] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::text);
2023-07-22 03:47:12.906 UTC [1613263] ERROR:  column "tsvector" is of type tsvector but expression is of type citext at character 44
2023-07-22 03:47:12.906 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.906 UTC [1613263] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::citext);
2023-07-22 03:47:12.915 UTC [1613263] ERROR:  column "tsquery" is of type tsquery but expression is of type text at character 44
2023-07-22 03:47:12.915 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.915 UTC [1613263] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::text);
2023-07-22 03:47:12.920 UTC [1613263] ERROR:  column "tsquery" is of type tsquery but expression is of type citext at character 44
2023-07-22 03:47:12.920 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.920 UTC [1613263] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::citext);
2023-07-22 03:47:12.924 UTC [1613263] ERROR:  column "uuid" is of type uuid but expression is of type text at character 44
2023-07-22 03:47:12.924 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.924 UTC [1613263] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::text);
2023-07-22 03:47:12.929 UTC [1613263] ERROR:  column "uuid" is of type uuid but expression is of type citext at character 44
2023-07-22 03:47:12.929 UTC [1613263] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:47:12.929 UTC [1613263] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::citext);
2023-07-22 03:47:12.958 UTC [1613263] ERROR:  regexp_match() does not support the "global" option
2023-07-22 03:47:12.958 UTC [1613263] HINT:  Use the regexp_matches function instead.
2023-07-22 03:47:12.958 UTC [1613263] CONTEXT:  SQL function "regexp_match" statement 1
2023-07-22 03:47:12.958 UTC [1613263] STATEMENT:  SELECT regexp_match('foobarbequebazmorebarbequetoo'::citext, '(BAR)(BEQUE)'::citext, 'g') AS "error";
2023-07-22 03:47:13.053 UTC [1613241] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:13.091 UTC [1613241] LOG:  checkpoint complete: wrote 5 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.009 s, total=0.038 s; sync files=5, longest=0.007 s, average=0.002 s; distance=803 kB, estimate=3843 kB
2023-07-22 03:47:13.221 UTC [1613284] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:47:13.221 UTC [1613284] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:47:13.264 UTC [1613284] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:47:13.264 UTC [1613284] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:47:13.265 UTC [1613284] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:47:13.265 UTC [1613284] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:47:13.292 UTC [1613284] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:47:13.292 UTC [1613284] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:47:13.293 UTC [1613284] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:47:13.293 UTC [1613284] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:47:46.453 UTC [1613241] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:47.104 UTC [1613241] LOG:  checkpoint complete: wrote 906 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.043 s, sync=0.026 s, total=0.651 s; sync files=256, longest=0.009 s, average=0.001 s; distance=137475 kB, estimate=137475 kB
2023-07-22 03:48:19.366 UTC [1613241] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:19.467 UTC [1613241] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.006 s, total=0.102 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133439 kB, estimate=137072 kB
2023-07-22 03:48:19.519 UTC [1613240] LOG:  received fast shutdown request
2023-07-22 03:48:19.527 UTC [1613240] LOG:  aborting any active transactions
2023-07-22 03:48:19.527 UTC [1613240] LOG:  background worker "logical replication launcher" (PID 1613246) exited with exit code 1
2023-07-22 03:48:19.527 UTC [1613241] LOG:  shutting down
2023-07-22 03:48:19.532 UTC [1613241] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:48:19.562 UTC [1613241] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.035 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123364 kB
2023-07-22 03:48:19.606 UTC [1613240] LOG:  database system is shut down
2023-07-22 03:48:20.370 UTC [1613356] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:48:20.370 UTC [1613356] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:48:20.382 UTC [1613356] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:48:20.392 UTC [1613359] LOG:  database system was shut down at 2023-07-22 03:48:20 UTC
2023-07-22 03:48:20.402 UTC [1613356] LOG:  database system is ready to accept connections
2023-07-22 03:48:20.620 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.620 UTC [1613375] DETAIL:  syntax error at end of input
2023-07-22 03:48:20.620 UTC [1613375] STATEMENT:  SELECT ''::cube AS cube;
2023-07-22 03:48:20.620 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.620 UTC [1613375] DETAIL:  syntax error at or near "A"
2023-07-22 03:48:20.620 UTC [1613375] STATEMENT:  SELECT 'ABC'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near "]"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '[]'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near "]"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '[()]'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near "]"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '[(1)]'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near "]"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '[(1),]'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near "2"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '[(1),2]'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near ","
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '[(1),(2),(3)]'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at end of input
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '1,'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at end of input
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '1,2,'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near ","
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '1,,2'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near ")"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '(1,)'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near ")"
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '(1,2,)'::cube AS cube;
2023-07-22 03:48:20.621 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.621 UTC [1613375] DETAIL:  syntax error at or near ","
2023-07-22 03:48:20.621 UTC [1613375] STATEMENT:  SELECT '(1,,2)'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near ","
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '[(1),(2)],'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '[(1,2,3),(2,3)]'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '[(1,2),(1,2,3)]'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near ","
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '(1),(2),'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '(1,2,3),(2,3)'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '(1,2),(1,2,3)'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near "a"
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '(1,2,3)ab'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near "a"
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '(1,2,3)a'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near "("
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '(1,2)('::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near "a"
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '1,2ab'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near "e"
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '1 e7'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near "a"
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '1,2a'::cube AS cube;
2023-07-22 03:48:20.622 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.622 UTC [1613375] DETAIL:  syntax error at or near ".2"
2023-07-22 03:48:20.622 UTC [1613375] STATEMENT:  SELECT '1..2'::cube AS cube;
2023-07-22 03:48:20.623 UTC [1613375] ERROR:  "-1e-700" is out of range for type double precision at character 8
2023-07-22 03:48:20.623 UTC [1613375] STATEMENT:  SELECT '-1e-700'::cube AS cube;
2023-07-22 03:48:20.623 UTC [1613375] ERROR:  UR and LL arrays must be of same length
2023-07-22 03:48:20.623 UTC [1613375] STATEMENT:  SELECT cube('{0,1,2}'::float[], '{3}'::float[]);
2023-07-22 03:48:20.624 UTC [1613375] ERROR:  Index out of bounds
2023-07-22 03:48:20.624 UTC [1613375] STATEMENT:  SELECT cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[4,0]);
2023-07-22 03:48:20.624 UTC [1613375] ERROR:  Index out of bounds
2023-07-22 03:48:20.624 UTC [1613375] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), ARRAY[4,0]);
2023-07-22 03:48:20.624 UTC [1613375] ERROR:  array is too long
2023-07-22 03:48:20.624 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.624 UTC [1613375] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), array(SELECT 1 as a FROM generate_series(1,101)));
2023-07-22 03:48:20.625 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.625 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.625 UTC [1613375] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 03:48:20.625 UTC [1613375] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:48:20.625 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.625 UTC [1613375] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 03:48:20.625 UTC [1613375] ERROR:  array is too long
2023-07-22 03:48:20.625 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.625 UTC [1613375] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 03:48:20.626 UTC [1613375] ERROR:  can't extend cube
2023-07-22 03:48:20.626 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.626 UTC [1613375] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)),array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 03:48:20.626 UTC [1613375] ERROR:  can't extend cube
2023-07-22 03:48:20.626 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.626 UTC [1613375] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100))), 0);
2023-07-22 03:48:20.627 UTC [1613375] ERROR:  can't extend cube
2023-07-22 03:48:20.627 UTC [1613375] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:48:20.627 UTC [1613375] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100)),array(SELECT 0 as a FROM generate_series(1,100))), 0, 0);
2023-07-22 03:48:20.635 UTC [1613375] ERROR:  cube index 0 is out of bounds
2023-07-22 03:48:20.635 UTC [1613375] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->0;
2023-07-22 03:48:20.635 UTC [1613375] ERROR:  cube index 7 is out of bounds
2023-07-22 03:48:20.635 UTC [1613375] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->7;
2023-07-22 03:48:20.635 UTC [1613375] ERROR:  cube index -1 is out of bounds
2023-07-22 03:48:20.635 UTC [1613375] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-1;
2023-07-22 03:48:20.635 UTC [1613375] ERROR:  cube index -6 is out of bounds
2023-07-22 03:48:20.635 UTC [1613375] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-6;
2023-07-22 03:48:20.636 UTC [1613375] ERROR:  cube index -6 is out of bounds
2023-07-22 03:48:20.636 UTC [1613375] STATEMENT:  SELECT cube(array[10,20,30])->-6;
2023-07-22 03:48:20.636 UTC [1613375] ERROR:  zero cube index is not defined
2023-07-22 03:48:20.636 UTC [1613375] STATEMENT:  SELECT cube(array[40,50,60], array[10,20,30])~>0;
2023-07-22 03:48:20.708 UTC [1613357] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:20.747 UTC [1613357] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.008 s, total=0.039 s; sync files=7, longest=0.005 s, average=0.002 s; distance=4439 kB, estimate=4439 kB
2023-07-22 03:48:20.844 UTC [1613394] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:48:20.844 UTC [1613394] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:48:20.890 UTC [1613394] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:48:20.890 UTC [1613394] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:48:20.890 UTC [1613394] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:48:20.890 UTC [1613394] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:48:20.917 UTC [1613394] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:48:20.917 UTC [1613394] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:48:20.918 UTC [1613394] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:48:20.918 UTC [1613394] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:48:53.862 UTC [1613357] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:53.997 UTC [1613357] LOG:  checkpoint complete: wrote 904 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.028 s, sync=0.041 s, total=0.135 s; sync files=255, longest=0.015 s, average=0.001 s; distance=137642 kB, estimate=137642 kB
2023-07-22 03:49:26.038 UTC [1613357] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:26.152 UTC [1613357] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.011 s, total=0.115 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133290 kB, estimate=137207 kB
2023-07-22 03:49:26.199 UTC [1613356] LOG:  received fast shutdown request
2023-07-22 03:49:26.205 UTC [1613356] LOG:  aborting any active transactions
2023-07-22 03:49:26.205 UTC [1613356] LOG:  background worker "logical replication launcher" (PID 1613362) exited with exit code 1
2023-07-22 03:49:26.205 UTC [1613357] LOG:  shutting down
2023-07-22 03:49:26.212 UTC [1613357] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:49:26.244 UTC [1613357] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.039 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123486 kB
2023-07-22 03:49:26.275 UTC [1613356] LOG:  database system is shut down
2023-07-22 03:49:27.126 UTC [1613466] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:49:27.127 UTC [1613466] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:49:27.137 UTC [1613466] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:49:27.153 UTC [1613469] LOG:  database system was shut down at 2023-07-22 03:49:26 UTC
2023-07-22 03:49:27.165 UTC [1613466] LOG:  database system is ready to accept connections
2023-07-22 03:49:27.474 UTC [1613485] ERROR:  invalid attribute number 4
2023-07-22 03:49:27.474 UTC [1613485] STATEMENT:  SELECT dblink_build_sql_insert('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:49:27.476 UTC [1613485] ERROR:  invalid attribute number 4
2023-07-22 03:49:27.476 UTC [1613485] STATEMENT:  SELECT dblink_build_sql_update('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:49:27.477 UTC [1613485] ERROR:  invalid attribute number 4
2023-07-22 03:49:27.477 UTC [1613485] STATEMENT:  SELECT dblink_build_sql_delete('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 03:49:27.513 UTC [1613485] ERROR:  invalid attribute number 4
2023-07-22 03:49:27.513 UTC [1613485] STATEMENT:  SELECT dblink_build_sql_insert('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:49:27.514 UTC [1613485] ERROR:  invalid attribute number 4
2023-07-22 03:49:27.514 UTC [1613485] STATEMENT:  SELECT dblink_build_sql_update('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:49:27.515 UTC [1613485] ERROR:  invalid attribute number 4
2023-07-22 03:49:27.515 UTC [1613485] STATEMENT:  SELECT dblink_build_sql_delete('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 03:49:27.559 UTC [1613485] ERROR:  connection not available
2023-07-22 03:49:27.559 UTC [1613485] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:49:27.574 UTC [1613487] ERROR:  could not establish connection
2023-07-22 03:49:27.574 UTC [1613487] DETAIL:  syntax error in service file "/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/dblink/pg_service.conf", line 7
2023-07-22 03:49:27.574 UTC [1613487] STATEMENT:  
			SELECT pg_backend_pid() FROM dblink(
				'service=test_ldap '||connection_parameters(),
				-- This string concatenation is a hack to shoehorn a
				-- set_pgservicefile call into the SQL statement.
				'SELECT 1' || set_pgservicefile('pg_service.conf')
			) t(c int)
		
2023-07-22 03:49:27.586 UTC [1613488] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 03:49:27.586 UTC [1613488] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 03:49:27.595 UTC [1613488] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 03:49:27.595 UTC [1613488] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 03:49:27.596 UTC [1613488] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 03:49:27.596 UTC [1613488] STATEMENT:  CLOSE rmt_foobar_cursor
2023-07-22 03:49:27.597 UTC [1613488] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:49:27.597 UTC [1613488] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 03:49:27.597 UTC [1613485] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:49:27.597 UTC [1613485] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on unnamed dblink connection
2023-07-22 03:49:27.597 UTC [1613485] STATEMENT:  SELECT *
	FROM dblink_fetch('rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 03:49:27.598 UTC [1613488] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:49:27.598 UTC [1613488] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 03:49:27.599 UTC [1613485] ERROR:  connection not available
2023-07-22 03:49:27.599 UTC [1613485] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:49:27.623 UTC [1613490] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 03:49:27.623 UTC [1613490] STATEMENT:  SELECT * FROM foobar
2023-07-22 03:49:27.628 UTC [1613490] ERROR:  relation "foobar" does not exist at character 8
2023-07-22 03:49:27.628 UTC [1613490] STATEMENT:  UPDATE foobar SET f3[2] = 'b99' WHERE f1 = 11
2023-07-22 03:49:27.632 UTC [1613485] ERROR:  could not establish connection
2023-07-22 03:49:27.632 UTC [1613485] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 03:49:27.632 UTC [1613485] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:49:27.643 UTC [1613491] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 03:49:27.643 UTC [1613491] STATEMENT:  SELECT * FROM foobar
2023-07-22 03:49:27.651 UTC [1613485] ERROR:  duplicate connection name
2023-07-22 03:49:27.651 UTC [1613485] STATEMENT:  SELECT dblink_connect('myconn',connection_parameters());
2023-07-22 03:49:27.663 UTC [1613491] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 03:49:27.663 UTC [1613491] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 03:49:27.673 UTC [1613491] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 03:49:27.673 UTC [1613491] STATEMENT:  DECLARE xact_test CURSOR FOR SELECT * FROM foo
2023-07-22 03:49:27.673 UTC [1613485] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 03:49:27.673 UTC [1613485] CONTEXT:  while executing command on dblink connection named "myconn"
2023-07-22 03:49:27.673 UTC [1613485] STATEMENT:  SELECT dblink_exec('myconn','DECLARE xact_test CURSOR FOR SELECT * FROM foo');
2023-07-22 03:49:27.674 UTC [1613491] WARNING:  there is no transaction in progress
WARNING:  there is no transaction in progress
2023-07-22 03:49:27.679 UTC [1613491] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 03:49:27.679 UTC [1613491] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 03:49:27.680 UTC [1613491] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:49:27.680 UTC [1613491] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 03:49:27.681 UTC [1613485] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:49:27.681 UTC [1613485] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on dblink connection named "myconn"
2023-07-22 03:49:27.681 UTC [1613485] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 03:49:27.682 UTC [1613485] ERROR:  could not establish connection
2023-07-22 03:49:27.682 UTC [1613485] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 03:49:27.682 UTC [1613485] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:49:27.701 UTC [1613485] ERROR:  connection "myconn" not available
2023-07-22 03:49:27.701 UTC [1613485] STATEMENT:  SELECT dblink_disconnect('myconn');
2023-07-22 03:49:27.758 UTC [1613485] ERROR:  invalid option "server"
2023-07-22 03:49:27.758 UTC [1613485] HINT:  Valid options in this context are: user, password, sslpassword
2023-07-22 03:49:27.758 UTC [1613485] STATEMENT:  CREATE USER MAPPING FOR public SERVER fdtest
	  OPTIONS (server 'localhost');
2023-07-22 03:49:27.773 UTC [1613485] ERROR:  password is required
2023-07-22 03:49:27.773 UTC [1613485] DETAIL:  Non-superusers must provide a password in the connection string.
2023-07-22 03:49:27.773 UTC [1613485] STATEMENT:  SELECT dblink_connect('myconn', 'fdtest');
2023-07-22 03:49:27.816 UTC [1613501] ERROR:  invalid option "nonexistent"
2023-07-22 03:49:27.816 UTC [1613501] HINT:  There are no valid options in this context.
2023-07-22 03:49:27.816 UTC [1613501] STATEMENT:  ALTER FOREIGN DATA WRAPPER dblink_fdw OPTIONS (nonexistent 'fdw');
2023-07-22 03:49:27.902 UTC [1613501] ERROR:  invalid input syntax for type integer: "not an int"
2023-07-22 03:49:27.902 UTC [1613501] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','error_cursor', 1) AS t(i int);
2023-07-22 03:49:27.933 UTC [1613467] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:27.996 UTC [1613467] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.017 s, sync=0.018 s, total=0.063 s; sync files=14, longest=0.006 s, average=0.002 s; distance=4185 kB, estimate=4185 kB
2023-07-22 03:49:28.134 UTC [1613518] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:49:28.134 UTC [1613518] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:49:28.191 UTC [1613518] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:49:28.191 UTC [1613518] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:49:28.191 UTC [1613518] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:49:28.191 UTC [1613518] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:49:28.220 UTC [1613518] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:49:28.220 UTC [1613518] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:49:28.220 UTC [1613518] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:49:28.220 UTC [1613518] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:50:01.220 UTC [1613467] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:50:01.376 UTC [1613467] LOG:  checkpoint complete: wrote 903 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.040 s, sync=0.037 s, total=0.157 s; sync files=256, longest=0.011 s, average=0.001 s; distance=137153 kB, estimate=137153 kB
2023-07-22 03:50:33.591 UTC [1613467] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:50:33.710 UTC [1613467] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.011 s, total=0.119 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133471 kB, estimate=136785 kB
2023-07-22 03:50:33.758 UTC [1613466] LOG:  received fast shutdown request
2023-07-22 03:50:33.767 UTC [1613466] LOG:  aborting any active transactions
2023-07-22 03:50:33.768 UTC [1613466] LOG:  background worker "logical replication launcher" (PID 1613472) exited with exit code 1
2023-07-22 03:50:33.768 UTC [1613467] LOG:  shutting down
2023-07-22 03:50:33.775 UTC [1613467] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:50:33.812 UTC [1613467] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.044 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=123106 kB
2023-07-22 03:50:33.857 UTC [1613466] LOG:  database system is shut down
2023-07-22 03:50:34.631 UTC [1613592] FATAL:  could not access file "decoderbufs": No such file or directory
2023-07-22 03:50:34.631 UTC [1613592] LOG:  database system is shut down
2023-07-22 03:50:35.498 UTC [1613625] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:50:35.498 UTC [1613625] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:50:35.510 UTC [1613625] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:50:35.524 UTC [1613628] LOG:  database system was shut down at 2023-07-22 03:50:35 UTC
2023-07-22 03:50:35.532 UTC [1613625] LOG:  database system is ready to accept connections
2023-07-22 03:50:35.721 UTC [1613644] ERROR:  maxlen value has to be >= 1
2023-07-22 03:50:35.721 UTC [1613644] STATEMENT:  ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = -214783648);
2023-07-22 03:50:35.891 UTC [1613659] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:50:35.891 UTC [1613659] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:50:35.950 UTC [1613659] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:50:35.950 UTC [1613659] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:50:35.951 UTC [1613659] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:50:35.951 UTC [1613659] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:50:35.980 UTC [1613659] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:50:35.980 UTC [1613659] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:50:35.980 UTC [1613659] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:50:35.980 UTC [1613659] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:51:09.265 UTC [1613626] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:51:09.471 UTC [1613626] LOG:  checkpoint complete: wrote 1783 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.070 s, sync=0.060 s, total=0.206 s; sync files=501, longest=0.024 s, average=0.001 s; distance=141296 kB, estimate=141296 kB
2023-07-22 03:51:41.691 UTC [1613626] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:51:41.807 UTC [1613626] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.021 s, sync=0.011 s, total=0.117 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133212 kB, estimate=140487 kB
2023-07-22 03:51:41.874 UTC [1613625] LOG:  received fast shutdown request
2023-07-22 03:51:41.882 UTC [1613625] LOG:  aborting any active transactions
2023-07-22 03:51:41.883 UTC [1613625] LOG:  background worker "logical replication launcher" (PID 1613631) exited with exit code 1
2023-07-22 03:51:41.883 UTC [1613626] LOG:  shutting down
2023-07-22 03:51:41.890 UTC [1613626] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:51:41.927 UTC [1613626] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.045 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126439 kB
2023-07-22 03:51:41.974 UTC [1613625] LOG:  database system is shut down
2023-07-22 03:51:42.798 UTC [1613732] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:51:42.798 UTC [1613732] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:51:42.811 UTC [1613732] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:51:42.826 UTC [1613735] LOG:  database system was shut down at 2023-07-22 03:51:42 UTC
2023-07-22 03:51:42.840 UTC [1613732] LOG:  database system is ready to accept connections
2023-07-22 03:51:43.198 UTC [1613766] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:51:43.198 UTC [1613766] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:51:43.258 UTC [1613766] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:51:43.258 UTC [1613766] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:51:43.258 UTC [1613766] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:51:43.258 UTC [1613766] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:51:43.287 UTC [1613766] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:51:43.287 UTC [1613766] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:51:43.288 UTC [1613766] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:51:43.288 UTC [1613766] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:52:16.344 UTC [1613733] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:16.554 UTC [1613733] LOG:  checkpoint complete: wrote 1783 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.050 s, sync=0.080 s, total=0.211 s; sync files=501, longest=0.038 s, average=0.001 s; distance=141185 kB, estimate=141185 kB
2023-07-22 03:52:48.769 UTC [1613733] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:49.488 UTC [1613733] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.009 s, total=0.720 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133097 kB, estimate=140376 kB
2023-07-22 03:52:49.533 UTC [1613732] LOG:  received fast shutdown request
2023-07-22 03:52:49.541 UTC [1613732] LOG:  aborting any active transactions
2023-07-22 03:52:49.541 UTC [1613732] LOG:  background worker "logical replication launcher" (PID 1613738) exited with exit code 1
2023-07-22 03:52:49.542 UTC [1613733] LOG:  shutting down
2023-07-22 03:52:49.548 UTC [1613733] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:52:49.587 UTC [1613733] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.046 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126339 kB
2023-07-22 03:52:49.612 UTC [1613732] LOG:  database system is shut down
2023-07-22 03:52:50.393 UTC [1613838] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:52:50.394 UTC [1613838] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:52:50.406 UTC [1613838] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:52:50.421 UTC [1613841] LOG:  database system was shut down at 2023-07-22 03:52:50 UTC
2023-07-22 03:52:50.431 UTC [1613838] LOG:  database system is ready to accept connections
2023-07-22 03:52:50.647 UTC [1613857] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:52:50.647 UTC [1613857] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:52:50.707 UTC [1613857] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:52:50.707 UTC [1613857] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:52:50.707 UTC [1613857] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:52:50.707 UTC [1613857] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:52:50.736 UTC [1613857] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:52:50.736 UTC [1613857] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:52:50.737 UTC [1613857] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:52:50.737 UTC [1613857] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:53:23.725 UTC [1613839] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:53:23.890 UTC [1613839] LOG:  checkpoint complete: wrote 900 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.044 s, sync=0.036 s, total=0.165 s; sync files=256, longest=0.015 s, average=0.001 s; distance=136997 kB, estimate=136997 kB
2023-07-22 03:53:56.016 UTC [1613839] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:53:56.136 UTC [1613839] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.009 s, total=0.121 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132995 kB, estimate=136597 kB
2023-07-22 03:53:56.204 UTC [1613838] LOG:  received fast shutdown request
2023-07-22 03:53:56.211 UTC [1613838] LOG:  aborting any active transactions
2023-07-22 03:53:56.212 UTC [1613838] LOG:  background worker "logical replication launcher" (PID 1613844) exited with exit code 1
2023-07-22 03:53:56.212 UTC [1613839] LOG:  shutting down
2023-07-22 03:53:56.219 UTC [1613839] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:53:56.252 UTC [1613839] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.041 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=122937 kB
2023-07-22 03:53:56.285 UTC [1613838] LOG:  database system is shut down
2023-07-22 03:53:57.148 UTC [1613929] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:53:57.148 UTC [1613929] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:53:57.163 UTC [1613929] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:53:57.174 UTC [1613932] LOG:  database system was shut down at 2023-07-22 03:53:56 UTC
2023-07-22 03:53:57.182 UTC [1613929] LOG:  database system is ready to accept connections
2023-07-22 03:53:57.344 UTC [1613948] ERROR:  required extension "cube" is not installed
2023-07-22 03:53:57.344 UTC [1613948] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 03:53:57.344 UTC [1613948] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 03:53:57.401 UTC [1613948] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 03:53:57.401 UTC [1613948] DETAIL:  extension earthdistance depends on extension cube
2023-07-22 03:53:57.401 UTC [1613948] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:53:57.401 UTC [1613948] STATEMENT:  drop extension cube;
2023-07-22 03:53:57.404 UTC [1613948] ERROR:  cannot drop type cube because extension cube requires it
2023-07-22 03:53:57.404 UTC [1613948] HINT:  You can drop extension cube instead.
2023-07-22 03:53:57.404 UTC [1613948] STATEMENT:  drop type cube;
2023-07-22 03:53:57.408 UTC [1613948] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 03:53:57.408 UTC [1613948] DETAIL:  column f1 of table foo depends on type cube
2023-07-22 03:53:57.408 UTC [1613948] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:53:57.408 UTC [1613948] STATEMENT:  drop extension cube;
2023-07-22 03:53:57.494 UTC [1613948] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 03:53:57.494 UTC [1613948] DETAIL:  column f1 of table foo depends on type c.cube
2023-07-22 03:53:57.494 UTC [1613948] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:53:57.494 UTC [1613948] STATEMENT:  drop extension cube;
2023-07-22 03:53:57.494 UTC [1613948] ERROR:  cannot drop schema c because other objects depend on it
2023-07-22 03:53:57.494 UTC [1613948] DETAIL:  extension cube depends on schema c
	column f1 of table foo depends on type c.cube
2023-07-22 03:53:57.494 UTC [1613948] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:53:57.494 UTC [1613948] STATEMENT:  drop schema c;
2023-07-22 03:53:57.637 UTC [1613972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:57.637 UTC [1613972] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:53:57.694 UTC [1613972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:57.694 UTC [1613972] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:53:57.695 UTC [1613972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:57.695 UTC [1613972] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:53:57.722 UTC [1613972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:57.722 UTC [1613972] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:53:57.723 UTC [1613972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:57.723 UTC [1613972] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:53:57.740 UTC [1613929] LOG:  received fast shutdown request
2023-07-22 03:53:57.746 UTC [1613929] LOG:  aborting any active transactions
2023-07-22 03:53:57.749 UTC [1613929] LOG:  background worker "logical replication launcher" (PID 1613935) exited with exit code 1
2023-07-22 03:53:57.749 UTC [1613930] LOG:  shutting down
2023-07-22 03:53:57.754 UTC [1613930] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:53:57.918 UTC [1613930] LOG:  checkpoint complete: wrote 1802 buffers (11.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.067 s, sync=0.069 s, total=0.169 s; sync files=501, longest=0.029 s, average=0.001 s; distance=8511 kB, estimate=8511 kB
2023-07-22 03:53:57.927 UTC [1613929] LOG:  database system is shut down
2023-07-22 03:53:58.730 UTC [1614003] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:53:58.731 UTC [1614003] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:53:58.741 UTC [1614003] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:53:58.751 UTC [1614006] LOG:  database system was shut down at 2023-07-22 03:53:58 UTC
2023-07-22 03:53:58.763 UTC [1614003] LOG:  database system is ready to accept connections
2023-07-22 03:53:59.009 UTC [1614022] ERROR:  permission denied to create foreign-data wrapper "file_fdw2"
2023-07-22 03:53:59.009 UTC [1614022] HINT:  Must be superuser to create a foreign-data wrapper.
2023-07-22 03:53:59.009 UTC [1614022] STATEMENT:  CREATE FOREIGN DATA WRAPPER file_fdw2 HANDLER file_fdw_handler VALIDATOR file_fdw_validator;
2023-07-22 03:53:59.009 UTC [1614022] ERROR:  permission denied for foreign-data wrapper file_fdw
2023-07-22 03:53:59.009 UTC [1614022] STATEMENT:  CREATE SERVER file_server2 FOREIGN DATA WRAPPER file_fdw;
2023-07-22 03:53:59.009 UTC [1614022] ERROR:  permission denied for foreign server file_server
2023-07-22 03:53:59.009 UTC [1614022] STATEMENT:  CREATE USER MAPPING FOR regress_file_fdw_user SERVER file_server;
2023-07-22 03:53:59.018 UTC [1614022] ERROR:  COPY format "xml" not recognized
2023-07-22 03:53:59.018 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'xml');
2023-07-22 03:53:59.018 UTC [1614022] ERROR:  COPY quote available only in CSV mode
2023-07-22 03:53:59.018 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', quote ':');
2023-07-22 03:53:59.019 UTC [1614022] ERROR:  COPY escape available only in CSV mode
2023-07-22 03:53:59.019 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape ':');
2023-07-22 03:53:59.020 UTC [1614022] ERROR:  cannot specify HEADER in BINARY mode
2023-07-22 03:53:59.020 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', header 'true');
2023-07-22 03:53:59.021 UTC [1614022] ERROR:  COPY quote available only in CSV mode
2023-07-22 03:53:59.021 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', quote ':');
2023-07-22 03:53:59.021 UTC [1614022] ERROR:  COPY escape available only in CSV mode
2023-07-22 03:53:59.021 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', escape ':');
2023-07-22 03:53:59.022 UTC [1614022] ERROR:  COPY delimiter cannot be "a"
2023-07-22 03:53:59.022 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 03:53:59.023 UTC [1614022] ERROR:  COPY escape available only in CSV mode
2023-07-22 03:53:59.023 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape '-');
2023-07-22 03:53:59.024 UTC [1614022] ERROR:  CSV quote character must not appear in the NULL specification
2023-07-22 03:53:59.024 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '-', null '=-=');
2023-07-22 03:53:59.024 UTC [1614022] ERROR:  COPY delimiter must not appear in the NULL specification
2023-07-22 03:53:59.024 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', null '=-=');
2023-07-22 03:53:59.025 UTC [1614022] ERROR:  COPY delimiter and quote must be different
2023-07-22 03:53:59.025 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', quote '-');
2023-07-22 03:53:59.026 UTC [1614022] ERROR:  COPY delimiter must be a single one-byte character
2023-07-22 03:53:59.026 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '---');
2023-07-22 03:53:59.027 UTC [1614022] ERROR:  COPY quote must be a single one-byte character
2023-07-22 03:53:59.027 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '---');
2023-07-22 03:53:59.028 UTC [1614022] ERROR:  COPY escape must be a single one-byte character
2023-07-22 03:53:59.028 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', escape '---');
2023-07-22 03:53:59.028 UTC [1614022] ERROR:  COPY delimiter cannot be "\"
2023-07-22 03:53:59.028 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '\');
2023-07-22 03:53:59.029 UTC [1614022] ERROR:  COPY delimiter cannot be "."
2023-07-22 03:53:59.029 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '.');
2023-07-22 03:53:59.030 UTC [1614022] ERROR:  COPY delimiter cannot be "1"
2023-07-22 03:53:59.030 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '1');
2023-07-22 03:53:59.030 UTC [1614022] ERROR:  COPY delimiter cannot be "a"
2023-07-22 03:53:59.030 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 03:53:59.031 UTC [1614022] ERROR:  COPY delimiter cannot be newline or carriage return
2023-07-22 03:53:59.031 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '
	');
2023-07-22 03:53:59.031 UTC [1614022] ERROR:  COPY null representation cannot use newline or carriage return
2023-07-22 03:53:59.031 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', null '
	');
2023-07-22 03:53:59.032 UTC [1614022] ERROR:  either filename or program is required for file_fdw foreign tables
2023-07-22 03:53:59.032 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server;
2023-07-22 03:53:59.074 UTC [1614022] ERROR:  column name mismatch in header line field 1: got "1", expected "a"
2023-07-22 03:53:59.074 UTC [1614022] CONTEXT:  COPY header_doesnt_match, line 1: "1,foo"
2023-07-22 03:53:59.074 UTC [1614022] STATEMENT:  SELECT * FROM header_doesnt_match;
2023-07-22 03:53:59.079 UTC [1614022] ERROR:  COPY force not null available only in CSV mode
2023-07-22 03:53:59.079 UTC [1614022] STATEMENT:  SELECT * FROM text_csv;
2023-07-22 03:53:59.087 UTC [1614022] ERROR:  invalid option "force_not_null"
2023-07-22 03:53:59.087 UTC [1614022] HINT:  There are no valid options in this context.
2023-07-22 03:53:59.087 UTC [1614022] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_not_null '*');
2023-07-22 03:53:59.087 UTC [1614022] ERROR:  invalid option "force_not_null"
2023-07-22 03:53:59.087 UTC [1614022] HINT:  There are no valid options in this context.
2023-07-22 03:53:59.087 UTC [1614022] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_not_null '*');
2023-07-22 03:53:59.088 UTC [1614022] ERROR:  invalid option "force_not_null"
2023-07-22 03:53:59.088 UTC [1614022] HINT:  There are no valid options in this context.
2023-07-22 03:53:59.088 UTC [1614022] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 03:53:59.089 UTC [1614022] ERROR:  invalid option "force_not_null"
2023-07-22 03:53:59.089 UTC [1614022] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 03:53:59.089 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 03:53:59.089 UTC [1614022] ERROR:  invalid option "force_null"
2023-07-22 03:53:59.089 UTC [1614022] HINT:  There are no valid options in this context.
2023-07-22 03:53:59.089 UTC [1614022] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_null '*');
2023-07-22 03:53:59.090 UTC [1614022] ERROR:  invalid option "force_null"
2023-07-22 03:53:59.090 UTC [1614022] HINT:  There are no valid options in this context.
2023-07-22 03:53:59.090 UTC [1614022] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_null '*');
2023-07-22 03:53:59.090 UTC [1614022] ERROR:  invalid option "force_null"
2023-07-22 03:53:59.090 UTC [1614022] HINT:  There are no valid options in this context.
2023-07-22 03:53:59.090 UTC [1614022] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_null '*');
2023-07-22 03:53:59.091 UTC [1614022] ERROR:  invalid option "force_null"
2023-07-22 03:53:59.091 UTC [1614022] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 03:53:59.091 UTC [1614022] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_null '*');
2023-07-22 03:53:59.098 UTC [1614022] ERROR:  invalid input syntax for type real: "aaa"
2023-07-22 03:53:59.098 UTC [1614022] CONTEXT:  COPY agg_bad, line 3, column b: "aaa"
2023-07-22 03:53:59.098 UTC [1614022] STATEMENT:  SELECT * FROM agg_bad;
2023-07-22 03:53:59.103 UTC [1614022] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 03:53:59.103 UTC [1614022] STATEMENT:  INSERT INTO agg_csv VALUES(1,2.0);
2023-07-22 03:53:59.104 UTC [1614022] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 03:53:59.104 UTC [1614022] STATEMENT:  UPDATE agg_csv SET a = 1;
2023-07-22 03:53:59.105 UTC [1614022] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 03:53:59.105 UTC [1614022] STATEMENT:  DELETE FROM agg_csv WHERE a = 100;
2023-07-22 03:53:59.106 UTC [1614022] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 03:53:59.106 UTC [1614022] STATEMENT:  COPY agg_csv FROM STDIN;
2023-07-22 03:53:59.122 UTC [1614022] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 03:53:59.122 UTC [1614022] STATEMENT:  UPDATE agg SET a = 1;
2023-07-22 03:53:59.123 UTC [1614022] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 03:53:59.123 UTC [1614022] STATEMENT:  DELETE FROM agg WHERE a = 100;
2023-07-22 03:53:59.159 UTC [1614022] ERROR:  cannot insert into foreign table "p1"
2023-07-22 03:53:59.159 UTC [1614022] CONTEXT:  COPY pt, line 2: "1,qux"
2023-07-22 03:53:59.159 UTC [1614022] STATEMENT:  COPY pt FROM '/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/file_fdw/data/list2.bad' with (format 'csv', delimiter ',');
2023-07-22 03:53:59.163 UTC [1614022] ERROR:  cannot insert into foreign table "p1"
2023-07-22 03:53:59.163 UTC [1614022] STATEMENT:  INSERT INTO pt VALUES (1, 'xyzzy');
2023-07-22 03:53:59.165 UTC [1614022] ERROR:  cannot insert into foreign table "p1"
2023-07-22 03:53:59.165 UTC [1614022] STATEMENT:  UPDATE pt set a = 1 where a = 2;
2023-07-22 03:53:59.185 UTC [1614022] ERROR:  permission denied for foreign table agg_text
2023-07-22 03:53:59.185 UTC [1614022] STATEMENT:  SELECT * FROM agg_text ORDER BY a;
2023-07-22 03:53:59.196 UTC [1614022] ERROR:  only superuser or a role with privileges of the pg_read_server_files role may specify the filename option of a file_fdw foreign table
2023-07-22 03:53:59.196 UTC [1614022] STATEMENT:  ALTER FOREIGN TABLE agg_text OPTIONS (SET format 'text');
2023-07-22 03:53:59.380 UTC [1614037] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:59.380 UTC [1614037] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:53:59.442 UTC [1614037] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:59.442 UTC [1614037] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:53:59.442 UTC [1614037] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:59.442 UTC [1614037] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:53:59.479 UTC [1614037] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:59.479 UTC [1614037] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:53:59.480 UTC [1614037] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:53:59.480 UTC [1614037] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:54:32.614 UTC [1614004] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:54:32.816 UTC [1614004] LOG:  checkpoint complete: wrote 1824 buffers (11.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.073 s, sync=0.053 s, total=0.202 s; sync files=517, longest=0.015 s, average=0.001 s; distance=141110 kB, estimate=141110 kB
2023-07-22 03:55:04.964 UTC [1614004] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:05.083 UTC [1614004] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.011 s, total=0.119 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132905 kB, estimate=140290 kB
2023-07-22 03:55:05.149 UTC [1614003] LOG:  received fast shutdown request
2023-07-22 03:55:05.157 UTC [1614003] LOG:  aborting any active transactions
2023-07-22 03:55:05.157 UTC [1614003] LOG:  background worker "logical replication launcher" (PID 1614009) exited with exit code 1
2023-07-22 03:55:05.158 UTC [1614004] LOG:  shutting down
2023-07-22 03:55:05.163 UTC [1614004] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:55:05.199 UTC [1614004] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.041 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126261 kB
2023-07-22 03:55:05.226 UTC [1614003] LOG:  database system is shut down
2023-07-22 03:55:06.073 UTC [1614111] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:55:06.073 UTC [1614111] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:55:06.088 UTC [1614111] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:55:06.106 UTC [1614114] LOG:  database system was shut down at 2023-07-22 03:55:05 UTC
2023-07-22 03:55:06.117 UTC [1614111] LOG:  database system is ready to accept connections
2023-07-22 03:55:06.477 UTC [1614145] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:55:06.477 UTC [1614145] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:55:06.533 UTC [1614145] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:55:06.533 UTC [1614145] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:55:06.534 UTC [1614145] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:55:06.534 UTC [1614145] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:55:06.565 UTC [1614145] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:55:06.565 UTC [1614145] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:55:06.566 UTC [1614145] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:55:06.566 UTC [1614145] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:55:39.843 UTC [1614112] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:40.060 UTC [1614112] LOG:  checkpoint complete: wrote 1786 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.066 s, sync=0.068 s, total=0.218 s; sync files=501, longest=0.031 s, average=0.001 s; distance=141062 kB, estimate=141062 kB
2023-07-22 03:56:12.322 UTC [1614112] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:12.432 UTC [1614112] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.011 s, total=0.111 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132981 kB, estimate=140253 kB
2023-07-22 03:56:12.499 UTC [1614111] LOG:  received fast shutdown request
2023-07-22 03:56:12.506 UTC [1614111] LOG:  aborting any active transactions
2023-07-22 03:56:12.507 UTC [1614111] LOG:  background worker "logical replication launcher" (PID 1614117) exited with exit code 1
2023-07-22 03:56:12.507 UTC [1614112] LOG:  shutting down
2023-07-22 03:56:12.514 UTC [1614112] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:56:12.547 UTC [1614112] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.040 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126228 kB
2023-07-22 03:56:12.576 UTC [1614111] LOG:  database system is shut down
2023-07-22 03:56:13.433 UTC [1614217] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:56:13.434 UTC [1614217] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:56:13.446 UTC [1614217] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:56:13.463 UTC [1614220] LOG:  database system was shut down at 2023-07-22 03:56:13 UTC
2023-07-22 03:56:13.473 UTC [1614217] LOG:  database system is ready to accept connections
2023-07-22 03:56:13.676 UTC [1614240] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 03:56:13.676 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), -1))
	       from test_khvengxf;
2023-07-22 03:56:13.677 UTC [1614240] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 03:56:13.677 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 32))
	       from test_khvengxf;
2023-07-22 03:56:13.677 UTC [1614240] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 03:56:13.677 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, -1))
	       from test_khvengxf;
2023-07-22 03:56:13.678 UTC [1614240] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 03:56:13.678 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 8))
	       from test_khvengxf;
2023-07-22 03:56:13.679 UTC [1614240] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 03:56:13.679 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, -2))
	       from test_khvengxf;
2023-07-22 03:56:13.679 UTC [1614240] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 03:56:13.679 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 8589934592))
	       from test_khvengxf;
2023-07-22 03:56:13.680 UTC [1614240] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 03:56:13.680 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, -1))
	       from test_khvengxf;
2023-07-22 03:56:13.680 UTC [1614240] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 03:56:13.680 UTC [1614240] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, 2))
	       from test_khvengxf;
2023-07-22 03:56:13.802 UTC [1614252] ERROR:  operator does not exist: double precision || hll_hashval at character 31
2023-07-22 03:56:13.802 UTC [1614252] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:56:13.802 UTC [1614252] STATEMENT:  SELECT #hll_empty(11,5,256,1) || hll_hash_integer(1,0);
2023-07-22 03:56:13.816 UTC [1614256] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:13.816 UTC [1614256] STATEMENT:  SELECT E'\\x118b7f'::hll(10,5,-1,1);
2023-07-22 03:56:13.817 UTC [1614256] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:56:13.817 UTC [1614256] STATEMENT:  SELECT E'\\x118b7f'::hll(11,4,-1,1);
2023-07-22 03:56:13.817 UTC [1614256] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:56:13.817 UTC [1614256] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,64,1);
2023-07-22 03:56:13.817 UTC [1614256] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:56:13.817 UTC [1614256] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,-1,0);
2023-07-22 03:56:13.818 UTC [1614256] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:13.818 UTC [1614256] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(10,5,-1,1);
2023-07-22 03:56:13.818 UTC [1614256] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:56:13.818 UTC [1614256] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,4,-1,1);
2023-07-22 03:56:13.818 UTC [1614256] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:56:13.818 UTC [1614256] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,64,1);
2023-07-22 03:56:13.818 UTC [1614256] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:56:13.818 UTC [1614256] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,-1,0);
2023-07-22 03:56:13.819 UTC [1614256] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:13.819 UTC [1614256] STATEMENT:  SELECT E'\\x138b7f0001'::hll(10,5,-1,1);
2023-07-22 03:56:13.819 UTC [1614256] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:56:13.819 UTC [1614256] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,4,-1,1);
2023-07-22 03:56:13.819 UTC [1614256] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:56:13.819 UTC [1614256] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,64,1);
2023-07-22 03:56:13.819 UTC [1614256] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:56:13.819 UTC [1614256] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,-1,0);
2023-07-22 03:56:13.821 UTC [1614256] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:13.821 UTC [1614256] STATEMENT:  SELECT E'\\x148b7fhll(10,5,-1,1);
2023-07-22 03:56:13.821 UTC [1614256] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:56:13.821 UTC [1614256] STATEMENT:  SELECT E'\\x148b7fhll(11,4,-1,1);
2023-07-22 03:56:13.821 UTC [1614256] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:56:13.821 UTC [1614256] STATEMENT:  SELECT E'\\x148b7f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000'::hll(11,5,64,1);
2023-07-22 03:56:13.822 UTC [1614256] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:56:13.822 UTC [1614256] STATEMENT:  SELECT E'\\x148b7fhll(11,5,-1,0);
2023-07-22 03:56:30.657 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] ERROR:  function hll_hash_boolean(integer, integer) does not exist at character 8
2023-07-22 03:56:30.658 UTC [1614324] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:56:30.658 UTC [1614324] STATEMENT:  SELECT hll_hash_boolean(0, -1);
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.658 UTC [1614324] WARNING:  negative seed values not compatible
2023-07-22 03:56:30.660 UTC [1614324] ERROR:  operator does not exist: hll || integer at character 20
2023-07-22 03:56:30.660 UTC [1614324] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:56:30.660 UTC [1614324] STATEMENT:  SELECT hll_empty() || 42;
2023-07-22 03:56:30.660 UTC [1614324] ERROR:  operator does not exist: hll || bigint at character 20
2023-07-22 03:56:30.660 UTC [1614324] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:56:30.660 UTC [1614324] STATEMENT:  SELECT hll_empty() || 42::bigint;
2023-07-22 03:56:30.812 UTC [1614366] ERROR:  invalid number of type modifiers at character 32
2023-07-22 03:56:30.812 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(10, 4, 64, 0, 42));
2023-07-22 03:56:30.812 UTC [1614366] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 03:56:30.812 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(-1));
2023-07-22 03:56:30.820 UTC [1614366] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 03:56:30.820 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(31));
2023-07-22 03:56:30.820 UTC [1614366] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 03:56:30.820 UTC [1614366] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 03:56:30.820 UTC [1614366] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 03:56:30.820 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(32));
2023-07-22 03:56:30.821 UTC [1614366] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 03:56:30.821 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, -1));
2023-07-22 03:56:30.852 UTC [1614366] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 03:56:30.852 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 8));
2023-07-22 03:56:30.852 UTC [1614366] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 03:56:30.852 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, -2));
2023-07-22 03:56:30.898 UTC [1614366] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 03:56:30.898 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 4294967296));
2023-07-22 03:56:30.899 UTC [1614366] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 03:56:30.899 UTC [1614366] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 03:56:30.899 UTC [1614366] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 03:56:30.899 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 8589934592));
2023-07-22 03:56:30.899 UTC [1614366] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 03:56:30.899 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, -1));
2023-07-22 03:56:30.919 UTC [1614366] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 03:56:30.919 UTC [1614366] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, 2));
2023-07-22 03:56:30.932 UTC [1614370] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:30.932 UTC [1614370] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (
	E'\\x148b7fhll
	);
2023-07-22 03:56:30.932 UTC [1614370] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:30.932 UTC [1614370] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (hll_empty(11));
2023-07-22 03:56:30.932 UTC [1614370] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:30.932 UTC [1614370] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x118b7f');
2023-07-22 03:56:30.932 UTC [1614370] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:56:30.932 UTC [1614370] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x128b7f1111111111111111');
2023-07-22 03:56:30.955 UTC [1614218] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:30.986 UTC [1614218] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.008 s, sync=0.005 s, total=0.031 s; sync files=7, longest=0.003 s, average=0.001 s; distance=33497 kB, estimate=33497 kB
2023-07-22 03:56:31.106 UTC [1614389] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:56:31.106 UTC [1614389] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:56:31.130 UTC [1614389] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:56:31.130 UTC [1614389] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:56:31.130 UTC [1614389] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:56:31.130 UTC [1614389] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:56:31.146 UTC [1614389] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:56:31.146 UTC [1614389] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:56:31.147 UTC [1614389] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:56:31.147 UTC [1614389] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:57:02.862 UTC [1614218] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:57:02.982 UTC [1614218] LOG:  checkpoint complete: wrote 704 buffers (4.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.031 s, sync=0.048 s, total=0.121 s; sync files=255, longest=0.004 s, average=0.001 s; distance=141008 kB, estimate=141008 kB
2023-07-22 03:57:34.402 UTC [1614218] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:57:34.463 UTC [1614218] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.005 s, total=0.062 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138462 kB, estimate=140754 kB
2023-07-22 03:57:34.527 UTC [1614217] LOG:  received fast shutdown request
2023-07-22 03:57:34.533 UTC [1614217] LOG:  aborting any active transactions
2023-07-22 03:57:34.534 UTC [1614217] LOG:  background worker "logical replication launcher" (PID 1614223) exited with exit code 1
2023-07-22 03:57:34.534 UTC [1614218] LOG:  shutting down
2023-07-22 03:57:34.537 UTC [1614218] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:57:34.552 UTC [1614218] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.018 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126678 kB
2023-07-22 03:57:34.572 UTC [1614217] LOG:  database system is shut down
2023-07-22 03:57:35.310 UTC [1614462] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:57:35.311 UTC [1614462] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:57:35.316 UTC [1614462] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:57:35.327 UTC [1614465] LOG:  database system was shut down at 2023-07-22 03:57:35 UTC
2023-07-22 03:57:35.336 UTC [1614462] LOG:  database system is ready to accept connections
2023-07-22 03:57:35.500 UTC [1614481] ERROR:  array must have even number of elements
2023-07-22 03:57:35.500 UTC [1614481] STATEMENT:  select ARRAY['a','g','b','h','asd']::hstore;
2023-07-22 03:57:35.501 UTC [1614481] ERROR:  array must have two columns
2023-07-22 03:57:35.501 UTC [1614481] STATEMENT:  select ARRAY[['a','g','b'],['h','asd','i']]::hstore;
2023-07-22 03:57:35.501 UTC [1614481] ERROR:  wrong number of array subscripts
2023-07-22 03:57:35.501 UTC [1614481] STATEMENT:  select ARRAY[[['a','g'],['b','h'],['asd','i']]]::hstore;
2023-07-22 03:57:35.501 UTC [1614481] ERROR:  array must have even number of elements
2023-07-22 03:57:35.501 UTC [1614481] STATEMENT:  select hstore(ARRAY['a','g','b','h','asd']);
2023-07-22 03:57:35.501 UTC [1614481] ERROR:  array must have two columns
2023-07-22 03:57:35.501 UTC [1614481] STATEMENT:  select hstore(ARRAY[['a','g','b'],['h','asd','i']]);
2023-07-22 03:57:35.501 UTC [1614481] ERROR:  wrong number of array subscripts
2023-07-22 03:57:35.501 UTC [1614481] STATEMENT:  select hstore(ARRAY[[['a','g'],['b','h'],['asd','i']]]);
2023-07-22 03:57:35.502 UTC [1614481] ERROR:  arrays must have same bounds
2023-07-22 03:57:35.502 UTC [1614481] STATEMENT:  select hstore(ARRAY['a'], '{}'::text[]);
2023-07-22 03:57:35.502 UTC [1614481] ERROR:  arrays must have same bounds
2023-07-22 03:57:35.502 UTC [1614481] STATEMENT:  select hstore('{}'::text[], ARRAY['a']);
2023-07-22 03:57:35.515 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.515 UTC [1614481] STATEMENT:  select populate_record(v, hstore('e', null)) from testhstore1 v;
2023-07-22 03:57:35.515 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.515 UTC [1614481] STATEMENT:  select populate_record(v, hstore('b', 'foo') || hstore('e', null)) from testhstore1 v;
2023-07-22 03:57:35.516 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.516 UTC [1614481] STATEMENT:  select populate_record(null::testhstore1, hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 03:57:35.516 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.516 UTC [1614481] STATEMENT:  select populate_record(null::testhstore1, '');
2023-07-22 03:57:35.516 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.516 UTC [1614481] STATEMENT:  select v #= hstore('e', null) from testhstore1 v;
2023-07-22 03:57:35.517 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.517 UTC [1614481] STATEMENT:  select null::testhstore1 #= (hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 03:57:35.517 UTC [1614481] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:57:35.517 UTC [1614481] STATEMENT:  select null::testhstore1 #= hstore '';
2023-07-22 03:57:35.554 UTC [1614481] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 03:57:35.554 UTC [1614481] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:57:35.554 UTC [1614481] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=0));
2023-07-22 03:57:35.554 UTC [1614481] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 03:57:35.554 UTC [1614481] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:57:35.554 UTC [1614481] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=2025));
2023-07-22 03:57:36.099 UTC [1614481] ERROR:  hstore allows only one subscript
2023-07-22 03:57:36.099 UTC [1614481] STATEMENT:  select f2['d']['e'] from test_json_agg;
2023-07-22 03:57:36.100 UTC [1614481] ERROR:  hstore allows only one subscript
2023-07-22 03:57:36.100 UTC [1614481] STATEMENT:  select f2['d':'e'] from test_json_agg;
2023-07-22 03:57:36.109 UTC [1614463] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:57:36.191 UTC [1614463] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.005 s, total=0.082 s; sync files=7, longest=0.003 s, average=0.001 s; distance=7879 kB, estimate=7879 kB
2023-07-22 03:57:36.259 UTC [1614496] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:57:36.259 UTC [1614496] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:57:36.292 UTC [1614496] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:57:36.292 UTC [1614496] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:57:36.293 UTC [1614496] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:57:36.293 UTC [1614496] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:57:36.310 UTC [1614496] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:57:36.310 UTC [1614496] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:57:36.310 UTC [1614496] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:57:36.310 UTC [1614496] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:58:08.277 UTC [1614463] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:58:08.379 UTC [1614463] LOG:  checkpoint complete: wrote 909 buffers (5.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.038 s, sync=0.023 s, total=0.102 s; sync files=255, longest=0.003 s, average=0.001 s; distance=140641 kB, estimate=140641 kB
2023-07-22 03:58:40.024 UTC [1614463] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:58:40.070 UTC [1614463] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.046 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136420 kB, estimate=140219 kB
2023-07-22 03:58:40.108 UTC [1614462] LOG:  received fast shutdown request
2023-07-22 03:58:40.111 UTC [1614462] LOG:  aborting any active transactions
2023-07-22 03:58:40.112 UTC [1614462] LOG:  background worker "logical replication launcher" (PID 1614468) exited with exit code 1
2023-07-22 03:58:40.112 UTC [1614463] LOG:  shutting down
2023-07-22 03:58:40.115 UTC [1614463] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:58:40.132 UTC [1614463] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126197 kB
2023-07-22 03:58:40.179 UTC [1614462] LOG:  database system is shut down
2023-07-22 03:58:40.843 UTC [1614569] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:58:40.843 UTC [1614569] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:58:40.849 UTC [1614569] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:58:40.857 UTC [1614572] LOG:  database system was shut down at 2023-07-22 03:58:40 UTC
2023-07-22 03:58:40.866 UTC [1614569] LOG:  database system is ready to accept connections
2023-07-22 03:58:41.299 UTC [1614590] WARNING:  hypopg: SQL order #1 is not a CREATE INDEX statement
2023-07-22 03:58:41.300 UTC [1614590] WARNING:  hypopg: SQL order #3 is not a CREATE INDEX statement
2023-07-22 03:58:41.303 UTC [1614590] ERROR:  value 1 out of bounds for option "fillfactor"
2023-07-22 03:58:41.303 UTC [1614590] DETAIL:  Valid values are between "10" and "100".
2023-07-22 03:58:41.303 UTC [1614590] STATEMENT:  SELECT COUNT(*) AS NB
	FROM public.hypopg_create_index('CREATE INDEX ON hypo(id) WITH (fillfactor = 1)');
2023-07-22 03:58:41.303 UTC [1614590] ERROR:  oid 1 is not a hypothetical index
2023-07-22 03:58:41.303 UTC [1614590] STATEMENT:  SELECT hypopg_relation_size(1);
2023-07-22 03:58:41.754 UTC [1614625] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:58:41.754 UTC [1614625] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:58:41.774 UTC [1614625] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:58:41.774 UTC [1614625] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:58:41.775 UTC [1614625] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:58:41.775 UTC [1614625] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:58:41.784 UTC [1614625] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:58:41.784 UTC [1614625] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:58:41.784 UTC [1614625] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:58:41.784 UTC [1614625] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 03:59:13.412 UTC [1614570] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:59:13.545 UTC [1614570] LOG:  checkpoint complete: wrote 1460 buffers (8.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.048 s, sync=0.042 s, total=0.133 s; sync files=509, longest=0.004 s, average=0.001 s; distance=158037 kB, estimate=158037 kB
2023-07-22 03:59:44.902 UTC [1614570] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:59:44.951 UTC [1614570] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.007 s, sync=0.004 s, total=0.050 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136542 kB, estimate=155888 kB
2023-07-22 03:59:44.990 UTC [1614569] LOG:  received fast shutdown request
2023-07-22 03:59:44.993 UTC [1614569] LOG:  aborting any active transactions
2023-07-22 03:59:44.994 UTC [1614569] LOG:  background worker "logical replication launcher" (PID 1614575) exited with exit code 1
2023-07-22 03:59:44.995 UTC [1614570] LOG:  shutting down
2023-07-22 03:59:44.997 UTC [1614570] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:59:45.014 UTC [1614570] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=140299 kB
2023-07-22 03:59:45.050 UTC [1614569] LOG:  database system is shut down
2023-07-22 03:59:45.768 UTC [1614697] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:59:45.768 UTC [1614697] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:59:45.774 UTC [1614697] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:59:45.784 UTC [1614700] LOG:  database system was shut down at 2023-07-22 03:59:45 UTC
2023-07-22 03:59:45.793 UTC [1614697] LOG:  database system is ready to accept connections
2023-07-22 03:59:46.086 UTC [1614744] ERROR:  Type of sequence element int4 doesn't match with function cs_to_float4_array return type
2023-07-22 03:59:46.086 UTC [1614744] STATEMENT:  select cs_to_float4_array('int4:{1,2,3,4,5}');
2023-07-22 03:59:46.170 UTC [1614820] ERROR:  no matching timestamp in timeseries
2023-07-22 03:59:46.170 UTC [1614820] STATEMENT:  select (Quote_project(Quote_get('IBM'), Quote_join('IBM', 'date:{2-Nov-2013,4-Nov-2013,03-Nov-2013,01-Nov-2013}', 0))).*;
2023-07-22 03:59:46.267 UTC [1614847] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:59:46.267 UTC [1614847] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 03:59:46.285 UTC [1614847] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:59:46.285 UTC [1614847] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:59:46.286 UTC [1614847] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:59:46.286 UTC [1614847] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 03:59:46.296 UTC [1614847] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:59:46.296 UTC [1614847] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 03:59:46.296 UTC [1614847] ERROR:  xslt_process() is not available without libxslt
2023-07-22 03:59:46.296 UTC [1614847] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:00:18.247 UTC [1614698] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:18.393 UTC [1614698] LOG:  checkpoint complete: wrote 1479 buffers (9.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.037 s, sync=0.069 s, total=0.147 s; sync files=506, longest=0.004 s, average=0.001 s; distance=145881 kB, estimate=145881 kB
2023-07-22 04:00:49.972 UTC [1614698] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:50.030 UTC [1614698] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.004 s, total=0.058 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136113 kB, estimate=144904 kB
2023-07-22 04:00:50.081 UTC [1614697] LOG:  received fast shutdown request
2023-07-22 04:00:50.086 UTC [1614697] LOG:  aborting any active transactions
2023-07-22 04:00:50.087 UTC [1614697] LOG:  background worker "logical replication launcher" (PID 1614703) exited with exit code 1
2023-07-22 04:00:50.087 UTC [1614698] LOG:  shutting down
2023-07-22 04:00:50.090 UTC [1614698] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:00:50.110 UTC [1614698] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.023 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130413 kB
2023-07-22 04:00:50.129 UTC [1614697] LOG:  database system is shut down
2023-07-22 04:00:50.911 UTC [1614921] FATAL:  could not access file "intagg": No such file or directory
2023-07-22 04:00:50.912 UTC [1614921] LOG:  database system is shut down
2023-07-22 04:00:51.632 UTC [1614954] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:00:51.632 UTC [1614954] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:00:51.638 UTC [1614954] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:00:51.646 UTC [1614957] LOG:  database system was shut down at 2023-07-22 04:00:51 UTC
2023-07-22 04:00:51.651 UTC [1614954] LOG:  database system is ready to accept connections
2023-07-22 04:00:52.158 UTC [1614973] ERROR:  value 0 out of bounds for option "numranges"
2023-07-22 04:00:52.158 UTC [1614973] DETAIL:  Valid values are between "1" and "252".
2023-07-22 04:00:52.158 UTC [1614973] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 0));
2023-07-22 04:00:52.158 UTC [1614973] ERROR:  value 253 out of bounds for option "numranges"
2023-07-22 04:00:52.158 UTC [1614973] DETAIL:  Valid values are between "1" and "252".
2023-07-22 04:00:52.158 UTC [1614973] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 253));
2023-07-22 04:00:52.384 UTC [1614973] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:00:52.384 UTC [1614973] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:00:52.384 UTC [1614973] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 0));
2023-07-22 04:00:52.385 UTC [1614973] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:00:52.385 UTC [1614973] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:00:52.385 UTC [1614973] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 2025));
2023-07-22 04:00:53.051 UTC [1614955] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:53.085 UTC [1614955] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.008 s, sync=0.005 s, total=0.035 s; sync files=7, longest=0.003 s, average=0.001 s; distance=29562 kB, estimate=29562 kB
2023-07-22 04:00:53.196 UTC [1614988] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:00:53.196 UTC [1614988] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:00:53.217 UTC [1614988] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:00:53.217 UTC [1614988] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:00:53.217 UTC [1614988] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:00:53.217 UTC [1614988] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:00:53.228 UTC [1614988] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:00:53.228 UTC [1614988] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:00:53.228 UTC [1614988] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:00:53.228 UTC [1614988] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:01:24.790 UTC [1614955] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:24.966 UTC [1614955] LOG:  checkpoint complete: wrote 716 buffers (4.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.025 s, sync=0.102 s, total=0.177 s; sync files=255, longest=0.013 s, average=0.001 s; distance=140941 kB, estimate=140941 kB
2023-07-22 04:01:56.917 UTC [1614955] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:57.015 UTC [1614955] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.098 s; sync files=4, longest=0.003 s, average=0.001 s; distance=134661 kB, estimate=140313 kB
2023-07-22 04:01:57.076 UTC [1614954] LOG:  received fast shutdown request
2023-07-22 04:01:57.079 UTC [1614954] LOG:  aborting any active transactions
2023-07-22 04:01:57.080 UTC [1614954] LOG:  background worker "logical replication launcher" (PID 1614960) exited with exit code 1
2023-07-22 04:01:57.080 UTC [1614955] LOG:  shutting down
2023-07-22 04:01:57.083 UTC [1614955] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:01:57.098 UTC [1614955] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.018 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126281 kB
2023-07-22 04:01:57.117 UTC [1614954] LOG:  database system is shut down
2023-07-22 04:01:57.802 UTC [1615060] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:01:57.802 UTC [1615060] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:01:57.808 UTC [1615060] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:01:57.815 UTC [1615063] LOG:  database system was shut down at 2023-07-22 04:01:57 UTC
2023-07-22 04:01:57.820 UTC [1615060] LOG:  database system is ready to accept connections
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '1.2.3' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '1.2.3'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '0' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '0'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: ' 1.2.3.4' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select ' 1.2.3.4'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '1.2.3.4 ' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '1.2.3.4 '::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '0.0.0.256' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '0.0.0.256'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '0.0.256' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '0.0.256'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '0..255.0' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '0..255.0'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '+0.255.0.0' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '+0.255.0.0'::ip4;
2023-07-22 04:01:58.058 UTC [1615079] ERROR:  invalid IP4 value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 04:01:58.058 UTC [1615079] STATEMENT:  select '1.2.3.4-1.2.3.4'::ip4;
2023-07-22 04:01:58.063 UTC [1615079] ERROR:  invalid IP6 value: '' at character 8
2023-07-22 04:01:58.063 UTC [1615079] STATEMENT:  select ''::ip6;
2023-07-22 04:01:58.063 UTC [1615079] ERROR:  invalid IP6 value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:01:58.063 UTC [1615079] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1.2.3.4:1111::5555' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1.2.3.4:1111::5555'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1.2.3.4::' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1.2.3.4::'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1.2.3.4::5555' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1.2.3.4::5555'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1111:' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1111:'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1111:2222:3333:4444::5555:'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1111:2222:3333::5555:' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1111:2222:3333::5555:'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1111:2222::5555:' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1111:2222::5555:'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1111::5555:' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1111::5555:'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '123' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '123'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '12345::6:7:8' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '12345::6:7:8'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '127.0.0.1' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '127.0.0.1'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1:2:3::4:5::7:8' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1:2:3::4:5::7:8'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1::1.2.256.4' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1::1.2.256.4'::ip6;
2023-07-22 04:01:58.064 UTC [1615079] ERROR:  invalid IP6 value: '1::1.2.3.256' at character 8
2023-07-22 04:01:58.064 UTC [1615079] STATEMENT:  select '1::1.2.3.256'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.2.3.300' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.2.3.300'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.2.3.900' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.2.3.900'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.2.300.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.2.300.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.2.900.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.2.900.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.256.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.256.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.300.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.300.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::1.900.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::1.900.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::256.2.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::256.2.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::260.2.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::260.2.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::2::3' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::2::3'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::300.2.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::300.2.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::300.300.300.300' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::300.300.300.300'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::3000.30.30.30' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::3000.30.30.30'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::400.2.3.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::400.2.3.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.2.256.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::5:1.2.256.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.2.3.256' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::5:1.2.3.256'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.2.3.300' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::5:1.2.3.300'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.2.3.900' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::5:1.2.3.900'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.2.300.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::5:1.2.300.4'::ip6;
2023-07-22 04:01:58.065 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.2.900.4' at character 8
2023-07-22 04:01:58.065 UTC [1615079] STATEMENT:  select '1::5:1.2.900.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.256.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:1.256.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.300.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:1.300.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:1.900.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:1.900.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:256.2.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:256.2.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:260.2.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:260.2.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:300.2.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:300.2.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:300.300.300.300' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:300.300.300.300'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:3000.30.30.30' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:3000.30.30.30'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:400.2.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:400.2.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::5:900.2.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::5:900.2.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1::900.2.3.4' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1::900.2.3.4'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '1:::3:4:5' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '1:::3:4:5'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001::FFD3::57ab' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001::FFD3::57ab'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ip6;
2023-07-22 04:01:58.066 UTC [1615079] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 04:01:58.066 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '3ffe:b00::1::a' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '3ffe:b00::1::a'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: ':' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select ':'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select ':1111:2222:3333:4444::5555'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: ':1111:2222:3333::5555' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select ':1111:2222:3333::5555'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: ':1111:2222::5555' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select ':1111:2222::5555'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: ':1111::5555' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select ':1111::5555'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.2.256.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.2.256.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.2.3.256' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.2.3.256'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.2.3.300' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.2.3.300'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.2.3.900' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.2.3.900'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.2.300.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.2.300.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.2.900.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.2.900.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.256.3.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.256.3.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.300.3.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.300.3.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1.900.3.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1.900.3.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::256.2.3.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::256.2.3.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::260.2.3.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::260.2.3.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::300.2.3.4' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::300.2.3.4'::ip6;
2023-07-22 04:01:58.067 UTC [1615079] ERROR:  invalid IP6 value: '::300.300.300.300' at character 8
2023-07-22 04:01:58.067 UTC [1615079] STATEMENT:  select '::300.300.300.300'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: '::3000.30.30.30' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select '::3000.30.30.30'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: '::400.2.3.4' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select '::400.2.3.4'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: '::5555:' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select '::5555:'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: '::900.2.3.4' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select '::900.2.3.4'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: ':::' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select ':::'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: ':::5555' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select ':::5555'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: '::ffff:2.3.4' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select '::ffff:2.3.4'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: '::ffff:257.1.2.3' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select '::ffff:257.1.2.3'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: 'FF01::101::2' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select 'FF01::101::2'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ip6;
2023-07-22 04:01:58.068 UTC [1615079] ERROR:  invalid IP6 value: 'ldkfj' at character 8
2023-07-22 04:01:58.068 UTC [1615079] STATEMENT:  select 'ldkfj'::ip6;
2023-07-22 04:01:58.070 UTC [1615079] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 04:01:58.070 UTC [1615079] STATEMENT:  select '1.2.3'::ip4r;
2023-07-22 04:01:58.070 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 04:01:58.070 UTC [1615079] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '255.255.255.255-1.2.3'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/31'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/30'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/29'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/28'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/27'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/26'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/25'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/24'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/23'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/22'::ip4r;
2023-07-22 04:01:58.071 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 04:01:58.071 UTC [1615079] STATEMENT:  select '0.0.0.1/21'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/20'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/19'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/18'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/17'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/16'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/15'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/14'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/13'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/12'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/11'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/10'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/9'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/8'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/7'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/6'::ip4r;
2023-07-22 04:01:58.072 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 04:01:58.072 UTC [1615079] STATEMENT:  select '0.0.0.1/5'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.1/4'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.1/3'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.1/2'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.1/1'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.1/0'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.2/30'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.4/29'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.8/28'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.16/27'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.32/26'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.64/25'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.0.128/24'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.1.0/23'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.2.0/22'::ip4r;
2023-07-22 04:01:58.073 UTC [1615079] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 04:01:58.073 UTC [1615079] STATEMENT:  select '0.0.4.0/21'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.0.8.0/20'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.0.16.0/19'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.0.32.0/18'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.0.64.0/17'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.0.128.0/16'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.1.0.0/15'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.2.0.0/14'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.4.0.0/13'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.8.0.0/12'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.16.0.0/11'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.32.0.0/10'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.64.0.0/9'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '0.128.0.0/8'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '1.0.0.0/7'::ip4r;
2023-07-22 04:01:58.074 UTC [1615079] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 04:01:58.074 UTC [1615079] STATEMENT:  select '2.0.0.0/6'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '4.0.0.0/5'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '8.0.0.0/4'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '16.0.0.0/3'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '32.0.0.0/2'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '64.0.0.0/1'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '128.0.0.0/0'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '0.0.0.0/33'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '0.0.0.0/3.0'::ip4r;
2023-07-22 04:01:58.075 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 04:01:58.075 UTC [1615079] STATEMENT:  select '0.0.0.0/+33'::ip4r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '::-::-::'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::ip6r;
2023-07-22 04:01:58.078 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 04:01:58.078 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::ip6r;
2023-07-22 04:01:58.079 UTC [1615079] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 04:01:58.079 UTC [1615079] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '::/129'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '::/255'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '::/256'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '::/+0'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '::/0-0'::ip6r;
2023-07-22 04:01:58.080 UTC [1615079] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 04:01:58.080 UTC [1615079] STATEMENT:  select '::-::/0'::ip6r;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '1.2.3' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '1.2.3'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '0' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '0'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: ' 1.2.3.4' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select ' 1.2.3.4'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4 ' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '1.2.3.4 '::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '0.0.0.256' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '0.0.0.256'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '0.0.256' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '0.0.256'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '0..255.0' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '0..255.0'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '+0.255.0.0' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '+0.255.0.0'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '1.2.3.4-1.2.3.4'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select ''::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ipaddress;
2023-07-22 04:01:58.089 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 04:01:58.089 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4:1111::5555' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1.2.3.4:1111::5555'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4::' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1.2.3.4::'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1.2.3.4::5555' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1.2.3.4::5555'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1111:' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1111:'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1111:2222:3333:4444::5555:'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1111:2222:3333::5555:' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1111:2222:3333::5555:'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1111:2222::5555:' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1111:2222::5555:'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1111::5555:' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1111::5555:'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '123' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '123'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '12345::6:7:8' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '12345::6:7:8'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1:2:3::4:5::7:8' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1:2:3::4:5::7:8'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1::1.2.256.4' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1::1.2.256.4'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1::1.2.3.256' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1::1.2.3.256'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1::1.2.3.300' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1::1.2.3.300'::ipaddress;
2023-07-22 04:01:58.090 UTC [1615079] ERROR:  invalid IP value: '1::1.2.3.900' at character 8
2023-07-22 04:01:58.090 UTC [1615079] STATEMENT:  select '1::1.2.3.900'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::1.2.300.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::1.2.300.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::1.2.900.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::1.2.900.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::1.256.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::1.256.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::1.300.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::1.300.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::1.900.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::1.900.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::256.2.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::256.2.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::260.2.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::260.2.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::2::3' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::2::3'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::300.2.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::300.2.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::300.300.300.300' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::300.300.300.300'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::3000.30.30.30' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::3000.30.30.30'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::400.2.3.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::400.2.3.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::5:1.2.256.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::5:1.2.256.4'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::5:1.2.3.256' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::5:1.2.3.256'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::5:1.2.3.300' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::5:1.2.3.300'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::5:1.2.3.900' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::5:1.2.3.900'::ipaddress;
2023-07-22 04:01:58.091 UTC [1615079] ERROR:  invalid IP value: '1::5:1.2.300.4' at character 8
2023-07-22 04:01:58.091 UTC [1615079] STATEMENT:  select '1::5:1.2.300.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:1.2.900.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:1.2.900.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:1.256.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:1.256.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:1.300.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:1.300.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:1.900.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:1.900.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:256.2.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:256.2.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:260.2.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:260.2.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:300.2.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:300.2.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:300.300.300.300' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:300.300.300.300'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:3000.30.30.30' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:3000.30.30.30'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:400.2.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:400.2.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::5:900.2.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::5:900.2.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1::900.2.3.4' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1::900.2.3.4'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '1:::3:4:5' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '1:::3:4:5'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ipaddress;
2023-07-22 04:01:58.092 UTC [1615079] ERROR:  invalid IP value: '2001::FFD3::57ab' at character 8
2023-07-22 04:01:58.092 UTC [1615079] STATEMENT:  select '2001::FFD3::57ab'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '3ffe:b00::1::a' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '3ffe:b00::1::a'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: ':' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select ':'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select ':1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: ':1111:2222:3333::5555' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select ':1111:2222:3333::5555'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: ':1111:2222::5555' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select ':1111:2222::5555'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: ':1111::5555' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select ':1111::5555'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '::1.2.256.4' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '::1.2.256.4'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '::1.2.3.256' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '::1.2.3.256'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '::1.2.3.300' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '::1.2.3.300'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '::1.2.3.900' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '::1.2.3.900'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '::1.2.300.4' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '::1.2.300.4'::ipaddress;
2023-07-22 04:01:58.093 UTC [1615079] ERROR:  invalid IP value: '::1.2.900.4' at character 8
2023-07-22 04:01:58.093 UTC [1615079] STATEMENT:  select '::1.2.900.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::1.256.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::1.256.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::1.300.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::1.300.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::1.900.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::1.900.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::256.2.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::256.2.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::260.2.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::260.2.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::300.2.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::300.2.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::300.300.300.300' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::300.300.300.300'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::3000.30.30.30' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::3000.30.30.30'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::400.2.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::400.2.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::5555:' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::5555:'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::900.2.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::900.2.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: ':::' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select ':::'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: ':::5555' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select ':::5555'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::ffff:2.3.4' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::ffff:2.3.4'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: '::ffff:257.1.2.3' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select '::ffff:257.1.2.3'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: 'FF01::101::2' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select 'FF01::101::2'::ipaddress;
2023-07-22 04:01:58.094 UTC [1615079] ERROR:  invalid IP value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 04:01:58.094 UTC [1615079] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ipaddress;
2023-07-22 04:01:58.095 UTC [1615079] ERROR:  invalid IP value: 'ldkfj' at character 8
2023-07-22 04:01:58.095 UTC [1615079] STATEMENT:  select 'ldkfj'::ipaddress;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '1.2.3'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '255.255.255.255-1.2.3'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/31'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/30'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/29'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/28'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/27'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/26'::iprange;
2023-07-22 04:01:58.102 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 04:01:58.102 UTC [1615079] STATEMENT:  select '0.0.0.1/25'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/24'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/23'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/22'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/21'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/20'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/19'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/18'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/17'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/16'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/15'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/14'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/13'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/12'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/11'::iprange;
2023-07-22 04:01:58.103 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 04:01:58.103 UTC [1615079] STATEMENT:  select '0.0.0.1/10'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/9'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/8'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/7'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/6'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/5'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/4'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/3'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/2'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/1'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.1/0'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.2/30'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.4/29'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.8/28'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.16/27'::iprange;
2023-07-22 04:01:58.104 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 04:01:58.104 UTC [1615079] STATEMENT:  select '0.0.0.32/26'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.0.64/25'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.0.128/24'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.1.0/23'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.2.0/22'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.4.0/21'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.8.0/20'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.16.0/19'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.32.0/18'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.64.0/17'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.0.128.0/16'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.1.0.0/15'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.2.0.0/14'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.4.0.0/13'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.8.0.0/12'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.16.0.0/11'::iprange;
2023-07-22 04:01:58.105 UTC [1615079] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 04:01:58.105 UTC [1615079] STATEMENT:  select '0.32.0.0/10'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '0.64.0.0/9'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '0.128.0.0/8'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '1.0.0.0/7'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '2.0.0.0/6'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '4.0.0.0/5'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '8.0.0.0/4'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '16.0.0.0/3'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '32.0.0.0/2'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '64.0.0.0/1'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '128.0.0.0/0'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '0.0.0.0/33'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '0.0.0.0/3.0'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '0.0.0.0/+33'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select '::-::-::'::iprange;
2023-07-22 04:01:58.106 UTC [1615079] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 04:01:58.106 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::iprange;
2023-07-22 04:01:58.107 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 04:01:58.107 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '::/129'::iprange;
2023-07-22 04:01:58.108 UTC [1615079] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 04:01:58.108 UTC [1615079] STATEMENT:  select '::/255'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '::/256'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '::/+0'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '::/0-0'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '::-::/0'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP6R value: "-::" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '-::'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP4R value: "-1.2.3.4" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '-1.2.3.4'::iprange;
2023-07-22 04:01:58.109 UTC [1615079] ERROR:  invalid IP4R value: "1.2.3.4-" at character 8
2023-07-22 04:01:58.109 UTC [1615079] STATEMENT:  select '1.2.3.4-'::iprange;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '1.2.3'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '0'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select ' 1.2.3.4'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '1.2.3.4 '::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '0.0.0.256'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '0.0.256'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '0..255.0'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '+0.255.0.0'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4 value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ip4;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '1.2.3'::text::ip4r;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::text::ip4r;
2023-07-22 04:01:58.137 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.137 UTC [1615079] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '255.255.255.255-1.2.3'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/31'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/30'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/29'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/28'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/27'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/26'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/25'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/24'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/23'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/22'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/21'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/20'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/19'::text::ip4r;
2023-07-22 04:01:58.138 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.138 UTC [1615079] STATEMENT:  select '0.0.0.1/18'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/17'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/16'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/15'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/14'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/13'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/12'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/11'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/10'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/9'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/8'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/7'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/6'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/5'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/4'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/3'::text::ip4r;
2023-07-22 04:01:58.139 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.139 UTC [1615079] STATEMENT:  select '0.0.0.1/2'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.1/1'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.1/0'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.2/30'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.4/29'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.8/28'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.16/27'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.32/26'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.64/25'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.0.128/24'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.1.0/23'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.2.0/22'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.4.0/21'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.8.0/20'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.16.0/19'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.32.0/18'::text::ip4r;
2023-07-22 04:01:58.140 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.140 UTC [1615079] STATEMENT:  select '0.0.64.0/17'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.0.128.0/16'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.1.0.0/15'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.2.0.0/14'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.4.0.0/13'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.8.0.0/12'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.16.0.0/11'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.32.0.0/10'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.64.0.0/9'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '0.128.0.0/8'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '1.0.0.0/7'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '2.0.0.0/6'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '4.0.0.0/5'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '8.0.0.0/4'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '16.0.0.0/3'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '32.0.0.0/2'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '64.0.0.0/1'::text::ip4r;
2023-07-22 04:01:58.141 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.141 UTC [1615079] STATEMENT:  select '128.0.0.0/0'::text::ip4r;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '0.0.0.0/33'::text::ip4r;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '0.0.0.0/3.0'::text::ip4r;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP4R value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '0.0.0.0/+33'::text::ip4r;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select ''::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1.2.3.4:1111::5555'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1.2.3.4::'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1.2.3.4::5555'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1111:'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1111:2222:3333::5555:'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1111:2222::5555:'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '1111::5555:'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '123'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '12345::6:7:8'::text::ip6;
2023-07-22 04:01:58.142 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.142 UTC [1615079] STATEMENT:  select '127.0.0.1'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1:2:3::4:5::7:8'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.2.256.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.2.3.256'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.2.3.300'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.2.3.900'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.2.300.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.2.900.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.256.3.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.300.3.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::1.900.3.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::256.2.3.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::260.2.3.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::2::3'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::300.2.3.4'::text::ip6;
2023-07-22 04:01:58.143 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.143 UTC [1615079] STATEMENT:  select '1::300.300.300.300'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::3000.30.30.30'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::400.2.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.2.256.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.2.3.256'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.2.3.300'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.2.3.900'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.2.300.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.2.900.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.256.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.300.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:1.900.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:256.2.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:260.2.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:300.2.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:300.300.300.300'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:3000.30.30.30'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:400.2.3.4'::text::ip6;
2023-07-22 04:01:58.144 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.144 UTC [1615079] STATEMENT:  select '1::5:900.2.3.4'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '1::900.2.3.4'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '1:::3:4:5'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001::FFD3::57ab'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '3ffe:b00::1::a'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select ':'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select ':1111:2222:3333::5555'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select ':1111:2222::5555'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select ':1111::5555'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '::1.2.256.4'::text::ip6;
2023-07-22 04:01:58.145 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.145 UTC [1615079] STATEMENT:  select '::1.2.3.256'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.2.3.300'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.2.3.900'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.2.300.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.2.900.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.256.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.300.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1.900.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::256.2.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::260.2.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::300.2.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::300.300.300.300'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::3000.30.30.30'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::400.2.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::5555:'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select '::900.2.3.4'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select ':::'::text::ip6;
2023-07-22 04:01:58.146 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.146 UTC [1615079] STATEMENT:  select ':::5555'::text::ip6;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '::ffff:2.3.4'::text::ip6;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '::ffff:257.1.2.3'::text::ip6;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select 'FF01::101::2'::text::ip6;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ip6;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6 value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select 'ldkfj'::text::ip6;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '::-::-::'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::text::ip6r;
2023-07-22 04:01:58.147 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.147 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::text::ip6r;
2023-07-22 04:01:58.148 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.148 UTC [1615079] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '::/129'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '::/255'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '::/256'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '::/+0'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '::/0-0'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP6R value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '::-::/0'::text::ip6r;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '1.2.3'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '0'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select ' 1.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '1.2.3.4 '::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '0.0.0.256'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '0.0.256'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '0..255.0'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '+0.255.0.0'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select ''::text::ipaddress;
2023-07-22 04:01:58.149 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.149 UTC [1615079] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1.2.3.4:1111::5555'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1.2.3.4::'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1.2.3.4::5555'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1111:'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1111:2222:3333::5555:'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1111:2222::5555:'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1111::5555:'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '123'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '12345::6:7:8'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1:2:3::4:5::7:8'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1::1.2.256.4'::text::ipaddress;
2023-07-22 04:01:58.150 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.150 UTC [1615079] STATEMENT:  select '1::1.2.3.256'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.2.3.300'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.2.3.900'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.2.300.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.2.900.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.256.3.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.300.3.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::1.900.3.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::256.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::260.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::2::3'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::300.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::300.300.300.300'::text::ipaddress;
2023-07-22 04:01:58.151 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.151 UTC [1615079] STATEMENT:  select '1::3000.30.30.30'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::400.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.2.256.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.2.3.256'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.2.3.300'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.2.3.900'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.2.300.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.2.900.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.256.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.300.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:1.900.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:256.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:260.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:300.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.152 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.152 UTC [1615079] STATEMENT:  select '1::5:300.300.300.300'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '1::5:3000.30.30.30'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '1::5:400.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '1::5:900.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '1::900.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '1:::3:4:5'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001::FFD3::57ab'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ipaddress;
2023-07-22 04:01:58.153 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.153 UTC [1615079] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '3ffe:b00::1::a'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select ':'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select ':1111:2222:3333::5555'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select ':1111:2222::5555'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select ':1111::5555'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.2.256.4'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.2.3.256'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.2.3.300'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.2.3.900'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.2.300.4'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.2.900.4'::text::ipaddress;
2023-07-22 04:01:58.154 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.154 UTC [1615079] STATEMENT:  select '::1.256.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::1.300.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::1.900.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::256.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::260.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::300.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::300.300.300.300'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::3000.30.30.30'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::400.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::5555:'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select '::900.2.3.4'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select ':::'::text::ipaddress;
2023-07-22 04:01:58.155 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.155 UTC [1615079] STATEMENT:  select ':::5555'::text::ipaddress;
2023-07-22 04:01:58.156 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.156 UTC [1615079] STATEMENT:  select '::ffff:2.3.4'::text::ipaddress;
2023-07-22 04:01:58.156 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.156 UTC [1615079] STATEMENT:  select '::ffff:257.1.2.3'::text::ipaddress;
2023-07-22 04:01:58.156 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.156 UTC [1615079] STATEMENT:  select 'FF01::101::2'::text::ipaddress;
2023-07-22 04:01:58.156 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.156 UTC [1615079] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ipaddress;
2023-07-22 04:01:58.156 UTC [1615079] ERROR:  invalid IP value in text
2023-07-22 04:01:58.156 UTC [1615079] STATEMENT:  select 'ldkfj'::text::ipaddress;
2023-07-22 04:01:58.162 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.162 UTC [1615079] STATEMENT:  select (-4294967295::bigint)::ip4;
2023-07-22 04:01:58.162 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.162 UTC [1615079] STATEMENT:  select (4294967296::bigint)::ip4;
2023-07-22 04:01:58.162 UTC [1615079] WARNING:  double converted to IP4 is not integral
2023-07-22 04:01:58.162 UTC [1615079] WARNING:  double converted to IP4 is not integral
2023-07-22 04:01:58.162 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.162 UTC [1615079] STATEMENT:  select (-4294967295::float8)::ip4;
2023-07-22 04:01:58.162 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.162 UTC [1615079] STATEMENT:  select (4294967296::float8)::ip4;
2023-07-22 04:01:58.162 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.162 UTC [1615079] STATEMENT:  select (-3000000000::float8)::ip4;
2023-07-22 04:01:58.162 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.162 UTC [1615079] STATEMENT:  select 6000000000::float8::ip4;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select 6e10::float8::ip4;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select 6e30::float8::ip4;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select (-1::numeric)::ip6;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  numeric value too large for conversion to IP6
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select 340282366920938463463374607431768211456::numeric::ip6;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select 0.1::numeric::ip6;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select 0.00000000000000000001::numeric::ip6;
2023-07-22 04:01:58.163 UTC [1615079] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 04:01:58.163 UTC [1615079] STATEMENT:  select (-0.00000000000000000001::numeric)::ip6;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid INET value for conversion to IP4
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '::'::inet::ip4;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid INET value for conversion to IP6
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '0.0.0.0'::inet::ip6;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid CIDR value for conversion to IP4R
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '::/128'::cidr::ip4r;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid CIDR value for conversion to IP6R
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '0.0.0.0/32'::cidr::ip6r;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid IPR value for conversion to IP4R
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '::/0'::iprange::ip4r;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid IPR value for conversion to IP6R
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '0.0.0.0/0'::iprange::ip6r;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid IP value in cast to IP4
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '::'::ipaddress::ip4;
2023-07-22 04:01:58.168 UTC [1615079] ERROR:  invalid IP value in cast to IP4
2023-07-22 04:01:58.168 UTC [1615079] STATEMENT:  select '0.0.0.0'::ipaddress::ip6;
2023-07-22 04:01:58.170 UTC [1615079] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 04:01:58.170 UTC [1615079] STATEMENT:  select (x'0102030')::ip4;
2023-07-22 04:01:58.170 UTC [1615079] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 04:01:58.170 UTC [1615079] STATEMENT:  select (x'0102030405')::ip4;
2023-07-22 04:01:58.170 UTC [1615079] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 04:01:58.170 UTC [1615079] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ip6;
2023-07-22 04:01:58.171 UTC [1615079] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 04:01:58.171 UTC [1615079] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ip6;
2023-07-22 04:01:58.171 UTC [1615079] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:01:58.171 UTC [1615079] STATEMENT:  select (x'0102030')::ipaddress;
2023-07-22 04:01:58.171 UTC [1615079] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:01:58.171 UTC [1615079] STATEMENT:  select (x'0102030405')::ipaddress;
2023-07-22 04:01:58.171 UTC [1615079] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:01:58.171 UTC [1615079] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ipaddress;
2023-07-22 04:01:58.171 UTC [1615079] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 04:01:58.171 UTC [1615079] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ipaddress;
2023-07-22 04:01:58.172 UTC [1615079] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:01:58.172 UTC [1615079] STATEMENT:  select (decode('010203','hex'))::ip4;
2023-07-22 04:01:58.172 UTC [1615079] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:01:58.172 UTC [1615079] STATEMENT:  select (decode('0102030405','hex'))::ip4;
2023-07-22 04:01:58.172 UTC [1615079] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 04:01:58.172 UTC [1615079] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ip6;
2023-07-22 04:01:58.172 UTC [1615079] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:01:58.172 UTC [1615079] STATEMENT:  select (decode('0102030405','hex'))::ipaddress;
2023-07-22 04:01:58.172 UTC [1615079] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:01:58.172 UTC [1615079] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ipaddress;
2023-07-22 04:01:58.172 UTC [1615079] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 04:01:58.172 UTC [1615079] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ffffff','hex'))::ipaddress;
2023-07-22 04:01:58.174 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.174 UTC [1615079] STATEMENT:  select ip4_netmask(33);
2023-07-22 04:01:58.174 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.174 UTC [1615079] STATEMENT:  select ip4_netmask(-1);
2023-07-22 04:01:58.175 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.175 UTC [1615079] STATEMENT:  select ip6_netmask(129);
2023-07-22 04:01:58.175 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.175 UTC [1615079] STATEMENT:  select ip6_netmask(-1);
2023-07-22 04:01:58.178 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.178 UTC [1615079] STATEMENT:  select ip4_net_lower('255.255.255.255',33);
2023-07-22 04:01:58.178 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.178 UTC [1615079] STATEMENT:  select ip4_net_lower('255.255.255.255',-1);
2023-07-22 04:01:58.179 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.179 UTC [1615079] STATEMENT:  select ip4_net_upper('0.0.0.0',33);
2023-07-22 04:01:58.179 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.179 UTC [1615079] STATEMENT:  select ip4_net_upper('0.0.0.0',-1);
2023-07-22 04:01:58.180 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.180 UTC [1615079] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 04:01:58.180 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.180 UTC [1615079] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 04:01:58.180 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.180 UTC [1615079] STATEMENT:  select ip6_net_upper('::',129);
2023-07-22 04:01:58.181 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.181 UTC [1615079] STATEMENT:  select ip6_net_upper('::',-1);
2023-07-22 04:01:58.181 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.181 UTC [1615079] STATEMENT:  select ipaddress_net_lower('255.255.255.255',33);
2023-07-22 04:01:58.181 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.181 UTC [1615079] STATEMENT:  select ipaddress_net_lower('255.255.255.255',-1);
2023-07-22 04:01:58.182 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.182 UTC [1615079] STATEMENT:  select ipaddress_net_upper('0.0.0.0',33);
2023-07-22 04:01:58.182 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.182 UTC [1615079] STATEMENT:  select ipaddress_net_upper('0.0.0.0',-1);
2023-07-22 04:01:58.182 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.182 UTC [1615079] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 04:01:58.182 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.182 UTC [1615079] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 04:01:58.183 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.183 UTC [1615079] STATEMENT:  select ipaddress_net_upper('::',129);
2023-07-22 04:01:58.183 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.183 UTC [1615079] STATEMENT:  select ipaddress_net_upper('::',-1);
2023-07-22 04:01:58.188 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.188 UTC [1615079] STATEMENT:  select ip4 '255.255.255.255' / 33;
2023-07-22 04:01:58.188 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.188 UTC [1615079] STATEMENT:  select ip4 '255.255.255.255' / -1;
2023-07-22 04:01:58.189 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.189 UTC [1615079] STATEMENT:  select ip4 '255.255.255.255' / ip4 '0.255.255.255';
2023-07-22 04:01:58.189 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.189 UTC [1615079] STATEMENT:  select ip4 '255.255.255.255' / ip4 '255.254.255.255';
2023-07-22 04:01:58.189 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.189 UTC [1615079] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 04:01:58.189 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.189 UTC [1615079] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 04:01:58.190 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.190 UTC [1615079] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 04:01:58.190 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.190 UTC [1615079] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff::ffff';
2023-07-22 04:01:58.190 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.190 UTC [1615079] STATEMENT:  select ipaddress '255.255.255.255' / 33;
2023-07-22 04:01:58.190 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.190 UTC [1615079] STATEMENT:  select ipaddress '255.255.255.255' / -1;
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  prefix length out of range
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '0.255.255.255';
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '255.254.255.255';
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  invalid netmask
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff::ffff';
2023-07-22 04:01:58.191 UTC [1615079] ERROR:  invalid mixing of IP address families
2023-07-22 04:01:58.191 UTC [1615079] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress '0.0.0.0';
2023-07-22 04:01:58.192 UTC [1615079] ERROR:  invalid mixing of IP address families
2023-07-22 04:01:58.192 UTC [1615079] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '::';
2023-07-22 04:01:58.195 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.195 UTC [1615079] STATEMENT:  select a + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.195 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.195 UTC [1615079] STATEMENT:  select a::ipaddress + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.195 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.195 UTC [1615079] STATEMENT:  select a - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.195 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.195 UTC [1615079] STATEMENT:  select a::ipaddress - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a::ipaddress + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a::ipaddress + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a::ipaddress - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.196 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.196 UTC [1615079] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a::ipaddress + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a::ipaddress + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a::ipaddress - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:58.197 UTC [1615079] ERROR:  ip address out of range
2023-07-22 04:01:58.197 UTC [1615079] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 04:01:59.439 UTC [1615085] ERROR:  invalid preceding or following size in window function
2023-07-22 04:01:59.439 UTC [1615085] DETAIL:  Offset value -33 is outside the range -32 to 4294967295
2023-07-22 04:01:59.439 UTC [1615085] STATEMENT:  select a4,
	       array_agg(a4) over (order by a4 range between -33 preceding and -33 following)
	  from ipaddrs
	 where a4 is not null;
2023-07-22 04:01:59.439 UTC [1615085] ERROR:  invalid preceding or following size in window function
2023-07-22 04:01:59.439 UTC [1615085] DETAIL:  Offset value -129 is outside the range -128 to 2^63-1
2023-07-22 04:01:59.439 UTC [1615085] STATEMENT:  select a6,
	       array_agg(a6) over (order by a6 range between -129 preceding and -129 following)
	  from ipaddrs
	 where a6 is not null;
2023-07-22 04:01:59.446 UTC [1615061] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:59.529 UTC [1615061] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.005 s, total=0.083 s; sync files=7, longest=0.003 s, average=0.001 s; distance=11245 kB, estimate=11245 kB
2023-07-22 04:01:59.663 UTC [1615100] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:01:59.663 UTC [1615100] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:01:59.685 UTC [1615100] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:01:59.685 UTC [1615100] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:01:59.685 UTC [1615100] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:01:59.685 UTC [1615100] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:01:59.696 UTC [1615100] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:01:59.696 UTC [1615100] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:01:59.696 UTC [1615100] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:01:59.696 UTC [1615100] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:02:31.500 UTC [1615061] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:02:31.591 UTC [1615061] LOG:  checkpoint complete: wrote 955 buffers (5.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.024 s, sync=0.022 s, total=0.091 s; sync files=255, longest=0.004 s, average=0.001 s; distance=142449 kB, estimate=142449 kB
2023-07-22 04:03:03.517 UTC [1615061] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:03.711 UTC [1615061] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.009 s, total=0.194 s; sync files=4, longest=0.008 s, average=0.003 s; distance=134790 kB, estimate=141683 kB
2023-07-22 04:03:03.751 UTC [1615060] LOG:  received fast shutdown request
2023-07-22 04:03:03.757 UTC [1615060] LOG:  aborting any active transactions
2023-07-22 04:03:03.758 UTC [1615060] LOG:  background worker "logical replication launcher" (PID 1615066) exited with exit code 1
2023-07-22 04:03:03.758 UTC [1615061] LOG:  shutting down
2023-07-22 04:03:03.763 UTC [1615061] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:03:03.791 UTC [1615061] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.034 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127515 kB
2023-07-22 04:03:03.839 UTC [1615060] LOG:  database system is shut down
2023-07-22 04:03:04.591 UTC [1615172] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:03:04.591 UTC [1615172] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:03:04.602 UTC [1615172] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:03:04.617 UTC [1615175] LOG:  database system was shut down at 2023-07-22 04:03:04 UTC
2023-07-22 04:03:04.630 UTC [1615172] LOG:  database system is ready to accept connections
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for ISBN number: "1234567890", should be X at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT '1234567890'::ISBN;
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for ISMN number: "M123456780", should be 5 at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT 'M123456780'::ISMN;
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for ISSN number: "12345670", should be 9 at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT '12345670'::ISSN;
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for ISBN number: "9780123456780", should be 6 at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT '9780123456780'::ISBN;
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for ISBN number: "9791234567890", should be 6 at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT '9791234567890'::ISBN13;
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for UPC number: "0123456789010", should be 2 at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT '0123456789010'::UPC;
2023-07-22 04:03:04.886 UTC [1615191] ERROR:  invalid check digit for EAN13 number: "1234567890120", should be 8 at character 8
2023-07-22 04:03:04.886 UTC [1615191] STATEMENT:  SELECT '1234567890120'::EAN13;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9790123456785'::ISBN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9771234567898'::ISBN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '0123456789012'::ISBN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9790123456785'::ISBN13;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9771234567898'::ISBN13;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '0123456789012'::ISBN13;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISBN to ISMN for number: "9780123456786" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9780123456786'::ISMN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISSN to ISMN for number: "9771234567898" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9771234567898'::ISMN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISBN to ISMN for number: "9791234567896" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9791234567896'::ISMN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast UPC to ISMN for number: "0123456789012" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '0123456789012'::ISMN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISBN to ISSN for number: "9780123456786" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9780123456786'::ISSN;
2023-07-22 04:03:04.887 UTC [1615191] ERROR:  cannot cast ISMN to ISSN for number: "9790123456785" at character 8
2023-07-22 04:03:04.887 UTC [1615191] STATEMENT:  SELECT '9790123456785'::ISSN;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast ISBN to ISSN for number: "9791234567896" at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT '9791234567896'::ISSN;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast UPC to ISSN for number: "0123456789012" at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT '0123456789012'::ISSN;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast ISBN to UPC for number: "9780123456786" at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT '9780123456786'::UPC;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast ISSN to UPC for number: "9771234567898" at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT '9771234567898'::UPC;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast ISMN to UPC for number: "9790123456785" at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT '9790123456785'::UPC;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast ISBN to UPC for number: "9791234567896" at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT '9791234567896'::UPC;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  invalid input syntax for EAN13 number: "postgresql..." at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT 'postgresql...'::EAN13;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  invalid input syntax for ISBN number: "postgresql..." at character 8
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT 'postgresql...'::ISBN;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast type bigint to ean13 at character 21
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT 9780123456786::EAN13;
2023-07-22 04:03:04.888 UTC [1615191] ERROR:  cannot cast type bigint to isbn at character 21
2023-07-22 04:03:04.888 UTC [1615191] STATEMENT:  SELECT 9780123456786::ISBN;
2023-07-22 04:03:04.919 UTC [1615173] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:04.963 UTC [1615173] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.010 s, total=0.044 s; sync files=7, longest=0.005 s, average=0.002 s; distance=5244 kB, estimate=5244 kB
2023-07-22 04:03:05.105 UTC [1615206] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:03:05.105 UTC [1615206] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:03:05.160 UTC [1615206] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:03:05.160 UTC [1615206] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:03:05.161 UTC [1615206] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:03:05.161 UTC [1615206] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:03:05.189 UTC [1615206] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:03:05.189 UTC [1615206] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:03:05.190 UTC [1615206] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:03:05.190 UTC [1615206] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:03:38.458 UTC [1615173] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:38.612 UTC [1615173] LOG:  checkpoint complete: wrote 959 buffers (5.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.033 s, sync=0.043 s, total=0.154 s; sync files=255, longest=0.020 s, average=0.001 s; distance=139284 kB, estimate=139284 kB
2023-07-22 04:04:10.846 UTC [1615173] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:10.932 UTC [1615173] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.006 s, total=0.087 s; sync files=4, longest=0.005 s, average=0.002 s; distance=134258 kB, estimate=138781 kB
2023-07-22 04:04:11.006 UTC [1615172] LOG:  received fast shutdown request
2023-07-22 04:04:11.014 UTC [1615172] LOG:  aborting any active transactions
2023-07-22 04:04:11.015 UTC [1615172] LOG:  background worker "logical replication launcher" (PID 1615178) exited with exit code 1
2023-07-22 04:04:11.015 UTC [1615173] LOG:  shutting down
2023-07-22 04:04:11.020 UTC [1615173] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:04:11.050 UTC [1615173] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.001 s, total=0.035 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=124903 kB
2023-07-22 04:04:11.091 UTC [1615172] LOG:  database system is shut down
2023-07-22 04:04:11.885 UTC [1615278] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:04:11.885 UTC [1615278] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:04:11.897 UTC [1615278] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:04:11.911 UTC [1615281] LOG:  database system was shut down at 2023-07-22 04:04:11 UTC
2023-07-22 04:04:11.923 UTC [1615278] LOG:  database system is ready to accept connections
2023-07-22 04:04:12.133 UTC [1615297] ERROR:  large object 43213 does not exist
2023-07-22 04:04:12.133 UTC [1615297] STATEMENT:  SELECT lo_get(43213);
2023-07-22 04:04:12.142 UTC [1615297] ERROR:  large object 43214 does not exist
2023-07-22 04:04:12.142 UTC [1615297] STATEMENT:  SELECT lo_get(43214);
2023-07-22 04:04:12.176 UTC [1615279] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:12.229 UTC [1615279] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.016 s, sync=0.012 s, total=0.054 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4030 kB, estimate=4030 kB
2023-07-22 04:04:12.342 UTC [1615312] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:04:12.342 UTC [1615312] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:04:12.390 UTC [1615312] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:04:12.390 UTC [1615312] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:04:12.390 UTC [1615312] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:04:12.390 UTC [1615312] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:04:12.423 UTC [1615312] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:04:12.423 UTC [1615312] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:04:12.424 UTC [1615312] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:04:12.424 UTC [1615312] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:04:45.375 UTC [1615279] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:45.512 UTC [1615279] LOG:  checkpoint complete: wrote 898 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.030 s, sync=0.039 s, total=0.138 s; sync files=255, longest=0.017 s, average=0.001 s; distance=137268 kB, estimate=137268 kB
2023-07-22 04:05:17.755 UTC [1615279] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:17.849 UTC [1615279] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.009 s, total=0.094 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133313 kB, estimate=136873 kB
2023-07-22 04:05:17.894 UTC [1615278] LOG:  received fast shutdown request
2023-07-22 04:05:17.899 UTC [1615278] LOG:  aborting any active transactions
2023-07-22 04:05:17.899 UTC [1615278] LOG:  background worker "logical replication launcher" (PID 1615284) exited with exit code 1
2023-07-22 04:05:17.899 UTC [1615279] LOG:  shutting down
2023-07-22 04:05:17.904 UTC [1615279] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:05:17.935 UTC [1615279] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.003 s, total=0.036 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123185 kB
2023-07-22 04:05:17.981 UTC [1615278] LOG:  database system is shut down
2023-07-22 04:05:18.782 UTC [1615387] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:05:18.782 UTC [1615387] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:05:18.792 UTC [1615387] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:05:18.802 UTC [1615390] LOG:  database system was shut down at 2023-07-22 04:05:18 UTC
2023-07-22 04:05:18.809 UTC [1615387] LOG:  database system is ready to accept connections
2023-07-22 04:05:19.029 UTC [1615416] ERROR:  function blah() does not exist at character 8
2023-07-22 04:05:19.029 UTC [1615416] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:05:19.029 UTC [1615416] STATEMENT:  SELECT blah();
2023-07-22 04:05:29.035 UTC [1615416] ERROR:  XXXXX
2023-07-22 04:05:29.035 UTC [1615416] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:05:29.035 UTC [1615416] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXX';
	END;
	$$;
2023-07-22 04:05:29.036 UTC [1615416] ERROR:  XXXXY
2023-07-22 04:05:29.036 UTC [1615416] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:05:29.036 UTC [1615416] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXY';
	END;
	$$;
2023-07-22 04:05:34.067 UTC [1615388] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:34.101 UTC [1615388] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.006 s, total=0.034 s; sync files=14, longest=0.003 s, average=0.001 s; distance=4020 kB, estimate=4020 kB
2023-07-22 04:05:34.170 UTC [1615431] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:05:34.170 UTC [1615431] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:05:34.200 UTC [1615431] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:05:34.200 UTC [1615431] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:05:34.200 UTC [1615431] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:05:34.200 UTC [1615431] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:05:34.216 UTC [1615431] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:05:34.216 UTC [1615431] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:05:34.217 UTC [1615431] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:05:34.217 UTC [1615431] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:06:05.938 UTC [1615388] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:06:06.055 UTC [1615388] LOG:  checkpoint complete: wrote 654 buffers (4.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.036 s, sync=0.038 s, total=0.117 s; sync files=255, longest=0.004 s, average=0.001 s; distance=140785 kB, estimate=140785 kB
2023-07-22 04:06:37.466 UTC [1615388] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:06:37.512 UTC [1615388] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.046 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138307 kB, estimate=140537 kB
2023-07-22 04:06:37.554 UTC [1615387] LOG:  received fast shutdown request
2023-07-22 04:06:37.557 UTC [1615387] LOG:  aborting any active transactions
2023-07-22 04:06:37.558 UTC [1615387] LOG:  background worker "logical replication launcher" (PID 1615394) exited with exit code 1
2023-07-22 04:06:37.558 UTC [1615388] LOG:  shutting down
2023-07-22 04:06:37.561 UTC [1615388] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:06:37.576 UTC [1615388] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126483 kB
2023-07-22 04:06:37.597 UTC [1615387] LOG:  database system is shut down
2023-07-22 04:06:38.337 UTC [1615504] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:06:38.337 UTC [1615504] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:06:38.343 UTC [1615504] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:06:38.354 UTC [1615507] LOG:  database system was shut down at 2023-07-22 04:06:38 UTC
2023-07-22 04:06:38.363 UTC [1615504] LOG:  database system is ready to accept connections
2023-07-22 04:06:38.578 UTC [1615523] LOG:  lsm3_build lsm3_index
2023-07-22 04:06:38.578 UTC [1615523] STATEMENT:  create index lsm3_index on t using lsm3(k);
2023-07-22 04:06:39.738 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:06:39.739 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:06:40.650 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 04:06:40.650 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:06:41.655 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:06:41.656 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:06:42.661 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 04:06:42.662 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:06:43.671 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 04:06:43.672 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:06:44.866 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 04:06:44.999 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 04:06:45.118 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top0 with size 250 blocks
2023-07-22 04:06:45.267 UTC [1615524] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 04:06:45.341 UTC [1615524] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 04:06:45.443 UTC [1615523] LOG:  lsm3_build lsm3_index
2023-07-22 04:06:45.443 UTC [1615523] STATEMENT:  truncate table t;
2023-07-22 04:06:46.443 UTC [1615524] ERROR:  deadlock detected
2023-07-22 04:06:46.443 UTC [1615524] DETAIL:  Process 1615524 waits for AccessShareLock on relation 17044 of database 16384; blocked by process 1615523.
	Process 1615523 waits for AccessExclusiveLock on relation 17049 of database 16384; blocked by process 1615524.
	Process 1615524: truncate
	Process 1615523: truncate table t;
2023-07-22 04:06:46.443 UTC [1615524] HINT:  See server log for query details.
2023-07-22 04:06:46.448 UTC [1615504] LOG:  background worker "lsm3-merger-17047" (PID 1615524) exited with exit code 1
2023-07-22 04:06:49.146 UTC [1615523] LOG:  lsm3_build lsm3_index
2023-07-22 04:06:49.146 UTC [1615523] STATEMENT:  reindex table t;
2023-07-22 04:06:50.766 UTC [1615523] LOG:  lsm3_build lsm_k_idx
2023-07-22 04:06:50.766 UTC [1615523] STATEMENT:  create index concurrently on lsm using lsm3(k);
2023-07-22 04:06:51.439 UTC [1615539] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:06:51.439 UTC [1615539] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:06:51.458 UTC [1615539] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:06:51.458 UTC [1615539] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:06:51.458 UTC [1615539] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:06:51.458 UTC [1615539] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:06:51.467 UTC [1615539] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:06:51.467 UTC [1615539] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:06:51.468 UTC [1615539] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:06:51.468 UTC [1615539] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:07:23.538 UTC [1615505] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:07:23.712 UTC [1615505] LOG:  checkpoint complete: wrote 1388 buffers (8.5%); 0 WAL file(s) added, 0 removed, 26 recycled; write=0.033 s, sync=0.040 s, total=0.175 s; sync files=508, longest=0.003 s, average=0.001 s; distance=424621 kB, estimate=424621 kB
2023-07-22 04:07:55.378 UTC [1615505] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:07:55.428 UTC [1615505] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.051 s; sync files=4, longest=0.003 s, average=0.002 s; distance=136659 kB, estimate=395825 kB
2023-07-22 04:07:55.497 UTC [1615504] LOG:  received fast shutdown request
2023-07-22 04:07:55.500 UTC [1615504] LOG:  aborting any active transactions
2023-07-22 04:07:55.501 UTC [1615504] LOG:  background worker "logical replication launcher" (PID 1615510) exited with exit code 1
2023-07-22 04:07:55.501 UTC [1615505] LOG:  shutting down
2023-07-22 04:07:55.504 UTC [1615505] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:07:55.523 UTC [1615505] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.022 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=356243 kB
2023-07-22 04:07:55.542 UTC [1615504] LOG:  database system is shut down
2023-07-22 04:07:56.301 UTC [1615612] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:07:56.301 UTC [1615612] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:07:56.307 UTC [1615612] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:07:56.316 UTC [1615615] LOG:  database system was shut down at 2023-07-22 04:07:56 UTC
2023-07-22 04:07:56.325 UTC [1615612] LOG:  database system is ready to accept connections
2023-07-22 04:07:56.509 UTC [1615631] ERROR:  ltree syntax error at character 1 at character 8
2023-07-22 04:07:56.509 UTC [1615631] STATEMENT:  SELECT '.2.3'::ltree;
2023-07-22 04:07:56.509 UTC [1615631] ERROR:  ltree syntax error at character 3 at character 8
2023-07-22 04:07:56.509 UTC [1615631] STATEMENT:  SELECT '1..3'::ltree;
2023-07-22 04:07:56.509 UTC [1615631] ERROR:  ltree syntax error at character 8
2023-07-22 04:07:56.509 UTC [1615631] DETAIL:  Unexpected end of input.
2023-07-22 04:07:56.509 UTC [1615631] STATEMENT:  SELECT '1.2.'::ltree;
2023-07-22 04:07:56.509 UTC [1615631] ERROR:  label string is too long
2023-07-22 04:07:56.509 UTC [1615631] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 04:07:56.509 UTC [1615631] STATEMENT:  SELECT repeat('x', 256)::ltree;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '.2.3'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '1..3'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 8
2023-07-22 04:07:56.513 UTC [1615631] DETAIL:  Unexpected end of input.
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '1.2.'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '@.2.3'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '1.@.3'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 5 at character 8
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '1.2.@'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 2 at character 8
2023-07-22 04:07:56.513 UTC [1615631] DETAIL:  Empty labels are not allowed.
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '!.2.3'::lquery;
2023-07-22 04:07:56.513 UTC [1615631] ERROR:  lquery syntax error at character 4 at character 8
2023-07-22 04:07:56.513 UTC [1615631] DETAIL:  Empty labels are not allowed.
2023-07-22 04:07:56.513 UTC [1615631] STATEMENT:  SELECT '1.!.3'::lquery;
2023-07-22 04:07:56.514 UTC [1615631] ERROR:  lquery syntax error at character 6 at character 8
2023-07-22 04:07:56.514 UTC [1615631] DETAIL:  Empty labels are not allowed.
2023-07-22 04:07:56.514 UTC [1615631] STATEMENT:  SELECT '1.2.!'::lquery;
2023-07-22 04:07:56.514 UTC [1615631] ERROR:  lquery syntax error at character 7 at character 8
2023-07-22 04:07:56.514 UTC [1615631] STATEMENT:  SELECT '1.2.3|@.4'::lquery;
2023-07-22 04:07:56.514 UTC [1615631] ERROR:  label string is too long
2023-07-22 04:07:56.514 UTC [1615631] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 04:07:56.514 UTC [1615631] STATEMENT:  SELECT (repeat('x', 256) || '*@@*')::lquery;
2023-07-22 04:07:56.514 UTC [1615631] ERROR:  label string is too long
2023-07-22 04:07:56.514 UTC [1615631] DETAIL:  Label length is 256, must be at most 255, at character 258.
2023-07-22 04:07:56.514 UTC [1615631] STATEMENT:  SELECT ('!' || repeat('x', 256))::lquery;
2023-07-22 04:07:56.521 UTC [1615631] ERROR:  number of ltree labels (65536) exceeds the maximum allowed (65535)
2023-07-22 04:07:56.521 UTC [1615631] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65535))::ltree);
2023-07-22 04:07:56.524 UTC [1615631] ERROR:  number of ltree levels (65536) exceeds the maximum allowed (65535)
2023-07-22 04:07:56.524 UTC [1615631] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65534))::ltree || '1');
2023-07-22 04:07:56.532 UTC [1615631] ERROR:  number of lquery items (65536) exceeds the maximum allowed (65535)
2023-07-22 04:07:56.532 UTC [1615631] STATEMENT:  SELECT ('1' || repeat('.1', 65535))::lquery IS NULL;
2023-07-22 04:07:56.532 UTC [1615631] ERROR:  lquery syntax error at character 8
2023-07-22 04:07:56.532 UTC [1615631] DETAIL:  Low limit (65536) exceeds the maximum allowed (65535), at character 3.
2023-07-22 04:07:56.532 UTC [1615631] STATEMENT:  SELECT '*{65536}'::lquery;
2023-07-22 04:07:56.532 UTC [1615631] ERROR:  lquery syntax error at character 8
2023-07-22 04:07:56.532 UTC [1615631] DETAIL:  High limit (65536) exceeds the maximum allowed (65535), at character 4.
2023-07-22 04:07:56.532 UTC [1615631] STATEMENT:  SELECT '*{,65536}'::lquery;
2023-07-22 04:07:56.532 UTC [1615631] ERROR:  lquery syntax error at character 8
2023-07-22 04:07:56.532 UTC [1615631] DETAIL:  Low limit (4) is greater than high limit (3), at character 5.
2023-07-22 04:07:56.532 UTC [1615631] STATEMENT:  SELECT '*{4,3}'::lquery;
2023-07-22 04:07:56.575 UTC [1615631] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:07:56.575 UTC [1615631] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:07:56.575 UTC [1615631] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=0));
2023-07-22 04:07:56.575 UTC [1615631] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:07:56.575 UTC [1615631] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:07:56.575 UTC [1615631] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2025));
2023-07-22 04:07:56.576 UTC [1615631] ERROR:  value 2028 out of bounds for option "siglen"
2023-07-22 04:07:56.576 UTC [1615631] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 04:07:56.576 UTC [1615631] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2028));
2023-07-22 04:07:56.576 UTC [1615631] ERROR:  siglen value must be a multiple of 4
2023-07-22 04:07:56.576 UTC [1615631] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2019));
2023-07-22 04:07:56.610 UTC [1615631] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:07:56.610 UTC [1615631] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:07:56.610 UTC [1615631] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=0));
2023-07-22 04:07:56.610 UTC [1615631] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:07:56.610 UTC [1615631] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:07:56.610 UTC [1615631] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=2025));
2023-07-22 04:07:56.761 UTC [1615613] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:07:56.835 UTC [1615613] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.005 s, total=0.074 s; sync files=7, longest=0.003 s, average=0.001 s; distance=8831 kB, estimate=8831 kB
2023-07-22 04:07:56.907 UTC [1615646] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:07:56.907 UTC [1615646] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:07:56.934 UTC [1615646] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:07:56.934 UTC [1615646] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:07:56.934 UTC [1615646] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:07:56.934 UTC [1615646] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:07:56.951 UTC [1615646] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:07:56.951 UTC [1615646] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:07:56.952 UTC [1615646] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:07:56.952 UTC [1615646] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:08:28.898 UTC [1615613] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:08:28.992 UTC [1615613] LOG:  checkpoint complete: wrote 919 buffers (5.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.031 s, sync=0.021 s, total=0.094 s; sync files=255, longest=0.003 s, average=0.001 s; distance=140909 kB, estimate=140909 kB
2023-07-22 04:09:00.724 UTC [1615613] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:09:00.773 UTC [1615613] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.050 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136688 kB, estimate=140487 kB
2023-07-22 04:09:00.814 UTC [1615612] LOG:  received fast shutdown request
2023-07-22 04:09:00.817 UTC [1615612] LOG:  aborting any active transactions
2023-07-22 04:09:00.819 UTC [1615612] LOG:  background worker "logical replication launcher" (PID 1615618) exited with exit code 1
2023-07-22 04:09:00.820 UTC [1615613] LOG:  shutting down
2023-07-22 04:09:00.823 UTC [1615613] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:09:00.840 UTC [1615613] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126438 kB
2023-07-22 04:09:00.884 UTC [1615612] LOG:  database system is shut down
2023-07-22 04:09:01.512 UTC [1615718] FATAL:  could not access file "oid2name": No such file or directory
2023-07-22 04:09:01.512 UTC [1615718] LOG:  database system is shut down
2023-07-22 04:09:02.242 UTC [1615751] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:09:02.242 UTC [1615751] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:09:02.248 UTC [1615751] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:09:02.259 UTC [1615754] LOG:  database system was shut down at 2023-07-22 04:09:02 UTC
2023-07-22 04:09:02.268 UTC [1615751] LOG:  database system is ready to accept connections
2023-07-22 04:09:02.420 UTC [1615770] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:09:02.420 UTC [1615770] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:09:02.440 UTC [1615770] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:09:02.440 UTC [1615770] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:09:02.440 UTC [1615770] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:09:02.440 UTC [1615770] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:09:02.454 UTC [1615770] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:09:02.454 UTC [1615770] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:09:02.455 UTC [1615770] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:09:02.455 UTC [1615770] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:09:34.189 UTC [1615752] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:09:34.375 UTC [1615752] LOG:  checkpoint complete: wrote 715 buffers (4.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.041 s, sync=0.105 s, total=0.186 s; sync files=256, longest=0.010 s, average=0.001 s; distance=140739 kB, estimate=140739 kB
2023-07-22 04:10:05.789 UTC [1615752] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:10:05.844 UTC [1615752] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.004 s, total=0.056 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136311 kB, estimate=140296 kB
2023-07-22 04:10:05.885 UTC [1615751] LOG:  received fast shutdown request
2023-07-22 04:10:05.889 UTC [1615751] LOG:  aborting any active transactions
2023-07-22 04:10:05.889 UTC [1615751] LOG:  background worker "logical replication launcher" (PID 1615757) exited with exit code 1
2023-07-22 04:10:05.890 UTC [1615752] LOG:  shutting down
2023-07-22 04:10:05.892 UTC [1615752] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:10:05.912 UTC [1615752] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.005 s, total=0.023 s; sync files=1, longest=0.005 s, average=0.005 s; distance=0 kB, estimate=126267 kB
2023-07-22 04:10:05.933 UTC [1615751] LOG:  database system is shut down
2023-07-22 04:10:06.651 UTC [1615843] FATAL:  could not access file "oracle_fdw": No such file or directory
2023-07-22 04:10:06.652 UTC [1615843] LOG:  database system is shut down
2023-07-22 04:10:07.374 UTC [1615876] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:10:07.374 UTC [1615876] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:10:07.380 UTC [1615876] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:10:07.391 UTC [1615879] LOG:  database system was shut down at 2023-07-22 04:10:07 UTC
2023-07-22 04:10:07.396 UTC [1615876] LOG:  database system is ready to accept connections
2023-07-22 04:10:11.814 UTC [1615901] ERROR:  insufficient privilege
2023-07-22 04:10:11.814 UTC [1615901] DETAIL:  Insufficient privilege to access pipe
2023-07-22 04:10:11.814 UTC [1615901] CONTEXT:  SQL statement "SELECT dbms_pipe.receive_message(pipename,2)"
	PL/pgSQL function receivefrom(text) line 6 at PERFORM
2023-07-22 04:10:11.814 UTC [1615901] STATEMENT:  SELECT receiveFrom('private_pipe_2');
2023-07-22 04:10:31.100 UTC [1615919] ERROR:  too few parameters specified for template string
2023-07-22 04:10:31.100 UTC [1615919] STATEMENT:  select plvsubst.string('My name is %s.', '');
2023-07-22 04:10:31.134 UTC [1615919] ERROR:  string is not qualified SQL name
2023-07-22 04:10:31.134 UTC [1615919] STATEMENT:  select dbms_assert.qualified_sql_name('aaa.bbb.cc%c."aaaa""aaa"');
2023-07-22 04:10:31.134 UTC [1615919] ERROR:  invalid schema name
2023-07-22 04:10:31.134 UTC [1615919] STATEMENT:  select dbms_assert.schema_name('jabadabado');
2023-07-22 04:10:31.134 UTC [1615919] ERROR:  string is not simple SQL name
2023-07-22 04:10:31.134 UTC [1615919] STATEMENT:  select dbms_assert.simple_sql_name('ajajaj -- ajaj');
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  invalid object name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.object_name('dbms_assert.fooo');
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  string is not qualified SQL name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  string is not qualified SQL name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  invalid schema name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  invalid schema name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  string is not simple SQL name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 04:10:31.135 UTC [1615919] ERROR:  string is not simple SQL name
2023-07-22 04:10:31.135 UTC [1615919] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  invalid object name
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  invalid object name
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  plunit.assert_true exception
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_true(NULL);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  plunit.assert_true exception
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_true(1 = 2);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  one is not two
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_true(1 = 2, 'one is not two');
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  plunit.assert_false exception
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_false(1 = 1);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  trap is open
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_false(1 = 1, 'trap is open');
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  plunit.assert_false exception
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_false(NULL);
2023-07-22 04:10:31.136 UTC [1615919] ERROR:  plunit.assert_null exception
2023-07-22 04:10:31.136 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_null).
2023-07-22 04:10:31.136 UTC [1615919] STATEMENT:  select plunit.assert_null(current_date);
2023-07-22 04:10:31.137 UTC [1615919] ERROR:  plunit.assert_not_null exception
2023-07-22 04:10:31.137 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_not_null).
2023-07-22 04:10:31.137 UTC [1615919] STATEMENT:  select plunit.assert_not_null(NULL::date);
2023-07-22 04:10:31.137 UTC [1615919] ERROR:  diff dates
2023-07-22 04:10:31.137 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 04:10:31.137 UTC [1615919] STATEMENT:  select plunit.assert_equals(current_date, current_date + 1, 'diff dates');
2023-07-22 04:10:31.137 UTC [1615919] ERROR:  attention some diff
2023-07-22 04:10:31.137 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 04:10:31.137 UTC [1615919] STATEMENT:  select plunit.assert_equals(10.2, 10.3, 0.01, 'attention some diff');
2023-07-22 04:10:31.137 UTC [1615919] ERROR:  plunit.assert_fail exception
2023-07-22 04:10:31.137 UTC [1615919] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 04:10:31.137 UTC [1615919] STATEMENT:  select plunit.fail();
2023-07-22 04:10:31.138 UTC [1615919] ERROR:  custom exception
2023-07-22 04:10:31.138 UTC [1615919] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 04:10:31.138 UTC [1615919] STATEMENT:  select plunit.fail('custom exception');
2023-07-22 04:10:31.170 UTC [1615919] ERROR:  an argument is NULL
2023-07-22 04:10:31.170 UTC [1615919] STATEMENT:  select dbms_random.string(null, 42);
2023-07-22 04:10:31.170 UTC [1615919] ERROR:  pipe name is NULL
2023-07-22 04:10:31.170 UTC [1615919] DETAIL:  Pipename may not be NULL.
2023-07-22 04:10:31.170 UTC [1615919] STATEMENT:  select dbms_pipe.create_pipe(null);
2023-07-22 04:10:31.170 UTC [1615919] ERROR:  plunit.assert_not_equal exception
2023-07-22 04:10:31.170 UTC [1615919] DETAIL:  Plunit.assertation fails (assert_not_equals).
2023-07-22 04:10:31.170 UTC [1615919] STATEMENT:  select plunit.assert_not_equals(1,2,3);
2023-07-22 04:10:31.176 UTC [1615919] WARNING:  Field "a" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 04:10:31.177 UTC [1615919] WARNING:  Field "c" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \db99');
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \db99\0061');
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \+00db99\+000061');
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode escape value
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \+2FFFFF');
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \udb99\u0061');
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode surrogate pair
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \U0000db99\U00000061');
2023-07-22 04:10:31.185 UTC [1615919] ERROR:  invalid Unicode escape value
2023-07-22 04:10:31.185 UTC [1615919] STATEMENT:  SELECT oracle.unistr('wrong: \U002FFFFF');
2023-07-22 04:10:31.205 UTC [1615923] ERROR:  could not determine polymorphic type because input has type unknown
2023-07-22 04:10:31.205 UTC [1615923] STATEMENT:  select oracle.decode('2012-01-01', '2012-01-01', 23, '2012-01-02', 24);
2023-07-22 04:10:31.211 UTC [1615927] ERROR:  function dbms_output_test() does not exist
2023-07-22 04:10:31.211 UTC [1615927] STATEMENT:  DROP FUNCTION dbms_output_test();
2023-07-22 04:10:31.211 UTC [1615927] ERROR:  table "dbms_output_test" does not exist
2023-07-22 04:10:31.211 UTC [1615927] STATEMENT:  DROP TABLE dbms_output_test;
2023-07-22 04:10:33.574 UTC [1615935] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:10:33.574 UTC [1615935] DETAIL:  you cannot access locality
2023-07-22 04:10:33.574 UTC [1615935] HINT:  locality is not found in utl_file_dir table
2023-07-22 04:10:33.574 UTC [1615935] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'sample.txt','r');
2023-07-22 04:10:33.576 UTC [1615935] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:10:33.576 UTC [1615935] DETAIL:  No such file or directory
2023-07-22 04:10:33.576 UTC [1615935] STATEMENT:  SELECT utl_file.fopen('test_tmp_dir','file.txt.','w');
2023-07-22 04:10:33.581 UTC [1615935] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 04:10:33.581 UTC [1615935] DETAIL:  No such file or directory
2023-07-22 04:10:33.581 UTC [1615935] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'non_existent_file.txt','r');
2023-07-22 04:10:33.584 UTC [1615935] ERROR:  permission denied for table utl_file_dir
2023-07-22 04:10:33.584 UTC [1615935] STATEMENT:  INSERT INTO utl_file.utl_file_dir(dir) VALUES('test_tmp_dir');
2023-07-22 04:10:33.644 UTC [1615939] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 04:10:33.644 UTC [1615939] STATEMENT:  CREATE TABLE foo (a VARCHAR2(0));
2023-07-22 04:10:33.645 UTC [1615939] ERROR:  invalid type modifier at character 21
2023-07-22 04:10:33.645 UTC [1615939] STATEMENT:  CREATE TABLE foo (a VARCHAR2(10, 1));
2023-07-22 04:10:33.672 UTC [1615939] ERROR:  input value length is 6; too long for type varchar2(5)
2023-07-22 04:10:33.672 UTC [1615939] STATEMENT:  INSERT INTO foo VALUES ('abcdef');
2023-07-22 04:10:33.673 UTC [1615939] ERROR:  input value length is 7; too long for type varchar2(5)
2023-07-22 04:10:33.673 UTC [1615939] STATEMENT:  INSERT INTO foo VALUES ('abcde  ');
2023-07-22 04:10:33.707 UTC [1615943] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 04:10:33.707 UTC [1615943] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(0));
2023-07-22 04:10:33.708 UTC [1615943] ERROR:  invalid type modifier at character 21
2023-07-22 04:10:33.708 UTC [1615943] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(10, 1));
2023-07-22 04:10:33.734 UTC [1615943] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 04:10:33.734 UTC [1615943] STATEMENT:  INSERT INTO bar VALUES ('abcdef');
2023-07-22 04:10:33.734 UTC [1615943] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 04:10:33.734 UTC [1615943] STATEMENT:  INSERT INTO bar VALUES ('abcde  ');
2023-07-22 04:10:33.974 UTC [1615952] ERROR:  failed to set the requested LC_COLLATE value [invalid]
2023-07-22 04:10:33.974 UTC [1615952] CONTEXT:  SQL function "nlssort" statement 1
2023-07-22 04:10:33.974 UTC [1615952] STATEMENT:  SELECT * FROM test_sort ORDER BY NLSSORT(name);
2023-07-22 04:10:33.994 UTC [1615960] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:10:33.994 UTC [1615960] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 04:10:33.994 UTC [1615960] STATEMENT:  SELECT REGEXP_COUNT('foo' || chr(10) || 'bar' || chr(10) || 'bequq' || chr(10) || 'baz', '^bar', 0, 'm');
2023-07-22 04:10:33.997 UTC [1615960] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:10:33.997 UTC [1615960] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 04:10:33.997 UTC [1615960] STATEMENT:  SELECT REGEXP_COUNT('ORANGE' || chr(10) || 'GREEN', '^..([aeiou])\1', -1, 'i');
2023-07-22 04:10:34.004 UTC [1615960] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:10:34.004 UTC [1615960] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', -1, 3, 1, 'i', 4);
2023-07-22 04:10:34.004 UTC [1615960] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 04:10:34.004 UTC [1615960] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, -3, 1, 'i', 4);
2023-07-22 04:10:34.004 UTC [1615960] ERROR:  argument 'return_opt' must be 0 or 1
2023-07-22 04:10:34.004 UTC [1615960] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, -1, 'i', 4);
2023-07-22 04:10:34.004 UTC [1615960] ERROR:  argument 'group' must be a positive number
2023-07-22 04:10:34.004 UTC [1615960] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, 1, 'i', -4);
2023-07-22 04:10:34.009 UTC [1615960] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:10:34.009 UTC [1615960] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 15 at RAISE
2023-07-22 04:10:34.009 UTC [1615960] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', -1, 1, 'i', 0);
2023-07-22 04:10:34.009 UTC [1615960] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 04:10:34.009 UTC [1615960] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 18 at RAISE
2023-07-22 04:10:34.009 UTC [1615960] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, -1, 'i', 0);
2023-07-22 04:10:34.009 UTC [1615960] ERROR:  argument 'group' must be a positive number
2023-07-22 04:10:34.009 UTC [1615960] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 21 at RAISE
2023-07-22 04:10:34.009 UTC [1615960] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, 1, 'i', -1);
2023-07-22 04:10:34.011 UTC [1615960] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 04:10:34.011 UTC [1615960] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', -1, 0, 'i');
2023-07-22 04:10:34.011 UTC [1615960] ERROR:  argument 'occurrence' must be a positive number
2023-07-22 04:10:34.011 UTC [1615960] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, -1, 'i');
2023-07-22 04:10:34.011 UTC [1615960] ERROR:  modifier 'g' is not supported by this function
2023-07-22 04:10:34.011 UTC [1615960] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, 1, 'g');
2023-07-22 04:10:34.275 UTC [1615979] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:10:34.275 UTC [1615979] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:10:34.294 UTC [1615979] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:10:34.294 UTC [1615979] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:10:34.295 UTC [1615979] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:10:34.295 UTC [1615979] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:10:34.308 UTC [1615979] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:10:34.308 UTC [1615979] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:10:34.308 UTC [1615979] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:10:34.308 UTC [1615979] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:11:05.983 UTC [1615877] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:06.111 UTC [1615877] LOG:  checkpoint complete: wrote 1458 buffers (8.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.030 s, sync=0.055 s, total=0.128 s; sync files=793, longest=0.004 s, average=0.001 s; distance=153319 kB, estimate=153319 kB
2023-07-22 04:11:37.478 UTC [1615877] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:37.540 UTC [1615877] LOG:  checkpoint complete: wrote 232 buffers (1.4%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.007 s, total=0.062 s; sync files=35, longest=0.003 s, average=0.001 s; distance=139183 kB, estimate=151906 kB
2023-07-22 04:11:37.590 UTC [1615876] LOG:  received fast shutdown request
2023-07-22 04:11:37.593 UTC [1615876] LOG:  aborting any active transactions
2023-07-22 04:11:37.593 UTC [1615876] LOG:  background worker "logical replication launcher" (PID 1615882) exited with exit code 1
2023-07-22 04:11:37.594 UTC [1615877] LOG:  shutting down
2023-07-22 04:11:37.597 UTC [1615877] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:11:37.615 UTC [1615877] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=136715 kB
2023-07-22 04:11:37.652 UTC [1615876] LOG:  database system is shut down
2023-07-22 04:11:38.348 UTC [1616055] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:11:38.348 UTC [1616055] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:11:38.354 UTC [1616055] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:11:38.364 UTC [1616058] LOG:  database system was shut down at 2023-07-22 04:11:38 UTC
2023-07-22 04:11:38.373 UTC [1616055] LOG:  database system is ready to accept connections
2023-07-22 04:11:38.537 UTC [1616074] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 04:11:38.537 UTC [1616074] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', 1)) AS main_1;
2023-07-22 04:11:38.537 UTC [1616074] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 04:11:38.537 UTC [1616074] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'vm', 1)) AS vm_1;
2023-07-22 04:11:38.537 UTC [1616074] ERROR:  invalid block number
2023-07-22 04:11:38.537 UTC [1616074] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', -1));
2023-07-22 04:11:38.537 UTC [1616074] ERROR:  relation "xxx" does not exist
2023-07-22 04:11:38.537 UTC [1616074] STATEMENT:  SELECT octet_length(get_raw_page('xxx', 'main', 0));
2023-07-22 04:11:38.538 UTC [1616074] ERROR:  invalid fork name
2023-07-22 04:11:38.538 UTC [1616074] HINT:  Valid fork names are "main", "fsm", "vm", and "init".
2023-07-22 04:11:38.538 UTC [1616074] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'xxx', 0));
2023-07-22 04:11:38.538 UTC [1616074] ERROR:  invalid block number
2023-07-22 04:11:38.538 UTC [1616074] STATEMENT:  SELECT page_checksum(get_raw_page('test1', 0), -1);
2023-07-22 04:11:38.544 UTC [1616074] ERROR:  cannot get raw page from relation "test_partitioned"
2023-07-22 04:11:38.544 UTC [1616074] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:11:38.544 UTC [1616074] STATEMENT:  select get_raw_page('test_partitioned', 0);
2023-07-22 04:11:38.544 UTC [1616074] ERROR:  cannot get raw page from relation "test_partitioned_index"
2023-07-22 04:11:38.544 UTC [1616074] DETAIL:  This operation is not supported for partitioned indexes.
2023-07-22 04:11:38.544 UTC [1616074] STATEMENT:  select get_raw_page('test_partitioned_index', 0);
2023-07-22 04:11:38.550 UTC [1616074] ERROR:  block number 0 is out of range for relation "test_part1"
2023-07-22 04:11:38.550 UTC [1616074] STATEMENT:  select get_raw_page('test_part1', 0);
2023-07-22 04:11:38.561 UTC [1616074] ERROR:  invalid page size
2023-07-22 04:11:38.561 UTC [1616074] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.561 UTC [1616074] STATEMENT:  SELECT fsm_page_contents('aaa'::bytea);
2023-07-22 04:11:38.562 UTC [1616074] ERROR:  invalid page size
2023-07-22 04:11:38.562 UTC [1616074] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.562 UTC [1616074] STATEMENT:  SELECT page_checksum('bbb'::bytea, 0);
2023-07-22 04:11:38.562 UTC [1616074] ERROR:  invalid page size
2023-07-22 04:11:38.562 UTC [1616074] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.562 UTC [1616074] STATEMENT:  SELECT page_header('ccc'::bytea);
2023-07-22 04:11:38.605 UTC [1616078] ERROR:  invalid block number
2023-07-22 04:11:38.605 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', -1);
2023-07-22 04:11:38.606 UTC [1616078] ERROR:  block 0 is a meta page
2023-07-22 04:11:38.606 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 0);
2023-07-22 04:11:38.607 UTC [1616078] ERROR:  block number out of range
2023-07-22 04:11:38.607 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 2);
2023-07-22 04:11:38.608 UTC [1616078] ERROR:  invalid block number
2023-07-22 04:11:38.608 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', -1);
2023-07-22 04:11:38.609 UTC [1616078] ERROR:  block 0 is a meta page
2023-07-22 04:11:38.609 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 0);
2023-07-22 04:11:38.610 UTC [1616078] ERROR:  block number out of range
2023-07-22 04:11:38.610 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 2);
2023-07-22 04:11:38.611 UTC [1616078] ERROR:  invalid block number
2023-07-22 04:11:38.611 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', -1));
2023-07-22 04:11:38.612 UTC [1616078] ERROR:  block is a meta page
2023-07-22 04:11:38.612 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 0));
2023-07-22 04:11:38.613 UTC [1616078] ERROR:  block number 2 is out of range for relation "test1_a_idx"
2023-07-22 04:11:38.613 UTC [1616078] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 2));
2023-07-22 04:11:38.616 UTC [1616078] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:11:38.616 UTC [1616078] STATEMENT:  SELECT bt_metap('test1_a_hash');
2023-07-22 04:11:38.617 UTC [1616078] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:11:38.617 UTC [1616078] STATEMENT:  SELECT bt_page_stats('test1_a_hash', 0);
2023-07-22 04:11:38.617 UTC [1616078] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 04:11:38.617 UTC [1616078] STATEMENT:  SELECT bt_page_items('test1_a_hash', 0);
2023-07-22 04:11:38.618 UTC [1616078] ERROR:  block is a meta page
2023-07-22 04:11:38.618 UTC [1616078] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_hash', 0));
2023-07-22 04:11:38.622 UTC [1616078] ERROR:  block is not a valid btree leaf page
2023-07-22 04:11:38.622 UTC [1616078] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_b_gist', 0));
2023-07-22 04:11:38.622 UTC [1616078] ERROR:  invalid page size
2023-07-22 04:11:38.622 UTC [1616078] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.622 UTC [1616078] STATEMENT:  SELECT bt_page_items('aaa'::bytea);
2023-07-22 04:11:38.626 UTC [1616078] ERROR:  input page is not a valid btree page
2023-07-22 04:11:38.626 UTC [1616078] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:38.626 UTC [1616078] STATEMENT:  SELECT bt_page_items(get_raw_page('test1', 0));
2023-07-22 04:11:38.627 UTC [1616078] ERROR:  input page is not a valid btree page
2023-07-22 04:11:38.627 UTC [1616078] DETAIL:  Expected special size 16, got 8.
2023-07-22 04:11:38.627 UTC [1616078] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_brin', 0));
2023-07-22 04:11:38.675 UTC [1616082] ERROR:  page is not a BRIN page of type "metapage"
2023-07-22 04:11:38.675 UTC [1616082] DETAIL:  Expected special type 0000f091, got 0000f092.
2023-07-22 04:11:38.675 UTC [1616082] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1_a_idx', 1));
2023-07-22 04:11:38.676 UTC [1616082] ERROR:  page is not a BRIN page of type "revmap"
2023-07-22 04:11:38.676 UTC [1616082] DETAIL:  Expected special type 0000f092, got 0000f091.
2023-07-22 04:11:38.676 UTC [1616082] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1_a_idx', 0)) LIMIT 5;
2023-07-22 04:11:38.686 UTC [1616082] ERROR:  "test1_a_btree" is not a BRIN index
2023-07-22 04:11:38.686 UTC [1616082] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_btree');
2023-07-22 04:11:38.686 UTC [1616082] ERROR:  input page is not a valid BRIN page
2023-07-22 04:11:38.686 UTC [1616082] DETAIL:  Expected special size 8, got 16.
2023-07-22 04:11:38.686 UTC [1616082] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_idx');
2023-07-22 04:11:38.687 UTC [1616082] ERROR:  input page is not a valid BRIN page
2023-07-22 04:11:38.687 UTC [1616082] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:11:38.687 UTC [1616082] STATEMENT:  SELECT brin_page_type(get_raw_page('test1', 0));
2023-07-22 04:11:38.687 UTC [1616082] ERROR:  input page is not a valid BRIN page
2023-07-22 04:11:38.687 UTC [1616082] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:11:38.687 UTC [1616082] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1', 0));
2023-07-22 04:11:38.688 UTC [1616082] ERROR:  input page is not a valid BRIN page
2023-07-22 04:11:38.688 UTC [1616082] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:11:38.688 UTC [1616082] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1', 0));
2023-07-22 04:11:38.726 UTC [1616086] ERROR:  input page is not a GIN metapage
2023-07-22 04:11:38.726 UTC [1616086] DETAIL:  Flags 0002, expected 0008
2023-07-22 04:11:38.726 UTC [1616086] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1_y_idx', 1));
2023-07-22 04:11:38.727 UTC [1616086] ERROR:  input page is not a compressed GIN data leaf page
2023-07-22 04:11:38.727 UTC [1616086] DETAIL:  Flags 0002, expected 0083
2023-07-22 04:11:38.727 UTC [1616086] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1_y_idx', 1));
2023-07-22 04:11:38.881 UTC [1616086] ERROR:  invalid page size
2023-07-22 04:11:38.881 UTC [1616086] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.881 UTC [1616086] STATEMENT:  SELECT gin_leafpage_items('aaa'::bytea);
2023-07-22 04:11:38.881 UTC [1616086] ERROR:  invalid page size
2023-07-22 04:11:38.881 UTC [1616086] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.881 UTC [1616086] STATEMENT:  SELECT gin_metapage_info('bbb'::bytea);
2023-07-22 04:11:38.882 UTC [1616086] ERROR:  invalid page size
2023-07-22 04:11:38.882 UTC [1616086] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.882 UTC [1616086] STATEMENT:  SELECT gin_page_opaque_info('ccc'::bytea);
2023-07-22 04:11:38.882 UTC [1616086] ERROR:  input page is not a valid GIN metapage
2023-07-22 04:11:38.882 UTC [1616086] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:11:38.882 UTC [1616086] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1', 0));
2023-07-22 04:11:38.883 UTC [1616086] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 04:11:38.883 UTC [1616086] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:11:38.883 UTC [1616086] STATEMENT:  SELECT * FROM gin_page_opaque_info(get_raw_page('test1', 0));
2023-07-22 04:11:38.884 UTC [1616086] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 04:11:38.884 UTC [1616086] DETAIL:  Expected special size 8, got 0.
2023-07-22 04:11:38.884 UTC [1616086] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1', 0));
2023-07-22 04:11:38.954 UTC [1616090] ERROR:  "test_gist_btree" is not a GiST index
2023-07-22 04:11:38.954 UTC [1616090] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_btree');
2023-07-22 04:11:38.955 UTC [1616090] ERROR:  input page is not a valid GiST page
2023-07-22 04:11:38.955 UTC [1616090] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 04:11:38.955 UTC [1616090] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_idx');
2023-07-22 04:11:38.955 UTC [1616090] ERROR:  invalid page size
2023-07-22 04:11:38.955 UTC [1616090] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.955 UTC [1616090] STATEMENT:  SELECT gist_page_items_bytea('aaa'::bytea);
2023-07-22 04:11:38.956 UTC [1616090] ERROR:  invalid page size
2023-07-22 04:11:38.956 UTC [1616090] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.956 UTC [1616090] STATEMENT:  SELECT gist_page_items('aaa'::bytea, 'test_gist_idx'::regclass);
2023-07-22 04:11:38.956 UTC [1616090] ERROR:  invalid page size
2023-07-22 04:11:38.956 UTC [1616090] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:38.956 UTC [1616090] STATEMENT:  SELECT gist_page_opaque_info('aaa'::bytea);
2023-07-22 04:11:38.957 UTC [1616090] ERROR:  input page is not a valid GiST page
2023-07-22 04:11:38.957 UTC [1616090] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:38.957 UTC [1616090] STATEMENT:  SELECT * FROM gist_page_opaque_info(get_raw_page('test_gist', 0));
2023-07-22 04:11:38.958 UTC [1616090] ERROR:  input page is not a valid GiST page
2023-07-22 04:11:38.958 UTC [1616090] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:38.958 UTC [1616090] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist', 0));
2023-07-22 04:11:38.958 UTC [1616090] ERROR:  input page is not a valid GiST page
2023-07-22 04:11:38.958 UTC [1616090] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 04:11:38.958 UTC [1616090] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist_btree', 0));
2023-07-22 04:11:39.005 UTC [1616094] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 04:11:39.005 UTC [1616094] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash_a_idx', 6));
2023-07-22 04:11:39.006 UTC [1616094] ERROR:  invalid block number
2023-07-22 04:11:39.006 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', -1);
2023-07-22 04:11:39.006 UTC [1616094] ERROR:  invalid overflow block number 0
2023-07-22 04:11:39.006 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 0);
2023-07-22 04:11:39.007 UTC [1616094] ERROR:  invalid overflow block number 1
2023-07-22 04:11:39.007 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 1);
2023-07-22 04:11:39.008 UTC [1616094] ERROR:  invalid overflow block number 2
2023-07-22 04:11:39.008 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 2);
2023-07-22 04:11:39.008 UTC [1616094] ERROR:  invalid overflow block number 3
2023-07-22 04:11:39.008 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 3);
2023-07-22 04:11:39.009 UTC [1616094] ERROR:  invalid overflow block number 4
2023-07-22 04:11:39.009 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 4);
2023-07-22 04:11:39.009 UTC [1616094] ERROR:  invalid overflow block number 5
2023-07-22 04:11:39.009 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 5);
2023-07-22 04:11:39.010 UTC [1616094] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 04:11:39.010 UTC [1616094] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 6);
2023-07-22 04:11:39.014 UTC [1616094] ERROR:  page is not a hash meta page
2023-07-22 04:11:39.014 UTC [1616094] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 1));
2023-07-22 04:11:39.015 UTC [1616094] ERROR:  page is not a hash meta page
2023-07-22 04:11:39.015 UTC [1616094] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 2));
2023-07-22 04:11:39.016 UTC [1616094] ERROR:  page is not a hash meta page
2023-07-22 04:11:39.016 UTC [1616094] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 3));
2023-07-22 04:11:39.016 UTC [1616094] ERROR:  page is not a hash meta page
2023-07-22 04:11:39.016 UTC [1616094] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 4));
2023-07-22 04:11:39.017 UTC [1616094] ERROR:  page is not a hash meta page
2023-07-22 04:11:39.017 UTC [1616094] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:11:39.018 UTC [1616094] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:11:39.018 UTC [1616094] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 0));
2023-07-22 04:11:39.021 UTC [1616094] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:11:39.021 UTC [1616094] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:11:39.022 UTC [1616094] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:11:39.022 UTC [1616094] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 0));
2023-07-22 04:11:39.025 UTC [1616094] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:11:39.025 UTC [1616094] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 5));
2023-07-22 04:11:39.032 UTC [1616094] ERROR:  "test_hash_a_btree" is not a hash index
2023-07-22 04:11:39.032 UTC [1616094] STATEMENT:  SELECT hash_bitmap_info('test_hash_a_btree', 0);
2023-07-22 04:11:39.032 UTC [1616094] ERROR:  invalid page size
2023-07-22 04:11:39.032 UTC [1616094] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:39.032 UTC [1616094] STATEMENT:  SELECT hash_metapage_info('aaa'::bytea);
2023-07-22 04:11:39.033 UTC [1616094] ERROR:  invalid page size
2023-07-22 04:11:39.033 UTC [1616094] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:39.033 UTC [1616094] STATEMENT:  SELECT hash_page_items('bbb'::bytea);
2023-07-22 04:11:39.033 UTC [1616094] ERROR:  invalid page size
2023-07-22 04:11:39.033 UTC [1616094] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:39.033 UTC [1616094] STATEMENT:  SELECT hash_page_stats('ccc'::bytea);
2023-07-22 04:11:39.034 UTC [1616094] ERROR:  invalid page size
2023-07-22 04:11:39.034 UTC [1616094] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 04:11:39.034 UTC [1616094] STATEMENT:  SELECT hash_page_type('ddd'::bytea);
2023-07-22 04:11:39.035 UTC [1616094] ERROR:  input page is not a valid hash page
2023-07-22 04:11:39.035 UTC [1616094] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:39.035 UTC [1616094] STATEMENT:  SELECT hash_metapage_info(get_raw_page('test_hash', 0));
2023-07-22 04:11:39.035 UTC [1616094] ERROR:  input page is not a valid hash page
2023-07-22 04:11:39.035 UTC [1616094] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:39.035 UTC [1616094] STATEMENT:  SELECT hash_page_items(get_raw_page('test_hash', 0));
2023-07-22 04:11:39.035 UTC [1616094] ERROR:  input page is not a valid hash page
2023-07-22 04:11:39.035 UTC [1616094] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:39.035 UTC [1616094] STATEMENT:  SELECT hash_page_stats(get_raw_page('test_hash', 0));
2023-07-22 04:11:39.036 UTC [1616094] ERROR:  input page is not a valid hash page
2023-07-22 04:11:39.036 UTC [1616094] DETAIL:  Expected special size 16, got 0.
2023-07-22 04:11:39.036 UTC [1616094] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash', 0));
2023-07-22 04:11:39.037 UTC [1616094] ERROR:  page is not a hash meta page
2023-07-22 04:11:39.037 UTC [1616094] STATEMENT:  SELECT hash_metapage_info(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:11:39.038 UTC [1616094] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:11:39.038 UTC [1616094] STATEMENT:  SELECT hash_page_items(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:11:39.038 UTC [1616094] ERROR:  page is not a hash bucket or overflow page
2023-07-22 04:11:39.038 UTC [1616094] STATEMENT:  SELECT hash_page_stats(decode(repeat('00', 8192), 'hex'));
2023-07-22 04:11:39.143 UTC [1616056] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:39.173 UTC [1616056] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.010 s, sync=0.005 s, total=0.030 s; sync files=7, longest=0.003 s, average=0.001 s; distance=13689 kB, estimate=13689 kB
2023-07-22 04:11:39.276 UTC [1616117] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:11:39.276 UTC [1616117] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:11:39.296 UTC [1616117] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:11:39.296 UTC [1616117] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:11:39.296 UTC [1616117] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:11:39.296 UTC [1616117] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:11:39.306 UTC [1616117] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:11:39.306 UTC [1616117] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:11:39.306 UTC [1616117] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:11:39.306 UTC [1616117] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:12:10.953 UTC [1616056] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:12:11.172 UTC [1616056] LOG:  checkpoint complete: wrote 653 buffers (4.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.026 s, sync=0.156 s, total=0.219 s; sync files=255, longest=0.061 s, average=0.001 s; distance=140985 kB, estimate=140985 kB
2023-07-22 04:12:42.553 UTC [1616056] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:12:42.608 UTC [1616056] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.004 s, total=0.056 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136732 kB, estimate=140560 kB
2023-07-22 04:12:42.648 UTC [1616055] LOG:  received fast shutdown request
2023-07-22 04:12:42.651 UTC [1616055] LOG:  aborting any active transactions
2023-07-22 04:12:42.652 UTC [1616055] LOG:  background worker "logical replication launcher" (PID 1616061) exited with exit code 1
2023-07-22 04:12:42.652 UTC [1616056] LOG:  shutting down
2023-07-22 04:12:42.655 UTC [1616056] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:12:42.676 UTC [1616056] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.005 s, total=0.025 s; sync files=1, longest=0.005 s, average=0.005 s; distance=0 kB, estimate=126504 kB
2023-07-22 04:12:42.722 UTC [1616055] LOG:  database system is shut down
2023-07-22 04:12:43.350 UTC [1616189] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:12:43.351 UTC [1616189] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:12:43.356 UTC [1616189] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:12:43.364 UTC [1616192] LOG:  database system was shut down at 2023-07-22 04:12:43 UTC
2023-07-22 04:12:43.369 UTC [1616189] LOG:  database system is ready to accept connections
2023-07-22 04:12:43.543 UTC [1616208] ERROR:  password is too short
2023-07-22 04:12:43.543 UTC [1616208] STATEMENT:  ALTER USER regress_user1 PASSWORD 'tooshrt';
2023-07-22 04:12:43.543 UTC [1616208] ERROR:  password must not contain user name
2023-07-22 04:12:43.543 UTC [1616208] STATEMENT:  ALTER USER regress_user1 PASSWORD 'xyzregress_user1';
2023-07-22 04:12:43.543 UTC [1616208] ERROR:  password must contain both letters and nonletters
2023-07-22 04:12:43.543 UTC [1616208] STATEMENT:  ALTER USER regress_user1 PASSWORD 'alessnicelongpassword';
2023-07-22 04:12:43.544 UTC [1616208] ERROR:  password must not equal user name
2023-07-22 04:12:43.544 UTC [1616208] STATEMENT:  ALTER USER regress_user1 PASSWORD 'md5e589150ae7d28f93333afae92b36ef48';
2023-07-22 04:12:43.607 UTC [1616220] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:12:43.607 UTC [1616220] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:12:43.644 UTC [1616220] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:12:43.644 UTC [1616220] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:12:43.645 UTC [1616220] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:12:43.645 UTC [1616220] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:12:43.662 UTC [1616220] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:12:43.662 UTC [1616220] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:12:43.662 UTC [1616220] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:12:43.662 UTC [1616220] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:13:15.634 UTC [1616190] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:13:15.811 UTC [1616190] LOG:  checkpoint complete: wrote 1100 buffers (6.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.035 s, sync=0.099 s, total=0.177 s; sync files=505, longest=0.006 s, average=0.001 s; distance=144701 kB, estimate=144701 kB
2023-07-22 04:13:47.275 UTC [1616190] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:13:47.327 UTC [1616190] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.053 s; sync files=4, longest=0.004 s, average=0.002 s; distance=136398 kB, estimate=143870 kB
2023-07-22 04:13:47.369 UTC [1616189] LOG:  received fast shutdown request
2023-07-22 04:13:47.372 UTC [1616189] LOG:  aborting any active transactions
2023-07-22 04:13:47.373 UTC [1616189] LOG:  background worker "logical replication launcher" (PID 1616195) exited with exit code 1
2023-07-22 04:13:47.373 UTC [1616190] LOG:  shutting down
2023-07-22 04:13:47.376 UTC [1616190] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:13:47.394 UTC [1616190] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129483 kB
2023-07-22 04:13:47.440 UTC [1616189] LOG:  database system is shut down
2023-07-22 04:13:48.095 UTC [1616286] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:13:48.095 UTC [1616286] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:13:48.101 UTC [1616286] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:13:48.109 UTC [1616289] LOG:  database system was shut down at 2023-07-22 04:13:47 UTC
2023-07-22 04:13:48.117 UTC [1616286] LOG:  database system is ready to accept connections
2023-07-22 04:13:48.292 UTC [1616305] ERROR:  parameter "pg_bigm.last_update" cannot be changed
2023-07-22 04:13:48.292 UTC [1616305] STATEMENT:  SET pg_bigm.last_update = '2013.09.18';
2023-07-22 04:13:48.326 UTC [1616305] ERROR:  relation "test_bigm" is not a GIN index
2023-07-22 04:13:48.326 UTC [1616305] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm');
2023-07-22 04:13:48.331 UTC [1616305] ERROR:  relation "test_bigm_btree" is not a GIN index
2023-07-22 04:13:48.331 UTC [1616305] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm_btree');
2023-07-22 04:13:48.377 UTC [1616305] ERROR:  function likequery(unknown) does not exist at character 8
2023-07-22 04:13:48.377 UTC [1616305] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:13:48.377 UTC [1616305] STATEMENT:  SELECT likequery('test');
2023-07-22 04:13:48.500 UTC [1616324] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:13:48.500 UTC [1616324] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:13:48.522 UTC [1616324] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:13:48.522 UTC [1616324] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:13:48.523 UTC [1616324] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:13:48.523 UTC [1616324] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:13:48.539 UTC [1616324] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:13:48.539 UTC [1616324] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:13:48.540 UTC [1616324] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:13:48.540 UTC [1616324] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:14:20.204 UTC [1616287] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:20.317 UTC [1616287] LOG:  checkpoint complete: wrote 1299 buffers (7.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.030 s, sync=0.039 s, total=0.114 s; sync files=513, longest=0.005 s, average=0.001 s; distance=145504 kB, estimate=145504 kB
2023-07-22 04:14:51.712 UTC [1616287] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:51.789 UTC [1616287] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.011 s, sync=0.007 s, total=0.077 s; sync files=4, longest=0.006 s, average=0.002 s; distance=135965 kB, estimate=144550 kB
2023-07-22 04:14:51.835 UTC [1616286] LOG:  received fast shutdown request
2023-07-22 04:14:51.840 UTC [1616286] LOG:  aborting any active transactions
2023-07-22 04:14:51.841 UTC [1616286] LOG:  background worker "logical replication launcher" (PID 1616292) exited with exit code 1
2023-07-22 04:14:51.842 UTC [1616287] LOG:  shutting down
2023-07-22 04:14:51.848 UTC [1616287] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:14:51.868 UTC [1616287] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.027 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=130095 kB
2023-07-22 04:14:51.918 UTC [1616286] LOG:  database system is shut down
2023-07-22 04:14:52.677 UTC [1616396] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:14:52.678 UTC [1616396] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:14:52.684 UTC [1616396] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:14:52.702 UTC [1616399] LOG:  database system was shut down at 2023-07-22 04:14:52 UTC
2023-07-22 04:14:52.707 UTC [1616396] LOG:  database system is ready to accept connections
2023-07-22 04:14:52.877 UTC [1616415] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:14:52.877 UTC [1616415] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:14:52.923 UTC [1616415] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:14:52.923 UTC [1616415] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:14:52.924 UTC [1616415] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:14:52.924 UTC [1616415] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:14:52.950 UTC [1616415] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:14:52.950 UTC [1616415] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:14:52.951 UTC [1616415] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:14:52.951 UTC [1616415] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:15:25.551 UTC [1616397] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:25.934 UTC [1616397] LOG:  checkpoint complete: wrote 901 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.029 s, sync=0.023 s, total=0.383 s; sync files=256, longest=0.005 s, average=0.001 s; distance=137457 kB, estimate=137457 kB
2023-07-22 04:15:57.356 UTC [1616397] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:57.435 UTC [1616397] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.009 s, sync=0.009 s, total=0.080 s; sync files=4, longest=0.007 s, average=0.002 s; distance=135197 kB, estimate=137231 kB
2023-07-22 04:15:57.477 UTC [1616396] LOG:  received fast shutdown request
2023-07-22 04:15:57.482 UTC [1616396] LOG:  aborting any active transactions
2023-07-22 04:15:57.483 UTC [1616396] LOG:  background worker "logical replication launcher" (PID 1616402) exited with exit code 1
2023-07-22 04:15:57.483 UTC [1616397] LOG:  shutting down
2023-07-22 04:15:57.488 UTC [1616397] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:15:57.513 UTC [1616397] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.002 s, total=0.031 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=123508 kB
2023-07-22 04:15:57.543 UTC [1616396] LOG:  database system is shut down
2023-07-22 04:15:58.290 UTC [1616491] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:15:58.290 UTC [1616491] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:15:58.300 UTC [1616491] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:15:58.313 UTC [1616494] LOG:  database system was shut down at 2023-07-22 04:15:58 UTC
2023-07-22 04:15:58.324 UTC [1616491] LOG:  database system is ready to accept connections
2023-07-22 04:15:58.341 UTC [1616497] LOG:  pg_cron scheduler started
2023-07-22 04:15:58.614 UTC [1616511] LOG:  failed to parse schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:15:58.614 UTC [1616511] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:15:58.614 UTC [1616511] ERROR:  invalid schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:15:58.614 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.614 UTC [1616511] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:15:58.615 UTC [1616511] LOG:  failed to parse schedule: * * * *
2023-07-22 04:15:58.615 UTC [1616511] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:15:58.615 UTC [1616511] ERROR:  invalid schedule: * * * *
2023-07-22 04:15:58.615 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.615 UTC [1616511] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:15:58.615 UTC [1616511] LOG:  failed to parse schedule: 5 secondc
2023-07-22 04:15:58.615 UTC [1616511] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:15:58.615 UTC [1616511] ERROR:  invalid schedule: 5 secondc
2023-07-22 04:15:58.615 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.615 UTC [1616511] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:15:58.616 UTC [1616511] LOG:  failed to parse schedule: 50 seconds c
2023-07-22 04:15:58.616 UTC [1616511] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:15:58.616 UTC [1616511] ERROR:  invalid schedule: 50 seconds c
2023-07-22 04:15:58.616 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.616 UTC [1616511] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:15:58.616 UTC [1616511] LOG:  failed to parse schedule: -1 seconds
2023-07-22 04:15:58.616 UTC [1616511] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:15:58.616 UTC [1616511] ERROR:  invalid schedule: -1 seconds
2023-07-22 04:15:58.616 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.616 UTC [1616511] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:15:58.617 UTC [1616511] LOG:  failed to parse schedule: 0 seconds
2023-07-22 04:15:58.617 UTC [1616511] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:15:58.617 UTC [1616511] ERROR:  invalid schedule: 0 seconds
2023-07-22 04:15:58.617 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.617 UTC [1616511] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:15:58.617 UTC [1616511] LOG:  failed to parse schedule: 60 seconds
2023-07-22 04:15:58.617 UTC [1616511] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:15:58.617 UTC [1616511] ERROR:  invalid schedule: 60 seconds
2023-07-22 04:15:58.617 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.617 UTC [1616511] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:15:58.618 UTC [1616511] LOG:  failed to parse schedule: 10000000000 seconds
2023-07-22 04:15:58.618 UTC [1616511] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:15:58.618 UTC [1616511] ERROR:  invalid schedule: 10000000000 seconds
2023-07-22 04:15:58.618 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.618 UTC [1616511] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:15:58.618 UTC [1616511] LOG:  failed to parse schedule: @restar
2023-07-22 04:15:58.618 UTC [1616511] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:15:58.618 UTC [1616511] ERROR:  invalid schedule: @restar
2023-07-22 04:15:58.618 UTC [1616511] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:15:58.618 UTC [1616511] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:15:58.637 UTC [1616511] ERROR:  no updates specified
2023-07-22 04:15:58.637 UTC [1616511] HINT:  You must specify at least one job attribute to change when calling alter_job
2023-07-22 04:15:58.637 UTC [1616511] STATEMENT:  SELECT cron.alter_job(2);
2023-07-22 04:15:58.638 UTC [1616511] ERROR:  database "hopedoesnotexist" does not exist
2023-07-22 04:15:58.638 UTC [1616511] STATEMENT:  select cron.alter_job(job_id:=2,database:='hopedoesnotexist');
2023-07-22 04:15:58.731 UTC [1616511] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:15:58.731 UTC [1616511] STATEMENT:  SELECT cron.schedule_in_database(job_name:='can not connect', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:15:58.852 UTC [1616511] ERROR:  role "pgcron_useraqwxszedc" does not exist
2023-07-22 04:15:58.852 UTC [1616511] STATEMENT:  SELECT cron.schedule_in_database(job_name:='user does not exist', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbyes',username:='pgcron_useraqwxszedc');
2023-07-22 04:15:58.852 UTC [1616511] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:15:58.852 UTC [1616511] STATEMENT:  SELECT cron.alter_job(job_id:=2,database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:15:58.856 UTC [1616511] ERROR:  permission denied for function schedule_in_database
2023-07-22 04:15:58.856 UTC [1616511] STATEMENT:  SELECT cron.schedule_in_database(job_name:='his vacuum', schedule:='0 11 * * *', command:='VACUUM',database:=current_database(),username:='anotheruser');
2023-07-22 04:15:58.857 UTC [1616511] ERROR:  must be superuser to alter username
2023-07-22 04:15:58.857 UTC [1616511] STATEMENT:  select cron.alter_job(job_id:=6,username:='anotheruser');
2023-07-22 04:15:58.859 UTC [1616511] ERROR:  Job 2 does not exist or you don't own it
2023-07-22 04:15:58.859 UTC [1616511] STATEMENT:  select cron.alter_job(job_id:=2,database:='pgcron_dbyes');
2023-07-22 04:15:58.862 UTC [1616511] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:15:58.862 UTC [1616511] STATEMENT:  select cron.alter_job(job_id:=6,database:='pgcron_dbno');
2023-07-22 04:15:59.012 UTC [1616492] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:59.208 UTC [1616492] LOG:  checkpoint complete: wrote 1810 buffers (11.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.116 s, sync=0.051 s, total=0.196 s; sync files=519, longest=0.013 s, average=0.001 s; distance=12238 kB, estimate=12238 kB
2023-07-22 04:15:59.214 UTC [1616492] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:59.247 UTC [1616492] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.006 s, total=0.033 s; sync files=2, longest=0.005 s, average=0.003 s; distance=1 kB, estimate=11014 kB
2023-07-22 04:15:59.265 UTC [1616492] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:59.299 UTC [1616492] LOG:  checkpoint complete: wrote 4 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.008 s, total=0.034 s; sync files=4, longest=0.007 s, average=0.002 s; distance=2 kB, estimate=9913 kB
2023-07-22 04:15:59.609 UTC [1616526] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:15:59.609 UTC [1616526] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:15:59.661 UTC [1616526] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:15:59.661 UTC [1616526] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:15:59.662 UTC [1616526] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:15:59.662 UTC [1616526] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:15:59.697 UTC [1616526] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:15:59.697 UTC [1616526] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:15:59.697 UTC [1616526] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:15:59.697 UTC [1616526] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:15:59.869 UTC [1616536] ERROR:  can only create extension in database postgres
2023-07-22 04:15:59.869 UTC [1616536] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:15:59.869 UTC [1616536] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:15:59.869 UTC [1616536] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:15:59.869 UTC [1616536] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:16:32.810 UTC [1616492] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:16:32.965 UTC [1616492] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.033 s, sync=0.047 s, total=0.155 s; sync files=261, longest=0.022 s, average=0.001 s; distance=137394 kB, estimate=137394 kB
2023-07-22 04:16:33.122 UTC [1616559] ERROR:  can only create extension in database postgres
2023-07-22 04:16:33.122 UTC [1616559] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:16:33.122 UTC [1616559] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:16:33.122 UTC [1616559] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:16:33.122 UTC [1616559] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:17:05.470 UTC [1616492] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:05.563 UTC [1616492] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.007 s, total=0.093 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133244 kB, estimate=136979 kB
2023-07-22 04:17:05.606 UTC [1616491] LOG:  received fast shutdown request
2023-07-22 04:17:05.613 UTC [1616491] LOG:  aborting any active transactions
2023-07-22 04:17:05.613 UTC [1616497] LOG:  pg_cron scheduler shutting down
2023-07-22 04:17:05.614 UTC [1616491] LOG:  background worker "logical replication launcher" (PID 1616498) exited with exit code 1
2023-07-22 04:17:05.614 UTC [1616492] LOG:  shutting down
2023-07-22 04:17:05.620 UTC [1616492] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:17:05.651 UTC [1616492] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.001 s, total=0.038 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123281 kB
2023-07-22 04:17:05.683 UTC [1616491] LOG:  database system is shut down
2023-07-22 04:17:06.537 UTC [1616601] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:17:06.537 UTC [1616601] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:17:06.547 UTC [1616601] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:17:06.560 UTC [1616604] LOG:  database system was shut down at 2023-07-22 04:17:06 UTC
2023-07-22 04:17:06.570 UTC [1616601] LOG:  database system is ready to accept connections
2023-07-22 04:17:06.791 UTC [1616620] ERROR:  invalid block number
2023-07-22 04:17:06.791 UTC [1616620] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', -1);
2023-07-22 04:17:06.791 UTC [1616620] ERROR:  invalid block number
2023-07-22 04:17:06.791 UTC [1616620] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', 4294967295);
2023-07-22 04:17:06.814 UTC [1616602] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:06.858 UTC [1616602] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.010 s, total=0.044 s; sync files=7, longest=0.006 s, average=0.002 s; distance=4039 kB, estimate=4039 kB
2023-07-22 04:17:06.965 UTC [1616635] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:17:06.965 UTC [1616635] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:17:07.024 UTC [1616635] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:17:07.024 UTC [1616635] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:17:07.024 UTC [1616635] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:17:07.024 UTC [1616635] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:17:07.048 UTC [1616635] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:17:07.048 UTC [1616635] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:17:07.049 UTC [1616635] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:17:07.049 UTC [1616635] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:17:39.999 UTC [1616602] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:40.144 UTC [1616602] LOG:  checkpoint complete: wrote 897 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.041 s, sync=0.033 s, total=0.146 s; sync files=255, longest=0.010 s, average=0.001 s; distance=137354 kB, estimate=137354 kB
2023-07-22 04:18:12.473 UTC [1616602] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:12.586 UTC [1616602] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.016 s, sync=0.007 s, total=0.114 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133180 kB, estimate=136936 kB
2023-07-22 04:18:12.635 UTC [1616601] LOG:  received fast shutdown request
2023-07-22 04:18:12.640 UTC [1616601] LOG:  aborting any active transactions
2023-07-22 04:18:12.640 UTC [1616601] LOG:  background worker "logical replication launcher" (PID 1616607) exited with exit code 1
2023-07-22 04:18:12.641 UTC [1616602] LOG:  shutting down
2023-07-22 04:18:12.645 UTC [1616602] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:18:12.684 UTC [1616602] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.001 s, total=0.044 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123243 kB
2023-07-22 04:18:12.728 UTC [1616601] LOG:  database system is shut down
2023-07-22 04:18:13.514 UTC [1616707] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:18:13.514 UTC [1616707] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:18:13.528 UTC [1616707] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:18:13.540 UTC [1616710] LOG:  database system was shut down at 2023-07-22 04:18:13 UTC
2023-07-22 04:18:13.548 UTC [1616707] LOG:  database system is ready to accept connections
2023-07-22 04:18:15.801 UTC [1616707] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:18:15.803 UTC [1616707] LOG:  parameter "effective_cache_size" changed to "16384"
2023-07-22 04:18:16.182 UTC [1616734] ERROR:  table hint is not activated because queryid is not available
2023-07-22 04:18:16.182 UTC [1616734] HINT:  Set compute_query_id to on or auto to use hint table.
2023-07-22 04:18:16.182 UTC [1616734] STATEMENT:  SET pg_hint_plan.enable_hint_table to on;
2023-07-22 04:18:16.182 UTC [1616734] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 04:18:16.182 UTC [1616734] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 04:18:16.183 UTC [1616734] LOG:  hint table feature is reactivated
2023-07-22 04:18:16.183 UTC [1616734] STATEMENT:  SELECT 1;
2023-07-22 04:18:16.184 UTC [1616734] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 04:18:16.184 UTC [1616734] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 04:18:16.188 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.188 UTC [1616734] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.188 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.188 UTC [1616734] STATEMENT:  EXPLAIN (COSTS false) /*+Set(enable_indexscan off)*/
	 SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.189 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(enable_hashjoin off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.189 UTC [1616734] STATEMENT:  /*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.189 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.189 UTC [1616734] STATEMENT:  /*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.189 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.189 UTC [1616734] STATEMENT:  /*+ 	 
		 	Set 	 
		 	( 	 
		 	enable_indexscan 	 
		 	off 	 
		 	) 	 
		 	*/	 	
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.190 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	Set(enable_mergejoin off)
	Set(enable_nestloop off)
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.190 UTC [1616734] STATEMENT:  /*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
		 	Set(enable_seqscan off)
		 	*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.190 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem 1M)
	
2023-07-22 04:18:16.190 UTC [1616734] STATEMENT:  /*+Set(work_mem "1M")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.191 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Set(work_mem 1MB)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.191 UTC [1616734] STATEMENT:  /*+Set(work_mem "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.191 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem TO 1MB)
	
2023-07-22 04:18:16.191 UTC [1616734] STATEMENT:  /*+Set(work_mem TO "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.192 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:18:16.192 UTC [1616734] STATEMENT:  /*+SeqScan() */ SELECT 1;
2023-07-22 04:18:16.192 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 04:18:16.192 UTC [1616734] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.192 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.192 UTC [1616734] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.193 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.193 UTC [1616734] STATEMENT:  /*+SeqScan(t1)IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.193 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.193 UTC [1616734] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.194 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.194 UTC [1616734] STATEMENT:  /*+BitmapScan(t2)NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.194 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.194 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.195 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.195 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
2023-07-22 04:18:16.195 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.195 UTC [1616734] STATEMENT:  /*+TidScan(t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
2023-07-22 04:18:16.196 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.196 UTC [1616734] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
2023-07-22 04:18:16.196 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 04:18:16.196 UTC [1616734] STATEMENT:  /*+ NestLoop() */ SELECT 1;
2023-07-22 04:18:16.196 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(x)
	
2023-07-22 04:18:16.196 UTC [1616734] STATEMENT:  /*+ NestLoop(x) */ SELECT 1;
2023-07-22 04:18:16.197 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.197 UTC [1616734] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.197 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.197 UTC [1616734] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.197 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.197 UTC [1616734] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.198 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.198 UTC [1616734] STATEMENT:  /*+MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 04:18:16.198 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.198 UTC [1616734] STATEMENT:  /*+NestLoop(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 04:18:16.198 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.198 UTC [1616734] STATEMENT:  /*+NoHashJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 04:18:16.200 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.200 UTC [1616734] STATEMENT:  /*+MergeJoin(t4 t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.201 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.201 UTC [1616734] STATEMENT:  /*+HashJoin(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.202 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t3)
	NestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.202 UTC [1616734] STATEMENT:  /*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.202 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.202 UTC [1616734] STATEMENT:  /*+NoNestLoop(t4 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.204 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 04:18:16.204 UTC [1616734] STATEMENT:  /*+Leading( )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.206 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3)
	
2023-07-22 04:18:16.206 UTC [1616734] STATEMENT:  /*+Leading( t3 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.206 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.206 UTC [1616734] STATEMENT:  /*+Leading( t3 t4 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.207 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.207 UTC [1616734] STATEMENT:  /*+Leading(t3 t4 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.208 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.208 UTC [1616734] STATEMENT:  /*+Leading(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.209 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t1 t2 t1)
	
2023-07-22 04:18:16.209 UTC [1616734] STATEMENT:  /*+Leading(t3 t4 t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.210 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t4)
	
2023-07-22 04:18:16.210 UTC [1616734] STATEMENT:  /*+Leading(t3 t4 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:18:16.210 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.210 UTC [1616734] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 04:18:16.211 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.211 UTC [1616734] STATEMENT:  /*+HashJoin(t1 *VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 04:18:16.211 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	HashJoin(*VALUES* t1)
	not used hint:
	IndexScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.211 UTC [1616734] STATEMENT:  /*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 04:18:16.212 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.212 UTC [1616734] STATEMENT:  /*+BitmapScan(v_1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.213 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.213 UTC [1616734] STATEMENT:  /*+BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.213 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.213 UTC [1616734] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.214 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.214 UTC [1616734] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.215 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.215 UTC [1616734] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.215 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.215 UTC [1616734] STATEMENT:  /*+BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.216 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.216 UTC [1616734] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:18:16.216 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.216 UTC [1616734] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.216 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.216 UTC [1616734] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.217 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.217 UTC [1616734] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.217 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.217 UTC [1616734] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.217 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.217 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.217 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.217 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.218 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.218 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.218 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.218 UTC [1616734] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:18:16.218 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.218 UTC [1616734] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.219 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.219 UTC [1616734] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.219 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.219 UTC [1616734] STATEMENT:  /*+SeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.219 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.219 UTC [1616734] STATEMENT:  /*+SeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.220 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.220 UTC [1616734] STATEMENT:  /*+SeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.220 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.220 UTC [1616734] STATEMENT:  /*+SeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.220 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.220 UTC [1616734] STATEMENT:  /*+SeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.221 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.221 UTC [1616734] STATEMENT:  /*+SeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.221 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.221 UTC [1616734] STATEMENT:  /*+SeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.222 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.222 UTC [1616734] STATEMENT:  /*+SeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.222 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.222 UTC [1616734] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.222 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.222 UTC [1616734] STATEMENT:  /*+IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.223 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.223 UTC [1616734] STATEMENT:  /*+IndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.223 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.223 UTC [1616734] STATEMENT:  /*+IndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.223 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.223 UTC [1616734] STATEMENT:  /*+IndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.224 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.224 UTC [1616734] STATEMENT:  /*+IndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.224 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.224 UTC [1616734] STATEMENT:  /*+IndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.225 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.225 UTC [1616734] STATEMENT:  /*+IndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.225 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.225 UTC [1616734] STATEMENT:  /*+IndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.225 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.225 UTC [1616734] STATEMENT:  /*+IndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.226 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.226 UTC [1616734] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.226 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.226 UTC [1616734] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.227 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.227 UTC [1616734] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.227 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.227 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.227 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.227 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.228 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.228 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.228 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.228 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.228 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.228 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.229 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.229 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.229 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.229 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.230 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.230 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.230 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.230 UTC [1616734] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.230 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.230 UTC [1616734] STATEMENT:  /*+TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.231 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.231 UTC [1616734] STATEMENT:  /*+TidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.231 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.231 UTC [1616734] STATEMENT:  /*+TidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.232 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.232 UTC [1616734] STATEMENT:  /*+TidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.232 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.232 UTC [1616734] STATEMENT:  /*+TidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.232 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.232 UTC [1616734] STATEMENT:  /*+TidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.233 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.233 UTC [1616734] STATEMENT:  /*+TidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.233 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.233 UTC [1616734] STATEMENT:  /*+TidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.233 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.233 UTC [1616734] STATEMENT:  /*+TidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.234 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.234 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.234 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.234 UTC [1616734] STATEMENT:  /*+NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.235 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.235 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.235 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.235 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.235 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.235 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.236 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.236 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.236 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.236 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.236 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.236 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.237 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.237 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.237 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.237 UTC [1616734] STATEMENT:  /*+NoSeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.237 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.237 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.238 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.238 UTC [1616734] STATEMENT:  /*+NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.238 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.238 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.239 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.239 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.239 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.239 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.239 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.239 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.240 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.240 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.240 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.240 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.240 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.240 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.241 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.241 UTC [1616734] STATEMENT:  /*+NoIndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.241 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.241 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.242 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.242 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.242 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.242 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.242 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.242 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.243 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.243 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.243 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.243 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.243 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.243 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.244 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.244 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.244 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.244 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.244 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.244 UTC [1616734] STATEMENT:  /*+NoBitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.245 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.245 UTC [1616734] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.245 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.245 UTC [1616734] STATEMENT:  /*+NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.246 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.246 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.246 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.246 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.246 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.246 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.247 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.247 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.247 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.247 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.247 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.247 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.248 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.248 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.248 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.248 UTC [1616734] STATEMENT:  /*+NoTidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.249 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.249 UTC [1616734] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)' AND t1.id < 10 AND t2.id < 10;
2023-07-22 04:18:16.250 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.250 UTC [1616734] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 04:18:16.250 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.250 UTC [1616734] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 04:18:16.254 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.254 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.255 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.255 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.256 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.256 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.257 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.257 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.258 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.258 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.258 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.258 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.259 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.259 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.260 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.260 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.262 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.262 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.263 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.263 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.265 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.265 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.266 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.266 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.267 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.267 UTC [1616734] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.268 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.268 UTC [1616734] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.269 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.269 UTC [1616734] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.270 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.270 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.271 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.271 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.272 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.272 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.273 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.273 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.273 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.273 UTC [1616734] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.274 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.274 UTC [1616734] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.275 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.275 UTC [1616734] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.276 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.276 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.276 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.276 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.276 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.276 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.276 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.276 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.276 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.276 UTC [1616734] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.277 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.277 UTC [1616734] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.277 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.277 UTC [1616734] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.278 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.278 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.278 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.278 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.278 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.278 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.278 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.278 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:18:16.279 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.279 UTC [1616734] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.279 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.279 UTC [1616734] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.279 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.279 UTC [1616734] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.280 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.280 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.281 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.281 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.281 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.281 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.281 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.281 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.282 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.282 UTC [1616734] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.282 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.282 UTC [1616734] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.282 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.282 UTC [1616734] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.283 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.283 UTC [1616734] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:18:16.312 UTC [1616734] LOG:  available indexes for IndexScan(ischk_d1): ischk_d1_b_idx
2023-07-22 04:18:16.312 UTC [1616734] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 04:18:16.312 UTC [1616734] LOG:  available indexes for IndexScan(ischk_d2): ischk_d2_b_idx
2023-07-22 04:18:16.312 UTC [1616734] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 04:18:16.312 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ischk ischk_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.312 UTC [1616734] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 04:18:16.314 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""t1 )	")
	IndexScan("t	2 """)
	HashJoin("""t1 )	" T3 "t	2 """)
	Leading("""t1 )	" T3 "t	2 """)
	Set(application_name "a	a	a""	a	A")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.314 UTC [1616734] STATEMENT:  /*+SeqScan("""t1 )	")IndexScan("t	2 """)HashJoin("""t1 )	"T3"t	2 """)Leading("""t1 )	"T3"t	2 """)Set(application_name"a	a	a""	a	A")*/
	EXPLAIN (COSTS false) SELECT * FROM t1 """t1 )	", t2 "t	2 """, t3 "T3" WHERE """t1 )	".id = "t	2 """.id AND """t1 )	".id = "T3".id;
2023-07-22 04:18:16.316 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_mergejoin on)
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	SeqScan(t1)
	IndexScan(t1)
	BitmapScan(t1)
	SeqScan(t2)
	IndexScan(t2)
	BitmapScan(t2)
	HashJoin(t1 t2)
	NestLoop(t1 t2)
	Leading(t1 t2)
	Set(enable_seqscan off)
	error hint:
	
2023-07-22 04:18:16.316 UTC [1616734] STATEMENT:  /*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:18:16.327 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.327 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.331 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.331 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.333 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.333 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.337 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.337 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.340 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.340 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.341 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.341 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.343 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.343 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.344 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1_3 t3_3)
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.344 UTC [1616734] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:18:16.345 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	MergeJoin(t1 t2)
	
2023-07-22 04:18:16.345 UTC [1616734] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 04:18:16.346 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t1)
	
2023-07-22 04:18:16.346 UTC [1616734] STATEMENT:  /*+Leading(t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 04:18:16.347 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 04:18:16.347 UTC [1616734] STATEMENT:  /*+
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "123456789012345678901234567890123456789012345678901234567890123" JOIN t2 ON ("123456789012345678901234567890123456789012345678901234567890123".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 04:18:16.347 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 04:18:16.347 UTC [1616734] STATEMENT:  /*+
	Leading(1234567890123456789012345678901234567890123456789012345678901234 t2 t3)
	SeqScan(1234567890123456789012345678901234567890123456789012345678901234)
	MergeJoin(1234567890123456789012345678901234567890123456789012345678901234 t2)
	Set(1234567890123456789012345678901234567890123456789012345678901234 1)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "1234567890123456789012345678901234567890123456789012345678901234" JOIN t2 ON ("1234567890123456789012345678901234567890123456789012345678901234".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 04:18:16.347 UTC [1616734] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 04:18:16.347 UTC [1616734] STATEMENT:  SET "123456789012345678901234567890123456789012345678901234567890123" TO 1;
2023-07-22 04:18:16.347 UTC [1616734] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 04:18:16.347 UTC [1616734] STATEMENT:  SET "1234567890123456789012345678901234567890123456789012345678901234" TO 1;
2023-07-22 04:18:16.348 UTC [1616734] ERROR:  1.23457e+63 is outside the valid range for parameter "cursor_tuple_fraction" (0 .. 1)
2023-07-22 04:18:16.348 UTC [1616734] STATEMENT:  SET cursor_tuple_fraction TO 1234567890123456789012345678901234567890123456789012345678901234;
2023-07-22 04:18:16.348 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_seqscan 100)
	Set(seq_page_cost on)
	
2023-07-22 04:18:16.348 UTC [1616734] STATEMENT:  /*+ Set(enable_seqscan 100)Set(seq_page_cost on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:18:16.348 UTC [1616734] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 04:18:16.348 UTC [1616734] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  available indexes for IndexScan(t5):
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  available indexes for IndexScan(t5): t5_id2 t5_id1
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id1 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  available indexes for IndexScan(t5):
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.349 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist5 no_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.349 UTC [1616734] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:18:16.350 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1))
	
2023-07-22 04:18:16.350 UTC [1616734] STATEMENT:  /*+Leading((t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.351 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.351 UTC [1616734] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.351 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1 t2 t3))
	
2023-07-22 04:18:16.351 UTC [1616734] STATEMENT:  /*+Leading((t1 t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.352 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.352 UTC [1616734] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id < 10;
2023-07-22 04:18:16.353 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.353 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.354 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) t4))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.354 UTC [1616734] STATEMENT:  /*+Leading((((t1 t2) t3) t4))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.354 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.354 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.355 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.355 UTC [1616734] STATEMENT:  /*+Leading((t1 (t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.356 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.356 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.357 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t3 t1) t2))
	not used hint:
	duplication hint:
	Leading(((t1 t2) t3))
	error hint:
	
2023-07-22 04:18:16.357 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 04:18:16.358 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	Leading((t1_2 t2_2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.358 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 04:18:16.358 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(((((t1 t2) t3) t1_2) t2_2))
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.358 UTC [1616734] STATEMENT:  /*+Leading(((((t1 t2) t3) t1_2) t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 04:18:16.359 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.359 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.359 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.359 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.359 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.359 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.360 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t1 t3)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.360 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.361 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.361 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.361 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.361 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.362 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.362 UTC [1616734] STATEMENT:  /*+ Leading ( ( t1 ( t2 t3 ) ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.362 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.362 UTC [1616734] STATEMENT:  /*+Leading((t1(t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.363 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("t1(t2" "t3)"))
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.363 UTC [1616734] STATEMENT:  /*+Leading(("t1(t2" "t3)"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.363 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.363 UTC [1616734] STATEMENT:  /*+ Leading ( ( ( t1 t2 ) t3 ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.363 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.363 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2)t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.364 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("(t1" "t2)t3"))
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.364 UTC [1616734] STATEMENT:  /*+Leading(("(t1" "t2)t3"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:18:16.365 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 (t3 (t4 t5)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.365 UTC [1616734] STATEMENT:  /*+Leading((t1(t2(t3(t4 t5)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.366 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((t5 (t4 (t3 (t2 t1)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.366 UTC [1616734] STATEMENT:  /*+Leading((t5(t4(t3(t2 t1)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.367 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t1 t2) t3) t4) t5))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.367 UTC [1616734] STATEMENT:  /*+Leading(((((t1 t2)t3)t4)t5))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.368 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t5 t4) t3) t2) t1))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.368 UTC [1616734] STATEMENT:  /*+Leading(((((t5 t4)t3)t2)t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.369 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 (t4 t5))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.369 UTC [1616734] STATEMENT:  /*+Leading(((t1 t2)(t3(t4 t5))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.370 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading(((t5 t4) (t3 (t2 t1))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.370 UTC [1616734] STATEMENT:  /*+Leading(((t5 t4)(t3(t2 t1))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.371 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) (t4 t5)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.371 UTC [1616734] STATEMENT:  /*+Leading((((t1 t2)t3)(t4 t5)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.372 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Leading((((t5 t4) t3) (t2 t1)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.372 UTC [1616734] STATEMENT:  /*+Leading((((t5 t4)t3)(t2 t1)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:18:16.376 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:18:16.376 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.376 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:18:16.376 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.376 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:18:16.376 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.376 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:18:16.376 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.376 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.376 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.377 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:18:16.377 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.377 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:18:16.377 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.377 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:18:16.377 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.377 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:18:16.377 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.377 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.377 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.378 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_val_id_idx
2023-07-22 04:18:16.378 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.378 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_id_idx
2023-07-22 04:18:16.378 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.378 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_id_idx
2023-07-22 04:18:16.378 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.378 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_id_idx
2023-07-22 04:18:16.378 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.378 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_id_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.378 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.381 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1):
2023-07-22 04:18:16.381 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.382 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2):
2023-07-22 04:18:16.382 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.382 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.382 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.382 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:18:16.382 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.383 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:18:16.383 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.383 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:18:16.383 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.383 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:18:16.383 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.383 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.383 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.384 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_id2_val
2023-07-22 04:18:16.384 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.384 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id2_val
2023-07-22 04:18:16.384 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.384 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:18:16.384 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.384 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:18:16.384 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.384 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.384 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.385 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_val2_id
2023-07-22 04:18:16.385 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.385 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 04:18:16.385 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.385 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:18:16.385 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.385 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:18:16.385 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.385 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val2_id)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.385 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.386 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.386 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.387 UTC [1616734] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:18:16.387 UTC [1616734] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.387 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 04:18:16.387 UTC [1616734] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.387 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:18:16.387 UTC [1616734] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.387 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:18:16.387 UTC [1616734] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.387 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.387 UTC [1616734] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.388 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:18:16.388 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.388 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 04:18:16.388 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.388 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:18:16.388 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.388 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:18:16.388 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.388 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.388 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.389 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.389 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.390 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:18:16.390 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.390 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 04:18:16.390 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.390 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:18:16.390 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.390 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:18:16.390 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.390 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.390 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.391 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.391 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_expr
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_expr_idx
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_expr_idx
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_expr_idx
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_expr_idx
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_expr_idx
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.392 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_expr_idx
2023-07-22 04:18:16.392 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.393 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_expr_idx
2023-07-22 04:18:16.393 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.393 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_expr_idx
2023-07-22 04:18:16.393 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.393 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.393 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.393 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_val_idx6
2023-07-22 04:18:16.393 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.394 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.394 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_val_idx6 p2_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7 p2_c1_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7 p2_c2_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7 p2_c3_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7 p2_c4_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7 p2_c1_c1_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7 p2_c1_c2_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7 p2_c3_c1_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7 p2_c3_c2_val_idx
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.395 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.395 UTC [1616734] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:18:16.396 UTC [1616734] LOG:  available indexes for IndexScanRegexp(t5): t5_val t5_pkey
2023-07-22 04:18:16.396 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.396 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.396 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.396 UTC [1616734] LOG:  available indexes for IndexScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 04:18:16.396 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.396 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.396 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.396 UTC [1616734] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 04:18:16.396 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.396 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.396 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  available indexes for IndexScan(t5):
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_val t5_pkey
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.397 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.397 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  available indexes for IndexOnlyScan(t5):
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(t5): t5_val t5_pkey
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.398 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.398 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  available indexes for BitmapScan(t5):
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.399 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.399 UTC [1616734] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:18:16.400 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 04:18:16.400 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.400 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 04:18:16.400 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.400 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 04:18:16.400 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1): p1_val2
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.401 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2
2023-07-22 04:18:16.401 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.402 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.402 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c2):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c4):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1_c1):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c1_c2):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3_c1):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  available indexes for IndexScanRegexp(p1_c3_c2):
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.403 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.403 UTC [1616734] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c2):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c4):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c1):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c2):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c1):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c2):
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.404 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.404 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.405 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2
2023-07-22 04:18:16.405 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1):
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.406 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):
2023-07-22 04:18:16.406 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c1):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c2):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c3):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.407 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c4):
2023-07-22 04:18:16.407 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c1_c1):
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c1_c2):
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c3_c1):
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for IndexOnlyScan(p1_c3_c2):
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1): p1_pkey
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.408 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:18:16.408 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1): p1_val2
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_val2
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_val2
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_val2
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.409 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_val2
2023-07-22 04:18:16.409 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c2):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c4):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.410 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2):
2023-07-22 04:18:16.410 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScan(p1):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c1):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c2):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c3):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.411 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c4):
2023-07-22 04:18:16.411 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.412 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c1_c1):
2023-07-22 04:18:16.412 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.412 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c1_c2):
2023-07-22 04:18:16.412 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.412 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c3_c1):
2023-07-22 04:18:16.412 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.412 UTC [1616734] LOG:  available indexes for BitmapScan(p1_c3_c2):
2023-07-22 04:18:16.412 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.412 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.412 UTC [1616734] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:18:16.415 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.415 UTC [1616734] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM t1 WHERE t1.id = 1;
2023-07-22 04:18:16.447 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.447 UTC [1616734] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ *          FROM t1 LIMIT 1"
	PL/pgSQL function testfunc() line 5 at SQL statement
2023-07-22 04:18:16.447 UTC [1616734] STATEMENT:  SELECT testfunc();
2023-07-22 04:18:16.452 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.452 UTC [1616734] CONTEXT:  SQL statement "/*+ SeqScan(t1) */ SELECT * FROM t1"
	PL/pgSQL function testfunc() line 3 at EXECUTE
2023-07-22 04:18:16.452 UTC [1616734] STATEMENT:  SELECT testfunc();
2023-07-22 04:18:16.454 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.454 UTC [1616734] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 04:18:16.460 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.460 UTC [1616734] CONTEXT:  SQL statement "SELECT  1, /*+ SeqScan(t1) */ * from t1"
	PL/pgSQL function testfunc() line 3 at PERFORM
2023-07-22 04:18:16.460 UTC [1616734] STATEMENT:  SELECT testfunc();
2023-07-22 04:18:16.466 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.466 UTC [1616734] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ v FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over SELECT rows
2023-07-22 04:18:16.466 UTC [1616734] STATEMENT:  SELECT testfunc();
2023-07-22 04:18:16.479 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.479 UTC [1616734] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ val FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 8 at FOR over EXECUTE statement
2023-07-22 04:18:16.479 UTC [1616734] STATEMENT:  SELECT testfunc();
2023-07-22 04:18:16.485 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.485 UTC [1616734] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over cursor
2023-07-22 04:18:16.485 UTC [1616734] STATEMENT:  SELECT testfunc();
2023-07-22 04:18:16.491 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.491 UTC [1616734] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 04:18:16.491 UTC [1616734] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 04:18:16.495 UTC [1616734] ERROR:  relation "ttx" does not exist at character 34
2023-07-22 04:18:16.495 UTC [1616734] QUERY:  SELECT /*+ SeqScan(t1) */ * FROM ttx ORDER BY id
2023-07-22 04:18:16.495 UTC [1616734] CONTEXT:  PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 04:18:16.495 UTC [1616734] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 04:18:16.495 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:16.495 UTC [1616734] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 04:18:19.535 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:19.535 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(t1) */ SELECT count(*) FROM t1 WHERE id < $1"
	PL/pgSQL function dynsql1(integer) line 4 at EXECUTE
2023-07-22 04:18:19.535 UTC [1616734] STATEMENT:  SELECT dynsql1(9000);
2023-07-22 04:18:22.565 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1): p1_c1_pkey
2023-07-22 04:18:22.565 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:18:22.565 UTC [1616734] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:18:22.565 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:18:22.565 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:18:22.565 UTC [1616734] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:18:22.565 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:18:22.565 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:18:22.565 UTC [1616734] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:18:22.565 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c1 p1_c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:22.565 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:18:22.565 UTC [1616734] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:18:22.566 UTC [1616734] LOG:  available indexes for IndexScan(p1_c2): p1_c2_pkey
2023-07-22 04:18:22.566 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:18:22.566 UTC [1616734] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:18:22.566 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c2 p1_c2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:22.566 UTC [1616734] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:18:22.566 UTC [1616734] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:18:23.578 UTC [1616734] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 04:18:23.578 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.578 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 04:18:23.578 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.578 UTC [1616734] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 04:18:23.578 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.578 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 04:18:23.578 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.578 UTC [1616734] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 04:18:23.578 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.579 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 04:18:23.579 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.579 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 04:18:23.579 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.579 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 04:18:23.579 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.579 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 04:18:23.579 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.582 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.582 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.583 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 04:18:23.583 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.584 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.584 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.588 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.588 UTC [1616734] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.589 UTC [1616734] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 04:18:23.589 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.589 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 04:18:23.589 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.589 UTC [1616734] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 04:18:23.589 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.589 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 04:18:23.589 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.590 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:18:23.590 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.591 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.591 UTC [1616734] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:18:23.592 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 04:18:23.592 UTC [1616734] STATEMENT:  /*+ Rows() */ SELECT 1;
2023-07-22 04:18:23.592 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 04:18:23.592 UTC [1616734] STATEMENT:  /*+ Rows(x) */ SELECT 1;
2023-07-22 04:18:23.597 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.597 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 #99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.600 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.600 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 +99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.604 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.604 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 -99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.607 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.607 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 *99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.611 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.01)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.611 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 *0.01) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.615 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #aa)
	
2023-07-22 04:18:23.615 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 #aa) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.618 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 /99)
	
2023-07-22 04:18:23.618 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 /99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.621 UTC [1616734] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999) 
2023-07-22 04:18:23.622 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99999)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.622 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 -99999) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:18:23.629 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #22)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.629 UTC [1616734] STATEMENT:  /*+ Rows(t1 t2 #22) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 04:18:23.633 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t3 *10)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.633 UTC [1616734] STATEMENT:  /*+ Rows(t1 t3 *10) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 04:18:23.637 UTC [1616734] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:23.637 UTC [1616734] STATEMENT:  /*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;
2023-07-22 04:18:24.544 UTC [1616816] ERROR:  extension "pg_hint_plan" must be installed in schema "hint_plan"
2023-07-22 04:18:24.544 UTC [1616816] STATEMENT:  CREATE EXTENSION pg_hint_plan SCHEMA other_schema;
2023-07-22 04:18:24.572 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.572 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.576 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.576 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.577 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.577 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) SELECT c1, c2 AS c_2 /*+SeqScan(t1)*/ FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.595 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.595 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.597 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.597 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.654 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.654 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) SELECT c1 FROM s1.t1;
2023-07-22 04:18:24.674 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.674 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.693 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.693 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 OR t1.c1 = 0;
2023-07-22 04:18:24.716 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.716 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.717 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.717 UTC [1616816] STATEMENT:  /*+ Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.717 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.717 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.718 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.718 UTC [1616816] STATEMENT:  /*+ Set (enable_indexscan"off") Set (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.719 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.719 UTC [1616816] STATEMENT:  /*+Set ( enable_indexscan"off")Set ( enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.720 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.720 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off" ) Set(enable_bitmapscan"off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.721 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.721 UTC [1616816] STATEMENT:  /*+Set( enable_indexscan "off" )Set( enable_bitmapscan "off" )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.721 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.721 UTC [1616816] STATEMENT:  /*+ Set ( enable_indexscan "off" ) Set ( enable_bitmapscan "off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.722 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.722 UTC [1616816] STATEMENT:  /*+	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.723 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.723 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.724 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.724 UTC [1616816] STATEMENT:  /*+	Set	(enable_indexscan"off")	Set	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.724 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.724 UTC [1616816] STATEMENT:  /*+Set	(	enable_indexscan"off")Set	(	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.725 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.725 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off"	)	Set(enable_bitmapscan"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.726 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.726 UTC [1616816] STATEMENT:  /*+Set(	enable_indexscan	"off"	)Set(	enable_bitmapscan	"off"	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.727 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.727 UTC [1616816] STATEMENT:  /*+	Set	(	enable_indexscan	"off"	)	Set	(	enable_bitmapscan	"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.728 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.728 UTC [1616816] STATEMENT:  /*+
	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.728 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.728 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.729 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.729 UTC [1616816] STATEMENT:  /*+
	Set
	(enable_indexscan"off")
	Set
	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.730 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.730 UTC [1616816] STATEMENT:  /*+Set
	(
	enable_indexscan"off")Set
	(
	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.730 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.730 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off"
	)
	Set(enable_bitmapscan"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.731 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.731 UTC [1616816] STATEMENT:  /*+Set(
	enable_indexscan
	"off"
	)Set(
	enable_bitmapscan
	"off"
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.732 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.732 UTC [1616816] STATEMENT:  /*+
	Set
	(
	enable_indexscan
	"off"
	)
	Set
	(
	enable_bitmapscan
	"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.732 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.732 UTC [1616816] STATEMENT:  /*+ 	
		 Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.733 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.733 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.733 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.733 UTC [1616816] STATEMENT:  /*+ 	
		 Set 	
		 (enable_indexscan"off") 	
		 Set 	
		 (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.734 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.734 UTC [1616816] STATEMENT:  /*+Set 	
		 ( 	
		 enable_indexscan"off")Set 	
		 ( 	
		 enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.734 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.734 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan"off" 	
		 ) 	
		 Set(enable_bitmapscan"off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.735 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.735 UTC [1616816] STATEMENT:  /*+Set( 	
		 enable_indexscan 	
		 "off" 	
		 )Set( 	
		 enable_bitmapscan 	
		 "off" 	
		 )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.735 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.735 UTC [1616816] STATEMENT:  /*+ 	
		 Set 	
		 ( 	
		 enable_indexscan 	
		 "off" 	
		 ) 	
		 Set 	
		 ( 	
		 enable_bitmapscan 	
		 "off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.736 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.736 UTC [1616816] STATEMENT:  /*+SeqScan(t)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 04:18:24.736 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.736 UTC [1616816] STATEMENT:  /*+SeqScan(ttt)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 04:18:24.737 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.737 UTC [1616816] STATEMENT:  /*+SeqScan("t")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 04:18:24.737 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.737 UTC [1616816] STATEMENT:  /*+SeqScan("ttt")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 04:18:24.737 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.737 UTC [1616816] STATEMENT:  /*+SeqScan(T)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 04:18:24.738 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.738 UTC [1616816] STATEMENT:  /*+SeqScan(TTT)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 04:18:24.738 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.738 UTC [1616816] STATEMENT:  /*+SeqScan("T")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 04:18:24.738 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.738 UTC [1616816] STATEMENT:  /*+SeqScan("TTT")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 04:18:24.739 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("(")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.739 UTC [1616816] STATEMENT:  /*+SeqScan("(")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "(" WHERE "(".c1 = 1;
2023-07-22 04:18:24.739 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:18:24.739 UTC [1616816] STATEMENT:  /*+SeqScan())*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 04:18:24.740 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.740 UTC [1616816] STATEMENT:  /*+SeqScan(")")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 04:18:24.740 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")))")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.740 UTC [1616816] STATEMENT:  /*+SeqScan(")))")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")))" WHERE ")))".c1 = 1;
2023-07-22 04:18:24.741 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.741 UTC [1616816] STATEMENT:  /*+SeqScan("""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """" WHERE """".c1 = 1;
2023-07-22 04:18:24.741 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""""""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.741 UTC [1616816] STATEMENT:  /*+SeqScan("""""""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """""""" WHERE """""""".c1 = 1;
2023-07-22 04:18:24.741 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:18:24.741 UTC [1616816] STATEMENT:  /*+SeqScan( )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 04:18:24.742 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(" ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.742 UTC [1616816] STATEMENT:  /*+SeqScan(" ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 04:18:24.742 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("   ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.742 UTC [1616816] STATEMENT:  /*+SeqScan("   ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "   " WHERE "   ".c1 = 1;
2023-07-22 04:18:24.742 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:18:24.742 UTC [1616816] STATEMENT:  /*+SeqScan(	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 04:18:24.742 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.742 UTC [1616816] STATEMENT:  /*+SeqScan("	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 04:18:24.743 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("			")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.743 UTC [1616816] STATEMENT:  /*+SeqScan("			")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "			" WHERE "			".c1 = 1;
2023-07-22 04:18:24.743 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:18:24.743 UTC [1616816] STATEMENT:  /*+SeqScan(
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 04:18:24.743 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.743 UTC [1616816] STATEMENT:  /*+SeqScan("
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 04:18:24.744 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	
	
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.744 UTC [1616816] STATEMENT:  /*+SeqScan("
	
	
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	
	
	" WHERE "
	
	
	".c1 = 1;
2023-07-22 04:18:24.744 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.744 UTC [1616816] STATEMENT:  /*+SeqScan(Set)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 04:18:24.744 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.744 UTC [1616816] STATEMENT:  /*+SeqScan("Set")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 04:18:24.745 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("Set SeqScan Leading")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.745 UTC [1616816] STATEMENT:  /*+SeqScan("Set SeqScan Leading")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set SeqScan Leading" WHERE "Set SeqScan Leading".c1 = 1;
2023-07-22 04:18:24.745 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.745 UTC [1616816] STATEMENT:  /*+SeqScan(あ)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 04:18:24.745 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.745 UTC [1616816] STATEMENT:  /*+SeqScan(あいう)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 04:18:24.746 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.746 UTC [1616816] STATEMENT:  /*+SeqScan("あ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 04:18:24.746 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.746 UTC [1616816] STATEMENT:  /*+SeqScan("あいう")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 04:18:24.747 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan("tT()"" 	
	Setあ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.747 UTC [1616816] STATEMENT:  /*+SeqScan("tT()"" 	
	Setあ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "tT()"" 	
	Setあ" WHERE "tT()"" 	
	Setあ".c1 = 1;
2023-07-22 04:18:24.747 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(a123456789b123456789c123456789d123456789e123456789f123)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.747 UTC [1616816] STATEMENT:  /*+SeqScan(a123456789b123456789c123456789d123456789e123456789f123)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "123456789012345678901234567890123456789012345678901234" WHERE "123456789012345678901234567890123456789012345678901234".c1 = 1;
2023-07-22 04:18:24.747 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.747 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)Set enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.748 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.748 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan off Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.748 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.748 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan "off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.748 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.748 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)SeqScan("")Set(enable_bitmapscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.748 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.748 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)NoSet(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.749 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.749 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)"Set"(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.751 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.751 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.752 UTC [1616816] ERROR:  invalid value for parameter "pg_hint_plan.debug_print": "enable"
2023-07-22 04:18:24.752 UTC [1616816] HINT:  Available values: off, on, detailed, verbose.
2023-07-22 04:18:24.752 UTC [1616816] STATEMENT:  SET pg_hint_plan.debug_print TO enable;
2023-07-22 04:18:24.754 UTC [1616816] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:18:24.754 UTC [1616816] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:18:24.754 UTC [1616816] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:18:24.754 UTC [1616816] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:18:24.754 UTC [1616816] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:18:24.754 UTC [1616816] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:18:24.755 UTC [1616816] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:18:24.755 UTC [1616816] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:18:24.755 UTC [1616816] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:18:24.755 UTC [1616816] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:18:24.756 UTC [1616816] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:18:24.756 UTC [1616816] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:18:24.756 UTC [1616816] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:18:24.756 UTC [1616816] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:18:24.756 UTC [1616816] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:18:24.756 UTC [1616816] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:18:24.756 UTC [1616816] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "fatal"
2023-07-22 04:18:24.756 UTC [1616816] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 04:18:24.756 UTC [1616816] STATEMENT:  SET pg_hint_plan.parse_messages TO fatal;
2023-07-22 04:18:24.756 UTC [1616816] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "panic"
2023-07-22 04:18:24.756 UTC [1616816] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 04:18:24.756 UTC [1616816] STATEMENT:  SET pg_hint_plan.parse_messages TO panic;
2023-07-22 04:18:24.756 UTC [1616816] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "on"
2023-07-22 04:18:24.756 UTC [1616816] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 04:18:24.756 UTC [1616816] STATEMENT:  SET pg_hint_plan.parse_messages TO on;
2023-07-22 04:18:24.759 UTC [1616816] ERROR:  parameter "pg_hint_plan.enable_hint_table" requires a Boolean value
2023-07-22 04:18:24.759 UTC [1616816] STATEMENT:  SET pg_hint_plan.enable_hint_table TO enable;
2023-07-22 04:18:24.769 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.769 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.769 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(no_table)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.769 UTC [1616816] STATEMENT:  /*+SeqScan(no_table)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.769 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	error hint:
	
2023-07-22 04:18:24.769 UTC [1616816] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:24.769 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	error hint:
	
2023-07-22 04:18:24.769 UTC [1616816] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:24.770 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	IndexScan(t1)
	error hint:
	
2023-07-22 04:18:24.770 UTC [1616816] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:24.770 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_indexscan enable)
	
2023-07-22 04:18:24.770 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan enable)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.772 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.772 UTC [1616816] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:18:24.773 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.773 UTC [1616816] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:18:24.773 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.773 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.773 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.773 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.774 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.774 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.774 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.774 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.774 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.774 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.774 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.774 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.775 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.775 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.775 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.775 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:18:24.777 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.777 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:18:24.777 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.777 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.777 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.777 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.777 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.777 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.778 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.778 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.778 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.778 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.778 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.778 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.779 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.779 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:18:24.786 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.786 UTC [1616816] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:18:24.788 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.788 UTC [1616816] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:18:24.788 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.788 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.788 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.788 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.788 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.788 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.788 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.788 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.789 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.789 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.789 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.789 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.790 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.790 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.790 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.790 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:18:24.791 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.791 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:18:24.792 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.792 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.792 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.792 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.792 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.792 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.792 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.792 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.792 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.792 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.793 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.793 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.794 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.794 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:18:24.797 UTC [1616816] ERROR:  prepared statement "p1" does not exist
2023-07-22 04:18:24.797 UTC [1616816] STATEMENT:  EXECUTE p1;
2023-07-22 04:18:24.798 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.798 UTC [1616816] STATEMENT:  /*+Set(enable_seqscan off)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.798 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.798 UTC [1616816] STATEMENT:  /*+SeqScan(t1)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.799 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1 t1)
	
2023-07-22 04:18:24.799 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:18:24.801 UTC [1616816] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 04:18:24.801 UTC [1616816] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 04:18:24.801 UTC [1616816] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.802 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.802 UTC [1616816] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.803 UTC [1616816] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 04:18:24.803 UTC [1616816] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 04:18:24.803 UTC [1616816] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.804 UTC [1616816] ERROR:  prepared statement "p2" does not exist
2023-07-22 04:18:24.804 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 04:18:24.805 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.805 UTC [1616816] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.806 UTC [1616816] ERROR:  prepared statement "p2" does not exist
2023-07-22 04:18:24.806 UTC [1616816] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 04:18:24.808 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.808 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.811 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.811 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.813 UTC [1616816] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.813 UTC [1616816] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.821 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.821 UTC [1616817] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.821 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.821 UTC [1616817] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.821 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.821 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.821 UTC [1616817] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.822 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.822 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.822 UTC [1616817] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.822 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.822 UTC [1616817] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.823 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.823 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.823 UTC [1616817] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.824 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.824 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.824 UTC [1616817] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.824 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.824 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.824 UTC [1616817] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.824 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.824 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.824 UTC [1616817] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.824 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.824 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.824 UTC [1616817] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.825 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.825 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.825 UTC [1616817] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.825 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.825 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.825 UTC [1616817] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.825 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.825 UTC [1616817] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:18:24.825 UTC [1616817] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.825 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.825 UTC [1616817] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:18:24.827 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.827 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.827 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.827 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.827 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.827 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.827 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.827 UTC [1616817] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:18:24.827 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	HashJoin(st_1 st_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.827 UTC [1616817] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:18:24.828 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.828 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.828 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:18:24.828 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.828 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:18:24.828 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.828 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.828 UTC [1616817] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.828 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st_1 st_2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.828 UTC [1616817] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.829 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.829 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.829 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.829 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.829 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.830 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.830 UTC [1616817] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 04:18:24.830 UTC [1616817] STATEMENT:  EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.831 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.831 UTC [1616817] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 04:18:24.831 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.831 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 04:18:24.831 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.831 UTC [1616817] ERROR:  function recall_planner_one_t(integer) does not exist
2023-07-22 04:18:24.831 UTC [1616817] STATEMENT:  DROP FUNCTION recall_planner_one_t(int);
2023-07-22 04:18:24.831 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.831 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.831 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.831 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 04:18:24.831 UTC [1616817] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.832 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.832 UTC [1616817] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:18:24.832 UTC [1616817] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.832 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	MergeJoin(t_1 t_2)
	error hint:
	
2023-07-22 04:18:24.832 UTC [1616817] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:18:24.840 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.840 UTC [1616817] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 04:18:24.840 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.840 UTC [1616817] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 04:18:24.848 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.848 UTC [1616817] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 04:18:24.849 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.849 UTC [1616817] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 04:18:24.851 UTC [1616817] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.851 UTC [1616817] STATEMENT:  EXPLAIN EXECUTE test_query(array[1,2,3]);
2023-07-22 04:18:24.864 UTC [1616707] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:18:24.865 UTC [1616707] LOG:  parameter "session_preload_libraries" changed to "pg_hint_plan"
2023-07-22 04:18:24.866 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.866 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.866 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.866 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 04:18:24.867 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.867 UTC [1616821] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 04:18:24.867 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.867 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.867 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.867 UTC [1616821] STATEMENT:  /*+SeqScan(s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.867 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.867 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.867 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.867 UTC [1616821] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.868 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.868 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = 1 AND t1.c1 = t2.c1;
2023-07-22 04:18:24.869 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.869 UTC [1616821] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:24.869 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.869 UTC [1616821] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 04:18:24.869 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(s2t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.869 UTC [1616821] STATEMENT:  /*+BitmapScan(s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 04:18:24.870 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.870 UTC [1616821] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 WHERE s1.t1.c1 = 1) FROM s1.t1 WHERE s1.t1.c1 = 1;
2023-07-22 04:18:24.870 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t11)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.870 UTC [1616821] STATEMENT:  /*+BitmapScan(t11)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 04:18:24.870 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t12)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.870 UTC [1616821] STATEMENT:  /*+BitmapScan(t12)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 04:18:24.871 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.871 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.872 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.872 UTC [1616821] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE p1.c1 = 1;
2023-07-22 04:18:24.873 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ul1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.873 UTC [1616821] STATEMENT:  /*+SeqScan(ul1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 WHERE ul1.c1 = 1;
2023-07-22 04:18:24.876 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tm1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.876 UTC [1616821] STATEMENT:  /*+SeqScan(tm1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 WHERE tm1.c1 = 1;
2023-07-22 04:18:24.877 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(pg_class)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.877 UTC [1616821] STATEMENT:  /*+SeqScan(pg_class)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class WHERE oid = 1;
2023-07-22 04:18:24.877 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(ft1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.877 UTC [1616821] STATEMENT:  /*+SeqScan(ft1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() AS ft1 WHERE ft1.c1 = 1;
2023-07-22 04:18:24.878 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(val1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.878 UTC [1616821] STATEMENT:  /*+SeqScan(val1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 04:18:24.878 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.878 UTC [1616821] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 04:18:24.878 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(c1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.878 UTC [1616821] STATEMENT:  /*+SeqScan(c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(c1) FROM s1.t1 WHERE t1.c1 = 1)
	SELECT * FROM s1.t1, c1 WHERE t1.c1 = 1 AND t1.c1 = c1.c1;
2023-07-22 04:18:24.879 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(v1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.879 UTC [1616821] STATEMENT:  /*+SeqScan(v1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 WHERE v1.c1 = 1;
2023-07-22 04:18:24.879 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.879 UTC [1616821] STATEMENT:  /*+SeqScan(s1)*/
	EXPLAIN (COSTS false) SELECT * FROM (SELECT * FROM s1.t1 WHERE t1.c1 = 1) AS s1 WHERE s1.c1 = 1;
2023-07-22 04:18:24.881 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.881 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.882 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.882 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.882 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.882 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.882 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.882 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.882 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.882 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.885 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.885 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.885 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.885 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.886 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.886 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.886 UTC [1616821] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:18:24.886 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.886 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.886 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.886 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.886 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.887 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.887 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:24.888 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.888 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:24.888 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.888 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:24.889 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.889 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:24.890 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.890 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:24.890 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.890 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:24.890 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.890 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:24.892 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.892 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:18:24.892 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.892 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:18:24.893 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.893 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:18:24.893 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.893 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:18:24.893 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.893 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:18:24.896 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.896 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.896 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.896 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.896 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.896 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.896 UTC [1616821] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:18:24.896 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.897 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.897 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.897 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.897 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.897 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.897 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:24.900 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.900 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:18:24.900 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.900 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:18:24.900 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.900 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:18:24.900 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.900 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:18:24.901 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.901 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:18:24.906 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.906 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.906 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.906 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.906 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.906 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.907 UTC [1616821] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:18:24.907 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.907 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.907 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.907 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.907 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.909 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.909 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:24.911 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.911 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:24.911 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.911 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:24.911 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.911 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:24.911 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.911 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:24.911 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.911 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:24.913 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.913 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.913 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.913 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.913 UTC [1616821] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 04:18:24.913 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.913 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.913 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.913 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.913 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.916 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.916 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.916 UTC [1616821] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:18:24.916 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.916 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.916 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.916 UTC [1616821] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 04:18:24.916 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.917 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.917 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.917 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.917 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.917 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.917 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.917 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.917 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.918 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.918 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.921 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.921 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.921 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.921 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.921 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.921 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.921 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.921 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.922 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.922 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.922 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.922 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.922 UTC [1616821] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:18:24.922 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.922 UTC [1616821] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:18:24.922 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.923 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.923 UTC [1616821] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:24.924 UTC [1616821] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:18:24.924 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.924 UTC [1616821] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:18:24.924 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.925 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r1)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.925 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.926 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.926 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.926 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.926 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.927 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.927 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.930 UTC [1616821] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:18:24.930 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.930 UTC [1616821] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:18:24.930 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.930 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.930 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.930 UTC [1616821] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:18:24.930 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.930 UTC [1616821] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:18:24.930 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.931 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.931 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.933 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.933 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.934 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.934 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.934 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.934 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.934 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.934 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.934 UTC [1616821] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:18:24.934 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.935 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.935 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.938 UTC [1616821] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:18:24.938 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.938 UTC [1616821] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:18:24.938 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.939 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.939 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.939 UTC [1616821] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:18:24.939 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.939 UTC [1616821] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:18:24.939 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.939 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.939 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.940 UTC [1616821] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:18:24.940 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.940 UTC [1616821] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:18:24.940 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.940 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.940 UTC [1616821] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.943 UTC [1616821] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:18:24.943 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.943 UTC [1616821] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:18:24.943 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.943 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.943 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.944 UTC [1616821] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:18:24.944 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.944 UTC [1616821] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:18:24.944 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.944 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.944 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.945 UTC [1616821] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:18:24.945 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.945 UTC [1616821] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 04:18:24.945 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.945 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.945 UTC [1616821] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.946 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.946 UTC [1616821] STATEMENT:  /*+BitmapScan(v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:24.947 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(v1t1)
	BitmapScan(v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.947 UTC [1616821] STATEMENT:  /*+SeqScan(v1t1)BitmapScan(v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:24.948 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(r4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.948 UTC [1616821] STATEMENT:  /*+BitmapScan(r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.949 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r4t1)
	BitmapScan(r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.949 UTC [1616821] STATEMENT:  /*+SeqScan(r4t1)BitmapScan(r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.949 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.949 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 04:18:24.949 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.949 UTC [1616821] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 04:18:24.949 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 04:18:24.949 UTC [1616821] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.950 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.950 UTC [1616821] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 04:18:24.950 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.950 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:18:24.950 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.950 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.951 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.951 UTC [1616821] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.951 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.951 UTC [1616821] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:18:24.951 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.951 UTC [1616821] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 04:18:24.952 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.952 UTC [1616821] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.952 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.952 UTC [1616821] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:24.953 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.953 UTC [1616821] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid IN ('(1,1)', '(2,2)', '(3,3)');
2023-07-22 04:18:24.953 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.953 UTC [1616821] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:18:24.953 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.953 UTC [1616821] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.954 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.954 UTC [1616821] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.954 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.954 UTC [1616821] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:18:24.954 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.954 UTC [1616821] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 04:18:24.955 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.955 UTC [1616821] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.955 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.955 UTC [1616821] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:24.955 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.955 UTC [1616821] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.956 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.956 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.956 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.956 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:18:24.956 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.956 UTC [1616821] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:24.957 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.957 UTC [1616821] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:18:24.959 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_i3
2023-07-22 04:18:24.959 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.959 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.959 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.959 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_i3 ti1_i2
2023-07-22 04:18:24.959 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.959 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.959 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.959 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:18:24.959 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.959 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.959 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.960 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_i3
2023-07-22 04:18:24.960 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.960 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.960 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.960 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_i3 ti1_i2
2023-07-22 04:18:24.960 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.960 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.960 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.960 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:18:24.960 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.960 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.960 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:24.961 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3
2023-07-22 04:18:24.961 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:18:24.961 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.961 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:18:24.961 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3 ti1_i2
2023-07-22 04:18:24.961 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:18:24.961 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.961 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:18:24.961 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:18:24.961 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:18:24.961 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.961 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:18:24.969 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_btree
2023-07-22 04:18:24.969 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.969 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.969 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.969 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_hash
2023-07-22 04:18:24.969 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.969 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.969 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.970 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_gist
2023-07-22 04:18:24.970 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.970 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.970 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.970 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_gin
2023-07-22 04:18:24.970 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.970 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.970 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.970 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_expr
2023-07-22 04:18:24.970 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.970 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.970 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.971 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 04:18:24.971 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.971 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.971 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.971 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_uniq
2023-07-22 04:18:24.971 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.971 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.971 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.972 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_multi
2023-07-22 04:18:24.972 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.972 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.972 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.972 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_ts
2023-07-22 04:18:24.972 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.972 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.972 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.972 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 04:18:24.972 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.972 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.972 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.973 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_c2_key
2023-07-22 04:18:24.973 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.973 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.973 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.973 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 04:18:24.973 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.973 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.973 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.974 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_hash
2023-07-22 04:18:24.974 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.974 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.974 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.974 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_gist
2023-07-22 04:18:24.974 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.974 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.974 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.974 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_gin
2023-07-22 04:18:24.974 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.974 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.974 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.975 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_expr
2023-07-22 04:18:24.975 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.975 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.975 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.975 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 04:18:24.975 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.975 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.975 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.976 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_uniq
2023-07-22 04:18:24.976 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.976 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.976 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.976 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_multi
2023-07-22 04:18:24.976 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.976 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.976 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.976 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_ts
2023-07-22 04:18:24.976 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.976 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.976 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.977 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 04:18:24.977 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.977 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.977 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.977 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_c2_key
2023-07-22 04:18:24.977 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.977 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.977 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:18:24.978 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree
2023-07-22 04:18:24.978 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.978 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.978 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.978 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_hash
2023-07-22 04:18:24.978 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:24.978 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.978 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:24.979 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gist
2023-07-22 04:18:24.979 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 04:18:24.979 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.979 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 04:18:24.979 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gin
2023-07-22 04:18:24.979 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:24.979 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.979 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:24.979 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_expr
2023-07-22 04:18:24.979 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 04:18:24.979 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.979 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 04:18:24.980 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 04:18:24.980 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 04:18:24.980 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.980 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 04:18:24.980 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_uniq
2023-07-22 04:18:24.980 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.980 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.980 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.981 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_multi
2023-07-22 04:18:24.981 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.981 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.981 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.981 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_ts
2023-07-22 04:18:24.981 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 04:18:24.981 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.981 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 04:18:24.982 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 04:18:24.982 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.982 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.982 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:24.982 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_c2_key
2023-07-22 04:18:24.982 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 04:18:24.982 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.982 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 04:18:24.983 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 04:18:24.983 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.983 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.983 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.986 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 04:18:24.986 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.986 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.986 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.989 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 04:18:24.989 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.989 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.989 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.993 UTC [1616821] LOG:  available indexes for IndexScan(ti1):
2023-07-22 04:18:24.993 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.993 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.993 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.996 UTC [1616821] LOG:  available indexes for BitmapScan(ti1):
2023-07-22 04:18:24.996 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.996 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.996 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.999 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1):
2023-07-22 04:18:24.999 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:24.999 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:24.999 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:18:25.002 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.002 UTC [1616821] STATEMENT:  /*+TidScan(t1)*/ EXPLAIN (COSTS true) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.006 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.006 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE c1 = 100;
2023-07-22 04:18:25.006 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.006 UTC [1616821] STATEMENT:  /*+SeqScan(t1)BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:25.007 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.007 UTC [1616821] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:25.007 UTC [1616821] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:18:25.007 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.007 UTC [1616821] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:18:25.007 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.008 UTC [1616821] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 04:18:25.008 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.008 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	TidScan(b4t1)
	not used hint:
	SeqScan(b1t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.008 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.009 UTC [1616821] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:18:25.009 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.009 UTC [1616821] LOG:  available indexes for BitmapScan(b4t2): t2_pkey
2023-07-22 04:18:25.009 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.009 UTC [1616821] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 04:18:25.009 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.009 UTC [1616821] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 04:18:25.009 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.009 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	SeqScan(b2t2)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	BitmapScan(b4t2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.009 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.010 UTC [1616821] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:18:25.010 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.010 UTC [1616821] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:18:25.010 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.011 UTC [1616821] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 04:18:25.011 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.011 UTC [1616821] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 04:18:25.011 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.011 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.011 UTC [1616821] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:18:25.012 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.012 UTC [1616821] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.012 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.012 UTC [1616821] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.013 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.013 UTC [1616821] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.013 UTC [1616821] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 04:18:25.013 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.013 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.013 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.013 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.013 UTC [1616821] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.014 UTC [1616821] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 04:18:25.014 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.014 UTC [1616821] LOG:  available indexes for IndexScan(p1c1): p1c1_pkey
2023-07-22 04:18:25.014 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.014 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.014 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:18:25.014 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.014 UTC [1616821] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.016 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.016 UTC [1616821] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.016 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.016 UTC [1616821] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.017 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2c1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.017 UTC [1616821] STATEMENT:  /*+IndexScan(p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.020 UTC [1616821] LOG:  available indexes for IndexScan(p1): p1_parent
2023-07-22 04:18:25.020 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 04:18:25.020 UTC [1616821] LOG:  available indexes for IndexScan(p1c1): p1c1_c4_expr_idx
2023-07-22 04:18:25.020 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 04:18:25.021 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_parent)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.021 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 04:18:25.024 UTC [1616821] LOG:  available indexes for IndexScan(p1): p1_i2
2023-07-22 04:18:25.024 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:18:25.024 UTC [1616821] LOG:  available indexes for IndexScan(p1c1):
2023-07-22 04:18:25.024 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:18:25.024 UTC [1616821] LOG:  available indexes for IndexScan(p1c2):
2023-07-22 04:18:25.024 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:18:25.024 UTC [1616821] LOG:  available indexes for IndexScan(p1c3):
2023-07-22 04:18:25.024 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:18:25.024 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.024 UTC [1616821] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:18:25.027 UTC [1616821] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:18:25.027 UTC [1616821] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.027 UTC [1616821] LOG:  available indexes for IndexScan(p2c1): p2c1_pkey
2023-07-22 04:18:25.027 UTC [1616821] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.027 UTC [1616821] LOG:  available indexes for IndexScan(p2c1c1):
2023-07-22 04:18:25.027 UTC [1616821] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.027 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.027 UTC [1616821] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:18:25.030 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	IndexScan(ti1)
	error hint:
	
2023-07-22 04:18:25.030 UTC [1616821] STATEMENT:  /*+IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.031 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 04:18:25.031 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.031 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 04:18:25.031 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.031 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	BitmapScan(ti1)
	IndexScan(ti1)
	error hint:
	
2023-07-22 04:18:25.031 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1) IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.031 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 04:18:25.031 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.031 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	BitmapScan(ti1 ti1_hash)
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 04:18:25.031 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.032 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.032 UTC [1616821] STATEMENT:  /*+SeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.032 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.032 UTC [1616821] STATEMENT:  /*+SeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.032 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.032 UTC [1616821] STATEMENT:  /*+SeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.032 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.032 UTC [1616821] STATEMENT:  /*+IndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.032 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 04:18:25.032 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.032 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.032 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_btree ti1_pkey
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  available indexes for BitmapScan(ti1): ti1_btree ti1_pkey
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.033 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.033 UTC [1616821] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.034 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	TidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.034 UTC [1616821] STATEMENT:  /*+TidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.034 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.034 UTC [1616821] STATEMENT:  /*+TidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.034 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.034 UTC [1616821] STATEMENT:  /*+TidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.034 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.034 UTC [1616821] STATEMENT:  /*+NoSeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.034 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.034 UTC [1616821] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.034 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.034 UTC [1616821] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.035 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.035 UTC [1616821] STATEMENT:  /*+NoIndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.035 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.035 UTC [1616821] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.035 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.035 UTC [1616821] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.035 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.035 UTC [1616821] STATEMENT:  /*+NoBitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.035 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.035 UTC [1616821] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.036 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.036 UTC [1616821] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.036 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.036 UTC [1616821] STATEMENT:  /*+NoTidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.036 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.036 UTC [1616821] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.036 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.036 UTC [1616821] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.036 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.036 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree ti1_pkey
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+NoIndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey)
	
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:25.037 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:18:25.037 UTC [1616821] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:18:25.038 UTC [1616821] LOG:  available indexes for IndexScanRegexp(ti1): ti1_c2_key
2023-07-22 04:18:25.038 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.038 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_.*_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.038 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.038 UTC [1616821] LOG:  available indexes for IndexScanRegexp(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:18:25.038 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.038 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_i.)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.038 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.038 UTC [1616821] LOG:  available indexes for IndexScanRegexp(ti1):
2023-07-22 04:18:25.038 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.038 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.038 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.039 UTC [1616821] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 04:18:25.039 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.039 UTC [1616821] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_pkey
2023-07-22 04:18:25.039 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.039 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 .*pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.039 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.039 UTC [1616821] LOG:  available indexes for IndexScanRegexp(p1): p1_i2 p1_i
2023-07-22 04:18:25.039 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.039 UTC [1616821] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_i p1c1_c4_expr_idx
2023-07-22 04:18:25.039 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.039 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1.*i)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.039 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  available indexes for IndexScanRegexp(p1c1):
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  available indexes for IndexScan(ti1):
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.040 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_i2 ti1_i1
2023-07-22 04:18:25.040 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.041 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.041 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.041 UTC [1616821] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 04:18:25.041 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.041 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.041 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.041 UTC [1616821] LOG:  available indexes for IndexScan(ti1):
2023-07-22 04:18:25.041 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.041 UTC [1616821] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist1 not_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.041 UTC [1616821] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:18:25.048 UTC [1616707] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:18:25.048 UTC [1616707] LOG:  parameter "session_preload_libraries" removed from configuration file, reset to default
2023-07-22 04:18:25.056 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.056 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.057 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.057 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:18:25.057 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.057 UTC [1616893] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:18:25.057 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.057 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.057 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s1.t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.057 UTC [1616893] STATEMENT:  /*+HashJoin(s1.t1 s1.t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.058 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.058 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.058 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.058 UTC [1616893] STATEMENT:  /*+HashJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.058 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.058 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.059 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 04:18:25.059 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:25.059 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.059 UTC [1616893] STATEMENT:  /*+HashJoin(s1.t1 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:25.060 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(s2t1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.060 UTC [1616893] STATEMENT:  /*+HashJoin(t1 s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 04:18:25.061 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.061 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.062 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.062 UTC [1616893] STATEMENT:  /*+NestLoop(st1 st2)HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.062 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.062 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.062 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 04:18:25.062 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.063 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	HashJoin(t2 t2)
	
2023-07-22 04:18:25.063 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t1)HashJoin(t2 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.064 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1 t2 t2)
	
2023-07-22 04:18:25.064 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.065 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.065 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.066 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.066 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.067 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.067 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.071 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.071 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.072 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.072 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 04:18:25.073 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.073 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.073 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.073 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.074 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(*VALUES* t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.074 UTC [1616893] STATEMENT:  /*+NestLoop(*VALUES* t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.074 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(c1 t1)
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.074 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)HashJoin(t1 c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 04:18:25.075 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.075 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.076 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.076 UTC [1616893] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.077 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.077 UTC [1616893] STATEMENT:  /*+MergeJoin(t1 t2)NestLoop(st1 st2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 04:18:25.080 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.080 UTC [1616893] STATEMENT:  /*+HashJoin(t1 st2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:18:25.081 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.081 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:18:25.084 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.084 UTC [1616893] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:18:25.088 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.088 UTC [1616893] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:18:25.089 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.089 UTC [1616893] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:18:25.091 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.091 UTC [1616893] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:18:25.093 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.093 UTC [1616893] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.097 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.097 UTC [1616893] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.102 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.102 UTC [1616893] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:25.112 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.112 UTC [1616893] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 04:18:25.114 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(bmt1 c1)
	Leading(c1 bmt1)
	not used hint:
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.114 UTC [1616893] STATEMENT:  /*+
	Leading(c1 bmt1)
	HashJoin(bmt1 c1)
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:25.116 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.116 UTC [1616893] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.120 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	MergeJoin(bmt4 c1)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	HashJoin(bmt3 bmt4 c1)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.120 UTC [1616893] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.123 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	MergeJoin(bmt4 c1)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.123 UTC [1616893] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.126 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r1 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.126 UTC [1616893] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r1)
	MergeJoin(t4 t3 t2 t1 r1)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.127 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	NestLoop(b1t2 b1t3 b1t4)
	HashJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r1_)
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.127 UTC [1616893] STATEMENT:  /*+
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	MergeJoin(b1t4 b1t3 b1t2 b1t1 r1_)
	HashJoin(b1t4 b1t3 b1t2 b1t1)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.130 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.130 UTC [1616893] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.131 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.131 UTC [1616893] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.134 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.134 UTC [1616893] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.135 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.135 UTC [1616893] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.138 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.138 UTC [1616893] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.139 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.139 UTC [1616893] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.140 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.140 UTC [1616893] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.143 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b2t1 b2t2 b2t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.143 UTC [1616893] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.144 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.144 UTC [1616893] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.145 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.145 UTC [1616893] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.146 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 04:18:25.146 UTC [1616893] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.147 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.147 UTC [1616893] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.148 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(r4t1 r4t1)
	
2023-07-22 04:18:25.148 UTC [1616893] STATEMENT:  /*+HashJoin(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.148 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.148 UTC [1616893] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.149 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t3)
	NestLoop(t1 t2 t3)
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.149 UTC [1616893] STATEMENT:  /*+ Leading(t3 t1 t2) HashJoin(t3 t1)NestLoop(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.149 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	NestLoop(*VALUES* t1 t2)
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.149 UTC [1616893] STATEMENT:  /*+ Leading(*VALUES* t1 t2) HashJoin(*VALUES* t1)NestLoop(*VALUES* t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.151 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	HashJoin(t2 t3 t4)
	MergeJoin(t1 t2 t3 t4)
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.151 UTC [1616893] STATEMENT:  /*+ Leading(t4 t3 t2 t1) NestLoop(t4 t3)HashJoin(t4 t3 t2)MergeJoin(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.151 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	duplication hint:
	error hint:
	HashJoin(*VALUES* t2 t3)
	MergeJoin(*VALUES* t1 t2 t3)
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 04:18:25.151 UTC [1616893] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) NestLoop(t4 t3)HashJoin(*VALUES* t3 t2)MergeJoin(*VALUES* t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.152 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.152 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.152 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.152 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.153 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.153 UTC [1616893] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.153 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.153 UTC [1616893] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 04:18:25.154 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.154 UTC [1616893] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.154 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.154 UTC [1616893] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.155 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.155 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.155 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.155 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.155 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.155 UTC [1616893] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.156 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.156 UTC [1616893] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.156 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.156 UTC [1616893] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.156 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.156 UTC [1616893] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.157 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.157 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.157 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.157 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.157 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.157 UTC [1616893] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.158 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.158 UTC [1616893] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.158 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.158 UTC [1616893] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.158 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.158 UTC [1616893] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.161 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.161 UTC [1616893] STATEMENT:  /*+MergeJoin(p1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:18:25.162 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p1c1 p2c1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.162 UTC [1616893] STATEMENT:  /*+MergeJoin(p1c1 p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:18:25.163 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p2 pt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.163 UTC [1616893] STATEMENT:  /*+MergeJoin(pt1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 04:18:25.163 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p2c1 pt1_c1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.163 UTC [1616893] STATEMENT:  /*+MergeJoin(pt1_c1 p2c1)*/ /* will ignored */
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 04:18:25.164 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:18:25.164 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.164 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:18:25.164 UTC [1616893] STATEMENT:  /*+MergeJoin(t1 t2)HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.165 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:18:25.165 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.165 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:18:25.165 UTC [1616893] STATEMENT:  /*+MergeJoin(t2 t1)HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.165 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.165 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.165 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.165 UTC [1616893] STATEMENT:  /*+HashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.165 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.165 UTC [1616893] STATEMENT:  /*+MergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.166 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.166 UTC [1616893] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.166 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.166 UTC [1616893] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.166 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.166 UTC [1616893] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.166 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 04:18:25.166 UTC [1616893] STATEMENT:  /*+NestLoop()*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:18:25.166 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1)
	
2023-07-22 04:18:25.166 UTC [1616893] STATEMENT:  /*+NestLoop(t1)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:18:25.166 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.166 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:18:25.167 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.167 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2 t3)*/
	SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE false;
2023-07-22 04:18:25.167 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.167 UTC [1616893] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1 FULL OUTER JOIN s1.t2 ON (t1.c1 = t2.c1);
2023-07-22 04:18:25.172 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.172 UTC [1616893] STATEMENT:  /*+ nomemoize(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 04:18:25.172 UTC [1616893] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.172 UTC [1616893] STATEMENT:  /*+ nomemoize(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 04:18:25.180 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.180 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.181 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.181 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 04:18:25.182 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t_4 t_2 t_3 t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.182 UTC [1616911] STATEMENT:  /*+Leading(t_4 t_2 t_3 t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 04:18:25.182 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.182 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.183 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t4 s1.t2 s1.t3 s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.183 UTC [1616911] STATEMENT:  /*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.184 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.184 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.185 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t5 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.185 UTC [1616911] STATEMENT:  /*+Leading(t5 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.186 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.186 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.187 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t3 t1)
	
2023-07-22 04:18:25.187 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:25.188 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t1 t2 t3 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.188 UTC [1616911] STATEMENT:  /*+Leading(s1.t1 t2 t3 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:25.189 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(s2t1 t1 t3 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.189 UTC [1616911] STATEMENT:  /*+Leading(s2t1 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 04:18:25.192 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.192 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.193 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(st1 st2 st3 st4)
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.193 UTC [1616911] STATEMENT:  /*+Leading(st1 st2 st3 st4)Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.194 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.194 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.195 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4)
	
2023-07-22 04:18:25.195 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.196 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t4)
	
2023-07-22 04:18:25.196 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.196 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4 t2 t3 t1)
	
2023-07-22 04:18:25.196 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.197 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t2 t4)
	
2023-07-22 04:18:25.197 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t2 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.198 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.198 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.202 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.202 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.203 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.203 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.207 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.207 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.210 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.210 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
2023-07-22 04:18:25.211 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.211 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.212 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.212 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t1 (c1, c2, c3, c4), s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.214 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(ct4 ct3 ct2 ct1)
	Leading(st4 st3 st2 st1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.214 UTC [1616911] STATEMENT:  /*+Leading(ct4 ct3 ct2 ct1)Leading(st4 st3 st2 st1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
2023-07-22 04:18:25.217 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.217 UTC [1616911] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.218 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 v1t1_ v1t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.218 UTC [1616911] STATEMENT:  /*+Leading(t4 v1t1_ v1t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.219 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(st4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.219 UTC [1616911] STATEMENT:  /*+Leading(st4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 04:18:25.220 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.220 UTC [1616911] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 04:18:25.222 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.222 UTC [1616911] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:18:25.226 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.226 UTC [1616911] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:18:25.227 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.227 UTC [1616911] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:18:25.228 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.228 UTC [1616911] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:18:25.231 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.231 UTC [1616911] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.235 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.235 UTC [1616911] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.239 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.239 UTC [1616911] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:25.248 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.248 UTC [1616911] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 04:18:25.249 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.249 UTC [1616911] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:18:25.251 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.251 UTC [1616911] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.254 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.254 UTC [1616911] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.257 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.257 UTC [1616911] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:18:25.259 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.259 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r1) */
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.260 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.260 UTC [1616911] STATEMENT:  /*+ Leading(b1t1 b1t2 b1t3 b1t4 r1_) */
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.263 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.263 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.263 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.263 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.265 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.265 UTC [1616911] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.266 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.266 UTC [1616911] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.268 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.268 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.269 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.269 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.270 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.270 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.272 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.272 UTC [1616911] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.273 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.273 UTC [1616911] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.274 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.274 UTC [1616911] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.274 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(v1t1 v1t1)
	
2023-07-22 04:18:25.274 UTC [1616911] STATEMENT:  /*+Leading(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.275 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.275 UTC [1616911] STATEMENT:  /*+Leading(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.276 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(r4t1 r4t1)
	
2023-07-22 04:18:25.276 UTC [1616911] STATEMENT:  /*+Leading(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.277 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.277 UTC [1616911] STATEMENT:  /*+Leading(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.277 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.277 UTC [1616911] STATEMENT:  /*+ Leading(t3 t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.278 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.278 UTC [1616911] STATEMENT:  /*+ Leading(*VALUES* t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.279 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.279 UTC [1616911] STATEMENT:  /*+ Leading(t4 t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.280 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 04:18:25.280 UTC [1616911] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.281 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.281 UTC [1616911] STATEMENT:  /*+Leading(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.281 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.281 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.284 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t1 t2 t3)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.284 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.285 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.285 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.286 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 v2t1 v2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.286 UTC [1616911] STATEMENT:  /*+Leading(t1 v2t1 v2t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 04:18:25.287 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(v2t1 v2t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.287 UTC [1616911] STATEMENT:  /*+Leading(v2t1 v2t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 04:18:25.288 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.288 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.289 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.289 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.291 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.291 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.292 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(p2c1c1 p2c2c1 p2c3c1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.292 UTC [1616911] STATEMENT:  /*+Leading(p2c1c1 p2c2c1 p2c3c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.292 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 04:18:25.292 UTC [1616911] STATEMENT:  /*+Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.293 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 04:18:25.293 UTC [1616911] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.293 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 04:18:25.293 UTC [1616911] STATEMENT:  /*+Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.294 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	error hint:
	Leading()
	
2023-07-22 04:18:25.294 UTC [1616911] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.294 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 04:18:25.294 UTC [1616911] STATEMENT:  /*+Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.295 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1)
	
2023-07-22 04:18:25.295 UTC [1616911] STATEMENT:  /*+Leading(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.295 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.295 UTC [1616911] STATEMENT:  /*+Leading(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.296 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.296 UTC [1616911] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:18:25.296 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2))
	
2023-07-22 04:18:25.296 UTC [1616911] STATEMENT:  /*+Leading((t2))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.297 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading((t2 t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.297 UTC [1616911] STATEMENT:  /*+Leading((t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.297 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2 t3 t4))
	
2023-07-22 04:18:25.297 UTC [1616911] STATEMENT:  /*+Leading((t2 t3 t4))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.298 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.298 UTC [1616911] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.299 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t3) t4) t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.299 UTC [1616911] STATEMENT:  /*+Leading((((t1 t3) t4) t2)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.299 UTC [1616911] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t3 (t4 t2))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.299 UTC [1616911] STATEMENT:  /*+Leading((t1 (t3 (t4 t2))))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.307 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.307 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.309 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.309 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.312 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.312 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.312 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.312 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.315 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.315 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.316 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.316 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.319 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.319 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.321 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.321 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.321 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.321 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.326 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.326 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.326 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.326 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.327 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.327 UTC [1616915] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:18:25.328 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 04:18:25.328 UTC [1616915] STATEMENT:  /*+Set(1234567890123456789012345678901234567890123456789012345678901234 1)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.329 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)
	
2023-07-22 04:18:25.329 UTC [1616915] STATEMENT:  /*+Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.329 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(block_size 16384)
	
2023-07-22 04:18:25.329 UTC [1616915] STATEMENT:  /*+Set(block_size 16384)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.329 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_mode off)
	
2023-07-22 04:18:25.329 UTC [1616915] STATEMENT:  /*+Set(archive_mode off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.329 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_timeout 0)
	
2023-07-22 04:18:25.329 UTC [1616915] STATEMENT:  /*+Set(archive_timeout 0)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.330 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_connections off)
	
2023-07-22 04:18:25.330 UTC [1616915] STATEMENT:  /*+Set(log_connections off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.330 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(log_min_messages WARNING)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.330 UTC [1616915] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.333 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_min_messages WARNING)
	
2023-07-22 04:18:25.333 UTC [1616915] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.334 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.334 UTC [1616915] STATEMENT:  /*+Set(enable_seqscan on)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:18:25.338 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	
2023-07-22 04:18:25.338 UTC [1616915] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan off)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:18:25.338 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	Set(client_min_messages DEBUG2)
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	
2023-07-22 04:18:25.338 UTC [1616915] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBUG2)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:18:25.338 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	Set(enable_indexscan o)
	
2023-07-22 04:18:25.338 UTC [1616915] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan o)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:18:25.338 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	Set(client_min_messages DEBU)
	
2023-07-22 04:18:25.338 UTC [1616915] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBU)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:18:25.338 UTC [1616915] LOG:  pg_hint_plan:
	used hint:
	IndexScan(a)
	not used hint:
	SeqScan(c)
	duplication hint:
	SeqScan(a)
	error hint:
	NestLoop(a)
	
2023-07-22 04:18:25.338 UTC [1616915] STATEMENT:  /*+SeqScan(a)IndexScan(a)SeqScan(c)NestLoop(a) */
	SELECT * FROM s1.t1 a, s1.t2 b WHERE false;
2023-07-22 04:18:25.348 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.348 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.351 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.351 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:18:25.354 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t_1 t_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.354 UTC [1616919] STATEMENT:  /*+Rows(t_1 t_2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:18:25.357 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.357 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.359 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s1.t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.359 UTC [1616919] STATEMENT:  /*+Rows(s1.t1 s1.t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.362 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.362 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.365 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.365 UTC [1616919] STATEMENT:  /*+Rows(t3 t4 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.368 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.368 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.374 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 04:18:25.374 UTC [1616919] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:25.377 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s2.t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.377 UTC [1616919] STATEMENT:  /*+Rows(s1.t1 s2.t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:18:25.383 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(s2t1 t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.383 UTC [1616919] STATEMENT:  /*+Rows(t1 s2t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 04:18:25.389 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.389 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.392 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.392 UTC [1616919] STATEMENT:  /*+Rows(st1 st2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.395 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.395 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.398 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 04:18:25.398 UTC [1616919] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.411 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.411 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.417 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.417 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.423 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.423 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.432 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.432 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.440 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.440 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM t_pg_class t1, t_pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 04:18:25.446 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.446 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.452 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.452 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.455 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(*VALUES* t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.455 UTC [1616919] STATEMENT:  /*+Rows(*VALUES* t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.461 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(c1 t1 +1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.461 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 c1 +1)*/
	EXPLAIN WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 04:18:25.466 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.466 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.469 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.469 UTC [1616919] STATEMENT:  /*+Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.476 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.476 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)Rows(st1 st2 #1)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 04:18:25.481 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(st2 t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.481 UTC [1616919] STATEMENT:  /*+Rows(t1 st2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:18:25.484 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.484 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:18:25.487 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 #1)
	
2023-07-22 04:18:25.487 UTC [1616919] STATEMENT:  /*+Rows(t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.490 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 1)
	
2023-07-22 04:18:25.490 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.493 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #notrows)
	
2023-07-22 04:18:25.493 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #notrows)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.497 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.497 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:25.502 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.502 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:25.506 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.506 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:25.510 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.510 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:18:25.514 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.514 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.517 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.517 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.521 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.521 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.524 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.524 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.529 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.529 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	);
2023-07-22 04:18:25.534 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.534 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:18:25.538 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.538 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 04:18:25.543 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.543 UTC [1616919] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 04:18:25.548 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.548 UTC [1616919] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:18:25.554 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(c1 c2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 c1 c2 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.554 UTC [1616919] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(c2 c1 #1)Rows(c2 c1 bmt1 #1)Rows(c2 c1 bmt1 bmt2 #1)Rows(c2 c1 bmt1 bmt2 bmt3 #1)Rows(c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1;
2023-07-22 04:18:25.560 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.560 UTC [1616919] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 04:18:25.567 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(c2 c3 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(c1 c2 c3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 c1 c2 c3 #1)
	Rows(bmt1 bmt2 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 c3 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.567 UTC [1616919] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(c3 c2 #1)Rows(c3 c2 c1 #1)Rows(c3 c2 c1 bmt1 #1)Rows(c3 c2 c1 bmt1 bmt2 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 04:18:25.571 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.571 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 04:18:25.574 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	Rows(bmt1 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.574 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt1)
	Rows(bmt1 c1 #1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 04:18:25.577 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.577 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	);
2023-07-22 04:18:25.581 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Rows(bmt2 c1 #1)
	Rows(bmt1 bmt2 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.581 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Rows(c1 bmt2 #1)
	Rows(c1 bmt1 bmt2 #1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	)
	;
2023-07-22 04:18:25.593 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.593 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 04:18:25.606 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	Rows(b1t3 b1t4 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t3 b3t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t2 b2t3 b2t4 #1)
	Rows(b3t2 b3t3 b3t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.606 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	Rows(b2t4 b2t3 #1)
	Rows(b2t4 b2t3 b2t2 #1)
	Rows(b2t4 b2t3 b2t2 b2t1 #1)
	Rows(b3t4 b3t3 #1)
	Rows(b3t4 b3t3 b3t2 #1)
	Rows(b3t4 b3t3 b3t2 b3t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 04:18:25.618 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.618 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 04:18:25.630 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Rows(b1t3 b1t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.630 UTC [1616919] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 04:18:25.635 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.635 UTC [1616919] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.638 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.638 UTC [1616919] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 t2 t3 t4 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 #2)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.642 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.642 UTC [1616919] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.645 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r1_ #2)
	Rows(b1t1 b1t2 r1_ #2)
	Rows(b1t1 b1t2 b1t3 r1_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r1_ #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.645 UTC [1616919] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(r1_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r1_ b1t1 b1t2 b1t3 #2)
	Rows(r1_ b1t1 b1t2 #2)
	Rows(r1_ b1t1 #2)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.649 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.649 UTC [1616919] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.650 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.650 UTC [1616919] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.653 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.653 UTC [1616919] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.654 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.654 UTC [1616919] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.657 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.657 UTC [1616919] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.658 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.658 UTC [1616919] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.661 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.661 UTC [1616919] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.662 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.662 UTC [1616919] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.666 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.666 UTC [1616919] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.666 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.666 UTC [1616919] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.667 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.667 UTC [1616919] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.671 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.671 UTC [1616919] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.671 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.671 UTC [1616919] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.672 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.672 UTC [1616919] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.676 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.676 UTC [1616919] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.677 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.677 UTC [1616919] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.678 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.678 UTC [1616919] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.681 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b2t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.681 UTC [1616919] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.682 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b1t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.682 UTC [1616919] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.682 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b3t1 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b1t1 r3_ #2)
	Rows(b2t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.682 UTC [1616919] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:18:25.686 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 04:18:25.686 UTC [1616919] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.689 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	Rows(v1t1 v1t1 #1)
	
2023-07-22 04:18:25.689 UTC [1616919] STATEMENT:  /*+HashJoin(v1t1 v1t1)Rows(v1t1 v1t1 #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.692 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.692 UTC [1616919] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.695 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.695 UTC [1616919] STATEMENT:  /*+NestLoop(v1t1 v1t1_)Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:18:25.703 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.703 UTC [1616919] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.706 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	Rows(r4t1 r5t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.706 UTC [1616919] STATEMENT:  /*+NestLoop(r4t1 r5t1)Rows(r4t1 r5t1 #1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.712 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	Rows(t1 t3 #2)
	Rows(t1 t2 t3 #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.712 UTC [1616919] STATEMENT:  /*+ Leading(t3 t1 t2) Rows(t3 t1 #2)Rows(t3 t1 t2 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.715 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	Rows(*VALUES* t1 #2)
	Rows(*VALUES* t1 t2 #20)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.715 UTC [1616919] STATEMENT:  /*+ Leading(*VALUES* t1 t2) Rows(*VALUES* t1 #2)Rows(*VALUES* t1 t2 #20)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:18:25.721 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	Rows(t3 t4 #2)
	Rows(t2 t3 t4 #2)
	Rows(t1 t2 t3 t4 #2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.721 UTC [1616919] STATEMENT:  /*+ Leading(t4 t3 t2 t1) Rows(t4 t3 #2) Rows(t4 t3 t2 #2)Rows(t4 t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.725 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #2)
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	Rows(*VALUES* t2 t3 #2)
	Rows(*VALUES* t1 t2 t3 #2)
	
2023-07-22 04:18:25.725 UTC [1616919] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) Rows(t4 t3 #2)Rows(*VALUES* t3 t2 #2)Rows(*VALUES* t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:18:25.731 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.731 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.738 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 *0.6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.738 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 *0.6)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.744 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt4 *0.5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.744 UTC [1616919] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt1 *0.5)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:18:25.747 UTC [1616919] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 #0)
2023-07-22 04:18:25.748 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.748 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.751 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.751 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #5)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.753 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.753 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.757 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.757 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 -1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.760 UTC [1616919] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -1000)
2023-07-22 04:18:25.760 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1000)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.760 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 -1000)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.763 UTC [1616919] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 *0)
2023-07-22 04:18:25.763 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.763 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 *0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.766 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.766 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 *2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.769 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.769 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 *0.1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.776 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(p1 p2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.776 UTC [1616919] STATEMENT:  /*+Rows(p1 p2 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:18:25.783 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(p1c1 p2c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.783 UTC [1616919] STATEMENT:  /*+Rows(p1c1 p2c1 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:18:25.789 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:18:25.789 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.795 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:18:25.795 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.801 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:18:25.801 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.807 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:18:25.807 UTC [1616919] STATEMENT:  /*+Rows(t2 t1 #1)Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.813 UTC [1616919] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.813 UTC [1616919] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:18:25.839 UTC [1617687] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	SeqScan(ft_1)
	SeqScan(ft_2)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.839 UTC [1617687] STATEMENT:  /*+SeqScan(t1)SeqScan(ft_1)SeqScan(ft_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:18:25.842 UTC [1617687] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(ft_1 ft_2)
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.842 UTC [1617687] STATEMENT:  /*+MergeJoin(ft_1 ft_2)Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:18:25.845 UTC [1617687] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.845 UTC [1617687] STATEMENT:  /*+Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:18:25.848 UTC [1617687] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	Rows(ft_1 ft_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.848 UTC [1617687] STATEMENT:  /*+Rows(ft_1 ft_2 #1)Leading(ft_1 ft_2 t1)*/
	EXPLAIN SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:18:25.871 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.871 UTC [1617718] STATEMENT:  /*+Parallel(t1 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:18:25.872 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(t11 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.872 UTC [1617718] STATEMENT:  /*+Parallel(t11 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 as t11, s1.t1 as t12;
2023-07-22 04:18:25.872 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.872 UTC [1617718] STATEMENT:  /*+Parallel(t1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:18:25.872 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.872 UTC [1617718] STATEMENT:  /*+Parallel(t1 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:18:25.873 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.873 UTC [1617718] STATEMENT:  /*+Parallel(t1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:18:25.873 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 4 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.873 UTC [1617718] STATEMENT:  /*+Parallel(t1 4 hard) */ /* to be gather merge*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ORDER BY s1.t1.c1 LIMIT 4;
2023-07-22 04:18:25.875 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.875 UTC [1617718] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.876 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.876 UTC [1617718] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.877 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.877 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.877 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.877 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.878 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.878 UTC [1617718] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.878 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.878 UTC [1617718] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.880 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.880 UTC [1617718] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:18:25.880 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 soft)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.880 UTC [1617718] STATEMENT:  /*+Parallel(p1_c1_c1 8 soft) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:18:25.881 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.881 UTC [1617718] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:18:25.881 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.881 UTC [1617718] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:18:25.887 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.887 UTC [1617718] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.889 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.889 UTC [1617718] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.891 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.891 UTC [1617718] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.893 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.893 UTC [1617718] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.894 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.894 UTC [1617718] STATEMENT:  /*+Parallel(p2 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.895 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.895 UTC [1617718] STATEMENT:  /*+Parallel(p2 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.897 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.897 UTC [1617718] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.898 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.898 UTC [1617718] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.899 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.899 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.900 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.900 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.901 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.901 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.902 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.902 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.903 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.903 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.905 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.905 UTC [1617718] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.906 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	Parallel(p1 0 hard)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.906 UTC [1617718] STATEMENT:  /*+Parallel(p1 0 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:18:25.907 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.907 UTC [1617718] STATEMENT:  /*+Parallel(p1 8) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:18:25.908 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Set(max_parallel_workers_per_gather 1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.908 UTC [1617718] STATEMENT:  /*+Set(max_parallel_workers_per_gather 1)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:18:25.909 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 6 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.909 UTC [1617718] STATEMENT:  /*+Parallel(p1 5 hard)Parallel(p2 6 hard) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:18:25.910 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.910 UTC [1617718] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.911 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.911 UTC [1617718] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:18:25.911 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Parallel(p1 100x hard)
	Parallel(p1 -1000 hard)
	Parallel(p1 1000000 hard)
	Parallel(p1 8 soft)
	Parallel()
	Parallel()
	
2023-07-22 04:18:25.911 UTC [1617718] STATEMENT:  /*+Parallel(p1 100x hard)Parallel(p1 -1000 hard)Parallel(p1 1000000 hard)
	   Parallel(p1 8 hoge)Parallel(p1)Parallel(p1 100 soft x)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:18:25.913 UTC [1617718] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	not used hint:
	IndexScan(*VALUES*)
	SeqScan(cte1)
	TidScan(fs1)
	IndexScan(ft1)
	IndexScan(t)
	Parallel(s1 3 hard)
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.913 UTC [1617718] STATEMENT:  /*+Parallel(p1 5 hard) Parallel(s1 3 hard) IndexScan(ft1) SeqScan(cte1)
	  TidScan(fs1) IndexScan(t) IndexScan(*VALUES*) */
	EXPLAIN (COSTS false) SELECT id FROM p1_c1_c1 as s1 TABLESAMPLE SYSTEM(10)
	 UNION ALL
	SELECT id FROM ft1
	 UNION ALL
	(WITH cte1 AS (SELECT id FROM p1 WHERE id % 2 = 0) SELECT id FROM cte1)
	 UNION ALL
	SELECT userid FROM pg_stat_statements fs1
	 UNION ALL
	SELECT x FROM (VALUES (1), (2), (3)) t(x);
2023-07-22 04:18:25.928 UTC [1616707] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:18:25.973 UTC [1617726] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.973 UTC [1617726] STATEMENT:  EXPLAIN SELECT * FROM t1 WHERE id = 100;
2023-07-22 04:18:25.974 UTC [1617726] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.974 UTC [1617726] STATEMENT:  EXPLAIN DECLARE c1 CURSOR FOR SELECT * FROM t1 WHERE id = 100;
2023-07-22 04:18:25.975 UTC [1617726] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.975 UTC [1617726] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS SELECT * FROM t1 WHERE id = 100;
2023-07-22 04:18:25.976 UTC [1617726] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.976 UTC [1617726] STATEMENT:  EXPLAIN EXECUTE p1;
2023-07-22 04:18:25.978 UTC [1617726] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:25.978 UTC [1617726] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS EXECUTE p1;
2023-07-22 04:18:26.044 UTC [1617734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.044 UTC [1617734] STATEMENT:  explain (costs false)
	select * from t1 join t2 on t1.id = t2.id where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 04:18:26.046 UTC [1617734] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.046 UTC [1617734] STATEMENT:  /*+ MergeJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 04:18:26.046 UTC [1617734] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.046 UTC [1617734] STATEMENT:  /*+ HashJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+MergeJoin(t1 t2)*/' <> '';
2023-07-22 04:18:26.065 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.065 UTC [1617738] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 04:18:26.066 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.066 UTC [1617738] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 04:18:26.080 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.080 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.080 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.081 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.081 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.081 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.085 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.085 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.085 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.086 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.086 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.086 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.087 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.087 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.087 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.088 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.088 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.088 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.093 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.093 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.093 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.094 UTC [1617738] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:18:26.094 UTC [1617738] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:18:26.094 UTC [1617738] STATEMENT:  call test_hint_transaction();
2023-07-22 04:18:26.276 UTC [1616708] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:26.347 UTC [1616708] LOG:  checkpoint complete: wrote 19 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.016 s, sync=0.021 s, total=0.072 s; sync files=15, longest=0.008 s, average=0.002 s; distance=12299 kB, estimate=12299 kB
2023-07-22 04:18:26.495 UTC [1617760] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:18:26.495 UTC [1617760] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:18:26.514 UTC [1617760] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:18:26.514 UTC [1617760] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:18:26.515 UTC [1617760] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:18:26.515 UTC [1617760] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:18:26.524 UTC [1617760] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:18:26.524 UTC [1617760] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:18:26.524 UTC [1617760] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:18:26.524 UTC [1617760] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:18:58.334 UTC [1616708] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:58.414 UTC [1616708] LOG:  checkpoint complete: wrote 915 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.023 s, sync=0.021 s, total=0.080 s; sync files=258, longest=0.003 s, average=0.001 s; distance=140956 kB, estimate=140956 kB
2023-07-22 04:19:30.089 UTC [1616708] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:19:30.146 UTC [1616708] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.007 s, total=0.058 s; sync files=4, longest=0.006 s, average=0.002 s; distance=136660 kB, estimate=140526 kB
2023-07-22 04:19:30.211 UTC [1616707] LOG:  received fast shutdown request
2023-07-22 04:19:30.214 UTC [1616707] LOG:  aborting any active transactions
2023-07-22 04:19:30.215 UTC [1616707] LOG:  background worker "logical replication launcher" (PID 1616713) exited with exit code 1
2023-07-22 04:19:30.215 UTC [1616708] LOG:  shutting down
2023-07-22 04:19:30.218 UTC [1616708] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:19:30.233 UTC [1616708] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126474 kB
2023-07-22 04:19:30.297 UTC [1616707] LOG:  database system is shut down
2023-07-22 04:19:30.962 UTC [1617841] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:19:30.962 UTC [1617841] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:19:30.968 UTC [1617841] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:19:30.975 UTC [1617844] LOG:  database system was shut down at 2023-07-22 04:19:30 UTC
2023-07-22 04:19:30.980 UTC [1617841] LOG:  database system is ready to accept connections
2023-07-22 04:19:31.313 UTC [1617860] ERROR:  too many column names were specified
2023-07-22 04:19:31.313 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_agg(a,b,c)', 'SELECT i, SUM(j) FROM mv_base_a GROUP BY i');
2023-07-22 04:19:31.329 UTC [1617860] WARNING:  there is already a transaction in progress
2023-07-22 04:19:31.346 UTC [1617860] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:19:31.346 UTC [1617860] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:19:31.346 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_exists_subquery', 'SELECT a.i, a.j FROM mv_base_a a WHERE EXISTS(SELECT 1 FROM mv_base_b b WHERE a.i = b.i)');
2023-07-22 04:19:31.346 UTC [1617860] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.346 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) b WHERE a.i = b.i');
2023-07-22 04:19:31.346 UTC [1617860] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.346 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT DISTINCT i FROM mv_base_b) b WHERE a.i = b.i');
2023-07-22 04:19:31.346 UTC [1617860] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:19:31.346 UTC [1617860] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:19:31.346 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j FROM mv_base_a WHERE i IN (SELECT i FROM mv_base_b WHERE k < 103 )');
2023-07-22 04:19:31.346 UTC [1617860] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:19:31.346 UTC [1617860] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:19:31.346 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) FROM mv_base_a a');
2023-07-22 04:19:31.347 UTC [1617860] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:19:31.347 UTC [1617860] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:19:31.347 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) + 1 FROM mv_base_a a');
2023-07-22 04:19:31.347 UTC [1617860] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:19:31.347 UTC [1617860] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:19:31.347 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT * FROM generate_series(1, (SELECT k FROM mv_base_b LIMIT 1)) AS v');
2023-07-22 04:19:31.380 UTC [1617860] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.380 UTC [1617860] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 04:19:31.380 UTC [1617860] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.380 UTC [1617860] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT DISTINCT i FROM mv_base_b) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 04:19:31.380 UTC [1617860] ERROR:  Ureferenced WITH query is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.380 UTC [1617860] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT * FROM mv_base_b) SELECT * FROM mv_base_a a');
2023-07-22 04:19:31.406 UTC [1617860] ERROR:  OUTER JOIN is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.406 UTC [1617860] STATEMENT:  SELECT create_immv('mv(a,b)',
	    'SELECT a.i, b.i FROM mv_base_a a LEFT JOIN mv_base_b b ON a.i=b.i');
2023-07-22 04:19:31.406 UTC [1617860] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.406 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm01', 'SELECT i,j,xmin FROM mv_base_a');
2023-07-22 04:19:31.406 UTC [1617860] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.406 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm02', 'SELECT i,j FROM mv_base_a WHERE xmin = ''610''');
2023-07-22 04:19:31.407 UTC [1617860] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.407 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm03', 'SELECT i,j,xmin::text AS x_min FROM mv_base_a');
2023-07-22 04:19:31.407 UTC [1617860] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.407 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm04', 'SELECT i,j,xidsend(xmin) AS x_min FROM mv_base_a');
2023-07-22 04:19:31.407 UTC [1617860] ERROR:  ORDER BY clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.407 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) ORDER BY i,j,k');
2023-07-22 04:19:31.407 UTC [1617860] ERROR:  HAVING clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.407 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) GROUP BY i,j,k HAVING SUM(i) > 5');
2023-07-22 04:19:31.407 UTC [1617860] ERROR:  GROUP BY clause without aggregate is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.407 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j FROM mv_base_a GROUP BY i,j');
2023-07-22 04:19:31.410 UTC [1617860] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.410 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT a.i,a.j FROM mv_base_a a,b_view b WHERE a.i = b.i');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT a.i,a.j FROM mv_base_a a,b_mview b WHERE a.i = b.i');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  mutable function is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] HINT:  functions must be marked IMMUTABLE
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm12', 'SELECT i,j FROM mv_base_a WHERE i = random()::int');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  LIMIT/OFFSET clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm13', 'SELECT i,j FROM mv_base_a LIMIT 10 OFFSET 5');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  DISTINCT ON is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm14', 'SELECT DISTINCT ON(i) i, j FROM mv_base_a');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  TABLESAMPLE clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm15', 'SELECT i, j FROM mv_base_a TABLESAMPLE SYSTEM(50)');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  window functions are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm16', 'SELECT *, cume_dist() OVER (ORDER BY i) AS rank FROM mv_base_a');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  aggregate function with FILTER clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm17', 'SELECT COUNT(*) FILTER(WHERE i < 3) FROM mv_base_a');
2023-07-22 04:19:31.411 UTC [1617860] ERROR:  aggregate function with DISTINCT arguments is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.411 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm18', 'SELECT COUNT(DISTINCT i)  FROM mv_base_a');
2023-07-22 04:19:31.412 UTC [1617860] ERROR:  aggregate function with ORDER clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.412 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm19', 'SELECT array_agg(j ORDER BY i DESC) FROM mv_base_a');
2023-07-22 04:19:31.412 UTC [1617860] ERROR:  GROUPING SETS, ROLLUP, or CUBE clauses is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.412 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm20', 'SELECT i,SUM(j) FROM mv_base_a GROUP BY GROUPING SETS((i),())');
2023-07-22 04:19:31.415 UTC [1617860] ERROR:  inheritance parent is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.415 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm21', 'SELECT * FROM parent');
2023-07-22 04:19:31.416 UTC [1617860] ERROR:  UNION/INTERSECT/EXCEPT statements are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.416 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm22', 'SELECT i,j FROM mv_base_a UNION ALL SELECT i,k FROM mv_base_b');
2023-07-22 04:19:31.416 UTC [1617860] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.416 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm23', 'SELECT * FROM (SELECT DISTINCT i,j FROM mv_base_a) AS tmp');
2023-07-22 04:19:31.416 UTC [1617860] ERROR:  empty target list is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.416 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm25', 'SELECT FROM mv_base_a');
2023-07-22 04:19:31.416 UTC [1617860] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.416 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm26', 'SELECT i,j FROM mv_base_a FOR UPDATE');
2023-07-22 04:19:31.416 UTC [1617860] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.416 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm27', 'SELECT * FROM (SELECT i,j FROM mv_base_a FOR UPDATE) AS tmp;');
2023-07-22 04:19:31.417 UTC [1617860] ERROR:  column name __ivm_count__ is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.417 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm28', 'SELECT i AS "__ivm_count__" FROM mv_base_a');
2023-07-22 04:19:31.417 UTC [1617860] ERROR:  GROUP BY expression not appearing in select list is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.417 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm29', 'SELECT COUNT(i) FROM mv_base_a GROUP BY i;');
2023-07-22 04:19:31.417 UTC [1617860] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.417 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm30', 'SELECT sum(i)*0.5 FROM mv_base_a');
2023-07-22 04:19:31.417 UTC [1617860] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.417 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm31', 'SELECT sum(i)/sum(j) FROM mv_base_a');
2023-07-22 04:19:31.417 UTC [1617860] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.417 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_only_values1', 'values(1)');
2023-07-22 04:19:31.417 UTC [1617860] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.417 UTC [1617860] STATEMENT:  SELECT create_immv('mv_ivm_only_values2',  'SELECT * FROM (values(1)) AS tmp');
2023-07-22 04:19:31.546 UTC [1617860] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:19:31.546 UTC [1617860] STATEMENT:  INSERT INTO mv_ivm_1 VALUES(1,1,1);
2023-07-22 04:19:31.546 UTC [1617860] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:19:31.546 UTC [1617860] STATEMENT:  UPDATE  mv_ivm_1 SET k = 1 WHERE i = 1;
2023-07-22 04:19:31.546 UTC [1617860] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:19:31.546 UTC [1617860] STATEMENT:  DELETE FROM mv_ivm_1;
2023-07-22 04:19:31.547 UTC [1617860] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:19:31.547 UTC [1617860] STATEMENT:  TRUNCATE mv_ivm_1;
2023-07-22 04:19:31.576 UTC [1617864] ERROR:  materialized views must not use data-modifying statements in WITH
2023-07-22 04:19:31.576 UTC [1617864] STATEMENT:  SELECT create_immv('mv3', 'WITH d AS (DELETE FROM t RETURNING NULL) SELECT * FROM t');
2023-07-22 04:19:31.577 UTC [1617864] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.577 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_immv01', 'SELECT i FROM mv');
2023-07-22 04:19:31.577 UTC [1617864] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 04:19:31.577 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_immv02', 'SELECT t.i FROM t INNER JOIN mv2 ON t.i = mv2.x');
2023-07-22 04:19:31.577 UTC [1617864] ERROR:  view definition must specify SELECT statement
2023-07-22 04:19:31.577 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_create', 'CREATE TABLE in_create(i int)');
2023-07-22 04:19:31.577 UTC [1617864] ERROR:  view definition must specify SELECT statement
2023-07-22 04:19:31.577 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_insert', 'INSERT INTO t VALUES(10)');
2023-07-22 04:19:31.578 UTC [1617864] ERROR:  view definition must specify SELECT statement
2023-07-22 04:19:31.578 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_update', 'UPDATE t SET i = 10');
2023-07-22 04:19:31.578 UTC [1617864] ERROR:  view definition must specify SELECT statement
2023-07-22 04:19:31.578 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_delete', 'DELETE FROM t');
2023-07-22 04:19:31.578 UTC [1617864] ERROR:  view definition must specify SELECT statement
2023-07-22 04:19:31.578 UTC [1617864] STATEMENT:  SELECT create_immv('mv_in_drop', 'DROP TABLE t');
2023-07-22 04:19:31.578 UTC [1617864] ERROR:  cannot drop table t because other objects depend on it
2023-07-22 04:19:31.578 UTC [1617864] DETAIL:  table mv depends on table t
	table mv2 depends on table t
2023-07-22 04:19:31.578 UTC [1617864] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:19:31.578 UTC [1617864] STATEMENT:  DROP TABLE t;
2023-07-22 04:19:31.653 UTC [1617868] ERROR:  relation "mv_not_existing" does not exist
2023-07-22 04:19:31.653 UTC [1617868] STATEMENT:  SELECT refresh_immv('mv_not_existing', true);
2023-07-22 04:19:31.654 UTC [1617868] ERROR:  "t" is not an IMMV
2023-07-22 04:19:31.654 UTC [1617868] STATEMENT:  SELECT refresh_immv('t', true);
2023-07-22 04:19:31.800 UTC [1617883] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:19:31.800 UTC [1617883] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:19:31.841 UTC [1617883] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:19:31.841 UTC [1617883] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:19:31.842 UTC [1617883] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:19:31.842 UTC [1617883] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:19:31.859 UTC [1617883] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:19:31.859 UTC [1617883] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:19:31.860 UTC [1617883] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:19:31.860 UTC [1617883] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:20:03.690 UTC [1617842] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:20:03.876 UTC [1617842] LOG:  checkpoint complete: wrote 1081 buffers (6.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.031 s, sync=0.106 s, total=0.187 s; sync files=586, longest=0.005 s, average=0.001 s; distance=146633 kB, estimate=146633 kB
2023-07-22 04:20:35.292 UTC [1617842] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:20:35.345 UTC [1617842] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136384 kB, estimate=145608 kB
2023-07-22 04:20:35.406 UTC [1617841] LOG:  received fast shutdown request
2023-07-22 04:20:35.409 UTC [1617841] LOG:  aborting any active transactions
2023-07-22 04:20:35.411 UTC [1617841] LOG:  background worker "logical replication launcher" (PID 1617847) exited with exit code 1
2023-07-22 04:20:35.413 UTC [1617842] LOG:  shutting down
2023-07-22 04:20:35.416 UTC [1617842] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:20:35.433 UTC [1617842] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131047 kB
2023-07-22 04:20:35.481 UTC [1617841] LOG:  database system is shut down
2023-07-22 04:20:36.124 UTC [1617956] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:20:36.124 UTC [1617956] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:20:36.130 UTC [1617956] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:20:36.140 UTC [1617959] LOG:  database system was shut down at 2023-07-22 04:20:35 UTC
2023-07-22 04:20:36.149 UTC [1617956] LOG:  database system is ready to accept connections
2023-07-22 04:20:36.294 UTC [1617973] ERROR:  extension "pg_log_userqueries" is not available
2023-07-22 04:20:36.294 UTC [1617973] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/pg_log_userqueries.control": No such file or directory.
2023-07-22 04:20:36.294 UTC [1617973] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 04:20:36.294 UTC [1617973] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "pg_log_userqueries"
2023-07-22 04:20:36.298 UTC [1617956] LOG:  received fast shutdown request
2023-07-22 04:20:36.301 UTC [1617956] LOG:  aborting any active transactions
2023-07-22 04:20:36.302 UTC [1617956] LOG:  background worker "logical replication launcher" (PID 1617962) exited with exit code 1
2023-07-22 04:20:36.302 UTC [1617957] LOG:  shutting down
2023-07-22 04:20:36.305 UTC [1617957] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:20:36.380 UTC [1617957] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.042 s, sync=0.023 s, total=0.078 s; sync files=252, longest=0.004 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 04:20:36.387 UTC [1617956] LOG:  database system is shut down
2023-07-22 04:20:36.938 UTC [1618002] FATAL:  could not access file "pg_partman": No such file or directory
2023-07-22 04:20:36.938 UTC [1618002] LOG:  database system is shut down
2023-07-22 04:20:37.644 UTC [1618035] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:20:37.644 UTC [1618035] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:20:37.650 UTC [1618035] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:20:37.660 UTC [1618038] LOG:  database system was shut down at 2023-07-22 04:20:37 UTC
2023-07-22 04:20:37.670 UTC [1618035] LOG:  database system is ready to accept connections
2023-07-22 04:20:37.866 UTC [1618055] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:20:37.866 UTC [1618055] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:20:37.885 UTC [1618055] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:20:37.885 UTC [1618055] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:20:37.885 UTC [1618055] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:20:37.885 UTC [1618055] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:20:37.903 UTC [1618055] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:20:37.903 UTC [1618055] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:20:37.903 UTC [1618055] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:20:37.903 UTC [1618055] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:21:09.546 UTC [1618036] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:09.672 UTC [1618036] LOG:  checkpoint complete: wrote 680 buffers (4.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.065 s, total=0.127 s; sync files=256, longest=0.004 s, average=0.001 s; distance=140828 kB, estimate=140828 kB
2023-07-22 04:21:41.022 UTC [1618036] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:41.071 UTC [1618036] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.007 s, sync=0.004 s, total=0.050 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136468 kB, estimate=140392 kB
2023-07-22 04:21:41.109 UTC [1618035] LOG:  received fast shutdown request
2023-07-22 04:21:41.112 UTC [1618035] LOG:  aborting any active transactions
2023-07-22 04:21:41.112 UTC [1618035] LOG:  background worker "logical replication launcher" (PID 1618042) exited with exit code 1
2023-07-22 04:21:41.119 UTC [1618036] LOG:  shutting down
2023-07-22 04:21:41.122 UTC [1618036] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:21:41.139 UTC [1618036] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126353 kB
2023-07-22 04:21:41.191 UTC [1618035] LOG:  database system is shut down
2023-07-22 04:21:41.785 UTC [1618128] FATAL:  could not access file "pg_proctab": No such file or directory
2023-07-22 04:21:41.785 UTC [1618128] LOG:  database system is shut down
2023-07-22 04:21:42.536 UTC [1618161] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:21:42.537 UTC [1618161] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:21:42.543 UTC [1618161] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:21:42.554 UTC [1618164] LOG:  database system was shut down at 2023-07-22 04:21:42 UTC
2023-07-22 04:21:42.563 UTC [1618161] LOG:  database system is ready to accept connections
2023-07-22 04:21:42.938 UTC [1618197] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:21:42.938 UTC [1618197] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:21:42.967 UTC [1618197] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:21:42.967 UTC [1618197] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:21:42.967 UTC [1618197] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:21:42.967 UTC [1618197] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:21:42.984 UTC [1618197] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:21:42.984 UTC [1618197] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:21:42.985 UTC [1618197] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:21:42.985 UTC [1618197] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:22:14.709 UTC [1618162] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:22:14.882 UTC [1618162] LOG:  checkpoint complete: wrote 1248 buffers (7.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.037 s, sync=0.092 s, total=0.174 s; sync files=504, longest=0.004 s, average=0.001 s; distance=144717 kB, estimate=144717 kB
2023-07-22 04:22:46.453 UTC [1618162] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:22:46.502 UTC [1618162] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137026 kB, estimate=143948 kB
2023-07-22 04:22:46.572 UTC [1618161] LOG:  received fast shutdown request
2023-07-22 04:22:46.575 UTC [1618161] LOG:  aborting any active transactions
2023-07-22 04:22:46.576 UTC [1618161] LOG:  background worker "logical replication launcher" (PID 1618167) exited with exit code 1
2023-07-22 04:22:46.577 UTC [1618162] LOG:  shutting down
2023-07-22 04:22:46.579 UTC [1618162] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:22:46.596 UTC [1618162] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129553 kB
2023-07-22 04:22:46.644 UTC [1618161] LOG:  database system is shut down
2023-07-22 04:22:47.289 UTC [1618269] LOG:  pg_query_rewrite:_PG_init(): pg_query_rewrite is enabled with 10 rules
2023-07-22 04:22:47.319 UTC [1618269] LOG:  redirecting log output to logging collector process
2023-07-22 04:22:47.319 UTC [1618269] HINT:  Future log output will appear in directory "log".
2023-07-22 04:23:52.796 UTC [1618417] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:23:52.796 UTC [1618417] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:23:52.807 UTC [1618417] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:23:52.820 UTC [1618420] LOG:  database system was shut down at 2023-07-22 04:23:52 UTC
2023-07-22 04:23:52.830 UTC [1618417] LOG:  database system is ready to accept connections
2023-07-22 04:23:53.253 UTC [1618456] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:23:53.253 UTC [1618456] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:23:53.298 UTC [1618456] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:23:53.298 UTC [1618456] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:23:53.298 UTC [1618456] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:23:53.298 UTC [1618456] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:23:53.324 UTC [1618456] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:23:53.324 UTC [1618456] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:23:53.325 UTC [1618456] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:23:53.325 UTC [1618456] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:24:26.702 UTC [1618418] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:24:26.885 UTC [1618418] LOG:  checkpoint complete: wrote 1800 buffers (11.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.070 s, sync=0.047 s, total=0.183 s; sync files=503, longest=0.011 s, average=0.001 s; distance=141658 kB, estimate=141658 kB
2023-07-22 04:24:58.993 UTC [1618418] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:24:59.562 UTC [1618418] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.014 s, sync=0.012 s, total=0.570 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133400 kB, estimate=140833 kB
2023-07-22 04:24:59.629 UTC [1618417] LOG:  received fast shutdown request
2023-07-22 04:24:59.634 UTC [1618417] LOG:  aborting any active transactions
2023-07-22 04:24:59.635 UTC [1618417] LOG:  background worker "logical replication launcher" (PID 1618423) exited with exit code 1
2023-07-22 04:24:59.635 UTC [1618418] LOG:  shutting down
2023-07-22 04:24:59.640 UTC [1618418] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:24:59.674 UTC [1618418] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.002 s, total=0.040 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=126749 kB
2023-07-22 04:24:59.738 UTC [1618417] LOG:  database system is shut down
2023-07-22 04:25:00.665 UTC [1618534] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:25:00.665 UTC [1618534] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:25:00.678 UTC [1618534] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:25:00.695 UTC [1618537] LOG:  database system was shut down at 2023-07-22 04:25:00 UTC
2023-07-22 04:25:00.708 UTC [1618534] LOG:  database system is ready to accept connections
2023-07-22 04:25:01.390 UTC [1618561] ERROR:  could not create unique index "idx_badindex_n"
2023-07-22 04:25:01.390 UTC [1618561] DETAIL:  Key (n)=(10) is duplicated.
2023-07-22 04:25:01.390 UTC [1618561] STATEMENT:  CREATE UNIQUE INDEX CONCURRENTLY idx_badindex_n ON tbl_badindex (n);
2023-07-22 04:25:07.726 UTC [1618730] ERROR:  permission denied for schema repack at character 8
2023-07-22 04:25:07.726 UTC [1618730] STATEMENT:  select repack.version(), repack.version_sql()
2023-07-22 04:25:10.401 UTC [1618819] ERROR:  table name not found for OID 1
2023-07-22 04:25:10.401 UTC [1618819] STATEMENT:  SELECT repack.get_order_by('issue321_idx'::regclass::oid, 1);
2023-07-22 04:25:10.402 UTC [1618819] ERROR:  cache lookup failed for index 1
2023-07-22 04:25:10.402 UTC [1618819] STATEMENT:  SELECT repack.get_order_by(1, 1);
2023-07-22 04:25:10.425 UTC [1618535] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:25:10.669 UTC [1618535] LOG:  checkpoint complete: wrote 1039 buffers (6.3%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.058 s, sync=0.046 s, total=0.244 s; sync files=405, longest=0.009 s, average=0.001 s; distance=7743 kB, estimate=7743 kB
2023-07-22 04:25:10.671 UTC [1618845] ERROR:  tablespace "testts" is not empty
2023-07-22 04:25:10.671 UTC [1618845] STATEMENT:  DROP TABLESPACE testts
2023-07-22 04:25:10.698 UTC [1618535] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:25:10.741 UTC [1618535] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.010 s, sync=0.009 s, total=0.043 s; sync files=3, longest=0.008 s, average=0.003 s; distance=1 kB, estimate=6969 kB
2023-07-22 04:25:10.859 UTC [1618859] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:25:10.859 UTC [1618859] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:25:10.907 UTC [1618859] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:25:10.907 UTC [1618859] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:25:10.907 UTC [1618859] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:25:10.907 UTC [1618859] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:25:10.936 UTC [1618859] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:25:10.936 UTC [1618859] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:25:10.937 UTC [1618859] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:25:10.937 UTC [1618859] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:25:43.672 UTC [1618535] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:25:43.824 UTC [1618535] LOG:  checkpoint complete: wrote 904 buffers (5.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.030 s, sync=0.043 s, total=0.153 s; sync files=256, longest=0.019 s, average=0.001 s; distance=137510 kB, estimate=137510 kB
2023-07-22 04:26:15.748 UTC [1618535] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:26:16.489 UTC [1618535] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.007 s, total=0.741 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133153 kB, estimate=137075 kB
2023-07-22 04:26:16.530 UTC [1618909] FATAL:  database "pgbench_test" does not exist
2023-07-22 04:26:16.530 UTC [1618909] DETAIL:  It seems to have just been dropped or renamed.
2023-07-22 04:26:16.532 UTC [1618534] LOG:  received fast shutdown request
2023-07-22 04:26:16.539 UTC [1618534] LOG:  aborting any active transactions
2023-07-22 04:26:16.541 UTC [1618534] LOG:  background worker "logical replication launcher" (PID 1618540) exited with exit code 1
2023-07-22 04:26:16.542 UTC [1618535] LOG:  shutting down
2023-07-22 04:26:16.547 UTC [1618535] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:26:16.587 UTC [1618535] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.007 s, total=0.045 s; sync files=3, longest=0.006 s, average=0.003 s; distance=0 kB, estimate=123367 kB
2023-07-22 04:26:16.613 UTC [1618534] LOG:  database system is shut down
2023-07-22 04:26:17.440 UTC [1618936] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:26:17.441 UTC [1618936] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:26:17.450 UTC [1618936] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:26:17.467 UTC [1618939] LOG:  database system was shut down at 2023-07-22 04:26:17 UTC
2023-07-22 04:26:17.475 UTC [1618936] LOG:  database system is ready to accept connections
2023-07-22 04:26:17.650 UTC [1618955] ERROR:  parameter "pg_show_plans.plan_format" cannot be changed without restarting the server
2023-07-22 04:26:17.650 UTC [1618955] STATEMENT:  set pg_show_plans.plan_format = 'json';
2023-07-22 04:26:17.768 UTC [1618975] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:26:17.768 UTC [1618975] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:26:17.809 UTC [1618975] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:26:17.809 UTC [1618975] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:26:17.810 UTC [1618975] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:26:17.810 UTC [1618975] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:26:17.839 UTC [1618975] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:26:17.839 UTC [1618975] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:26:17.839 UTC [1618975] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:26:17.839 UTC [1618975] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:26:50.698 UTC [1618937] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:26:50.918 UTC [1618937] LOG:  checkpoint complete: wrote 1786 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.044 s, sync=0.101 s, total=0.220 s; sync files=501, longest=0.054 s, average=0.001 s; distance=141671 kB, estimate=141671 kB
2023-07-22 04:27:23.111 UTC [1618937] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:27:23.227 UTC [1618937] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.009 s, total=0.116 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133523 kB, estimate=140856 kB
2023-07-22 04:27:23.290 UTC [1618936] LOG:  received fast shutdown request
2023-07-22 04:27:23.298 UTC [1618936] LOG:  aborting any active transactions
2023-07-22 04:27:23.298 UTC [1618936] LOG:  background worker "logical replication launcher" (PID 1618942) exited with exit code 1
2023-07-22 04:27:23.299 UTC [1618937] LOG:  shutting down
2023-07-22 04:27:23.305 UTC [1618937] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:27:23.343 UTC [1618937] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.004 s, total=0.045 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126771 kB
2023-07-22 04:27:23.395 UTC [1618936] LOG:  database system is shut down
2023-07-22 04:27:24.329 UTC [1619047] LOG:  Auto detecting pg_stat_kcache.linux_hz parameter...
2023-07-22 04:27:24.329 UTC [1619047] LOG:  pg_stat_kcache.linux_hz is set to 333333
2023-07-22 04:27:24.369 UTC [1619047] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:27:24.370 UTC [1619047] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:27:24.382 UTC [1619047] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:27:24.396 UTC [1619050] LOG:  database system was shut down at 2023-07-22 04:27:23 UTC
2023-07-22 04:27:24.404 UTC [1619047] LOG:  database system is ready to accept connections
2023-07-22 04:27:24.738 UTC [1619086] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:27:24.738 UTC [1619086] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:27:24.794 UTC [1619086] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:27:24.794 UTC [1619086] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:27:24.795 UTC [1619086] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:27:24.795 UTC [1619086] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:27:24.825 UTC [1619086] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:27:24.825 UTC [1619086] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:27:24.826 UTC [1619086] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:27:24.826 UTC [1619086] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:27:58.205 UTC [1619048] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:27:59.301 UTC [1619048] LOG:  checkpoint complete: wrote 1810 buffers (11.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.046 s, sync=0.131 s, total=1.096 s; sync files=502, longest=0.066 s, average=0.001 s; distance=141829 kB, estimate=141829 kB
2023-07-22 04:28:31.658 UTC [1619048] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:31.788 UTC [1619048] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.020 s, sync=0.020 s, total=0.131 s; sync files=4, longest=0.014 s, average=0.005 s; distance=133544 kB, estimate=141001 kB
2023-07-22 04:28:31.855 UTC [1619047] LOG:  received fast shutdown request
2023-07-22 04:28:31.862 UTC [1619047] LOG:  aborting any active transactions
2023-07-22 04:28:31.863 UTC [1619047] LOG:  background worker "logical replication launcher" (PID 1619053) exited with exit code 1
2023-07-22 04:28:31.863 UTC [1619048] LOG:  shutting down
2023-07-22 04:28:31.868 UTC [1619048] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:28:31.905 UTC [1619048] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.042 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126901 kB
2023-07-22 04:28:31.970 UTC [1619047] LOG:  database system is shut down
2023-07-22 04:28:33.092 UTC [1619164] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:28:33.092 UTC [1619164] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:28:33.108 UTC [1619164] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:28:33.123 UTC [1619167] LOG:  database system was shut down at 2023-07-22 04:28:32 UTC
2023-07-22 04:28:33.133 UTC [1619164] LOG:  database system is ready to accept connections
2023-07-22 04:28:33.998 UTC [1619165] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:34.209 UTC [1619165] LOG:  checkpoint complete: wrote 1794 buffers (10.9%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.073 s, sync=0.100 s, total=0.211 s; sync files=497, longest=0.044 s, average=0.001 s; distance=12319 kB, estimate=12319 kB
2023-07-22 04:28:34.235 UTC [1619165] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:34.276 UTC [1619165] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.008 s, total=0.041 s; sync files=2, longest=0.005 s, average=0.004 s; distance=1 kB, estimate=11087 kB
2023-07-22 04:28:34.337 UTC [1619208] ERROR:  current user cannot be dropped
2023-07-22 04:28:34.337 UTC [1619208] STATEMENT:  DROP USER su;
2023-07-22 04:28:34.785 UTC [1619165] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:34.922 UTC [1619165] LOG:  checkpoint complete: wrote 1017 buffers (6.2%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.038 s, sync=0.070 s, total=0.138 s; sync files=297, longest=0.028 s, average=0.001 s; distance=8791 kB, estimate=10857 kB
2023-07-22 04:28:34.984 UTC [1619165] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:35.027 UTC [1619165] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.011 s, sync=0.009 s, total=0.043 s; sync files=7, longest=0.008 s, average=0.002 s; distance=42 kB, estimate=9776 kB
2023-07-22 04:28:35.088 UTC [1619236] ERROR:  duplicate key value violates unique constraint "company_pkey"
2023-07-22 04:28:35.088 UTC [1619236] DETAIL:  Key (id)=(1) already exists.
2023-07-22 04:28:35.088 UTC [1619236] STATEMENT:  INSERT  INTO Company(ID, Name) VALUES (1, 'Percona');
2023-07-22 04:28:35.302 UTC [1619256] ERROR:  division by zero
2023-07-22 04:28:35.302 UTC [1619256] STATEMENT:  SELECT 1/0;
2023-07-22 04:28:35.303 UTC [1619256] ERROR:  relation "unknown" does not exist at character 15
2023-07-22 04:28:35.303 UTC [1619256] STATEMENT:  SELECT * FROM unknown;
2023-07-22 04:28:35.303 UTC [1619256] ERROR:  syntax error at or near "ELECET" at character 1
2023-07-22 04:28:35.303 UTC [1619256] STATEMENT:  ELECET * FROM unknown;
2023-07-22 04:28:35.303 UTC [1619256] WARNING:  warning message
2023-07-22 04:28:35.303 UTC [1619256] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:28:35.427 UTC [1619270] ERROR:  role "su" already exists
2023-07-22 04:28:35.427 UTC [1619270] STATEMENT:  CREATE USER su WITH SUPERUSER;
2023-07-22 04:28:35.454 UTC [1619270] ERROR:  permission denied for function pg_stat_monitor_reset
2023-07-22 04:28:35.454 UTC [1619270] STATEMENT:  SELECT pg_stat_monitor_reset();
2023-07-22 04:28:35.495 UTC [1619165] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:28:35.531 UTC [1619165] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.007 s, total=0.036 s; sync files=9, longest=0.005 s, average=0.001 s; distance=1621 kB, estimate=8960 kB
2023-07-22 04:28:35.662 UTC [1619289] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:35.662 UTC [1619289] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:28:35.714 UTC [1619289] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:35.714 UTC [1619289] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:28:35.715 UTC [1619289] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:35.715 UTC [1619289] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:28:35.739 UTC [1619289] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:35.739 UTC [1619289] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:28:35.740 UTC [1619289] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:35.740 UTC [1619289] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:28:35.757 UTC [1619164] LOG:  received fast shutdown request
2023-07-22 04:28:35.763 UTC [1619164] LOG:  aborting any active transactions
2023-07-22 04:28:35.765 UTC [1619164] LOG:  background worker "logical replication launcher" (PID 1619170) exited with exit code 1
2023-07-22 04:28:35.765 UTC [1619165] LOG:  shutting down
2023-07-22 04:28:35.770 UTC [1619165] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:28:35.877 UTC [1619165] LOG:  checkpoint complete: wrote 901 buffers (5.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.043 s, sync=0.039 s, total=0.112 s; sync files=255, longest=0.023 s, average=0.001 s; distance=4129 kB, estimate=8477 kB
2023-07-22 04:28:35.879 UTC [1619164] LOG:  [pg_stat_monitor] pgsm_shmem_shutdown: Shutdown initiated.
2023-07-22 04:28:35.932 UTC [1619164] LOG:  database system is shut down
2023-07-22 04:28:36.823 UTC [1619320] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:28:36.823 UTC [1619320] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:28:36.833 UTC [1619320] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:28:36.849 UTC [1619323] LOG:  database system was shut down at 2023-07-22 04:28:36 UTC
2023-07-22 04:28:36.857 UTC [1619320] LOG:  database system is ready to accept connections
2023-07-22 04:28:37.311 UTC [1619343] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 04:28:37.311 UTC [1619343] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 04:28:37.319 UTC [1619343] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 04:28:37.319 UTC [1619343] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 04:28:37.324 UTC [1619343] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 04:28:37.324 UTC [1619343] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 04:28:37.470 UTC [1619358] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:37.470 UTC [1619358] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:28:37.530 UTC [1619358] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:37.530 UTC [1619358] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:28:37.531 UTC [1619358] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:37.531 UTC [1619358] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:28:37.556 UTC [1619358] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:37.556 UTC [1619358] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:28:37.556 UTC [1619358] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:28:37.556 UTC [1619358] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:29:10.995 UTC [1619321] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:29:11.240 UTC [1619321] LOG:  checkpoint complete: wrote 1819 buffers (11.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.054 s, sync=0.104 s, total=0.245 s; sync files=514, longest=0.047 s, average=0.001 s; distance=141677 kB, estimate=141677 kB
2023-07-22 04:29:43.600 UTC [1619321] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:29:43.707 UTC [1619321] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.013 s, sync=0.007 s, total=0.108 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133431 kB, estimate=140852 kB
2023-07-22 04:29:43.771 UTC [1619320] LOG:  received fast shutdown request
2023-07-22 04:29:43.778 UTC [1619320] LOG:  aborting any active transactions
2023-07-22 04:29:43.779 UTC [1619320] LOG:  background worker "logical replication launcher" (PID 1619326) exited with exit code 1
2023-07-22 04:29:43.779 UTC [1619321] LOG:  shutting down
2023-07-22 04:29:43.786 UTC [1619321] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:29:43.819 UTC [1619321] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.040 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126767 kB
2023-07-22 04:29:43.877 UTC [1619320] LOG:  database system is shut down
2023-07-22 04:29:44.743 UTC [1619431] FATAL:  could not access file "pg_strom": No such file or directory
2023-07-22 04:29:44.743 UTC [1619431] LOG:  database system is shut down
2023-07-22 04:29:45.618 UTC [1619464] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:29:45.618 UTC [1619464] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:29:45.628 UTC [1619464] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:29:45.644 UTC [1619467] LOG:  database system was shut down at 2023-07-22 04:29:45 UTC
2023-07-22 04:29:45.653 UTC [1619464] LOG:  database system is ready to accept connections
2023-07-22 04:29:45.860 UTC [1619483] ERROR:  argument must be empty or one-dimensional array
2023-07-22 04:29:45.860 UTC [1619483] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[['(0, 2)']]::tid[]);
2023-07-22 04:29:45.860 UTC [1619483] ERROR:  array must not contain nulls
2023-07-22 04:29:45.860 UTC [1619483] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[NULL]::tid[]);
2023-07-22 04:29:45.865 UTC [1619483] ERROR:  cannot operate on relation "vw"
2023-07-22 04:29:45.865 UTC [1619483] DETAIL:  This operation is not supported for views.
2023-07-22 04:29:45.865 UTC [1619483] STATEMENT:  select heap_force_kill('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 04:29:45.866 UTC [1619483] ERROR:  cannot operate on relation "vw"
2023-07-22 04:29:45.866 UTC [1619483] DETAIL:  This operation is not supported for views.
2023-07-22 04:29:45.866 UTC [1619483] STATEMENT:  select heap_force_freeze('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 04:29:45.972 UTC [1619498] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:29:45.972 UTC [1619498] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:29:46.026 UTC [1619498] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:29:46.026 UTC [1619498] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:29:46.026 UTC [1619498] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:29:46.026 UTC [1619498] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:29:46.054 UTC [1619498] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:29:46.054 UTC [1619498] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:29:46.055 UTC [1619498] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:29:46.055 UTC [1619498] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:30:19.020 UTC [1619465] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:30:19.221 UTC [1619465] LOG:  checkpoint complete: wrote 1783 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.038 s, sync=0.088 s, total=0.202 s; sync files=502, longest=0.035 s, average=0.001 s; distance=141205 kB, estimate=141205 kB
2023-07-22 04:30:51.313 UTC [1619465] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:30:51.426 UTC [1619465] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.009 s, total=0.114 s; sync files=4, longest=0.005 s, average=0.003 s; distance=133109 kB, estimate=140396 kB
2023-07-22 04:30:51.472 UTC [1619464] LOG:  received fast shutdown request
2023-07-22 04:30:51.477 UTC [1619464] LOG:  aborting any active transactions
2023-07-22 04:30:51.478 UTC [1619464] LOG:  background worker "logical replication launcher" (PID 1619470) exited with exit code 1
2023-07-22 04:30:51.478 UTC [1619465] LOG:  shutting down
2023-07-22 04:30:51.483 UTC [1619465] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:30:51.525 UTC [1619465] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.004 s, total=0.048 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126356 kB
2023-07-22 04:30:51.576 UTC [1619464] LOG:  database system is shut down
2023-07-22 04:30:52.556 UTC [1619571] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:30:52.556 UTC [1619571] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:30:52.566 UTC [1619571] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:30:52.586 UTC [1619574] LOG:  database system was shut down at 2023-07-22 04:30:52 UTC
2023-07-22 04:30:52.597 UTC [1619571] LOG:  database system is ready to accept connections
2023-07-22 04:30:52.874 UTC [1619571] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:30:52.901 UTC [1619571] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:30:52.902 UTC [1619571] LOG:  parameter "pgtle.enable_password_check" changed to "on"
2023-07-22 04:30:52.980 UTC [1619571] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:30:52.981 UTC [1619571] LOG:  parameter "pgtle.enable_password_check" changed to "require"
2023-07-22 04:30:52.988 UTC [1619593] ERROR:  "pgtle.enable_password_check" feature is set to require, however no entries exist in "pgtle.feature_info" with the feature "passcheck"
2023-07-22 04:30:52.996 UTC [1619593] ERROR:  Passwords needs to be longer than 8
2023-07-22 04:30:53.022 UTC [1619593] ERROR:  Passwords needs to be longer than 8
2023-07-22 04:30:53.027 UTC [1619593] ERROR:  permission denied for table feature_info
2023-07-22 04:30:53.027 UTC [1619593] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'testuser_2', 'unpriv_function_passcheck', 'public.unpriv_function_passcheck(pg_catalog.text,pg_catalog.text,pgtle.password_types,timestamp with time zone,boolean)');
2023-07-22 04:30:53.028 UTC [1619593] ERROR:  permission denied for function register_feature
2023-07-22 04:30:53.028 UTC [1619593] STATEMENT:  SELECT pgtle.register_feature('testuser_2.unpriv_function_passcheck', 'passcheck');
2023-07-22 04:30:53.028 UTC [1619593] ERROR:  permission denied for function unregister_feature
2023-07-22 04:30:53.028 UTC [1619593] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 04:30:53.029 UTC [1619593] ERROR:  permission denied for table feature_info
2023-07-22 04:30:53.029 UTC [1619593] STATEMENT:  DELETE FROM pgtle.feature_info where feature = 'passcheck';
2023-07-22 04:30:53.041 UTC [1619593] ERROR:  Passwords can only have numbers
2023-07-22 04:30:53.067 UTC [1619593] ERROR:  table, schema, and proname must be present in "pgtle.feature_info"
2023-07-22 04:30:53.069 UTC [1619593] ERROR:  duplicate key value violates unique constraint "feature_info_pkey"
2023-07-22 04:30:53.069 UTC [1619593] DETAIL:  Key (feature, schema_name, proname)=(passcheck, public, password_check_length_greater_than_8) already exists.
2023-07-22 04:30:53.069 UTC [1619593] CONTEXT:  SQL statement "INSERT INTO pgtle.feature_info VALUES (feature, proc_schema_name, proname, ident)"
	PL/pgSQL function pgtle.register_feature(regproc,pgtle.pg_tle_features) line 24 at SQL statement
2023-07-22 04:30:53.069 UTC [1619593] STATEMENT:  SELECT pgtle.register_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 04:30:53.080 UTC [1619593] ERROR:  Could not unregister "password_check_length_greater_than_8": does not exist.
2023-07-22 04:30:53.080 UTC [1619593] CONTEXT:  PL/pgSQL function pgtle.unregister_feature(regproc,pgtle.pg_tle_features) line 44 at RAISE
2023-07-22 04:30:53.080 UTC [1619593] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 04:30:53.121 UTC [1619593] ERROR:  "passcheck" feature does not support calling out to functions/schemas that contain ";"
2023-07-22 04:30:53.121 UTC [1619593] HINT:  Check the "pgtle.feature_info" table does not contain ';'.
2023-07-22 04:30:53.147 UTC [1619571] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:30:53.148 UTC [1619571] LOG:  parameter "pgtle.enable_password_check" removed from configuration file, reset to default
2023-07-22 04:30:53.160 UTC [1619593] ERROR:  Function is referenced in pgtle.feature_info
2023-07-22 04:30:53.160 UTC [1619593] CONTEXT:  PL/pgSQL function pgtle.pg_tle_feature_info_sql_drop() line 27 at RAISE
2023-07-22 04:30:53.160 UTC [1619593] STATEMENT:  DROP SCHEMA pass CASCADE;
2023-07-22 04:30:53.287 UTC [1619597] ERROR:  permission denied for function superuser_only
2023-07-22 04:30:53.287 UTC [1619597] STATEMENT:  CREATE EXTENSION test_no_switch_to_superuser_when_trusted;
2023-07-22 04:30:53.288 UTC [1619597] ERROR:  must be owner of extension test123
2023-07-22 04:30:53.288 UTC [1619597] STATEMENT:  DROP EXTENSION test123;
2023-07-22 04:30:53.288 UTC [1619597] ERROR:  must be owner of function test123_func
2023-07-22 04:30:53.288 UTC [1619597] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 04:30:53.288 UTC [1619597] ERROR:  must be owner of extension test123
2023-07-22 04:30:53.288 UTC [1619597] STATEMENT:  DROP EXTENSION test123;
2023-07-22 04:30:53.289 UTC [1619597] ERROR:  must be owner of function test123_func
2023-07-22 04:30:53.289 UTC [1619597] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 04:30:53.289 UTC [1619597] ERROR:  extension "test123" already installed
2023-07-22 04:30:53.289 UTC [1619597] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test123',
	 '1.1',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	  CREATE OR REPLACE FUNCTION test123_func_2()
	  RETURNS INT AS $$
	  (
	    SELECT 424242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 04:30:53.300 UTC [1619597] ERROR:  permission denied for schema pgtle
2023-07-22 04:30:53.300 UTC [1619597] STATEMENT:  CREATE OR REPLACE FUNCTION pgtle.foo()
	RETURNS TEXT AS $$
	SELECT 'ok'
	$$ LANGUAGE sql;
2023-07-22 04:30:53.304 UTC [1619597] ERROR:  pgtle schema reserved for pg_tle functions
2023-07-22 04:30:53.304 UTC [1619597] STATEMENT:  ALTER FUNCTION public.pg_tlefoo() SET SCHEMA pgtle;
2023-07-22 04:30:53.308 UTC [1619597] ERROR:  control file already exists for the plpgsql extension
2023-07-22 04:30:53.308 UTC [1619597] STATEMENT:  SELECT pgtle.install_extension
	(
	 'plpgsql',
	 '1.0',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 04:30:53.309 UTC [1619597] ERROR:  altering pg_tle functions in pgtle schema not allowed
2023-07-22 04:30:53.309 UTC [1619597] STATEMENT:  ALTER FUNCTION pgtle.install_extension
	(
	  name text,
	  version text,
	  description text,
	  ext text,
	  requires text[]
	)
	SET search_path TO 'public';
2023-07-22 04:30:53.339 UTC [1619597] ERROR:  extension "new_ext" update path "1.0-1.1" already installed
2023-07-22 04:30:53.339 UTC [1619597] HINT:  To update this specific install path, first use "pgtle.uninstall_update_path".
2023-07-22 04:30:53.339 UTC [1619597] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'new_ext',
	 '1.0',
	 '1.1',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION fun()
	  RETURNS INT AS $$ SELECT 2; $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.359 UTC [1619597] ERROR:  Extension new_ext does not exist
2023-07-22 04:30:53.359 UTC [1619597] CONTEXT:  PL/pgSQL function uninstall_update_path(text,text,text) line 16 at RAISE
2023-07-22 04:30:53.359 UTC [1619597] STATEMENT:  SELECT pgtle.uninstall_update_path('new_ext', '1.1', '1.0');
2023-07-22 04:30:53.376 UTC [1619597] ERROR:  extension and version do not exist
2023-07-22 04:30:53.376 UTC [1619597] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 04:30:53.376 UTC [1619597] STATEMENT:  SELECT pgtle.set_default_version('new_ext', '1.2');
2023-07-22 04:30:53.378 UTC [1619597] ERROR:  extension and version do not exist
2023-07-22 04:30:53.378 UTC [1619597] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 04:30:53.378 UTC [1619597] STATEMENT:  SELECT pgtle.set_default_version('bogus', '1.2');
2023-07-22 04:30:53.385 UTC [1619597] ERROR:  syntax error in extension control function for "broken_ext"
2023-07-22 04:30:53.385 UTC [1619597] DETAIL:  Could not parse extension control function "pgtle"."broken_ext.control".
2023-07-22 04:30:53.385 UTC [1619597] HINT:  You may need to reinstall the extension to correct this error.
2023-07-22 04:30:53.385 UTC [1619597] STATEMENT:  SELECT * FROM pgtle.available_extensions();
2023-07-22 04:30:53.389 UTC [1619597] ERROR:  Extension bogus does not exist
2023-07-22 04:30:53.389 UTC [1619597] CONTEXT:  PL/pgSQL function uninstall_extension(text) line 18 at RAISE
2023-07-22 04:30:53.389 UTC [1619597] STATEMENT:  SELECT pgtle.uninstall_extension('bogus');
2023-07-22 04:30:53.434 UTC [1619597] ERROR:  version "2.0" of extension "test42" already installed
2023-07-22 04:30:53.434 UTC [1619597] STATEMENT:  SELECT pgtle.install_extension_version_sql
	(
	 'test42',
	 '2.0',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test42_func()
	  RETURNS INT AS $$
	  (
	    SELECT 4242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 04:30:53.442 UTC [1619597] ERROR:  Can not uninstall default version of extension test42, use set_default_version to update the default to another available version and retry
2023-07-22 04:30:53.442 UTC [1619597] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 28 at RAISE
2023-07-22 04:30:53.442 UTC [1619597] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '1.0');
2023-07-22 04:30:53.454 UTC [1619597] ERROR:  Version test42 of extension 3.0 is not installed and therefore can not be uninstalled
2023-07-22 04:30:53.454 UTC [1619597] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 50 at RAISE
2023-07-22 04:30:53.454 UTC [1619597] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '3.0');
2023-07-22 04:30:53.551 UTC [1619601] ERROR:  invalid character in extension definition
2023-07-22 04:30:53.551 UTC [1619601] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:30:53.551 UTC [1619601] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:30:53.551 UTC [1619601] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.552 UTC [1619601] ERROR:  invalid character in extension definition
2023-07-22 04:30:53.552 UTC [1619601] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:30:53.552 UTC [1619601] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:30:53.552 UTC [1619601] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.557 UTC [1619601] ERROR:  invalid character in extension update definition
2023-07-22 04:30:53.557 UTC [1619601] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:30:53.557 UTC [1619601] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:30:53.557 UTC [1619601] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.567 UTC [1619601] ERROR:  invalid character in extension definition
2023-07-22 04:30:53.567 UTC [1619601] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:30:53.567 UTC [1619601] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:30:53.567 UTC [1619601] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.567 UTC [1619601] ERROR:  invalid character in extension definition
2023-07-22 04:30:53.567 UTC [1619601] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:30:53.567 UTC [1619601] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:30:53.567 UTC [1619601] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.570 UTC [1619601] ERROR:  invalid character in extension update definition
2023-07-22 04:30:53.570 UTC [1619601] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:30:53.570 UTC [1619601] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:30:53.570 UTC [1619601] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:30:53.575 UTC [1619601] ERROR:  invalid extension name: "test9.control"(),pg_sleep(10),pgtle."test9"
2023-07-22 04:30:53.575 UTC [1619601] DETAIL:  Extension names must only contain alphanumeric characters or valid separators.
2023-07-22 04:30:53.575 UTC [1619601] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test9.control"(),pg_sleep(10),pgtle."test9',
	 '0.1',
	 'comment',
	$_pg_tle_$
	    CREATE FUNCTION dist(x1 numeric, y1 numeric, x2 numeric, y2 numeric, l numeric)
	    RETURNS numeric
	    AS $$
	      SELECT ((x2 ^ l - x1 ^ l) ^ (1 / l)) + ((y2 ^ l - y1 ^ l) ^ (1 / l));
	    $$ LANGUAGE SQL;
	$_pg_tle_$
	);
2023-07-22 04:30:53.649 UTC [1619605] ERROR:  permission denied for schema public
2023-07-22 04:30:53.649 UTC [1619605] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:30:53.684 UTC [1619605] ERROR:  must be owner of extension no_features
2023-07-22 04:30:53.684 UTC [1619605] STATEMENT:  DROP EXTENSION no_features;
2023-07-22 04:30:53.696 UTC [1619605] ERROR:  permission denied for function register_feature
2023-07-22 04:30:53.696 UTC [1619605] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 04:30:53.701 UTC [1619605] ERROR:  permission denied for table feature_info
2023-07-22 04:30:53.701 UTC [1619605] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'public', 'other_passcheck_hook', '');
2023-07-22 04:30:53.702 UTC [1619605] ERROR:  must have admin option on role "pgtle_admin"
2023-07-22 04:30:53.702 UTC [1619605] STATEMENT:  GRANT pgtle_admin to tle_person;
2023-07-22 04:30:53.716 UTC [1619605] ERROR:  permission denied for function unregister_feature
2023-07-22 04:30:53.716 UTC [1619605] STATEMENT:  SELECT pgtle.unregister_feature('passcheck_hook', 'passcheck');
2023-07-22 04:30:53.716 UTC [1619605] ERROR:  permission denied for function unregister_feature
2023-07-22 04:30:53.716 UTC [1619605] STATEMENT:  SELECT pgtle.unregister_feature('other_passcheck_hook', 'passcheck');
2023-07-22 04:30:53.717 UTC [1619605] ERROR:  permission denied for table feature_info
2023-07-22 04:30:53.717 UTC [1619605] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'passcheck_hook';
2023-07-22 04:30:53.718 UTC [1619605] ERROR:  permission denied for table feature_info
2023-07-22 04:30:53.718 UTC [1619605] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'other_passcheck_hook';
2023-07-22 04:30:53.745 UTC [1619605] ERROR:  permission denied for schema public
2023-07-22 04:30:53.745 UTC [1619605] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:30:53.750 UTC [1619605] ERROR:  permission denied for schema public
2023-07-22 04:30:53.750 UTC [1619605] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:30:53.756 UTC [1619605] ERROR:  permission denied for schema public
2023-07-22 04:30:53.756 UTC [1619605] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 04:30:53.757 UTC [1619605] ERROR:  permission denied for schema public
2023-07-22 04:30:53.757 UTC [1619605] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:30:53.849 UTC [1619609] ERROR:  "requires" limited to 1024 entries for "pg_tle" extensions
2023-07-22 04:30:53.849 UTC [1619609] STATEMENT:  SELECT pgtle.install_extension
	(
	 't',
	 '1',
	 '1',
	$_pg_tle_$
	CREATE FUNCTION pgtle."test12--0.1FOOBAR.control"()
	RETURNS void
	AS $$
	    BEGIN
	    RAISE NOTICE 'called';
	    END
	$$ LANGUAGE SQL;
	$_pg_tle_$,
	'{a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a}'
	);
2023-07-22 04:30:54.024 UTC [1619624] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:30:54.024 UTC [1619624] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:30:54.087 UTC [1619624] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:30:54.087 UTC [1619624] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:30:54.087 UTC [1619624] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:30:54.087 UTC [1619624] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:30:54.112 UTC [1619624] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:30:54.112 UTC [1619624] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:30:54.113 UTC [1619624] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:30:54.113 UTC [1619624] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:31:27.347 UTC [1619572] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:31:27.566 UTC [1619572] LOG:  checkpoint complete: wrote 1852 buffers (11.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.070 s, sync=0.068 s, total=0.220 s; sync files=524, longest=0.027 s, average=0.001 s; distance=142190 kB, estimate=142190 kB
2023-07-22 04:31:59.816 UTC [1619572] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:31:59.922 UTC [1619572] LOG:  checkpoint complete: wrote 49 buffers (0.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.008 s, total=0.106 s; sync files=16, longest=0.006 s, average=0.001 s; distance=133386 kB, estimate=141309 kB
2023-07-22 04:31:59.985 UTC [1619571] LOG:  received fast shutdown request
2023-07-22 04:31:59.990 UTC [1619571] LOG:  aborting any active transactions
2023-07-22 04:31:59.991 UTC [1619571] LOG:  background worker "logical replication launcher" (PID 1619577) exited with exit code 1
2023-07-22 04:31:59.991 UTC [1619572] LOG:  shutting down
2023-07-22 04:31:59.996 UTC [1619572] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:32:00.024 UTC [1619572] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.034 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127178 kB
2023-07-22 04:32:00.048 UTC [1619571] LOG:  database system is shut down
2023-07-22 04:32:00.983 UTC [1619698] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:32:00.983 UTC [1619698] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:32:00.998 UTC [1619698] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:32:01.018 UTC [1619701] LOG:  database system was shut down at 2023-07-22 04:32:00 UTC
2023-07-22 04:32:01.030 UTC [1619698] LOG:  database system is ready to accept connections
2023-07-22 04:32:01.339 UTC [1619717] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:32:01.339 UTC [1619717] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:32:01.339 UTC [1619717] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=0));
2023-07-22 04:32:01.340 UTC [1619717] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:32:01.340 UTC [1619717] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:32:01.340 UTC [1619717] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=2025));
2023-07-22 04:32:01.777 UTC [1619725] ERROR:  relation "test_trgm3" does not exist
2023-07-22 04:32:01.777 UTC [1619725] STATEMENT:  COPY  test_trgm3 FROM STDIN 
2023-07-22 04:32:01.836 UTC [1619699] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:32:01.886 UTC [1619699] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.014 s, sync=0.011 s, total=0.050 s; sync files=7, longest=0.007 s, average=0.002 s; distance=4637 kB, estimate=4637 kB
2023-07-22 04:32:02.037 UTC [1619740] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:32:02.037 UTC [1619740] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:32:02.104 UTC [1619740] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:32:02.104 UTC [1619740] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:32:02.105 UTC [1619740] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:32:02.105 UTC [1619740] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:32:02.140 UTC [1619740] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:32:02.140 UTC [1619740] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:32:02.141 UTC [1619740] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:32:02.141 UTC [1619740] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:32:35.571 UTC [1619699] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:32:35.732 UTC [1619699] LOG:  checkpoint complete: wrote 904 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.037 s, sync=0.046 s, total=0.162 s; sync files=255, longest=0.021 s, average=0.001 s; distance=137431 kB, estimate=137431 kB
2023-07-22 04:33:08.022 UTC [1619699] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:33:08.128 UTC [1619699] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.009 s, total=0.107 s; sync files=4, longest=0.005 s, average=0.003 s; distance=133247 kB, estimate=137013 kB
2023-07-22 04:33:08.173 UTC [1619698] LOG:  received fast shutdown request
2023-07-22 04:33:08.182 UTC [1619698] LOG:  aborting any active transactions
2023-07-22 04:33:08.183 UTC [1619698] LOG:  background worker "logical replication launcher" (PID 1619704) exited with exit code 1
2023-07-22 04:33:08.183 UTC [1619699] LOG:  shutting down
2023-07-22 04:33:08.189 UTC [1619699] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:33:08.226 UTC [1619699] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.004 s, total=0.044 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=123312 kB
2023-07-22 04:33:08.270 UTC [1619698] LOG:  database system is shut down
2023-07-22 04:33:09.166 UTC [1619812] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:33:09.167 UTC [1619812] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:33:09.179 UTC [1619812] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:33:09.200 UTC [1619815] LOG:  database system was shut down at 2023-07-22 04:33:08 UTC
2023-07-22 04:33:09.209 UTC [1619812] LOG:  database system is ready to accept connections
2023-07-22 04:33:09.364 UTC [1619831] ERROR:  package name can not be NULL
2023-07-22 04:33:09.364 UTC [1619831] STATEMENT:  SELECT pgv_exists(NULL);
2023-07-22 04:33:09.364 UTC [1619831] ERROR:  package name can not be NULL
2023-07-22 04:33:09.364 UTC [1619831] STATEMENT:  SELECT pgv_remove(NULL);
2023-07-22 04:33:09.364 UTC [1619831] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.364 UTC [1619831] STATEMENT:  SELECT pgv_remove('vars');
2023-07-22 04:33:09.364 UTC [1619831] ERROR:  name "vars111111111111111111111111111111111111111111111111111111111111" is too long
2023-07-22 04:33:09.364 UTC [1619831] STATEMENT:  SELECT pgv_exists('vars111111111111111111111111111111111111111111111111111111111111');
2023-07-22 04:33:09.364 UTC [1619831] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.364 UTC [1619831] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 04:33:09.365 UTC [1619831] ERROR:  unrecognized variable "int3"
2023-07-22 04:33:09.365 UTC [1619831] STATEMENT:  SELECT pgv_get_int('vars', 'int3');
2023-07-22 04:33:09.366 UTC [1619831] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:33:09.366 UTC [1619831] STATEMENT:  SELECT pgv_set_text('vars', 'int1', 's101');
2023-07-22 04:33:09.366 UTC [1619831] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.366 UTC [1619831] STATEMENT:  SELECT pgv_set_int('vars', 'str1', 101);
2023-07-22 04:33:09.366 UTC [1619831] ERROR:  unrecognized variable "str3"
2023-07-22 04:33:09.366 UTC [1619831] STATEMENT:  SELECT pgv_get_text('vars', 'str3');
2023-07-22 04:33:09.366 UTC [1619831] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:33:09.366 UTC [1619831] STATEMENT:  SELECT pgv_get_text('vars', 'int1');
2023-07-22 04:33:09.367 UTC [1619831] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.367 UTC [1619831] STATEMENT:  SELECT pgv_get_int('vars', 'str1');
2023-07-22 04:33:09.367 UTC [1619831] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.367 UTC [1619831] STATEMENT:  SELECT pgv_set_numeric('vars', 'str1', 1.01);
2023-07-22 04:33:09.367 UTC [1619831] ERROR:  unrecognized variable "num3"
2023-07-22 04:33:09.367 UTC [1619831] STATEMENT:  SELECT pgv_get_numeric('vars', 'num3');
2023-07-22 04:33:09.368 UTC [1619831] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.368 UTC [1619831] STATEMENT:  SELECT pgv_get_numeric('vars', 'str1');
2023-07-22 04:33:09.368 UTC [1619831] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:33:09.368 UTC [1619831] STATEMENT:  SELECT pgv_set_timestamp('vars', 'num1', '2016-03-30 12:00:00');
2023-07-22 04:33:09.368 UTC [1619831] ERROR:  unrecognized variable "ts3"
2023-07-22 04:33:09.368 UTC [1619831] STATEMENT:  SELECT pgv_get_timestamp('vars', 'ts3');
2023-07-22 04:33:09.369 UTC [1619831] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:33:09.369 UTC [1619831] STATEMENT:  SELECT pgv_get_timestamp('vars', 'num1');
2023-07-22 04:33:09.369 UTC [1619831] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:33:09.369 UTC [1619831] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'ts1', '2016-03-30 12:00:00 GMT+03');
2023-07-22 04:33:09.370 UTC [1619831] ERROR:  unrecognized variable "tstz3"
2023-07-22 04:33:09.370 UTC [1619831] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'tstz3');
2023-07-22 04:33:09.370 UTC [1619831] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:33:09.370 UTC [1619831] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'ts1');
2023-07-22 04:33:09.370 UTC [1619831] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:33:09.370 UTC [1619831] STATEMENT:  SELECT pgv_set_date('vars', 'tstz1', '2016-04-01');
2023-07-22 04:33:09.371 UTC [1619831] ERROR:  unrecognized variable "d3"
2023-07-22 04:33:09.371 UTC [1619831] STATEMENT:  SELECT pgv_get_date('vars', 'd3');
2023-07-22 04:33:09.371 UTC [1619831] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:33:09.371 UTC [1619831] STATEMENT:  SELECT pgv_get_date('vars', 'tstz1');
2023-07-22 04:33:09.371 UTC [1619831] ERROR:  variable "d1" requires "date" value
2023-07-22 04:33:09.371 UTC [1619831] STATEMENT:  SELECT pgv_set_jsonb('vars', 'd1', '[1, 2, "foo", null]');
2023-07-22 04:33:09.372 UTC [1619831] ERROR:  unrecognized variable "j3"
2023-07-22 04:33:09.372 UTC [1619831] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j3');
2023-07-22 04:33:09.372 UTC [1619831] ERROR:  variable "d1" requires "date" value
2023-07-22 04:33:09.372 UTC [1619831] STATEMENT:  SELECT pgv_get_jsonb('vars', 'd1');
2023-07-22 04:33:09.386 UTC [1619831] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:33:09.386 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars2', 'j1', tab) FROM tab;
2023-07-22 04:33:09.386 UTC [1619831] ERROR:  there is a record in the variable "r1" with same key
2023-07-22 04:33:09.386 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars3', 'r1', tab) FROM tab;
2023-07-22 04:33:09.387 UTC [1619831] ERROR:  new record structure have 3 attributes, but variable "r1" structure have 2.
2023-07-22 04:33:09.387 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 'str1', 'str2'));
2023-07-22 04:33:09.387 UTC [1619831] ERROR:  new record attribute type for attribute number 2 differs from variable "r1" structure.
2023-07-22 04:33:09.387 UTC [1619831] HINT:  You may need explicit type casts.
2023-07-22 04:33:09.387 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 1));
2023-07-22 04:33:09.387 UTC [1619831] ERROR:  new record attribute type for attribute number 1 differs from variable "r1" structure.
2023-07-22 04:33:09.387 UTC [1619831] HINT:  You may need explicit type casts.
2023-07-22 04:33:09.387 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row('str1', 'str1'));
2023-07-22 04:33:09.387 UTC [1619831] ERROR:  searching for elements in multidimensional arrays is not supported
2023-07-22 04:33:09.387 UTC [1619831] STATEMENT:  SELECT pgv_select('vars3', 'r1', ARRAY[[1,2]]);
2023-07-22 04:33:09.387 UTC [1619831] ERROR:  unrecognized package "vars4"
2023-07-22 04:33:09.387 UTC [1619831] STATEMENT:  SELECT pgv_update('vars4', 'r1', row(3, 'str22'::varchar));
2023-07-22 04:33:09.388 UTC [1619831] ERROR:  unrecognized package "vars4"
2023-07-22 04:33:09.388 UTC [1619831] STATEMENT:  select pgv_delete('vars4', 'r2', NULL::int);
2023-07-22 04:33:09.388 UTC [1619831] ERROR:  record argument can not be NULL
2023-07-22 04:33:09.388 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars3', 'r2', NULL);
2023-07-22 04:33:09.388 UTC [1619831] ERROR:  record argument can not be NULL
2023-07-22 04:33:09.388 UTC [1619831] STATEMENT:  SELECT pgv_update('vars3', 'r2', NULL);
2023-07-22 04:33:09.388 UTC [1619831] ERROR:  array argument can not be NULL
2023-07-22 04:33:09.388 UTC [1619831] STATEMENT:  SELECT pgv_select('vars3', 'r1', NULL::int[]);
2023-07-22 04:33:09.388 UTC [1619831] ERROR:  requested value type differs from variable "r1" key type
2023-07-22 04:33:09.388 UTC [1619831] STATEMENT:  SELECT pgv_select('vars3', 'r1', 1::float);
2023-07-22 04:33:09.392 UTC [1619831] ERROR:  unrecognized variable "r3"
2023-07-22 04:33:09.392 UTC [1619831] STATEMENT:  SELECT pgv_select('vars3', 'r3');
2023-07-22 04:33:09.393 UTC [1619831] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:33:09.393 UTC [1619831] STATEMENT:  SELECT pgv_select('vars2', 'j1');
2023-07-22 04:33:09.397 UTC [1619831] ERROR:  unrecognized variable "r3"
2023-07-22 04:33:09.397 UTC [1619831] CONTEXT:  SQL statement "SELECT pgv_select('vars3', 'r3')"
	PL/pgSQL function inline_code_block line 3 at PERFORM
2023-07-22 04:33:09.397 UTC [1619831] STATEMENT:  DO
	$$BEGIN
	    PERFORM pgv_select('vars3', 'r1') LIMIT 2 OFFSET 2;
	    PERFORM pgv_select('vars3', 'r3');
	END$$;
2023-07-22 04:33:09.398 UTC [1619831] ERROR:  could not identify a hash function for type record
2023-07-22 04:33:09.398 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 04:33:09.399 UTC [1619831] ERROR:  variable "r1" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.399 UTC [1619831] STATEMENT:  SELECT pgv_set('vars5', 'r1', row(1, 'str11'), true);
2023-07-22 04:33:09.399 UTC [1619831] ERROR:  "r1" isn't a record variable
2023-07-22 04:33:09.399 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars5', 'r1', row(1, 'str11'));
2023-07-22 04:33:09.399 UTC [1619831] ERROR:  "r1" isn't a record variable
2023-07-22 04:33:09.399 UTC [1619831] STATEMENT:  SELECT pgv_select('vars5', 'r1');
2023-07-22 04:33:09.400 UTC [1619831] ERROR:  "r1" isn't a scalar variable
2023-07-22 04:33:09.400 UTC [1619831] STATEMENT:  SELECT pgv_get('vars3', 'r1', NULL::record);
2023-07-22 04:33:09.400 UTC [1619831] ERROR:  unrecognized variable "int3"
2023-07-22 04:33:09.400 UTC [1619831] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 04:33:09.401 UTC [1619831] ERROR:  unrecognized variable "int1"
2023-07-22 04:33:09.401 UTC [1619831] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 04:33:09.401 UTC [1619831] ERROR:  unrecognized package "vars2"
2023-07-22 04:33:09.401 UTC [1619831] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j1');
2023-07-22 04:33:09.406 UTC [1619831] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 04:33:09.406 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars', 'r1', foo) FROM foo;
2023-07-22 04:33:09.407 UTC [1619831] ERROR:  new record attribute type for attribute number 2 differs from variable "r4" structure.
2023-07-22 04:33:09.407 UTC [1619831] HINT:  You may need explicit type casts.
2023-07-22 04:33:09.407 UTC [1619831] STATEMENT:  SELECT pgv_insert('vars', 'r4', row(0, 'str1'));
2023-07-22 04:33:09.414 UTC [1619835] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.414 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 04:33:09.415 UTC [1619835] ERROR:  unrecognized variable "int3"
2023-07-22 04:33:09.415 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'int3', NULL::int);
2023-07-22 04:33:09.416 UTC [1619835] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:33:09.416 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'int1', 's101'::text);
2023-07-22 04:33:09.416 UTC [1619835] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.416 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'str1', 101);
2023-07-22 04:33:09.416 UTC [1619835] ERROR:  unrecognized variable "str3"
2023-07-22 04:33:09.416 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'str3', NULL::text);
2023-07-22 04:33:09.416 UTC [1619835] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:33:09.416 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::text);
2023-07-22 04:33:09.417 UTC [1619835] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.417 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::int);
2023-07-22 04:33:09.417 UTC [1619835] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.417 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'str1', 1.01::numeric);
2023-07-22 04:33:09.417 UTC [1619835] ERROR:  unrecognized variable "num3"
2023-07-22 04:33:09.417 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'num3', NULL::numeric);
2023-07-22 04:33:09.418 UTC [1619835] ERROR:  variable "str1" requires "text" value
2023-07-22 04:33:09.418 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::numeric);
2023-07-22 04:33:09.418 UTC [1619835] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:33:09.418 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'num1', '2016-03-30 12:00:00'::timestamp);
2023-07-22 04:33:09.418 UTC [1619835] ERROR:  unrecognized variable "ts3"
2023-07-22 04:33:09.418 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'ts3', NULL::timestamp);
2023-07-22 04:33:09.419 UTC [1619835] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:33:09.419 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'num1', NULL::timestamp);
2023-07-22 04:33:09.419 UTC [1619835] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:33:09.419 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'ts1', '2016-03-30 12:00:00 GMT+03'::timestamptz);
2023-07-22 04:33:09.420 UTC [1619835] ERROR:  unrecognized variable "tstz3"
2023-07-22 04:33:09.420 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'tstz3', NULL::timestamptz);
2023-07-22 04:33:09.420 UTC [1619835] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:33:09.420 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'ts1', NULL::timestamptz);
2023-07-22 04:33:09.420 UTC [1619835] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:33:09.420 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'tstz1', '2016-04-01'::date);
2023-07-22 04:33:09.421 UTC [1619835] ERROR:  unrecognized variable "d3"
2023-07-22 04:33:09.421 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'd3', NULL::date);
2023-07-22 04:33:09.421 UTC [1619835] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:33:09.421 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'tstz1', NULL::date);
2023-07-22 04:33:09.421 UTC [1619835] ERROR:  variable "d1" requires "date" value
2023-07-22 04:33:09.421 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'd1', '[1, 2, "foo", null]'::jsonb);
2023-07-22 04:33:09.422 UTC [1619835] ERROR:  unrecognized variable "j3"
2023-07-22 04:33:09.422 UTC [1619835] STATEMENT:  SELECT pgv_get('vars2', 'j3', NULL::jsonb);
2023-07-22 04:33:09.422 UTC [1619835] ERROR:  variable "d1" requires "date" value
2023-07-22 04:33:09.422 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'd1', NULL::jsonb);
2023-07-22 04:33:09.422 UTC [1619835] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:33:09.422 UTC [1619835] STATEMENT:  SELECT pgv_set('vars2', 'j1', '{1, 2, null}'::int[]);
2023-07-22 04:33:09.422 UTC [1619835] ERROR:  variable "arr2" requires "text[]" value
2023-07-22 04:33:09.422 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'arr2', NULL::int[]);
2023-07-22 04:33:09.423 UTC [1619835] ERROR:  variable "arr1" requires "integer[]" value
2023-07-22 04:33:09.423 UTC [1619835] STATEMENT:  SELECT pgv_set('vars', 'arr1', '{"bar", "balance", "active"}'::text[]);
2023-07-22 04:33:09.423 UTC [1619835] ERROR:  unrecognized variable "arr3"
2023-07-22 04:33:09.423 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'arr3', NULL::int[]);
2023-07-22 04:33:09.423 UTC [1619835] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:33:09.423 UTC [1619835] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::int[]);
2023-07-22 04:33:09.424 UTC [1619835] ERROR:  unrecognized variable "int3"
2023-07-22 04:33:09.424 UTC [1619835] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 04:33:09.424 UTC [1619835] ERROR:  unrecognized variable "int1"
2023-07-22 04:33:09.424 UTC [1619835] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 04:33:09.424 UTC [1619835] ERROR:  unrecognized package "vars2"
2023-07-22 04:33:09.424 UTC [1619835] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::jsonb);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "any1" already created as TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set('vars', 'any1', 'value'::text);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "any2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set('vars', 'any2', 'value'::text, true);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "int1" already created as TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_int('vars', 'int1', 301);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "int2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_int('vars', 'int2', 302, true);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "str1" already created as TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_text('vars', 'str1', 's301');
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "str2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_text('vars', 'str2', 's302', true);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "num1" already created as TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_numeric('vars', 'num1', 3.01);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "num2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_numeric('vars', 'num2', 3.02, true);
2023-07-22 04:33:09.454 UTC [1619839] ERROR:  variable "ts1" already created as TRANSACTIONAL
2023-07-22 04:33:09.454 UTC [1619839] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts1', '2016-03-30 20:00:00');
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "ts2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts2', '2016-03-30 21:00:00', true);
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "tstz1" already created as TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz1', '2016-03-30 20:00:00 GMT+01');
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "tstz2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz2', '2016-03-30 21:00:00 GMT+02', true);
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "d1" already created as TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_date('vars', 'd1', '2016-04-29');
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "d2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_date('vars', 'd2', '2016-04-30', true);
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "j1" already created as TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j1', '[1, 2, "foo2", null]');
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "j2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j2', '{"bar": "baz2", "balance": 7.77, "active": true}', true);
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "r1" already created as TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(6 :: integer, 'str66' :: varchar));
2023-07-22 04:33:09.455 UTC [1619839] ERROR:  variable "r2" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.455 UTC [1619839] STATEMENT:  SELECT pgv_insert('vars3', 'r2', row(6 :: integer, 'str66' :: varchar),true);
2023-07-22 04:33:09.456 UTC [1619839] ERROR:  unrecognized variable "any1"
2023-07-22 04:33:09.456 UTC [1619839] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:33:09.456 UTC [1619839] ERROR:  unrecognized variable "r1"
2023-07-22 04:33:09.456 UTC [1619839] STATEMENT:  SELECT pgv_select('vars3', 'r1');
2023-07-22 04:33:09.457 UTC [1619839] ERROR:  unrecognized package "vars2"
2023-07-22 04:33:09.457 UTC [1619839] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 04:33:09.460 UTC [1619839] ERROR:  unrecognized variable "any1"
2023-07-22 04:33:09.460 UTC [1619839] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:33:09.460 UTC [1619839] ERROR:  unrecognized variable "r1"
2023-07-22 04:33:09.460 UTC [1619839] STATEMENT:  SELECT pgv_select('vars', 'r1');
2023-07-22 04:33:09.461 UTC [1619839] ERROR:  unrecognized package "vars2"
2023-07-22 04:33:09.461 UTC [1619839] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 04:33:09.464 UTC [1619839] ERROR:  variable "any1" requires "text" value
2023-07-22 04:33:09.464 UTC [1619839] STATEMENT:  SELECT pgv_set('vars', 'any1', 'wrong type'::varchar, true);
2023-07-22 04:33:09.464 UTC [1619839] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.464 UTC [1619839] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:33:09.467 UTC [1619839] ERROR:  division by zero
2023-07-22 04:33:09.467 UTC [1619839] STATEMENT:  SELECT pgv_insert('package', 'errs',row(n), true)
	FROM generate_series(1,5) AS gs(n) WHERE 1.0/(n-3)<>0;
2023-07-22 04:33:09.467 UTC [1619839] ERROR:  could not identify a hash function for type record
2023-07-22 04:33:09.467 UTC [1619839] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 04:33:09.467 UTC [1619839] ERROR:  unrecognized package "vars4"
2023-07-22 04:33:09.467 UTC [1619839] STATEMENT:  SELECT pgv_select('vars4', 'r1', 0);
2023-07-22 04:33:09.468 UTC [1619839] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.468 UTC [1619839] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:33:09.468 UTC [1619839] ERROR:  syntax error at or near "ERROR" at character 1
2023-07-22 04:33:09.468 UTC [1619839] STATEMENT:  ERROR;
2023-07-22 04:33:09.474 UTC [1619839] ERROR:  unrecognized variable "y"
2023-07-22 04:33:09.474 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:33:09.475 UTC [1619839] ERROR:  unrecognized variable "y"
2023-07-22 04:33:09.475 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:33:09.475 UTC [1619839] ERROR:  unrecognized variable "y"
2023-07-22 04:33:09.475 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:33:09.476 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.476 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.476 UTC [1619839] ERROR:  unrecognized variable "y"
2023-07-22 04:33:09.476 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.476 UTC [1619839] ERROR:  unrecognized variable "y"
2023-07-22 04:33:09.476 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:33:09.476 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.476 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.477 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.477 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.477 UTC [1619839] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 04:33:09.477 UTC [1619839] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:33:09.477 UTC [1619839] STATEMENT:  SELECT pgv_select('test');
2023-07-22 04:33:09.477 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.477 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.478 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.478 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.478 UTC [1619839] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 04:33:09.478 UTC [1619839] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:33:09.478 UTC [1619839] STATEMENT:  SELECT pgv_select('test');
2023-07-22 04:33:09.478 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.478 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.478 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.478 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:33:09.478 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.478 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.479 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.479 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:33:09.479 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.479 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.479 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.479 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:33:09.479 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.479 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.480 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.480 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.480 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.480 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.481 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.481 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:33:09.481 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.481 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:33:09.482 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.482 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:33:09.482 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.482 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.482 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.482 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.483 UTC [1619839] ERROR:  unrecognized package "test"
2023-07-22 04:33:09.483 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.489 UTC [1619839] ERROR:  unrecognized variable "z1"
2023-07-22 04:33:09.489 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.489 UTC [1619839] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:33:09.489 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.489 UTC [1619839] ERROR:  unrecognized variable "z2"
2023-07-22 04:33:09.489 UTC [1619839] STATEMENT:  SELECT pgv_select('test', 'z2');
2023-07-22 04:33:09.490 UTC [1619839] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:33:09.490 UTC [1619839] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:33:09.496 UTC [1619839] ERROR:  there is a record in the variable "y" with same key
2023-07-22 04:33:09.496 UTC [1619839] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), TRUE);
2023-07-22 04:33:09.496 UTC [1619839] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:33:09.496 UTC [1619839] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:33:09.496 UTC [1619839] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:33:09.496 UTC [1619839] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:33:09.496 UTC [1619839] ERROR:  variable "x" already created as TRANSACTIONAL
2023-07-22 04:33:09.496 UTC [1619839] STATEMENT:  SELECT pgv_insert('test1', 'x', ROW (2::float, 1::float), FALSE);
2023-07-22 04:33:09.497 UTC [1619839] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:33:09.497 UTC [1619839] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:33:09.497 UTC [1619839] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:33:09.497 UTC [1619839] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:33:09.508 UTC [1619839] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 04:33:09.508 UTC [1619839] STATEMENT:  SELECT pgv_insert('vars', 'r1', tab) FROM tab;
2023-07-22 04:33:09.509 UTC [1619839] ERROR:  could not identify a hash function for type record
2023-07-22 04:33:09.509 UTC [1619839] STATEMENT:  SELECT pgv_insert('test', 'x5', ROW ((2::int, 1::int)), TRUE);
2023-07-22 04:33:09.515 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.515 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.515 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.515 UTC [1619843] STATEMENT:  select pgv_set('vars', 'int3', 103);
2023-07-22 04:33:09.516 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.516 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 04:33:09.516 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.516 UTC [1619843] STATEMENT:  select pgv_set('vars', 'int1', 1001);
2023-07-22 04:33:09.516 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.516 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.516 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.516 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 04:33:09.516 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.516 UTC [1619843] STATEMENT:  select pgv_set('vars', 'int2', 1002);
2023-07-22 04:33:09.516 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.516 UTC [1619843] ERROR:  unrecognized variable "int3"
2023-07-22 04:33:09.516 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 04:33:09.516 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  select pgv_set('vars', 'int3', 103, true);
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  select pgv_set('vars', 'int2', 1002, true);
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  unrecognized variable "int3"
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 04:33:09.517 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.517 UTC [1619843] ERROR:  unrecognized variable "int2"
2023-07-22 04:33:09.517 UTC [1619843] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 04:33:09.517 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.518 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.518 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.518 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.518 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.518 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.518 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.518 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.518 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  select pgv_insert('test', 'z', row (11::int, 22::int), false);
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  select pgv_insert('test', 'z', row (22::int, 33::int), false);
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  select pgv_insert('test', 'z', row (33::int, 44::int), false);
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  declare r11_cur cursor for select pgv_select('test', 'x');
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  fetch 2 in r11_cur;
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 04:33:09.519 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.519 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.519 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.519 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  declare r3_cur cursor for select pgv_select('test', 'z');
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  fetch 2 in r1_cur;
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  cursor "r2_cur" does not exist
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 04:33:09.519 UTC [1619843] ERROR:  cursor "r3_cur" does not exist
2023-07-22 04:33:09.519 UTC [1619843] STATEMENT:  fetch 2 in r3_cur;
2023-07-22 04:33:09.519 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.520 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.520 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.520 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.520 UTC [1619843] STATEMENT:  select pgv_set('vars', 'trans_int', 103, true);
2023-07-22 04:33:09.520 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.520 UTC [1619843] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:33:09.520 UTC [1619843] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.520 UTC [1619843] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:33:09.520 UTC [1619843] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 04:33:09.520 UTC [1619843] STATEMENT:  rollback to sp1;
2023-07-22 04:33:09.520 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.520 UTC [1619843] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.520 UTC [1619843] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'int1', 2);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  savepoint sp2;
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'trans_int1', 4, true);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  savepoint "sp2" does not exist
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  rollback to sp2;
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select * from pgv_list() order by package, name;
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'trans_int2', 4, true);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'trans_int3', 5, true);
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'int2', 3);
2023-07-22 04:33:09.521 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.521 UTC [1619843] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 04:33:09.521 UTC [1619843] STATEMENT:  rollback to sp1;
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  unrecognized package "vars"
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  unrecognized package "vars1"
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  unrecognized package "vars1"
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  select pgv_get('vars1', 'int2', null::int);
2023-07-22 04:33:09.522 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  begin autonomous;
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'int1', 1);
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'trans_int1', 2, true);
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  savepoint sp2;
2023-07-22 04:33:09.522 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.522 UTC [1619843] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 04:33:09.523 UTC [1619843] ERROR:  savepoint "sp2" does not exist
2023-07-22 04:33:09.523 UTC [1619843] STATEMENT:  rollback to sp2;
2023-07-22 04:33:09.523 UTC [1619843] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.523 UTC [1619843] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 04:33:09.523 UTC [1619843] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.531 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.531 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.531 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.531 UTC [1619849] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:33:09.531 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.531 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.531 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.531 UTC [1619849] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:33:09.531 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.531 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.531 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.532 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.532 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.532 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.532 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.532 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.532 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.532 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.532 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.532 UTC [1619849] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.532 UTC [1619849] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 04:33:09.532 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.532 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.532 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.532 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.532 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.533 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.533 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.533 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.533 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.533 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.533 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.534 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.534 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.534 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.534 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.534 UTC [1619849] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:33:09.535 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.535 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.535 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.535 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.535 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.535 UTC [1619849] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 04:33:09.535 UTC [1619849] STATEMENT:  SELECT pgv_set('vars', 'int1', 2, true);
2023-07-22 04:33:09.535 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.535 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.536 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.536 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.536 UTC [1619849] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:33:09.536 UTC [1619849] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 04:33:09.536 UTC [1619849] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:33:09.536 UTC [1619849] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 04:33:09.536 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.536 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.536 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.536 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.536 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.536 UTC [1619849] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:33:09.536 UTC [1619849] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 04:33:09.537 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.537 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.537 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.537 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.537 UTC [1619849] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 04:33:09.537 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.537 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.537 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.537 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.537 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.537 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.537 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.537 UTC [1619849] STATEMENT:  SELECT pgv_set('vars', 'int1', 2);
2023-07-22 04:33:09.537 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.537 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.537 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.537 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SAVEPOINT sp1;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SELECT pgv_set('vars1', 'int1', 0);
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  savepoint "sp1" does not exist
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  ROLLBACK TO sp1;
2023-07-22 04:33:09.538 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  unrecognized package "vars1"
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SELECT pgv_remove('vars1', 'int1');
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SAVEPOINT sp1;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SELECT pgv_set('vars2', 'any1', 'variable exists'::text, true);
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SELECT pgv_free();
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  RELEASE sp1;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SAVEPOINT sp2;
2023-07-22 04:33:09.538 UTC [1619849] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 04:33:09.538 UTC [1619849] STATEMENT:  SAVEPOINT sp3;
2023-07-22 04:33:09.539 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.539 UTC [1619849] WARNING:  there is no transaction in progress
2023-07-22 04:33:09.632 UTC [1619866] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:33:09.632 UTC [1619866] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:33:09.691 UTC [1619866] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:33:09.691 UTC [1619866] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:33:09.691 UTC [1619866] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:33:09.691 UTC [1619866] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:33:09.722 UTC [1619866] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:33:09.722 UTC [1619866] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:33:09.722 UTC [1619866] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:33:09.722 UTC [1619866] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:33:43.437 UTC [1619813] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:33:43.654 UTC [1619813] LOG:  checkpoint complete: wrote 1791 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.050 s, sync=0.089 s, total=0.218 s; sync files=503, longest=0.045 s, average=0.001 s; distance=141409 kB, estimate=141409 kB
2023-07-22 04:34:16.200 UTC [1619813] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:34:16.313 UTC [1619813] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.009 s, total=0.114 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133194 kB, estimate=140588 kB
2023-07-22 04:34:16.360 UTC [1619812] LOG:  received fast shutdown request
2023-07-22 04:34:16.368 UTC [1619812] LOG:  aborting any active transactions
2023-07-22 04:34:16.368 UTC [1619812] LOG:  background worker "logical replication launcher" (PID 1619818) exited with exit code 1
2023-07-22 04:34:16.368 UTC [1619813] LOG:  shutting down
2023-07-22 04:34:16.376 UTC [1619813] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:34:16.407 UTC [1619813] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.001 s, total=0.039 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126529 kB
2023-07-22 04:34:16.449 UTC [1619812] LOG:  database system is shut down
2023-07-22 04:34:17.374 UTC [1619938] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:34:17.374 UTC [1619938] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:34:17.389 UTC [1619938] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:34:17.402 UTC [1619941] LOG:  database system was shut down at 2023-07-22 04:34:16 UTC
2023-07-22 04:34:17.415 UTC [1619938] LOG:  database system is ready to accept connections
2023-07-22 04:34:17.646 UTC [1619957] ERROR:  could not open relation with OID 16408
2023-07-22 04:34:17.646 UTC [1619957] STATEMENT:  SELECT * FROM pg_visibility_map(16408);
2023-07-22 04:34:17.647 UTC [1619957] ERROR:  could not open relation with OID 16408
2023-07-22 04:34:17.647 UTC [1619957] STATEMENT:  SELECT * FROM pg_visibility_map(16408);
2023-07-22 04:34:17.652 UTC [1619957] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:34:17.652 UTC [1619957] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:34:17.652 UTC [1619957] STATEMENT:  select pg_visibility('test_partitioned', 0);
2023-07-22 04:34:17.652 UTC [1619957] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:34:17.652 UTC [1619957] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:34:17.652 UTC [1619957] STATEMENT:  select pg_visibility_map('test_partitioned');
2023-07-22 04:34:17.652 UTC [1619957] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:34:17.652 UTC [1619957] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:34:17.652 UTC [1619957] STATEMENT:  select pg_visibility_map_summary('test_partitioned');
2023-07-22 04:34:17.652 UTC [1619957] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:34:17.652 UTC [1619957] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:34:17.652 UTC [1619957] STATEMENT:  select pg_check_frozen('test_partitioned');
2023-07-22 04:34:17.653 UTC [1619957] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:34:17.653 UTC [1619957] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:34:17.653 UTC [1619957] STATEMENT:  select pg_truncate_visibility_map('test_partitioned');
2023-07-22 04:34:17.666 UTC [1619957] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:34:17.666 UTC [1619957] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:34:17.666 UTC [1619957] STATEMENT:  select pg_visibility('test_index', 0);
2023-07-22 04:34:17.667 UTC [1619957] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:34:17.667 UTC [1619957] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:34:17.667 UTC [1619957] STATEMENT:  select pg_visibility_map('test_index');
2023-07-22 04:34:17.667 UTC [1619957] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:34:17.667 UTC [1619957] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:34:17.667 UTC [1619957] STATEMENT:  select pg_visibility_map_summary('test_index');
2023-07-22 04:34:17.668 UTC [1619957] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:34:17.668 UTC [1619957] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:34:17.668 UTC [1619957] STATEMENT:  select pg_check_frozen('test_index');
2023-07-22 04:34:17.668 UTC [1619957] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:34:17.668 UTC [1619957] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:34:17.668 UTC [1619957] STATEMENT:  select pg_truncate_visibility_map('test_index');
2023-07-22 04:34:17.672 UTC [1619957] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:34:17.672 UTC [1619957] DETAIL:  This operation is not supported for views.
2023-07-22 04:34:17.672 UTC [1619957] STATEMENT:  select pg_visibility('test_view', 0);
2023-07-22 04:34:17.672 UTC [1619957] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:34:17.672 UTC [1619957] DETAIL:  This operation is not supported for views.
2023-07-22 04:34:17.672 UTC [1619957] STATEMENT:  select pg_visibility_map('test_view');
2023-07-22 04:34:17.673 UTC [1619957] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:34:17.673 UTC [1619957] DETAIL:  This operation is not supported for views.
2023-07-22 04:34:17.673 UTC [1619957] STATEMENT:  select pg_visibility_map_summary('test_view');
2023-07-22 04:34:17.673 UTC [1619957] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:34:17.673 UTC [1619957] DETAIL:  This operation is not supported for views.
2023-07-22 04:34:17.673 UTC [1619957] STATEMENT:  select pg_check_frozen('test_view');
2023-07-22 04:34:17.673 UTC [1619957] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:34:17.673 UTC [1619957] DETAIL:  This operation is not supported for views.
2023-07-22 04:34:17.673 UTC [1619957] STATEMENT:  select pg_truncate_visibility_map('test_view');
2023-07-22 04:34:17.678 UTC [1619957] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:34:17.678 UTC [1619957] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:34:17.678 UTC [1619957] STATEMENT:  select pg_visibility('test_sequence', 0);
2023-07-22 04:34:17.679 UTC [1619957] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:34:17.679 UTC [1619957] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:34:17.679 UTC [1619957] STATEMENT:  select pg_visibility_map('test_sequence');
2023-07-22 04:34:17.679 UTC [1619957] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:34:17.679 UTC [1619957] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:34:17.679 UTC [1619957] STATEMENT:  select pg_visibility_map_summary('test_sequence');
2023-07-22 04:34:17.680 UTC [1619957] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:34:17.680 UTC [1619957] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:34:17.680 UTC [1619957] STATEMENT:  select pg_check_frozen('test_sequence');
2023-07-22 04:34:17.680 UTC [1619957] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:34:17.680 UTC [1619957] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:34:17.680 UTC [1619957] STATEMENT:  select pg_truncate_visibility_map('test_sequence');
2023-07-22 04:34:17.700 UTC [1619957] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:34:17.700 UTC [1619957] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:34:17.700 UTC [1619957] STATEMENT:  select pg_visibility('test_foreign_table', 0);
2023-07-22 04:34:17.701 UTC [1619957] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:34:17.701 UTC [1619957] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:34:17.701 UTC [1619957] STATEMENT:  select pg_visibility_map('test_foreign_table');
2023-07-22 04:34:17.701 UTC [1619957] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:34:17.701 UTC [1619957] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:34:17.701 UTC [1619957] STATEMENT:  select pg_visibility_map_summary('test_foreign_table');
2023-07-22 04:34:17.702 UTC [1619957] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:34:17.702 UTC [1619957] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:34:17.702 UTC [1619957] STATEMENT:  select pg_check_frozen('test_foreign_table');
2023-07-22 04:34:17.703 UTC [1619957] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:34:17.703 UTC [1619957] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:34:17.703 UTC [1619957] STATEMENT:  select pg_truncate_visibility_map('test_foreign_table');
2023-07-22 04:34:17.914 UTC [1619939] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:34:17.976 UTC [1619939] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.014 s, total=0.062 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4256 kB, estimate=4256 kB
2023-07-22 04:34:18.094 UTC [1619972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:34:18.094 UTC [1619972] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:34:18.155 UTC [1619972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:34:18.155 UTC [1619972] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:34:18.156 UTC [1619972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:34:18.156 UTC [1619972] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:34:18.183 UTC [1619972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:34:18.183 UTC [1619972] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:34:18.183 UTC [1619972] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:34:18.183 UTC [1619972] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:34:51.489 UTC [1619939] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:34:51.644 UTC [1619939] LOG:  checkpoint complete: wrote 898 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.035 s, sync=0.042 s, total=0.156 s; sync files=255, longest=0.018 s, average=0.001 s; distance=137241 kB, estimate=137241 kB
2023-07-22 04:35:24.195 UTC [1619939] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:35:24.790 UTC [1619939] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.015 s, sync=0.009 s, total=0.595 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133271 kB, estimate=136844 kB
2023-07-22 04:35:24.832 UTC [1619938] LOG:  received fast shutdown request
2023-07-22 04:35:24.839 UTC [1619938] LOG:  aborting any active transactions
2023-07-22 04:35:24.839 UTC [1619938] LOG:  background worker "logical replication launcher" (PID 1619944) exited with exit code 1
2023-07-22 04:35:24.840 UTC [1619939] LOG:  shutting down
2023-07-22 04:35:24.846 UTC [1619939] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:35:24.880 UTC [1619939] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.004 s, total=0.041 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=123160 kB
2023-07-22 04:35:24.927 UTC [1619938] LOG:  database system is shut down
2023-07-22 04:35:25.837 UTC [1620047] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:35:25.837 UTC [1620047] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:35:25.851 UTC [1620047] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:35:25.870 UTC [1620050] LOG:  database system was shut down at 2023-07-22 04:35:25 UTC
2023-07-22 04:35:25.882 UTC [1620047] LOG:  database system is ready to accept connections
2023-07-22 04:35:25.883 UTC [1620053] LOG:  pg_wait_sampling collector started
2023-07-22 04:35:26.230 UTC [1620088] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:35:26.230 UTC [1620088] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:35:26.288 UTC [1620088] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:35:26.288 UTC [1620088] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:35:26.288 UTC [1620088] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:35:26.288 UTC [1620088] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:35:26.321 UTC [1620088] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:35:26.321 UTC [1620088] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:35:26.322 UTC [1620088] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:35:26.322 UTC [1620088] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:36:00.079 UTC [1620048] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:36:00.720 UTC [1620048] LOG:  checkpoint complete: wrote 1790 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.066 s, sync=0.094 s, total=0.641 s; sync files=501, longest=0.040 s, average=0.001 s; distance=141235 kB, estimate=141235 kB
2023-07-22 04:36:32.913 UTC [1620048] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:36:33.028 UTC [1620048] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.007 s, total=0.116 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133293 kB, estimate=140440 kB
2023-07-22 04:36:33.097 UTC [1620047] LOG:  received fast shutdown request
2023-07-22 04:36:33.107 UTC [1620047] LOG:  aborting any active transactions
2023-07-22 04:36:33.107 UTC [1620053] LOG:  pg_wait_sampling collector shutting down
2023-07-22 04:36:33.108 UTC [1620047] LOG:  background worker "logical replication launcher" (PID 1620054) exited with exit code 1
2023-07-22 04:36:33.108 UTC [1620048] LOG:  shutting down
2023-07-22 04:36:33.115 UTC [1620048] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:36:33.146 UTC [1620048] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.039 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126396 kB
2023-07-22 04:36:33.198 UTC [1620047] LOG:  database system is shut down
2023-07-22 04:36:34.204 UTC [1620160] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:36:34.204 UTC [1620160] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:36:34.214 UTC [1620160] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:36:34.230 UTC [1620163] LOG:  database system was shut down at 2023-07-22 04:36:33 UTC
2023-07-22 04:36:34.240 UTC [1620160] LOG:  database system is ready to accept connections
2023-07-22 04:36:34.477 UTC [1620179] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 04:36:34.477 UTC [1620179] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_records_info('0/1882DA0', '0/1882C88');
2023-07-22 04:36:34.478 UTC [1620179] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 04:36:34.478 UTC [1620179] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_stats('0/1882DA0', '0/1882C88');
2023-07-22 04:36:34.562 UTC [1620161] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:36:34.618 UTC [1620161] LOG:  checkpoint complete: wrote 22 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.014 s, sync=0.013 s, total=0.056 s; sync files=18, longest=0.008 s, average=0.001 s; distance=4038 kB, estimate=4038 kB
2023-07-22 04:36:34.727 UTC [1620194] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:36:34.727 UTC [1620194] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:36:34.778 UTC [1620194] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:36:34.778 UTC [1620194] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:36:34.779 UTC [1620194] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:36:34.779 UTC [1620194] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:36:34.812 UTC [1620194] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:36:34.812 UTC [1620194] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:36:34.813 UTC [1620194] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:36:34.813 UTC [1620194] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:37:08.276 UTC [1620161] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:37:08.443 UTC [1620161] LOG:  checkpoint complete: wrote 898 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.058 s, sync=0.025 s, total=0.168 s; sync files=255, longest=0.009 s, average=0.001 s; distance=137284 kB, estimate=137284 kB
2023-07-22 04:37:40.837 UTC [1620161] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:37:40.942 UTC [1620161] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.016 s, sync=0.007 s, total=0.105 s; sync files=4, longest=0.006 s, average=0.002 s; distance=133269 kB, estimate=136882 kB
2023-07-22 04:37:40.994 UTC [1620160] LOG:  received fast shutdown request
2023-07-22 04:37:41.001 UTC [1620160] LOG:  aborting any active transactions
2023-07-22 04:37:41.002 UTC [1620160] LOG:  background worker "logical replication launcher" (PID 1620166) exited with exit code 1
2023-07-22 04:37:41.002 UTC [1620161] LOG:  shutting down
2023-07-22 04:37:41.009 UTC [1620161] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:37:41.040 UTC [1620161] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.038 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123194 kB
2023-07-22 04:37:41.088 UTC [1620160] LOG:  database system is shut down
2023-07-22 04:37:41.848 UTC [1620266] LOG:  pgaudit extension initialized
2023-07-22 04:37:41.862 UTC [1620266] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:37:41.862 UTC [1620266] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:37:41.874 UTC [1620266] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:37:41.890 UTC [1620269] LOG:  database system was shut down at 2023-07-22 04:37:41 UTC
2023-07-22 04:37:41.900 UTC [1620266] LOG:  database system is ready to accept connections
2023-07-22 04:37:42.116 UTC [1620285] LOG:  AUDIT: SESSION,1,1,MISC,SET,,,SET pgaudit.log = 'all';,<not logged>
2023-07-22 04:37:42.117 UTC [1620285] LOG:  AUDIT: SESSION,2,1,MISC,SET,,,SET pgaudit.log_client = ON;,<not logged>
2023-07-22 04:37:42.148 UTC [1620285] LOG:  AUDIT: SESSION,6,1,MISC,RESET,,,RESET pgaudit.log_client;,<not logged>
2023-07-22 04:37:42.151 UTC [1620285] LOG:  AUDIT: SESSION,7,1,DDL,DROP TABLE,TABLE,public.tmp,DROP TABLE tmp;,<not logged>
2023-07-22 04:37:42.155 UTC [1620285] LOG:  AUDIT: SESSION,8,1,DDL,DROP TABLE,TABLE,public.tmp2,DROP TABLE tmp2;,<not logged>
2023-07-22 04:37:42.334 UTC [1620289] WARNING:  AUDIT: SESSION,1,1,READ,SELECT,,,"SELECT *
	  FROM test3, test2;",<not logged>
2023-07-22 04:37:42.334 UTC [1620289] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.335 UTC [1620289] WARNING:  AUDIT: SESSION,2,1,READ,SELECT,,,"SELECT *
	  FROM vw_test3, test2;",<not logged>
2023-07-22 04:37:42.335 UTC [1620289] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.335 UTC [1620289] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,VIEW,public.vw_test3,<previously logged>,<previously logged>
2023-07-22 04:37:42.336 UTC [1620289] WARNING:  AUDIT: SESSION,3,1,WRITE,INSERT,,,"WITH CTE AS
	(
		SELECT id
		  FROM test2
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 04:37:42.336 UTC [1620289] WARNING:  AUDIT: OBJECT,3,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 04:37:42.336 UTC [1620289] WARNING:  AUDIT: OBJECT,3,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.337 UTC [1620289] WARNING:  AUDIT: SESSION,4,1,WRITE,INSERT,,,"WITH CTE AS
	(
		INSERT INTO test3 VALUES (1)
					   RETURNING id
	)
	INSERT INTO test2
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 04:37:42.337 UTC [1620289] WARNING:  AUDIT: OBJECT,4,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 04:37:42.346 UTC [1620289] WARNING:  AUDIT: SESSION,5,1,READ,SELECT,,,SELECT test2_change(91),<not logged>
2023-07-22 04:37:42.346 UTC [1620289] WARNING:  AUDIT: SESSION,5,2,WRITE,UPDATE,,,"UPDATE test2
		   SET id = id + 1
		 WHERE id = change_id",<not logged>
2023-07-22 04:37:42.346 UTC [1620289] WARNING:  AUDIT: OBJECT,5,2,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.350 UTC [1620289] WARNING:  AUDIT: SESSION,6,1,WRITE,INSERT,,,"WITH CTE AS
	(
		UPDATE test2
		   SET id = 45
		 WHERE id = 92
		RETURNING id
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 04:37:42.350 UTC [1620289] WARNING:  AUDIT: OBJECT,6,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 04:37:42.351 UTC [1620289] WARNING:  AUDIT: OBJECT,6,1,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.355 UTC [1620289] WARNING:  AUDIT: SESSION,7,1,WRITE,UPDATE,,,"WITH CTE AS
	(
		INSERT INTO test2 VALUES (37)
					   RETURNING id
	)
	UPDATE test3
	   SET id = cte.id
	  FROM cte
	 WHERE test3.id <> cte.id;",<not logged>
2023-07-22 04:37:42.355 UTC [1620289] WARNING:  AUDIT: OBJECT,7,1,WRITE,INSERT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.360 UTC [1620289] WARNING:  AUDIT: SESSION,8,1,READ,SELECT,,,"SELECT *
	  FROM test2
	 ORDER BY ID;",<not logged>
2023-07-22 04:37:42.360 UTC [1620289] WARNING:  AUDIT: OBJECT,8,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:37:42.412 UTC [1620291] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test4,"SELECT name
	  FROM public.test4;",<not logged>
2023-07-22 04:37:42.416 UTC [1620291] WARNING:  AUDIT: OBJECT,2,1,WRITE,INSERT,TABLE,public.test4,"INSERT INTO public.test4 (name)
					  VALUES ('test');",<not logged>
2023-07-22 04:37:42.424 UTC [1620291] WARNING:  AUDIT: OBJECT,3,1,WRITE,UPDATE,TABLE,public.test4,"UPDATE public.test4
	   SET id = 1;",<not logged>
2023-07-22 04:37:42.429 UTC [1620291] WARNING:  AUDIT: OBJECT,4,1,WRITE,UPDATE,TABLE,public.test4,update public.test4 set name = 'foo' where name = 'bar';,<not logged>
2023-07-22 04:37:42.707 UTC [1620300] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 04:37:42.707 UTC [1620300] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 04:37:42.707 UTC [1620300] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 04:37:42.707 UTC [1620300] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 04:37:42.824 UTC [1620267] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:37:43.066 UTC [1620267] LOG:  checkpoint complete: wrote 918 buffers (5.6%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.049 s, sync=0.045 s, total=0.243 s; sync files=269, longest=0.014 s, average=0.001 s; distance=8177 kB, estimate=8177 kB
2023-07-22 04:37:43.604 UTC [1620301] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 04:37:43.604 UTC [1620301] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 04:37:43.604 UTC [1620301] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 04:37:43.604 UTC [1620301] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 04:37:43.762 UTC [1620267] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:37:43.834 UTC [1620267] LOG:  checkpoint complete: wrote 113 buffers (0.7%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.016 s, sync=0.015 s, total=0.073 s; sync files=84, longest=0.006 s, average=0.001 s; distance=4585 kB, estimate=7818 kB
2023-07-22 04:37:44.105 UTC [1620304] WARNING:  AUDIT: SESSION,3,1,DDL,CREATE EXTENSION,,,CREATE EXTENSION pg_stat_statements;,<not logged>
2023-07-22 04:37:44.136 UTC [1620304] WARNING:  AUDIT: SESSION,4,1,DDL,ALTER EXTENSION,,,ALTER EXTENSION pg_stat_statements UPDATE TO '1.10';,<not logged>
2023-07-22 04:37:44.137 UTC [1620304] WARNING:  AUDIT: SESSION,5,1,DDL,DROP EXTENSION,,,DROP EXTENSION pg_stat_statements;,<not logged>
2023-07-22 04:37:44.327 UTC [1620319] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:37:44.327 UTC [1620319] STATEMENT:  select xslt_process( query_to_xml('select x from generate_series(1,5) as
	x',true,false,'')::text,
	$$<xsl:stylesheet version="1.0"
	               xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" indent="yes" />
	<xsl:template match="*">
	  <xsl:copy>
	     <xsl:copy-of select="@*" />
	     <xsl:apply-templates />
	  </xsl:copy>
	</xsl:template>
	<xsl:template match="comment()|processing-instruction()">
	  <xsl:copy />
	</xsl:template>
	</xsl:stylesheet>
	$$::text);
2023-07-22 04:37:44.395 UTC [1620319] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:37:44.395 UTC [1620319] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:37:44.396 UTC [1620319] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:37:44.396 UTC [1620319] STATEMENT:  select xslt_process('<aaa/>',$$<xsl:stylesheet version="1.0"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="@*|node()">
	      <xsl:copy>
	         <xsl:apply-templates select="@*|node()"/>
	      </xsl:copy>
	   </xsl:template>
	</xsl:stylesheet>$$)::xml;
2023-07-22 04:37:44.425 UTC [1620319] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:37:44.425 UTC [1620319] STATEMENT:  SELECT xslt_process('<employee><name>cim</name><age>30</age><pay>400</pay></employee>'::text, $$<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
	  <xsl:output method="xml" omit-xml-declaration="yes" indent="yes"/>
	  <xsl:strip-space elements="*"/>
	  <xsl:param name="n1"/>
	  <xsl:param name="n2"/>
	  <xsl:param name="n3"/>
	  <xsl:param name="n4"/>
	  <xsl:param name="n5" select="'me'"/>
	  <xsl:template match="*">
	    <xsl:element name="samples">
	      <xsl:element name="sample">
	        <xsl:value-of select="$n1"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n2"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n3"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n4"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n5"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n6"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n7"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n8"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n9"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n10"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n11"/>
	      </xsl:element>
	      <xsl:element name="sample">
	        <xsl:value-of select="$n12"/>
	      </xsl:element>
	    </xsl:element>
	  </xsl:template>
	</xsl:stylesheet>$$::text, 'n1="v1",n2="v2",n3="v3",n4="v4",n5="v5",n6="v6",n7="v7",n8="v8",n9="v9",n10="v10",n11="v11",n12="v12"'::text);
2023-07-22 04:37:44.426 UTC [1620319] ERROR:  xslt_process() is not available without libxslt
2023-07-22 04:37:44.426 UTC [1620319] STATEMENT:  SELECT xslt_process('<xml><foo>Hello from XML</foo></xml>',
	$$<xsl:stylesheet version="1.0"
	      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	      xmlns:sax="http://icl.com/saxon"
	      extension-element-prefixes="sax">
	
	  <xsl:template match="//foo">
	    <sax:output href="0wn3d.txt" method="text">
	      <xsl:value-of select="'0wn3d via xml2 extension and libxslt'"/>
	      <xsl:apply-templates/>
	    </sax:output>
	  </xsl:template>
	</xsl:stylesheet>$$);
2023-07-22 04:38:17.434 UTC [1620267] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:38:17.619 UTC [1620267] LOG:  checkpoint complete: wrote 1024 buffers (6.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.063 s, sync=0.048 s, total=0.185 s; sync files=334, longest=0.019 s, average=0.001 s; distance=137829 kB, estimate=137829 kB
2023-07-22 04:38:49.719 UTC [1620267] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:38:49.816 UTC [1620267] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.007 s, total=0.098 s; sync files=5, longest=0.005 s, average=0.002 s; distance=133212 kB, estimate=137367 kB
2023-07-22 04:38:49.858 UTC [1620266] LOG:  received fast shutdown request
2023-07-22 04:38:49.865 UTC [1620266] LOG:  aborting any active transactions
2023-07-22 04:38:49.866 UTC [1620266] LOG:  background worker "logical replication launcher" (PID 1620272) exited with exit code 1
2023-07-22 04:38:49.866 UTC [1620267] LOG:  shutting down
2023-07-22 04:38:49.873 UTC [1620267] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:38:49.906 UTC [1620267] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.040 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=123631 kB
2023-07-22 04:38:49.939 UTC [1620266] LOG:  database system is shut down
2023-07-22 04:38:50.784 UTC [1620391] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:38:50.785 UTC [1620391] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:38:50.796 UTC [1620391] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:38:50.815 UTC [1620394] LOG:  database system was shut down at 2023-07-22 04:38:50 UTC
2023-07-22 04:38:50.827 UTC [1620391] LOG:  database system is ready to accept connections
2023-07-22 04:38:51.120 UTC [1620391] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:38:51.123 UTC [1620391] LOG:  parameter "session_preload_libraries" changed to "pgextwlist"
2023-07-22 04:38:51.123 UTC [1620391] LOG:  parameter "extwlist.extensions" changed to "citext,earthdistance,pg_trgm,pg_stat_statements,refint"
2023-07-22 04:38:51.123 UTC [1620391] LOG:  parameter "extwlist.custom_path" changed to "/home/abigalek/pgext-cli-python/pgextworkdir/pgextwlist-1.15/test-scripts"
2023-07-22 04:38:51.240 UTC [1620421] ERROR:  extension "plpgsql" already exists
2023-07-22 04:38:51.240 UTC [1620421] STATEMENT:  CREATE EXTENSION plpgsql;
2023-07-22 04:38:51.240 UTC [1620421] ERROR:  extension "hstore" does not exist
2023-07-22 04:38:51.240 UTC [1620421] STATEMENT:  COMMENT ON EXTENSION hstore IS 'plpgsql comment';
2023-07-22 04:38:51.241 UTC [1620421] ERROR:  permission denied to create extension "hstore"
2023-07-22 04:38:51.241 UTC [1620421] HINT:  Must have CREATE privilege on current database to create this extension.
2023-07-22 04:38:51.241 UTC [1620421] STATEMENT:  CREATE EXTENSION hstore;
2023-07-22 04:38:51.241 UTC [1620421] ERROR:  extension "hstore" does not exist
2023-07-22 04:38:51.241 UTC [1620421] STATEMENT:  COMMENT ON EXTENSION hstore IS 'hstore comment';
2023-07-22 04:38:51.242 UTC [1620421] ERROR:  required extension "cube" is not installed
2023-07-22 04:38:51.242 UTC [1620421] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 04:38:51.242 UTC [1620421] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 04:38:51.242 UTC [1620421] ERROR:  must be owner of extension plpgsql
2023-07-22 04:38:51.242 UTC [1620421] STATEMENT:  DROP EXTENSION plpgsql;
2023-07-22 04:38:51.272 UTC [1620429] ERROR:  cannot drop extension citext because other objects depend on it
2023-07-22 04:38:51.272 UTC [1620429] DETAIL:  column t of table mere_table depends on type citext
2023-07-22 04:38:51.272 UTC [1620429] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:38:51.272 UTC [1620429] STATEMENT:  DROP EXTENSION citext;
