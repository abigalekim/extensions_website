2023-07-22 03:24:54.021 UTC [537570] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:24:54.022 UTC [537570] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:24:54.027 UTC [537570] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:24:54.034 UTC [537573] LOG:  database system was shut down at 2023-07-22 03:24:53 UTC
2023-07-22 03:24:54.039 UTC [537570] LOG:  database system is ready to accept connections
2023-07-22 03:24:54.221 UTC [537589] ERROR:  file "test_file1" exists
2023-07-22 03:24:54.221 UTC [537589] STATEMENT:  SELECT pg_file_write('test_file1', 'test1', false);
2023-07-22 03:24:54.225 UTC [537589] ERROR:  path must be in or below the current directory
2023-07-22 03:24:54.225 UTC [537589] STATEMENT:  SELECT pg_file_write('../test_file0', 'test0', false);
2023-07-22 03:24:54.225 UTC [537589] ERROR:  absolute path not allowed
2023-07-22 03:24:54.225 UTC [537589] STATEMENT:  SELECT pg_file_write('/tmp/test_file0', 'test0', false);
2023-07-22 03:24:54.225 UTC [537589] ERROR:  absolute path not allowed
2023-07-22 03:24:54.225 UTC [537589] STATEMENT:  SELECT pg_file_write(current_setting('data_directory') || '/../test_file4', 'test4', false);
2023-07-22 03:24:54.235 UTC [537589] ERROR:  could not stat file "test_file2": No such file or directory
2023-07-22 03:24:54.235 UTC [537589] STATEMENT:  SELECT pg_file_sync('test_file2');
2023-07-22 03:24:54.235 UTC [537589] ERROR:  could not open file "test_file1" for reading: No such file or directory
2023-07-22 03:24:54.235 UTC [537589] STATEMENT:  SELECT pg_read_file('test_file1');
2023-07-22 03:24:54.236 UTC [537589] WARNING:  file "test_file1" is not accessible: No such file or directory
2023-07-22 03:24:54.236 UTC [537589] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:24:54.236 UTC [537589] ERROR:  could not open file "test_file2" for reading: No such file or directory
2023-07-22 03:24:54.236 UTC [537589] STATEMENT:  SELECT pg_read_file('test_file2');
2023-07-22 03:24:54.238 UTC [537589] ERROR:  permission denied for function pg_file_write
2023-07-22 03:24:54.238 UTC [537589] STATEMENT:  SELECT pg_file_write('test_file0', 'test0', false);
2023-07-22 03:24:54.238 UTC [537589] ERROR:  permission denied for function pg_file_sync
2023-07-22 03:24:54.238 UTC [537589] STATEMENT:  SELECT pg_file_sync('test_file0');
2023-07-22 03:24:54.238 UTC [537589] ERROR:  permission denied for function pg_file_rename
2023-07-22 03:24:54.238 UTC [537589] CONTEXT:  SQL function "pg_file_rename" statement 1
2023-07-22 03:24:54.238 UTC [537589] STATEMENT:  SELECT pg_file_rename('test_file0', 'test_file0');
2023-07-22 03:24:54.238 UTC [537589] ERROR:  permission denied for function pg_file_unlink
2023-07-22 03:24:54.238 UTC [537589] STATEMENT:  SELECT pg_file_unlink('test_file0');
2023-07-22 03:24:54.238 UTC [537589] ERROR:  permission denied for function pg_logdir_ls
2023-07-22 03:24:54.238 UTC [537589] STATEMENT:  SELECT pg_logdir_ls();
2023-07-22 03:24:54.436 UTC [537615] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:24:54.436 UTC [537615] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:25:25.788 UTC [537571] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:25:25.977 UTC [537571] LOG:  checkpoint complete: wrote 1128 buffers (6.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.053 s, sync=0.093 s, total=0.189 s; sync files=508, longest=0.007 s, average=0.001 s; distance=144755 kB, estimate=144755 kB
2023-07-22 03:25:26.085 UTC [537637] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:25:26.085 UTC [537637] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:25:57.288 UTC [537571] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:25:57.336 UTC [537571] LOG:  checkpoint complete: wrote 12 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.048 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137129 kB, estimate=143992 kB
2023-07-22 03:25:57.401 UTC [537570] LOG:  received fast shutdown request
2023-07-22 03:25:57.404 UTC [537570] LOG:  aborting any active transactions
2023-07-22 03:25:57.405 UTC [537570] LOG:  background worker "logical replication launcher" (PID 537576) exited with exit code 1
2023-07-22 03:25:57.405 UTC [537571] LOG:  shutting down
2023-07-22 03:25:57.408 UTC [537571] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:25:57.424 UTC [537571] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.019 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=129593 kB
2023-07-22 03:25:57.443 UTC [537570] LOG:  database system is shut down
2023-07-22 03:25:58.075 UTC [537679] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:25:58.075 UTC [537679] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:25:58.081 UTC [537679] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:25:58.088 UTC [537682] LOG:  database system was shut down at 2023-07-22 03:25:57 UTC
2023-07-22 03:25:58.093 UTC [537679] LOG:  database system is ready to accept connections
2023-07-22 03:25:58.724 UTC [537702] ERROR:  permission denied for function bt_index_check
2023-07-22 03:25:58.724 UTC [537702] STATEMENT:  SELECT bt_index_check('bttest_a_idx'::regclass);
2023-07-22 03:25:58.725 UTC [537702] ERROR:  permission denied for function bt_index_parent_check
2023-07-22 03:25:58.725 UTC [537702] STATEMENT:  SELECT bt_index_parent_check('bttest_a_idx'::regclass);
2023-07-22 03:25:58.748 UTC [537702] ERROR:  "bttest_a" is not an index
2023-07-22 03:25:58.748 UTC [537702] STATEMENT:  SELECT bt_index_check('bttest_a');
2023-07-22 03:25:58.748 UTC [537702] ERROR:  "bttest_a" is not an index
2023-07-22 03:25:58.748 UTC [537702] STATEMENT:  SELECT bt_index_parent_check('bttest_a');
2023-07-22 03:25:58.748 UTC [537702] ERROR:  could not open relation with OID 17
2023-07-22 03:25:58.748 UTC [537702] STATEMENT:  SELECT bt_index_check(17);
2023-07-22 03:25:58.748 UTC [537702] ERROR:  could not open relation with OID 17
2023-07-22 03:25:58.748 UTC [537702] STATEMENT:  SELECT bt_index_parent_check(17);
2023-07-22 03:25:58.760 UTC [537702] ERROR:  only B-Tree indexes are supported as targets for verification
2023-07-22 03:25:58.760 UTC [537702] DETAIL:  Relation "bttest_a_brin_idx" is not a B-Tree index.
2023-07-22 03:25:58.760 UTC [537702] STATEMENT:  SELECT bt_index_parent_check('bttest_a_brin_idx');
2023-07-22 03:25:59.500 UTC [537706] ERROR:  invalid skip option
2023-07-22 03:25:59.500 UTC [537706] HINT:  Valid skip options are "all-visible", "all-frozen", and "none".
2023-07-22 03:25:59.500 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', skip := 'rope');
2023-07-22 03:25:59.505 UTC [537706] ERROR:  permission denied for function verify_heapam
2023-07-22 03:25:59.505 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest');
2023-07-22 03:25:59.507 UTC [537706] ERROR:  ending block number must be between 0 and 0
2023-07-22 03:25:59.507 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 0, endblock := 10000);
2023-07-22 03:25:59.507 UTC [537706] ERROR:  starting block number must be between 0 and 0
2023-07-22 03:25:59.507 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam(relation := 'heaptest', startblock := 10000, endblock := 11000);
2023-07-22 03:25:59.509 UTC [537706] ERROR:  cannot check relation "test_partitioned"
2023-07-22 03:25:59.509 UTC [537706] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 03:25:59.509 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam('test_partitioned',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:25:59.582 UTC [537706] ERROR:  cannot check relation "test_index"
2023-07-22 03:25:59.582 UTC [537706] DETAIL:  This operation is not supported for indexes.
2023-07-22 03:25:59.582 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam('test_index',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:25:59.584 UTC [537706] ERROR:  cannot check relation "test_view"
2023-07-22 03:25:59.584 UTC [537706] DETAIL:  This operation is not supported for views.
2023-07-22 03:25:59.584 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam('test_view',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:25:59.588 UTC [537706] ERROR:  cannot check relation "test_foreign_table"
2023-07-22 03:25:59.588 UTC [537706] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 03:25:59.588 UTC [537706] STATEMENT:  SELECT * FROM verify_heapam('test_foreign_table',
								startblock := NULL,
								endblock := NULL);
2023-07-22 03:25:59.624 UTC [537680] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:25:59.666 UTC [537680] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 4 recycled; write=0.010 s, sync=0.006 s, total=0.043 s; sync files=14, longest=0.003 s, average=0.001 s; distance=60967 kB, estimate=60967 kB
2023-07-22 03:25:59.837 UTC [537732] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:25:59.837 UTC [537732] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:26:31.198 UTC [537680] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:26:31.276 UTC [537680] LOG:  checkpoint complete: wrote 574 buffers (3.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.021 s, total=0.079 s; sync files=251, longest=0.004 s, average=0.001 s; distance=141000 kB, estimate=141000 kB
2023-07-22 03:26:31.383 UTC [537752] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:26:31.383 UTC [537752] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:27:02.569 UTC [537680] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:27:02.617 UTC [537680] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.048 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137221 kB, estimate=140622 kB
2023-07-22 03:27:02.654 UTC [537679] LOG:  received fast shutdown request
2023-07-22 03:27:02.657 UTC [537679] LOG:  aborting any active transactions
2023-07-22 03:27:02.658 UTC [537679] LOG:  background worker "logical replication launcher" (PID 537685) exited with exit code 1
2023-07-22 03:27:02.658 UTC [537680] LOG:  shutting down
2023-07-22 03:27:02.661 UTC [537680] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:27:02.678 UTC [537680] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126560 kB
2023-07-22 03:27:02.729 UTC [537679] LOG:  database system is shut down
2023-07-22 03:27:03.317 UTC [537794] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:27:03.317 UTC [537794] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:27:03.323 UTC [537794] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:27:03.330 UTC [537797] LOG:  database system was shut down at 2023-07-22 03:27:03 UTC
2023-07-22 03:27:03.335 UTC [537794] LOG:  database system is ready to accept connections
2023-07-22 03:27:03.513 UTC [537811] ERROR:  extension "auth_delay" is not available
2023-07-22 03:27:03.513 UTC [537811] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auth_delay.control": No such file or directory.
2023-07-22 03:27:03.513 UTC [537811] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:27:03.513 UTC [537811] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auth_delay"
2023-07-22 03:27:03.516 UTC [537794] LOG:  received fast shutdown request
2023-07-22 03:27:03.519 UTC [537794] LOG:  aborting any active transactions
2023-07-22 03:27:03.520 UTC [537794] LOG:  background worker "logical replication launcher" (PID 537800) exited with exit code 1
2023-07-22 03:27:03.520 UTC [537795] LOG:  shutting down
2023-07-22 03:27:03.522 UTC [537795] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:27:03.608 UTC [537795] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.044 s, sync=0.026 s, total=0.089 s; sync files=252, longest=0.003 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 03:27:03.628 UTC [537794] LOG:  database system is shut down
2023-07-22 03:27:04.306 UTC [537840] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:27:04.307 UTC [537840] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:27:04.313 UTC [537840] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:27:04.320 UTC [537843] LOG:  database system was shut down at 2023-07-22 03:27:04 UTC
2023-07-22 03:27:04.325 UTC [537840] LOG:  database system is ready to accept connections
2023-07-22 03:27:04.488 UTC [537857] ERROR:  extension "auto_explain" is not available
2023-07-22 03:27:04.488 UTC [537857] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/auto_explain.control": No such file or directory.
2023-07-22 03:27:04.488 UTC [537857] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:27:04.488 UTC [537857] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "auto_explain"
2023-07-22 03:27:04.493 UTC [537840] LOG:  received fast shutdown request
2023-07-22 03:27:04.496 UTC [537840] LOG:  aborting any active transactions
2023-07-22 03:27:04.497 UTC [537840] LOG:  background worker "logical replication launcher" (PID 537846) exited with exit code 1
2023-07-22 03:27:04.497 UTC [537841] LOG:  shutting down
2023-07-22 03:27:04.500 UTC [537841] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:27:04.552 UTC [537841] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.019 s, sync=0.021 s, total=0.056 s; sync files=252, longest=0.003 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 03:27:04.559 UTC [537840] LOG:  database system is shut down
2023-07-22 03:27:05.185 UTC [537886] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:27:05.185 UTC [537886] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:27:05.192 UTC [537886] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:27:05.200 UTC [537889] LOG:  database system was shut down at 2023-07-22 03:27:05 UTC
2023-07-22 03:27:05.205 UTC [537886] LOG:  database system is ready to accept connections
2023-07-22 03:27:05.334 UTC [537903] ERROR:  extension "basebackup_to_shell" is not available
2023-07-22 03:27:05.334 UTC [537903] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/basebackup_to_shell.control": No such file or directory.
2023-07-22 03:27:05.334 UTC [537903] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 03:27:05.334 UTC [537903] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "basebackup_to_shell"
2023-07-22 03:27:05.337 UTC [537886] LOG:  received fast shutdown request
2023-07-22 03:27:05.340 UTC [537886] LOG:  aborting any active transactions
2023-07-22 03:27:05.341 UTC [537886] LOG:  background worker "logical replication launcher" (PID 537892) exited with exit code 1
2023-07-22 03:27:05.341 UTC [537887] LOG:  shutting down
2023-07-22 03:27:05.344 UTC [537887] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:27:05.426 UTC [537887] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.042 s, sync=0.029 s, total=0.085 s; sync files=252, longest=0.006 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 03:27:05.436 UTC [537886] LOG:  database system is shut down
2023-07-22 03:27:06.006 UTC [537932] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:27:06.006 UTC [537932] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:27:06.013 UTC [537932] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:27:06.022 UTC [537935] LOG:  database system was shut down at 2023-07-22 03:27:05 UTC
2023-07-22 03:27:06.029 UTC [537932] LOG:  database system is ready to accept connections
2023-07-22 03:27:06.371 UTC [537933] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:27:06.402 UTC [537933] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.009 s, sync=0.006 s, total=0.032 s; sync files=7, longest=0.004 s, average=0.001 s; distance=11698 kB, estimate=11698 kB
2023-07-22 03:27:06.587 UTC [537972] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:27:06.587 UTC [537972] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:27:38.183 UTC [537933] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:27:38.297 UTC [537933] LOG:  checkpoint complete: wrote 632 buffers (3.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.017 s, sync=0.043 s, total=0.114 s; sync files=251, longest=0.012 s, average=0.001 s; distance=140676 kB, estimate=140676 kB
2023-07-22 03:27:38.416 UTC [537990] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:27:38.416 UTC [537990] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:28:10.183 UTC [537933] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:28:10.287 UTC [537933] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.009 s, total=0.104 s; sync files=4, longest=0.007 s, average=0.003 s; distance=132612 kB, estimate=139869 kB
2023-07-22 03:28:10.354 UTC [537932] LOG:  received fast shutdown request
2023-07-22 03:28:10.359 UTC [537932] LOG:  aborting any active transactions
2023-07-22 03:28:10.360 UTC [537932] LOG:  background worker "logical replication launcher" (PID 537939) exited with exit code 1
2023-07-22 03:28:10.360 UTC [537933] LOG:  shutting down
2023-07-22 03:28:10.388 UTC [537933] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:28:10.491 UTC [537933] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.013 s, sync=0.002 s, total=0.111 s; sync files=1, longest=0.002 s, average=0.002 s; distance=5238 kB, estimate=126406 kB
2023-07-22 03:28:10.540 UTC [537932] LOG:  database system is shut down
2023-07-22 03:28:11.301 UTC [538029] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:28:11.301 UTC [538029] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:28:11.316 UTC [538029] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:28:11.330 UTC [538032] LOG:  database system was shut down at 2023-07-22 03:28:11 UTC
2023-07-22 03:28:11.340 UTC [538029] LOG:  database system is ready to accept connections
2023-07-22 03:28:11.667 UTC [538048] ERROR:  value 0 out of bounds for option "length"
2023-07-22 03:28:11.667 UTC [538048] DETAIL:  Valid values are between "1" and "4096".
2023-07-22 03:28:11.667 UTC [538048] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (length=0);
2023-07-22 03:28:11.668 UTC [538048] ERROR:  value 0 out of bounds for option "col1"
2023-07-22 03:28:11.668 UTC [538048] DETAIL:  Valid values are between "1" and "4095".
2023-07-22 03:28:11.668 UTC [538048] STATEMENT:  CREATE INDEX bloomidx2 ON tst USING bloom (i, t) WITH (col1=0);
2023-07-22 03:28:11.695 UTC [538030] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:28:11.756 UTC [538030] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.012 s, total=0.061 s; sync files=7, longest=0.006 s, average=0.002 s; distance=5191 kB, estimate=5191 kB
2023-07-22 03:28:12.199 UTC [538074] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:28:12.199 UTC [538074] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:28:44.595 UTC [538030] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:28:44.754 UTC [538030] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.029 s, sync=0.046 s, total=0.159 s; sync files=251, longest=0.017 s, average=0.001 s; distance=136532 kB, estimate=136532 kB
2023-07-22 03:28:44.881 UTC [538092] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:28:44.881 UTC [538092] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:29:16.519 UTC [538030] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:29:16.644 UTC [538030] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.011 s, total=0.126 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132529 kB, estimate=136132 kB
2023-07-22 03:29:16.713 UTC [538029] LOG:  received fast shutdown request
2023-07-22 03:29:16.724 UTC [538029] LOG:  aborting any active transactions
2023-07-22 03:29:16.725 UTC [538029] LOG:  background worker "logical replication launcher" (PID 538035) exited with exit code 1
2023-07-22 03:29:16.725 UTC [538030] LOG:  shutting down
2023-07-22 03:29:16.731 UTC [538030] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:29:16.771 UTC [538030] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.046 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122518 kB
2023-07-22 03:29:16.794 UTC [538029] LOG:  database system is shut down
2023-07-22 03:29:17.575 UTC [538135] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:29:17.576 UTC [538135] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:29:17.588 UTC [538135] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:29:17.605 UTC [538138] LOG:  database system was shut down at 2023-07-22 03:29:17 UTC
2023-07-22 03:29:17.615 UTC [538135] LOG:  database system is ready to accept connections
2023-07-22 03:29:19.178 UTC [538136] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:29:19.356 UTC [538136] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.019 s, sync=0.015 s, total=0.179 s; sync files=7, longest=0.008 s, average=0.003 s; distance=10997 kB, estimate=10997 kB
2023-07-22 03:29:19.688 UTC [538296] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:29:19.688 UTC [538296] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:29:52.192 UTC [538136] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:29:52.355 UTC [538136] LOG:  checkpoint complete: wrote 917 buffers (5.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.028 s, sync=0.043 s, total=0.164 s; sync files=251, longest=0.024 s, average=0.001 s; distance=137220 kB, estimate=137220 kB
2023-07-22 03:29:52.491 UTC [538313] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:29:52.491 UTC [538313] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:30:24.200 UTC [538136] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:30:24.326 UTC [538136] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.013 s, total=0.127 s; sync files=4, longest=0.010 s, average=0.004 s; distance=132854 kB, estimate=136783 kB
2023-07-22 03:30:24.393 UTC [538135] LOG:  received fast shutdown request
2023-07-22 03:30:24.400 UTC [538135] LOG:  aborting any active transactions
2023-07-22 03:30:24.401 UTC [538135] LOG:  background worker "logical replication launcher" (PID 538141) exited with exit code 1
2023-07-22 03:30:24.401 UTC [538136] LOG:  shutting down
2023-07-22 03:30:24.408 UTC [538136] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:30:24.449 UTC [538136] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.049 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123105 kB
2023-07-22 03:30:24.468 UTC [538135] LOG:  database system is shut down
2023-07-22 03:30:25.210 UTC [538356] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:30:25.210 UTC [538356] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:30:25.225 UTC [538356] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:30:25.242 UTC [538359] LOG:  database system was shut down at 2023-07-22 03:30:24 UTC
2023-07-22 03:30:25.252 UTC [538356] LOG:  database system is ready to accept connections
2023-07-22 03:30:26.775 UTC [538479] ERROR:  conflicting key value violates exclusion constraint "zoo_cage_animal_excl"
2023-07-22 03:30:26.775 UTC [538479] DETAIL:  Key (cage, animal)=(123, lion) conflicts with existing key (cage, animal)=(123, zebra).
2023-07-22 03:30:26.775 UTC [538479] STATEMENT:  INSERT INTO zoo VALUES(123, 'lion');
2023-07-22 03:30:26.907 UTC [538357] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:30:26.975 UTC [538357] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.021 s, sync=0.015 s, total=0.068 s; sync files=7, longest=0.008 s, average=0.003 s; distance=6316 kB, estimate=6316 kB
2023-07-22 03:30:27.411 UTC [538513] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:30:27.411 UTC [538513] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:30:59.897 UTC [538357] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:31:00.080 UTC [538357] LOG:  checkpoint complete: wrote 938 buffers (5.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.044 s, sync=0.040 s, total=0.183 s; sync files=251, longest=0.011 s, average=0.001 s; distance=137880 kB, estimate=137880 kB
2023-07-22 03:31:00.210 UTC [538530] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:31:00.210 UTC [538530] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:31:31.932 UTC [538357] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:31:32.054 UTC [538357] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.123 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133212 kB, estimate=137414 kB
2023-07-22 03:31:32.123 UTC [538356] LOG:  received fast shutdown request
2023-07-22 03:31:32.130 UTC [538356] LOG:  aborting any active transactions
2023-07-22 03:31:32.131 UTC [538356] LOG:  background worker "logical replication launcher" (PID 538362) exited with exit code 1
2023-07-22 03:31:32.131 UTC [538357] LOG:  shutting down
2023-07-22 03:31:32.138 UTC [538357] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:31:32.180 UTC [538357] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.050 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=123672 kB
2023-07-22 03:31:32.200 UTC [538356] LOG:  database system is shut down
2023-07-22 03:31:32.936 UTC [538573] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:31:32.936 UTC [538573] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:31:32.951 UTC [538573] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:31:32.969 UTC [538576] LOG:  database system was shut down at 2023-07-22 03:31:32 UTC
2023-07-22 03:31:32.982 UTC [538573] LOG:  database system is ready to accept connections
2023-07-22 03:31:33.196 UTC [538592] ERROR:  collation "coll" for encoding "UTF8" does not exist
2023-07-22 03:31:33.196 UTC [538592] STATEMENT:  ALTER TABLE s.x ADD CONSTRAINT underqualified EXCLUDE USING btree
	  ((s.index_this_expr(y, s.const())) COLLATE coll WITH s.=)
	  USING INDEX TABLESPACE regress_create_idx_tblspace
	  WHERE (s.index_row_if(y));
2023-07-22 03:31:33.199 UTC [538574] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:31:33.319 UTC [538574] LOG:  checkpoint complete: wrote 914 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.056 s, sync=0.033 s, total=0.121 s; sync files=266, longest=0.009 s, average=0.001 s; distance=4178 kB, estimate=4178 kB
2023-07-22 03:31:33.392 UTC [538596] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 03:31:33.392 UTC [538596] DETAIL:  Key (name)=(a) already exists.
2023-07-22 03:31:33.392 UTC [538596] STATEMENT:  INSERT INTO try (name) VALUES ('a');
2023-07-22 03:31:33.392 UTC [538596] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 03:31:33.392 UTC [538596] DETAIL:  Key (name)=(A) already exists.
2023-07-22 03:31:33.392 UTC [538596] STATEMENT:  INSERT INTO try (name) VALUES ('A');
2023-07-22 03:31:33.392 UTC [538596] ERROR:  duplicate key value violates unique constraint "try_pkey"
2023-07-22 03:31:33.392 UTC [538596] DETAIL:  Key (name)=(aB) already exists.
2023-07-22 03:31:33.392 UTC [538596] STATEMENT:  INSERT INTO try (name) VALUES ('aB');
2023-07-22 03:31:33.489 UTC [538596] ERROR:  column "chr" is of type "char" but expression is of type citext at character 44
2023-07-22 03:31:33.489 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.489 UTC [538596] STATEMENT:  INSERT INTO caster (chr)           VALUES ('f'::citext);
2023-07-22 03:31:33.513 UTC [538596] ERROR:  column "bytea" is of type bytea but expression is of type text at character 44
2023-07-22 03:31:33.513 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.513 UTC [538596] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::text);
2023-07-22 03:31:33.517 UTC [538596] ERROR:  column "bytea" is of type bytea but expression is of type citext at character 44
2023-07-22 03:31:33.517 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.517 UTC [538596] STATEMENT:  INSERT INTO caster (bytea)         VALUES ('foo'::citext);
2023-07-22 03:31:33.521 UTC [538596] ERROR:  column "boolean" is of type boolean but expression is of type text at character 44
2023-07-22 03:31:33.521 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.521 UTC [538596] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::text);
2023-07-22 03:31:33.526 UTC [538596] ERROR:  column "boolean" is of type boolean but expression is of type citext at character 44
2023-07-22 03:31:33.526 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.526 UTC [538596] STATEMENT:  INSERT INTO caster (boolean)       VALUES ('t'::citext);
2023-07-22 03:31:33.530 UTC [538596] ERROR:  column "float8" is of type double precision but expression is of type text at character 44
2023-07-22 03:31:33.530 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.530 UTC [538596] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::text);
2023-07-22 03:31:33.535 UTC [538596] ERROR:  column "float8" is of type double precision but expression is of type citext at character 44
2023-07-22 03:31:33.535 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.535 UTC [538596] STATEMENT:  INSERT INTO caster (float8)        VALUES ('12.42'::citext);
2023-07-22 03:31:33.539 UTC [538596] ERROR:  column "float4" is of type real but expression is of type text at character 44
2023-07-22 03:31:33.539 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.539 UTC [538596] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::text);
2023-07-22 03:31:33.544 UTC [538596] ERROR:  column "float4" is of type real but expression is of type citext at character 44
2023-07-22 03:31:33.544 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.544 UTC [538596] STATEMENT:  INSERT INTO caster (float4)        VALUES ('12.42'::citext);
2023-07-22 03:31:33.548 UTC [538596] ERROR:  column "numeric" is of type numeric but expression is of type text at character 44
2023-07-22 03:31:33.548 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.548 UTC [538596] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::text);
2023-07-22 03:31:33.552 UTC [538596] ERROR:  column "numeric" is of type numeric but expression is of type citext at character 44
2023-07-22 03:31:33.552 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.552 UTC [538596] STATEMENT:  INSERT INTO caster (numeric)       VALUES ('12.42'::citext);
2023-07-22 03:31:33.556 UTC [538596] ERROR:  column "int8" is of type bigint but expression is of type text at character 44
2023-07-22 03:31:33.556 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.556 UTC [538596] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::text);
2023-07-22 03:31:33.561 UTC [538596] ERROR:  column "int8" is of type bigint but expression is of type citext at character 44
2023-07-22 03:31:33.561 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.561 UTC [538596] STATEMENT:  INSERT INTO caster (int8)          VALUES ('12'::citext);
2023-07-22 03:31:33.565 UTC [538596] ERROR:  column "int4" is of type integer but expression is of type text at character 44
2023-07-22 03:31:33.565 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.565 UTC [538596] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::text);
2023-07-22 03:31:33.569 UTC [538596] ERROR:  column "int4" is of type integer but expression is of type citext at character 44
2023-07-22 03:31:33.569 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.569 UTC [538596] STATEMENT:  INSERT INTO caster (int4)          VALUES ('12'::citext);
2023-07-22 03:31:33.574 UTC [538596] ERROR:  column "int2" is of type smallint but expression is of type text at character 44
2023-07-22 03:31:33.574 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.574 UTC [538596] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::text);
2023-07-22 03:31:33.578 UTC [538596] ERROR:  column "int2" is of type smallint but expression is of type citext at character 44
2023-07-22 03:31:33.578 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.578 UTC [538596] STATEMENT:  INSERT INTO caster (int2)          VALUES ('12'::citext);
2023-07-22 03:31:33.583 UTC [538596] ERROR:  column "cidr" is of type cidr but expression is of type text at character 44
2023-07-22 03:31:33.583 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.583 UTC [538596] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::text);
2023-07-22 03:31:33.587 UTC [538596] ERROR:  column "cidr" is of type cidr but expression is of type citext at character 44
2023-07-22 03:31:33.587 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.587 UTC [538596] STATEMENT:  INSERT INTO caster (cidr)          VALUES ('192.168.100.128/25'::citext);
2023-07-22 03:31:33.591 UTC [538596] ERROR:  column "inet" is of type inet but expression is of type text at character 44
2023-07-22 03:31:33.591 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.591 UTC [538596] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::text);
2023-07-22 03:31:33.596 UTC [538596] ERROR:  column "inet" is of type inet but expression is of type citext at character 44
2023-07-22 03:31:33.596 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.596 UTC [538596] STATEMENT:  INSERT INTO caster (inet)          VALUES ('192.168.100.128'::citext);
2023-07-22 03:31:33.600 UTC [538596] ERROR:  column "macaddr" is of type macaddr but expression is of type text at character 44
2023-07-22 03:31:33.600 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.600 UTC [538596] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::text);
2023-07-22 03:31:33.605 UTC [538596] ERROR:  column "macaddr" is of type macaddr but expression is of type citext at character 44
2023-07-22 03:31:33.605 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.605 UTC [538596] STATEMENT:  INSERT INTO caster (macaddr)       VALUES ('08:00:2b:01:02:03'::citext);
2023-07-22 03:31:33.609 UTC [538596] ERROR:  column "money" is of type money but expression is of type text at character 44
2023-07-22 03:31:33.609 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.609 UTC [538596] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::text);
2023-07-22 03:31:33.613 UTC [538596] ERROR:  column "money" is of type money but expression is of type citext at character 44
2023-07-22 03:31:33.613 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.613 UTC [538596] STATEMENT:  INSERT INTO caster (money)         VALUES ('12'::citext);
2023-07-22 03:31:33.618 UTC [538596] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type text at character 44
2023-07-22 03:31:33.618 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.618 UTC [538596] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 03:31:33.622 UTC [538596] ERROR:  column "timestamp" is of type timestamp without time zone but expression is of type citext at character 44
2023-07-22 03:31:33.622 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.622 UTC [538596] STATEMENT:  INSERT INTO caster (timestamp)     VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 03:31:33.627 UTC [538596] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type text at character 44
2023-07-22 03:31:33.627 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.627 UTC [538596] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::text);
2023-07-22 03:31:33.631 UTC [538596] ERROR:  column "timestamptz" is of type timestamp with time zone but expression is of type citext at character 44
2023-07-22 03:31:33.631 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.631 UTC [538596] STATEMENT:  INSERT INTO caster (timestamptz)   VALUES ('1999-01-08 04:05:06'::citext);
2023-07-22 03:31:33.635 UTC [538596] ERROR:  column "interval" is of type interval but expression is of type text at character 44
2023-07-22 03:31:33.635 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.635 UTC [538596] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::text);
2023-07-22 03:31:33.640 UTC [538596] ERROR:  column "interval" is of type interval but expression is of type citext at character 44
2023-07-22 03:31:33.640 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.640 UTC [538596] STATEMENT:  INSERT INTO caster (interval)      VALUES ('1 hour'::citext);
2023-07-22 03:31:33.644 UTC [538596] ERROR:  column "date" is of type date but expression is of type text at character 44
2023-07-22 03:31:33.644 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.644 UTC [538596] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::text);
2023-07-22 03:31:33.648 UTC [538596] ERROR:  column "date" is of type date but expression is of type citext at character 44
2023-07-22 03:31:33.648 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.648 UTC [538596] STATEMENT:  INSERT INTO caster (date)          VALUES ('1999-01-08'::citext);
2023-07-22 03:31:33.652 UTC [538596] ERROR:  column "time" is of type time without time zone but expression is of type text at character 44
2023-07-22 03:31:33.652 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.652 UTC [538596] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::text);
2023-07-22 03:31:33.657 UTC [538596] ERROR:  column "time" is of type time without time zone but expression is of type citext at character 44
2023-07-22 03:31:33.657 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.657 UTC [538596] STATEMENT:  INSERT INTO caster (time)          VALUES ('04:05:06'::citext);
2023-07-22 03:31:33.661 UTC [538596] ERROR:  column "timetz" is of type time with time zone but expression is of type text at character 44
2023-07-22 03:31:33.661 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.661 UTC [538596] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::text);
2023-07-22 03:31:33.666 UTC [538596] ERROR:  column "timetz" is of type time with time zone but expression is of type citext at character 44
2023-07-22 03:31:33.666 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.666 UTC [538596] STATEMENT:  INSERT INTO caster (timetz)        VALUES ('04:05:06'::citext);
2023-07-22 03:31:33.670 UTC [538596] ERROR:  column "point" is of type point but expression is of type text at character 44
2023-07-22 03:31:33.670 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.670 UTC [538596] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::text);
2023-07-22 03:31:33.674 UTC [538596] ERROR:  column "point" is of type point but expression is of type citext at character 44
2023-07-22 03:31:33.674 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.674 UTC [538596] STATEMENT:  INSERT INTO caster (point)         VALUES ('( 1 , 1)'::citext);
2023-07-22 03:31:33.679 UTC [538596] ERROR:  column "lseg" is of type lseg but expression is of type text at character 44
2023-07-22 03:31:33.679 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.679 UTC [538596] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::text);
2023-07-22 03:31:33.683 UTC [538596] ERROR:  column "lseg" is of type lseg but expression is of type citext at character 44
2023-07-22 03:31:33.683 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.683 UTC [538596] STATEMENT:  INSERT INTO caster (lseg)          VALUES ('( 1 , 1 ) , ( 2 , 2 )'::citext);
2023-07-22 03:31:33.688 UTC [538596] ERROR:  column "box" is of type box but expression is of type text at character 44
2023-07-22 03:31:33.688 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.688 UTC [538596] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::text);
2023-07-22 03:31:33.692 UTC [538596] ERROR:  column "box" is of type box but expression is of type citext at character 44
2023-07-22 03:31:33.692 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.692 UTC [538596] STATEMENT:  INSERT INTO caster (box)           VALUES ('(0,0),(1,1)'::citext);
2023-07-22 03:31:33.696 UTC [538596] ERROR:  column "path" is of type path but expression is of type text at character 44
2023-07-22 03:31:33.696 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.696 UTC [538596] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::text);
2023-07-22 03:31:33.700 UTC [538596] ERROR:  column "path" is of type path but expression is of type citext at character 44
2023-07-22 03:31:33.700 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.700 UTC [538596] STATEMENT:  INSERT INTO caster (path)          VALUES ('((0,0),(1,1),(2,0))'::citext);
2023-07-22 03:31:33.705 UTC [538596] ERROR:  column "polygon" is of type polygon but expression is of type text at character 44
2023-07-22 03:31:33.705 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.705 UTC [538596] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::text);
2023-07-22 03:31:33.709 UTC [538596] ERROR:  column "polygon" is of type polygon but expression is of type citext at character 44
2023-07-22 03:31:33.709 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.709 UTC [538596] STATEMENT:  INSERT INTO caster (polygon)       VALUES ('((0,0),(1,1))'::citext);
2023-07-22 03:31:33.713 UTC [538596] ERROR:  column "circle" is of type circle but expression is of type text at character 44
2023-07-22 03:31:33.713 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.713 UTC [538596] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::text);
2023-07-22 03:31:33.718 UTC [538596] ERROR:  column "circle" is of type circle but expression is of type citext at character 44
2023-07-22 03:31:33.718 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.718 UTC [538596] STATEMENT:  INSERT INTO caster (circle)        VALUES ('((0,0),2)'::citext);
2023-07-22 03:31:33.722 UTC [538596] ERROR:  column "bit" is of type bit but expression is of type text at character 44
2023-07-22 03:31:33.722 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.722 UTC [538596] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::text);
2023-07-22 03:31:33.726 UTC [538596] ERROR:  column "bit" is of type bit but expression is of type citext at character 44
2023-07-22 03:31:33.726 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.726 UTC [538596] STATEMENT:  INSERT INTO caster (bit)           VALUES ('101'::citext);
2023-07-22 03:31:33.734 UTC [538596] ERROR:  column "bitv" is of type bit varying but expression is of type text at character 44
2023-07-22 03:31:33.734 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.734 UTC [538596] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::text);
2023-07-22 03:31:33.739 UTC [538596] ERROR:  column "bitv" is of type bit varying but expression is of type citext at character 44
2023-07-22 03:31:33.739 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.739 UTC [538596] STATEMENT:  INSERT INTO caster (bitv)          VALUES ('101'::citext);
2023-07-22 03:31:33.743 UTC [538596] ERROR:  column "tsvector" is of type tsvector but expression is of type text at character 44
2023-07-22 03:31:33.743 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.743 UTC [538596] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::text);
2023-07-22 03:31:33.748 UTC [538596] ERROR:  column "tsvector" is of type tsvector but expression is of type citext at character 44
2023-07-22 03:31:33.748 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.748 UTC [538596] STATEMENT:  INSERT INTO caster (tsvector)      VALUES ('the fat cat'::citext);
2023-07-22 03:31:33.752 UTC [538596] ERROR:  column "tsquery" is of type tsquery but expression is of type text at character 44
2023-07-22 03:31:33.752 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.752 UTC [538596] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::text);
2023-07-22 03:31:33.756 UTC [538596] ERROR:  column "tsquery" is of type tsquery but expression is of type citext at character 44
2023-07-22 03:31:33.756 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.756 UTC [538596] STATEMENT:  INSERT INTO caster (tsquery)       VALUES ('fat & rat'::citext);
2023-07-22 03:31:33.760 UTC [538596] ERROR:  column "uuid" is of type uuid but expression is of type text at character 44
2023-07-22 03:31:33.760 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.760 UTC [538596] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::text);
2023-07-22 03:31:33.765 UTC [538596] ERROR:  column "uuid" is of type uuid but expression is of type citext at character 44
2023-07-22 03:31:33.765 UTC [538596] HINT:  You will need to rewrite or cast the expression.
2023-07-22 03:31:33.765 UTC [538596] STATEMENT:  INSERT INTO caster (uuid)          VALUES ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'::citext);
2023-07-22 03:31:33.800 UTC [538596] ERROR:  regexp_match() does not support the "global" option
2023-07-22 03:31:33.800 UTC [538596] HINT:  Use the regexp_matches function instead.
2023-07-22 03:31:33.800 UTC [538596] CONTEXT:  SQL function "regexp_match" statement 1
2023-07-22 03:31:33.800 UTC [538596] STATEMENT:  SELECT regexp_match('foobarbequebazmorebarbequetoo'::citext, '(BAR)(BEQUE)'::citext, 'g') AS "error";
2023-07-22 03:31:34.006 UTC [538574] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:31:34.063 UTC [538574] LOG:  checkpoint complete: wrote 5 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.011 s, total=0.058 s; sync files=5, longest=0.008 s, average=0.003 s; distance=802 kB, estimate=3840 kB
2023-07-22 03:31:34.458 UTC [538628] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:31:34.458 UTC [538628] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:32:06.925 UTC [538574] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:32:07.109 UTC [538574] LOG:  checkpoint complete: wrote 901 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.053 s, sync=0.036 s, total=0.185 s; sync files=252, longest=0.011 s, average=0.001 s; distance=136890 kB, estimate=136890 kB
2023-07-22 03:32:07.259 UTC [538645] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:32:07.259 UTC [538645] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:32:39.061 UTC [538574] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:32:39.743 UTC [538574] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.020 s, sync=0.012 s, total=0.683 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132649 kB, estimate=136466 kB
2023-07-22 03:32:39.785 UTC [538573] LOG:  received fast shutdown request
2023-07-22 03:32:39.793 UTC [538573] LOG:  aborting any active transactions
2023-07-22 03:32:39.793 UTC [538573] LOG:  background worker "logical replication launcher" (PID 538579) exited with exit code 1
2023-07-22 03:32:39.793 UTC [538574] LOG:  shutting down
2023-07-22 03:32:39.800 UTC [538574] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:32:39.842 UTC [538574] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.049 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122819 kB
2023-07-22 03:32:39.864 UTC [538573] LOG:  database system is shut down
2023-07-22 03:32:40.645 UTC [538688] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:32:40.646 UTC [538688] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:32:40.660 UTC [538688] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:32:40.676 UTC [538691] LOG:  database system was shut down at 2023-07-22 03:32:40 UTC
2023-07-22 03:32:40.686 UTC [538688] LOG:  database system is ready to accept connections
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at end of input
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT ''::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near "A"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT 'ABC'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near "]"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '[]'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near "]"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '[()]'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near "]"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '[(1)]'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near "]"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '[(1),]'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near "2"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '[(1),2]'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near ","
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '[(1),(2),(3)]'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at end of input
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '1,'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at end of input
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '1,2,'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near ","
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '1,,2'::cube AS cube;
2023-07-22 03:32:40.857 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.857 UTC [538707] DETAIL:  syntax error at or near ")"
2023-07-22 03:32:40.857 UTC [538707] STATEMENT:  SELECT '(1,)'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near ")"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,2,)'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near ","
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,,2)'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near ","
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '[(1),(2)],'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '[(1,2,3),(2,3)]'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '[(1,2),(1,2,3)]'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near ","
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1),(2),'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  Different point dimensions in (1,2,3) and (2,3).
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,2,3),(2,3)'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  Different point dimensions in (1,2) and (1,2,3).
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,2),(1,2,3)'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near "a"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,2,3)ab'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near "a"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,2,3)a'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near "("
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '(1,2)('::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near "a"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '1,2ab'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near "e"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '1 e7'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near "a"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '1,2a'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.858 UTC [538707] DETAIL:  syntax error at or near ".2"
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '1..2'::cube AS cube;
2023-07-22 03:32:40.858 UTC [538707] ERROR:  "-1e-700" is out of range for type double precision at character 8
2023-07-22 03:32:40.858 UTC [538707] STATEMENT:  SELECT '-1e-700'::cube AS cube;
2023-07-22 03:32:40.859 UTC [538707] ERROR:  UR and LL arrays must be of same length
2023-07-22 03:32:40.859 UTC [538707] STATEMENT:  SELECT cube('{0,1,2}'::float[], '{3}'::float[]);
2023-07-22 03:32:40.859 UTC [538707] ERROR:  Index out of bounds
2023-07-22 03:32:40.859 UTC [538707] STATEMENT:  SELECT cube_subset(cube('(1,3,5),(6,7,8)'), ARRAY[4,0]);
2023-07-22 03:32:40.859 UTC [538707] ERROR:  Index out of bounds
2023-07-22 03:32:40.859 UTC [538707] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), ARRAY[4,0]);
2023-07-22 03:32:40.860 UTC [538707] ERROR:  array is too long
2023-07-22 03:32:40.860 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.860 UTC [538707] STATEMENT:  SELECT cube_subset(cube('(6,7,8),(6,7,8)'), array(SELECT 1 as a FROM generate_series(1,101)));
2023-07-22 03:32:40.861 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.861 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.861 UTC [538707] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 03:32:40.861 UTC [538707] ERROR:  invalid input syntax for cube at character 8
2023-07-22 03:32:40.861 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.861 UTC [538707] STATEMENT:  select '(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)'::cube;
2023-07-22 03:32:40.861 UTC [538707] ERROR:  array is too long
2023-07-22 03:32:40.861 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.861 UTC [538707] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 03:32:40.861 UTC [538707] ERROR:  can't extend cube
2023-07-22 03:32:40.861 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.861 UTC [538707] STATEMENT:  select cube(array(SELECT 0 as a FROM generate_series(1,101)),array(SELECT 0 as a FROM generate_series(1,101)));
2023-07-22 03:32:40.862 UTC [538707] ERROR:  can't extend cube
2023-07-22 03:32:40.862 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.862 UTC [538707] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100))), 0);
2023-07-22 03:32:40.862 UTC [538707] ERROR:  can't extend cube
2023-07-22 03:32:40.862 UTC [538707] DETAIL:  A cube cannot have more than 100 dimensions.
2023-07-22 03:32:40.862 UTC [538707] STATEMENT:  select cube(cube(array(SELECT 0 as a FROM generate_series(1,100)),array(SELECT 0 as a FROM generate_series(1,100))), 0, 0);
2023-07-22 03:32:40.871 UTC [538707] ERROR:  cube index 0 is out of bounds
2023-07-22 03:32:40.871 UTC [538707] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->0;
2023-07-22 03:32:40.871 UTC [538707] ERROR:  cube index 7 is out of bounds
2023-07-22 03:32:40.871 UTC [538707] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->7;
2023-07-22 03:32:40.871 UTC [538707] ERROR:  cube index -1 is out of bounds
2023-07-22 03:32:40.871 UTC [538707] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-1;
2023-07-22 03:32:40.871 UTC [538707] ERROR:  cube index -6 is out of bounds
2023-07-22 03:32:40.871 UTC [538707] STATEMENT:  SELECT cube(array[10,20,30], array[40,50,60])->-6;
2023-07-22 03:32:40.872 UTC [538707] ERROR:  cube index -6 is out of bounds
2023-07-22 03:32:40.872 UTC [538707] STATEMENT:  SELECT cube(array[10,20,30])->-6;
2023-07-22 03:32:40.872 UTC [538707] ERROR:  zero cube index is not defined
2023-07-22 03:32:40.872 UTC [538707] STATEMENT:  SELECT cube(array[40,50,60], array[10,20,30])~>0;
2023-07-22 03:32:40.964 UTC [538689] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:32:41.033 UTC [538689] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.021 s, sync=0.016 s, total=0.070 s; sync files=7, longest=0.009 s, average=0.003 s; distance=4436 kB, estimate=4436 kB
2023-07-22 03:32:41.483 UTC [538737] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:32:41.483 UTC [538737] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:33:14.061 UTC [538689] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:33:14.239 UTC [538689] LOG:  checkpoint complete: wrote 899 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.053 s, sync=0.034 s, total=0.179 s; sync files=251, longest=0.015 s, average=0.001 s; distance=136770 kB, estimate=136770 kB
2023-07-22 03:33:14.372 UTC [538755] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:33:14.372 UTC [538755] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:33:46.251 UTC [538689] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:33:46.367 UTC [538689] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.009 s, total=0.117 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132677 kB, estimate=136361 kB
2023-07-22 03:33:46.431 UTC [538688] LOG:  received fast shutdown request
2023-07-22 03:33:46.436 UTC [538688] LOG:  aborting any active transactions
2023-07-22 03:33:46.437 UTC [538688] LOG:  background worker "logical replication launcher" (PID 538694) exited with exit code 1
2023-07-22 03:33:46.437 UTC [538689] LOG:  shutting down
2023-07-22 03:33:46.442 UTC [538689] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:33:46.486 UTC [538689] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.003 s, total=0.049 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122724 kB
2023-07-22 03:33:46.508 UTC [538688] LOG:  database system is shut down
2023-07-22 03:33:47.316 UTC [538797] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:33:47.316 UTC [538797] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:33:47.329 UTC [538797] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:33:47.343 UTC [538800] LOG:  database system was shut down at 2023-07-22 03:33:46 UTC
2023-07-22 03:33:47.349 UTC [538797] LOG:  database system is ready to accept connections
2023-07-22 03:33:47.586 UTC [538816] ERROR:  invalid attribute number 4
2023-07-22 03:33:47.586 UTC [538816] STATEMENT:  SELECT dblink_build_sql_insert('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:33:47.588 UTC [538816] ERROR:  invalid attribute number 4
2023-07-22 03:33:47.588 UTC [538816] STATEMENT:  SELECT dblink_build_sql_update('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:33:47.589 UTC [538816] ERROR:  invalid attribute number 4
2023-07-22 03:33:47.589 UTC [538816] STATEMENT:  SELECT dblink_build_sql_delete('foo','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 03:33:47.660 UTC [538816] ERROR:  invalid attribute number 4
2023-07-22 03:33:47.660 UTC [538816] STATEMENT:  SELECT dblink_build_sql_insert('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:33:47.661 UTC [538816] ERROR:  invalid attribute number 4
2023-07-22 03:33:47.661 UTC [538816] STATEMENT:  SELECT dblink_build_sql_update('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}','{"99", "xyz", "{za0,zb0,zc0}"}');
2023-07-22 03:33:47.662 UTC [538816] ERROR:  invalid attribute number 4
2023-07-22 03:33:47.662 UTC [538816] STATEMENT:  SELECT dblink_build_sql_delete('foo_1','1 2 3 4',4,'{"0", "a", "{a0,b0,c0}"}');
2023-07-22 03:33:47.712 UTC [538816] ERROR:  connection not available
2023-07-22 03:33:47.712 UTC [538816] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:33:47.717 UTC [538818] ERROR:  could not establish connection
2023-07-22 03:33:47.717 UTC [538818] DETAIL:  syntax error in service file "/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/dblink/pg_service.conf", line 7
2023-07-22 03:33:47.717 UTC [538818] STATEMENT:  
			SELECT pg_backend_pid() FROM dblink(
				'service=test_ldap '||connection_parameters(),
				-- This string concatenation is a hack to shoehorn a
				-- set_pgservicefile call into the SQL statement.
				'SELECT 1' || set_pgservicefile('pg_service.conf')
			) t(c int)
		
2023-07-22 03:33:47.722 UTC [538819] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 03:33:47.722 UTC [538819] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 03:33:47.725 UTC [538819] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 03:33:47.725 UTC [538819] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 03:33:47.726 UTC [538819] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 03:33:47.726 UTC [538819] STATEMENT:  CLOSE rmt_foobar_cursor
2023-07-22 03:33:47.727 UTC [538819] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:33:47.727 UTC [538819] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 03:33:47.727 UTC [538816] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:33:47.727 UTC [538816] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on unnamed dblink connection
2023-07-22 03:33:47.727 UTC [538816] STATEMENT:  SELECT *
	FROM dblink_fetch('rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 03:33:47.727 UTC [538819] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:33:47.727 UTC [538819] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 03:33:47.728 UTC [538816] ERROR:  connection not available
2023-07-22 03:33:47.728 UTC [538816] STATEMENT:  SELECT *
	FROM dblink('SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:33:47.752 UTC [538821] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 03:33:47.752 UTC [538821] STATEMENT:  SELECT * FROM foobar
2023-07-22 03:33:47.758 UTC [538821] ERROR:  relation "foobar" does not exist at character 8
2023-07-22 03:33:47.758 UTC [538821] STATEMENT:  UPDATE foobar SET f3[2] = 'b99' WHERE f1 = 11
2023-07-22 03:33:47.765 UTC [538816] ERROR:  could not establish connection
2023-07-22 03:33:47.765 UTC [538816] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 03:33:47.765 UTC [538816] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:33:47.776 UTC [538822] ERROR:  relation "foobar" does not exist at character 15
2023-07-22 03:33:47.776 UTC [538822] STATEMENT:  SELECT * FROM foobar
2023-07-22 03:33:47.784 UTC [538816] ERROR:  duplicate connection name
2023-07-22 03:33:47.784 UTC [538816] STATEMENT:  SELECT dblink_connect('myconn',connection_parameters());
2023-07-22 03:33:47.795 UTC [538822] ERROR:  relation "foobar" does not exist at character 49
2023-07-22 03:33:47.795 UTC [538822] STATEMENT:  DECLARE rmt_foo_cursor CURSOR FOR SELECT * FROM foobar
2023-07-22 03:33:47.805 UTC [538822] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 03:33:47.805 UTC [538822] STATEMENT:  DECLARE xact_test CURSOR FOR SELECT * FROM foo
2023-07-22 03:33:47.805 UTC [538816] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 03:33:47.805 UTC [538816] CONTEXT:  while executing command on dblink connection named "myconn"
2023-07-22 03:33:47.805 UTC [538816] STATEMENT:  SELECT dblink_exec('myconn','DECLARE xact_test CURSOR FOR SELECT * FROM foo');
2023-07-22 03:33:47.806 UTC [538822] WARNING:  there is no transaction in progress
WARNING:  there is no transaction in progress
2023-07-22 03:33:47.811 UTC [538822] ERROR:  cursor "rmt_foobar_cursor" does not exist
2023-07-22 03:33:47.811 UTC [538822] STATEMENT:  FETCH 4 FROM rmt_foobar_cursor
2023-07-22 03:33:47.812 UTC [538822] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:33:47.812 UTC [538822] STATEMENT:  FETCH 4 FROM rmt_foo_cursor
2023-07-22 03:33:47.812 UTC [538816] ERROR:  cursor "rmt_foo_cursor" does not exist
2023-07-22 03:33:47.812 UTC [538816] CONTEXT:  while fetching from cursor "rmt_foo_cursor" on dblink connection named "myconn"
2023-07-22 03:33:47.812 UTC [538816] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','rmt_foo_cursor',4) AS t(a int, b text, c text[]);
2023-07-22 03:33:47.813 UTC [538816] ERROR:  could not establish connection
2023-07-22 03:33:47.813 UTC [538816] DETAIL:  missing "=" after "myconn" in connection info string
2023-07-22 03:33:47.813 UTC [538816] STATEMENT:  SELECT *
	FROM dblink('myconn','SELECT * FROM foo') AS t(a int, b text, c text[])
	WHERE t.a > 7;
2023-07-22 03:33:47.841 UTC [538816] ERROR:  connection "myconn" not available
2023-07-22 03:33:47.841 UTC [538816] STATEMENT:  SELECT dblink_disconnect('myconn');
2023-07-22 03:33:47.892 UTC [538829] ERROR:  canceling statement due to user request
2023-07-22 03:33:47.892 UTC [538829] STATEMENT:  select * from foo where f1 < 3
2023-07-22 03:33:47.904 UTC [538816] ERROR:  invalid option "server"
2023-07-22 03:33:47.904 UTC [538816] HINT:  Valid options in this context are: user, password, sslpassword
2023-07-22 03:33:47.904 UTC [538816] STATEMENT:  CREATE USER MAPPING FOR public SERVER fdtest
	  OPTIONS (server 'localhost');
2023-07-22 03:33:47.917 UTC [538816] ERROR:  password is required
2023-07-22 03:33:47.917 UTC [538816] DETAIL:  Non-superusers must provide a password in the connection string.
2023-07-22 03:33:47.917 UTC [538816] STATEMENT:  SELECT dblink_connect('myconn', 'fdtest');
2023-07-22 03:33:47.959 UTC [538832] ERROR:  invalid option "nonexistent"
2023-07-22 03:33:47.959 UTC [538832] HINT:  There are no valid options in this context.
2023-07-22 03:33:47.959 UTC [538832] STATEMENT:  ALTER FOREIGN DATA WRAPPER dblink_fdw OPTIONS (nonexistent 'fdw');
2023-07-22 03:33:48.044 UTC [538832] ERROR:  invalid input syntax for type integer: "not an int"
2023-07-22 03:33:48.044 UTC [538832] STATEMENT:  SELECT *
	FROM dblink_fetch('myconn','error_cursor', 1) AS t(i int);
2023-07-22 03:33:48.074 UTC [538798] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:33:48.133 UTC [538798] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.014 s, total=0.060 s; sync files=14, longest=0.007 s, average=0.001 s; distance=4182 kB, estimate=4182 kB
2023-07-22 03:33:48.518 UTC [538860] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:33:48.518 UTC [538860] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:34:21.202 UTC [538798] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:34:21.346 UTC [538798] LOG:  checkpoint complete: wrote 899 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.043 s, sync=0.030 s, total=0.144 s; sync files=252, longest=0.011 s, average=0.001 s; distance=137211 kB, estimate=137211 kB
2023-07-22 03:34:21.467 UTC [538878] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:34:21.467 UTC [538878] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:34:53.114 UTC [538798] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:34:53.202 UTC [538798] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.005 s, total=0.088 s; sync files=4, longest=0.004 s, average=0.002 s; distance=133137 kB, estimate=136804 kB
2023-07-22 03:34:53.267 UTC [538797] LOG:  received fast shutdown request
2023-07-22 03:34:53.275 UTC [538797] LOG:  aborting any active transactions
2023-07-22 03:34:53.275 UTC [538797] LOG:  background worker "logical replication launcher" (PID 538803) exited with exit code 1
2023-07-22 03:34:53.276 UTC [538798] LOG:  shutting down
2023-07-22 03:34:53.283 UTC [538798] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:34:53.307 UTC [538798] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.002 s, total=0.032 s; sync files=1, longest=0.002 s, average=0.002 s; distance=0 kB, estimate=123123 kB
2023-07-22 03:34:53.331 UTC [538797] LOG:  database system is shut down
2023-07-22 03:34:54.099 UTC [538921] FATAL:  could not access file "decoderbufs": No such file or directory
2023-07-22 03:34:54.099 UTC [538921] LOG:  database system is shut down
2023-07-22 03:34:54.974 UTC [538954] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:34:54.974 UTC [538954] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:34:54.987 UTC [538954] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:34:54.998 UTC [538957] LOG:  database system was shut down at 2023-07-22 03:34:54 UTC
2023-07-22 03:34:55.008 UTC [538954] LOG:  database system is ready to accept connections
2023-07-22 03:34:55.186 UTC [538973] ERROR:  maxlen value has to be >= 1
2023-07-22 03:34:55.186 UTC [538973] STATEMENT:  ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = -214783648);
2023-07-22 03:34:55.635 UTC [538999] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:34:55.635 UTC [538999] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:35:28.443 UTC [538955] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:35:28.812 UTC [538955] LOG:  checkpoint complete: wrote 1778 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.048 s, sync=0.085 s, total=0.370 s; sync files=497, longest=0.028 s, average=0.001 s; distance=140614 kB, estimate=140614 kB
2023-07-22 03:35:28.974 UTC [539021] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:35:28.974 UTC [539021] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:36:00.711 UTC [538955] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:36:00.831 UTC [538955] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.120 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132497 kB, estimate=139802 kB
2023-07-22 03:36:00.903 UTC [538954] LOG:  received fast shutdown request
2023-07-22 03:36:00.911 UTC [538954] LOG:  aborting any active transactions
2023-07-22 03:36:00.913 UTC [538954] LOG:  background worker "logical replication launcher" (PID 538960) exited with exit code 1
2023-07-22 03:36:00.913 UTC [538955] LOG:  shutting down
2023-07-22 03:36:00.920 UTC [538955] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:36:00.963 UTC [538955] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.004 s, total=0.050 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=125822 kB
2023-07-22 03:36:01.011 UTC [538954] LOG:  database system is shut down
2023-07-22 03:36:01.846 UTC [539063] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:36:01.846 UTC [539063] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:36:01.861 UTC [539063] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:36:01.879 UTC [539066] LOG:  database system was shut down at 2023-07-22 03:36:01 UTC
2023-07-22 03:36:01.890 UTC [539063] LOG:  database system is ready to accept connections
2023-07-22 03:36:02.490 UTC [539108] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:36:02.490 UTC [539108] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:36:35.072 UTC [539064] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:36:35.292 UTC [539064] LOG:  checkpoint complete: wrote 1778 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.074 s, sync=0.051 s, total=0.221 s; sync files=497, longest=0.016 s, average=0.001 s; distance=140473 kB, estimate=140473 kB
2023-07-22 03:36:35.428 UTC [539126] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:36:35.428 UTC [539126] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:37:07.125 UTC [539064] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:37:07.251 UTC [539064] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.126 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132535 kB, estimate=139679 kB
2023-07-22 03:37:07.321 UTC [539063] LOG:  received fast shutdown request
2023-07-22 03:37:07.329 UTC [539063] LOG:  aborting any active transactions
2023-07-22 03:37:07.329 UTC [539063] LOG:  background worker "logical replication launcher" (PID 539069) exited with exit code 1
2023-07-22 03:37:07.329 UTC [539064] LOG:  shutting down
2023-07-22 03:37:07.335 UTC [539064] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:37:07.378 UTC [539064] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.049 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=125711 kB
2023-07-22 03:37:07.398 UTC [539063] LOG:  database system is shut down
2023-07-22 03:37:08.179 UTC [539168] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:37:08.179 UTC [539168] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:37:08.194 UTC [539168] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:37:08.211 UTC [539171] LOG:  database system was shut down at 2023-07-22 03:37:07 UTC
2023-07-22 03:37:08.221 UTC [539168] LOG:  database system is ready to accept connections
2023-07-22 03:37:08.484 UTC [539198] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:37:08.484 UTC [539198] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:37:41.077 UTC [539169] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:37:41.775 UTC [539169] LOG:  checkpoint complete: wrote 895 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.032 s, sync=0.572 s, total=0.698 s; sync files=252, longest=0.265 s, average=0.003 s; distance=136483 kB, estimate=136483 kB
2023-07-22 03:37:41.888 UTC [539216] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:37:41.888 UTC [539216] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:38:13.589 UTC [539169] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:38:13.710 UTC [539169] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.121 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132469 kB, estimate=136082 kB
2023-07-22 03:38:13.777 UTC [539168] LOG:  received fast shutdown request
2023-07-22 03:38:13.785 UTC [539168] LOG:  aborting any active transactions
2023-07-22 03:38:13.785 UTC [539168] LOG:  background worker "logical replication launcher" (PID 539174) exited with exit code 1
2023-07-22 03:38:13.785 UTC [539169] LOG:  shutting down
2023-07-22 03:38:13.793 UTC [539169] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:38:13.835 UTC [539169] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.050 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=122474 kB
2023-07-22 03:38:13.879 UTC [539168] LOG:  database system is shut down
2023-07-22 03:38:14.719 UTC [539259] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:38:14.719 UTC [539259] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:38:14.734 UTC [539259] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:38:14.752 UTC [539262] LOG:  database system was shut down at 2023-07-22 03:38:14 UTC
2023-07-22 03:38:14.764 UTC [539259] LOG:  database system is ready to accept connections
2023-07-22 03:38:14.958 UTC [539278] ERROR:  required extension "cube" is not installed
2023-07-22 03:38:14.958 UTC [539278] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 03:38:14.958 UTC [539278] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 03:38:15.025 UTC [539278] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 03:38:15.025 UTC [539278] DETAIL:  extension earthdistance depends on extension cube
2023-07-22 03:38:15.025 UTC [539278] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:38:15.025 UTC [539278] STATEMENT:  drop extension cube;
2023-07-22 03:38:15.029 UTC [539278] ERROR:  cannot drop type cube because extension cube requires it
2023-07-22 03:38:15.029 UTC [539278] HINT:  You can drop extension cube instead.
2023-07-22 03:38:15.029 UTC [539278] STATEMENT:  drop type cube;
2023-07-22 03:38:15.034 UTC [539278] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 03:38:15.034 UTC [539278] DETAIL:  column f1 of table foo depends on type cube
2023-07-22 03:38:15.034 UTC [539278] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:38:15.034 UTC [539278] STATEMENT:  drop extension cube;
2023-07-22 03:38:15.124 UTC [539278] ERROR:  cannot drop extension cube because other objects depend on it
2023-07-22 03:38:15.124 UTC [539278] DETAIL:  column f1 of table foo depends on type c.cube
2023-07-22 03:38:15.124 UTC [539278] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:38:15.124 UTC [539278] STATEMENT:  drop extension cube;
2023-07-22 03:38:15.125 UTC [539278] ERROR:  cannot drop schema c because other objects depend on it
2023-07-22 03:38:15.125 UTC [539278] DETAIL:  extension cube depends on schema c
	column f1 of table foo depends on type c.cube
2023-07-22 03:38:15.125 UTC [539278] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 03:38:15.125 UTC [539278] STATEMENT:  drop schema c;
2023-07-22 03:38:15.303 UTC [539259] LOG:  received fast shutdown request
2023-07-22 03:38:15.312 UTC [539259] LOG:  aborting any active transactions
2023-07-22 03:38:15.314 UTC [539259] LOG:  background worker "logical replication launcher" (PID 539265) exited with exit code 1
2023-07-22 03:38:15.314 UTC [539260] LOG:  shutting down
2023-07-22 03:38:15.322 UTC [539260] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:38:15.477 UTC [539260] LOG:  checkpoint complete: wrote 1796 buffers (11.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.064 s, sync=0.060 s, total=0.163 s; sync files=497, longest=0.017 s, average=0.001 s; distance=8460 kB, estimate=8460 kB
2023-07-22 03:38:15.489 UTC [539259] LOG:  database system is shut down
2023-07-22 03:38:16.211 UTC [539331] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:38:16.211 UTC [539331] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:38:16.226 UTC [539331] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:38:16.242 UTC [539334] LOG:  database system was shut down at 2023-07-22 03:38:15 UTC
2023-07-22 03:38:16.253 UTC [539331] LOG:  database system is ready to accept connections
2023-07-22 03:38:16.458 UTC [539350] ERROR:  permission denied to create foreign-data wrapper "file_fdw2"
2023-07-22 03:38:16.458 UTC [539350] HINT:  Must be superuser to create a foreign-data wrapper.
2023-07-22 03:38:16.458 UTC [539350] STATEMENT:  CREATE FOREIGN DATA WRAPPER file_fdw2 HANDLER file_fdw_handler VALIDATOR file_fdw_validator;
2023-07-22 03:38:16.458 UTC [539350] ERROR:  permission denied for foreign-data wrapper file_fdw
2023-07-22 03:38:16.458 UTC [539350] STATEMENT:  CREATE SERVER file_server2 FOREIGN DATA WRAPPER file_fdw;
2023-07-22 03:38:16.459 UTC [539350] ERROR:  permission denied for foreign server file_server
2023-07-22 03:38:16.459 UTC [539350] STATEMENT:  CREATE USER MAPPING FOR regress_file_fdw_user SERVER file_server;
2023-07-22 03:38:16.477 UTC [539350] ERROR:  COPY format "xml" not recognized
2023-07-22 03:38:16.477 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'xml');
2023-07-22 03:38:16.478 UTC [539350] ERROR:  COPY quote available only in CSV mode
2023-07-22 03:38:16.478 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', quote ':');
2023-07-22 03:38:16.479 UTC [539350] ERROR:  COPY escape available only in CSV mode
2023-07-22 03:38:16.479 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape ':');
2023-07-22 03:38:16.481 UTC [539350] ERROR:  cannot specify HEADER in BINARY mode
2023-07-22 03:38:16.481 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', header 'true');
2023-07-22 03:38:16.482 UTC [539350] ERROR:  COPY quote available only in CSV mode
2023-07-22 03:38:16.482 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', quote ':');
2023-07-22 03:38:16.482 UTC [539350] ERROR:  COPY escape available only in CSV mode
2023-07-22 03:38:16.482 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'binary', escape ':');
2023-07-22 03:38:16.484 UTC [539350] ERROR:  COPY delimiter cannot be "a"
2023-07-22 03:38:16.484 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 03:38:16.484 UTC [539350] ERROR:  COPY escape available only in CSV mode
2023-07-22 03:38:16.484 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', escape '-');
2023-07-22 03:38:16.485 UTC [539350] ERROR:  CSV quote character must not appear in the NULL specification
2023-07-22 03:38:16.485 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '-', null '=-=');
2023-07-22 03:38:16.486 UTC [539350] ERROR:  COPY delimiter must not appear in the NULL specification
2023-07-22 03:38:16.486 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', null '=-=');
2023-07-22 03:38:16.487 UTC [539350] ERROR:  COPY delimiter and quote must be different
2023-07-22 03:38:16.487 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '-', quote '-');
2023-07-22 03:38:16.488 UTC [539350] ERROR:  COPY delimiter must be a single one-byte character
2023-07-22 03:38:16.488 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '---');
2023-07-22 03:38:16.489 UTC [539350] ERROR:  COPY quote must be a single one-byte character
2023-07-22 03:38:16.489 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', quote '---');
2023-07-22 03:38:16.490 UTC [539350] ERROR:  COPY escape must be a single one-byte character
2023-07-22 03:38:16.490 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', escape '---');
2023-07-22 03:38:16.491 UTC [539350] ERROR:  COPY delimiter cannot be "\"
2023-07-22 03:38:16.491 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '\');
2023-07-22 03:38:16.491 UTC [539350] ERROR:  COPY delimiter cannot be "."
2023-07-22 03:38:16.491 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '.');
2023-07-22 03:38:16.492 UTC [539350] ERROR:  COPY delimiter cannot be "1"
2023-07-22 03:38:16.492 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter '1');
2023-07-22 03:38:16.493 UTC [539350] ERROR:  COPY delimiter cannot be "a"
2023-07-22 03:38:16.493 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'text', delimiter 'a');
2023-07-22 03:38:16.494 UTC [539350] ERROR:  COPY delimiter cannot be newline or carriage return
2023-07-22 03:38:16.494 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', delimiter '
	');
2023-07-22 03:38:16.495 UTC [539350] ERROR:  COPY null representation cannot use newline or carriage return
2023-07-22 03:38:16.495 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (format 'csv', null '
	');
2023-07-22 03:38:16.496 UTC [539350] ERROR:  either filename or program is required for file_fdw foreign tables
2023-07-22 03:38:16.496 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server;
2023-07-22 03:38:16.534 UTC [539350] ERROR:  column name mismatch in header line field 1: got "1", expected "a"
2023-07-22 03:38:16.534 UTC [539350] CONTEXT:  COPY header_doesnt_match, line 1: "1,foo"
2023-07-22 03:38:16.534 UTC [539350] STATEMENT:  SELECT * FROM header_doesnt_match;
2023-07-22 03:38:16.541 UTC [539350] ERROR:  COPY force not null available only in CSV mode
2023-07-22 03:38:16.541 UTC [539350] STATEMENT:  SELECT * FROM text_csv;
2023-07-22 03:38:16.553 UTC [539350] ERROR:  invalid option "force_not_null"
2023-07-22 03:38:16.553 UTC [539350] HINT:  There are no valid options in this context.
2023-07-22 03:38:16.553 UTC [539350] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_not_null '*');
2023-07-22 03:38:16.554 UTC [539350] ERROR:  invalid option "force_not_null"
2023-07-22 03:38:16.554 UTC [539350] HINT:  There are no valid options in this context.
2023-07-22 03:38:16.554 UTC [539350] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_not_null '*');
2023-07-22 03:38:16.554 UTC [539350] ERROR:  invalid option "force_not_null"
2023-07-22 03:38:16.554 UTC [539350] HINT:  There are no valid options in this context.
2023-07-22 03:38:16.554 UTC [539350] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 03:38:16.555 UTC [539350] ERROR:  invalid option "force_not_null"
2023-07-22 03:38:16.555 UTC [539350] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 03:38:16.555 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_not_null '*');
2023-07-22 03:38:16.555 UTC [539350] ERROR:  invalid option "force_null"
2023-07-22 03:38:16.555 UTC [539350] HINT:  There are no valid options in this context.
2023-07-22 03:38:16.555 UTC [539350] STATEMENT:  ALTER FOREIGN DATA WRAPPER file_fdw OPTIONS (ADD force_null '*');
2023-07-22 03:38:16.556 UTC [539350] ERROR:  invalid option "force_null"
2023-07-22 03:38:16.556 UTC [539350] HINT:  There are no valid options in this context.
2023-07-22 03:38:16.556 UTC [539350] STATEMENT:  ALTER SERVER file_server OPTIONS (ADD force_null '*');
2023-07-22 03:38:16.556 UTC [539350] ERROR:  invalid option "force_null"
2023-07-22 03:38:16.556 UTC [539350] HINT:  There are no valid options in this context.
2023-07-22 03:38:16.556 UTC [539350] STATEMENT:  CREATE USER MAPPING FOR public SERVER file_server OPTIONS (force_null '*');
2023-07-22 03:38:16.557 UTC [539350] ERROR:  invalid option "force_null"
2023-07-22 03:38:16.557 UTC [539350] HINT:  Valid options in this context are: filename, program, format, header, delimiter, quote, escape, null, encoding
2023-07-22 03:38:16.557 UTC [539350] STATEMENT:  CREATE FOREIGN TABLE tbl () SERVER file_server OPTIONS (force_null '*');
2023-07-22 03:38:16.563 UTC [539350] ERROR:  invalid input syntax for type real: "aaa"
2023-07-22 03:38:16.563 UTC [539350] CONTEXT:  COPY agg_bad, line 3, column b: "aaa"
2023-07-22 03:38:16.563 UTC [539350] STATEMENT:  SELECT * FROM agg_bad;
2023-07-22 03:38:16.568 UTC [539350] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 03:38:16.568 UTC [539350] STATEMENT:  INSERT INTO agg_csv VALUES(1,2.0);
2023-07-22 03:38:16.568 UTC [539350] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 03:38:16.568 UTC [539350] STATEMENT:  UPDATE agg_csv SET a = 1;
2023-07-22 03:38:16.569 UTC [539350] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 03:38:16.569 UTC [539350] STATEMENT:  DELETE FROM agg_csv WHERE a = 100;
2023-07-22 03:38:16.570 UTC [539350] ERROR:  cannot insert into foreign table "agg_csv"
2023-07-22 03:38:16.570 UTC [539350] STATEMENT:  COPY agg_csv FROM STDIN;
2023-07-22 03:38:16.586 UTC [539350] ERROR:  cannot update foreign table "agg_csv"
2023-07-22 03:38:16.586 UTC [539350] STATEMENT:  UPDATE agg SET a = 1;
2023-07-22 03:38:16.586 UTC [539350] ERROR:  cannot delete from foreign table "agg_csv"
2023-07-22 03:38:16.586 UTC [539350] STATEMENT:  DELETE FROM agg WHERE a = 100;
2023-07-22 03:38:16.625 UTC [539350] ERROR:  cannot insert into foreign table "p1"
2023-07-22 03:38:16.625 UTC [539350] CONTEXT:  COPY pt, line 2: "1,qux"
2023-07-22 03:38:16.625 UTC [539350] STATEMENT:  COPY pt FROM '/home/abigalek/pgext-cli-python/postgresql-15.3/contrib/file_fdw/data/list2.bad' with (format 'csv', delimiter ',');
2023-07-22 03:38:16.632 UTC [539350] ERROR:  cannot insert into foreign table "p1"
2023-07-22 03:38:16.632 UTC [539350] STATEMENT:  INSERT INTO pt VALUES (1, 'xyzzy');
2023-07-22 03:38:16.636 UTC [539350] ERROR:  cannot insert into foreign table "p1"
2023-07-22 03:38:16.636 UTC [539350] STATEMENT:  UPDATE pt set a = 1 where a = 2;
2023-07-22 03:38:16.659 UTC [539350] ERROR:  permission denied for foreign table agg_text
2023-07-22 03:38:16.659 UTC [539350] STATEMENT:  SELECT * FROM agg_text ORDER BY a;
2023-07-22 03:38:16.674 UTC [539350] ERROR:  only superuser or a role with privileges of the pg_read_server_files role may specify the filename option of a file_fdw foreign table
2023-07-22 03:38:16.674 UTC [539350] STATEMENT:  ALTER FOREIGN TABLE agg_text OPTIONS (SET format 'text');
2023-07-22 03:38:17.121 UTC [539376] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:38:17.121 UTC [539376] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:38:49.585 UTC [539332] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:38:49.811 UTC [539332] LOG:  checkpoint complete: wrote 1819 buffers (11.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.070 s, sync=0.063 s, total=0.227 s; sync files=513, longest=0.015 s, average=0.001 s; distance=140694 kB, estimate=140694 kB
2023-07-22 03:38:49.944 UTC [539393] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:38:49.944 UTC [539393] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:39:21.694 UTC [539332] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:39:21.820 UTC [539332] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.127 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132548 kB, estimate=139879 kB
2023-07-22 03:39:21.886 UTC [539331] LOG:  received fast shutdown request
2023-07-22 03:39:21.894 UTC [539331] LOG:  aborting any active transactions
2023-07-22 03:39:21.894 UTC [539331] LOG:  background worker "logical replication launcher" (PID 539337) exited with exit code 1
2023-07-22 03:39:21.894 UTC [539332] LOG:  shutting down
2023-07-22 03:39:21.901 UTC [539332] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:39:21.944 UTC [539332] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.050 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=125892 kB
2023-07-22 03:39:21.993 UTC [539331] LOG:  database system is shut down
2023-07-22 03:39:22.846 UTC [539436] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:39:22.847 UTC [539436] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:39:22.861 UTC [539436] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:39:22.876 UTC [539439] LOG:  database system was shut down at 2023-07-22 03:39:22 UTC
2023-07-22 03:39:22.887 UTC [539436] LOG:  database system is ready to accept connections
2023-07-22 03:39:23.446 UTC [539481] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:39:23.446 UTC [539481] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:39:55.956 UTC [539437] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:39:56.169 UTC [539437] LOG:  checkpoint complete: wrote 1779 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.050 s, sync=0.071 s, total=0.213 s; sync files=497, longest=0.022 s, average=0.001 s; distance=140503 kB, estimate=140503 kB
2023-07-22 03:39:56.296 UTC [539498] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:39:56.296 UTC [539498] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:40:27.964 UTC [539437] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:40:28.093 UTC [539437] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.011 s, total=0.129 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132501 kB, estimate=139703 kB
2023-07-22 03:40:28.162 UTC [539436] LOG:  received fast shutdown request
2023-07-22 03:40:28.170 UTC [539436] LOG:  aborting any active transactions
2023-07-22 03:40:28.170 UTC [539436] LOG:  background worker "logical replication launcher" (PID 539442) exited with exit code 1
2023-07-22 03:40:28.170 UTC [539437] LOG:  shutting down
2023-07-22 03:40:28.177 UTC [539437] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:40:28.218 UTC [539437] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.048 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=125733 kB
2023-07-22 03:40:28.262 UTC [539436] LOG:  database system is shut down
2023-07-22 03:40:28.996 UTC [539542] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:40:28.996 UTC [539542] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:40:29.011 UTC [539542] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:40:29.027 UTC [539545] LOG:  database system was shut down at 2023-07-22 03:40:28 UTC
2023-07-22 03:40:29.037 UTC [539542] LOG:  database system is ready to accept connections
2023-07-22 03:40:29.226 UTC [539565] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 03:40:29.226 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), -1))
	       from test_khvengxf;
2023-07-22 03:40:29.226 UTC [539565] ERROR:  log2m modifier must be between 0 and 17
2023-07-22 03:40:29.226 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 32))
	       from test_khvengxf;
2023-07-22 03:40:29.227 UTC [539565] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 03:40:29.227 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, -1))
	       from test_khvengxf;
2023-07-22 03:40:29.228 UTC [539565] ERROR:  regwidth modifier must be between 0 and 7
2023-07-22 03:40:29.228 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 8))
	       from test_khvengxf;
2023-07-22 03:40:29.228 UTC [539565] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 03:40:29.228 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, -2))
	       from test_khvengxf;
2023-07-22 03:40:29.229 UTC [539565] ERROR:  expthresh modifier must be between -1 and 16383
2023-07-22 03:40:29.229 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 8589934592))
	       from test_khvengxf;
2023-07-22 03:40:29.230 UTC [539565] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 03:40:29.230 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, -1))
	       from test_khvengxf;
2023-07-22 03:40:29.230 UTC [539565] ERROR:  sparseon modifier must be 0 or 1
2023-07-22 03:40:29.230 UTC [539565] STATEMENT:  select hll_print(hll_add_agg(hll_hash_integer(val), 10, 4, 512, 2))
	       from test_khvengxf;
2023-07-22 03:40:29.382 UTC [539577] ERROR:  operator does not exist: double precision || hll_hashval at character 31
2023-07-22 03:40:29.382 UTC [539577] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:40:29.382 UTC [539577] STATEMENT:  SELECT #hll_empty(11,5,256,1) || hll_hash_integer(1,0);
2023-07-22 03:40:29.409 UTC [539581] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:29.409 UTC [539581] STATEMENT:  SELECT E'\\x118b7f'::hll(10,5,-1,1);
2023-07-22 03:40:29.410 UTC [539581] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:40:29.410 UTC [539581] STATEMENT:  SELECT E'\\x118b7f'::hll(11,4,-1,1);
2023-07-22 03:40:29.410 UTC [539581] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:40:29.410 UTC [539581] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,64,1);
2023-07-22 03:40:29.411 UTC [539581] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:40:29.411 UTC [539581] STATEMENT:  SELECT E'\\x118b7f'::hll(11,5,-1,0);
2023-07-22 03:40:29.412 UTC [539581] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:29.412 UTC [539581] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(10,5,-1,1);
2023-07-22 03:40:29.413 UTC [539581] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:40:29.413 UTC [539581] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,4,-1,1);
2023-07-22 03:40:29.413 UTC [539581] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:40:29.413 UTC [539581] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,64,1);
2023-07-22 03:40:29.414 UTC [539581] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:40:29.414 UTC [539581] STATEMENT:  SELECT E'\\x128b7f1111111111111111'::hll(11,5,-1,0);
2023-07-22 03:40:29.415 UTC [539581] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:29.415 UTC [539581] STATEMENT:  SELECT E'\\x138b7f0001'::hll(10,5,-1,1);
2023-07-22 03:40:29.415 UTC [539581] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:40:29.415 UTC [539581] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,4,-1,1);
2023-07-22 03:40:29.415 UTC [539581] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:40:29.415 UTC [539581] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,64,1);
2023-07-22 03:40:29.416 UTC [539581] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:40:29.416 UTC [539581] STATEMENT:  SELECT E'\\x138b7f0001'::hll(11,5,-1,0);
2023-07-22 03:40:29.419 UTC [539581] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:29.419 UTC [539581] STATEMENT:  SELECT E'\\x148b7fhll(10,5,-1,1);
2023-07-22 03:40:29.420 UTC [539581] ERROR:  register width does not match: source uses 5 and dest uses 4
2023-07-22 03:40:29.420 UTC [539581] STATEMENT:  SELECT E'\\x148b7fhll(11,4,-1,1);
2023-07-22 03:40:29.420 UTC [539581] ERROR:  explicit threshold does not match: source uses -1 and dest uses 64
2023-07-22 03:40:29.420 UTC [539581] STATEMENT:  SELECT E'\\x148b7fhll(11,5,64,1);
2023-07-22 03:40:29.421 UTC [539581] ERROR:  sparse enable does not match: source uses 1 and dest uses 0
2023-07-22 03:40:29.421 UTC [539581] STATEMENT:  SELECT E'\\x148b7fhll(11,5,-1,0);
2023-07-22 03:40:46.197 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] ERROR:  function hll_hash_boolean(integer, integer) does not exist at character 8
2023-07-22 03:40:46.198 UTC [539649] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:40:46.198 UTC [539649] STATEMENT:  SELECT hll_hash_boolean(0, -1);
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.198 UTC [539649] WARNING:  negative seed values not compatible
2023-07-22 03:40:46.199 UTC [539649] ERROR:  operator does not exist: hll || integer at character 20
2023-07-22 03:40:46.199 UTC [539649] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:40:46.199 UTC [539649] STATEMENT:  SELECT hll_empty() || 42;
2023-07-22 03:40:46.199 UTC [539649] ERROR:  operator does not exist: hll || bigint at character 20
2023-07-22 03:40:46.199 UTC [539649] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:40:46.199 UTC [539649] STATEMENT:  SELECT hll_empty() || 42::bigint;
2023-07-22 03:40:46.360 UTC [539691] ERROR:  invalid number of type modifiers at character 32
2023-07-22 03:40:46.360 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(10, 4, 64, 0, 42));
2023-07-22 03:40:46.360 UTC [539691] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 03:40:46.360 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(-1));
2023-07-22 03:40:46.370 UTC [539691] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 03:40:46.370 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(31));
2023-07-22 03:40:46.371 UTC [539691] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 03:40:46.371 UTC [539691] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 03:40:46.371 UTC [539691] ERROR:  log2m modifier must be between 0 and 17 at character 32
2023-07-22 03:40:46.371 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(32));
2023-07-22 03:40:46.371 UTC [539691] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 03:40:46.371 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, -1));
2023-07-22 03:40:46.390 UTC [539691] ERROR:  regwidth modifier must be between 0 and 7 at character 32
2023-07-22 03:40:46.390 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 8));
2023-07-22 03:40:46.390 UTC [539691] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 03:40:46.390 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, -2));
2023-07-22 03:40:46.418 UTC [539691] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 03:40:46.418 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 4294967296));
2023-07-22 03:40:46.419 UTC [539691] ERROR:  table "test_qiundgkm" does not exist
2023-07-22 03:40:46.419 UTC [539691] STATEMENT:  DROP TABLE test_qiundgkm;
2023-07-22 03:40:46.419 UTC [539691] ERROR:  expthresh modifier must be between -1 and 16383 at character 32
2023-07-22 03:40:46.419 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 8589934592));
2023-07-22 03:40:46.419 UTC [539691] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 03:40:46.419 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, -1));
2023-07-22 03:40:46.438 UTC [539691] ERROR:  sparseon modifier must be 0 or 1 at character 32
2023-07-22 03:40:46.438 UTC [539691] STATEMENT:  CREATE TABLE test_qiundgkm (v1 hll(11, 5, 128, 2));
2023-07-22 03:40:46.453 UTC [539695] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:46.453 UTC [539695] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (
	E'\\x148b7fhll
	);
2023-07-22 03:40:46.453 UTC [539695] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:46.453 UTC [539695] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (hll_empty(11));
2023-07-22 03:40:46.453 UTC [539695] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:46.453 UTC [539695] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x118b7f');
2023-07-22 03:40:46.453 UTC [539695] ERROR:  register count does not match: source uses 2048 and dest uses 1024
2023-07-22 03:40:46.453 UTC [539695] STATEMENT:  INSERT INTO test_trsybeqs(val) VALUES (E'\\x128b7f1111111111111111');
2023-07-22 03:40:46.479 UTC [539543] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:40:46.510 UTC [539543] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.008 s, sync=0.005 s, total=0.032 s; sync files=7, longest=0.003 s, average=0.001 s; distance=33494 kB, estimate=33494 kB
2023-07-22 03:40:46.666 UTC [539725] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:40:46.666 UTC [539725] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:41:17.958 UTC [539543] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:41:18.105 UTC [539543] LOG:  checkpoint complete: wrote 627 buffers (3.8%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.032 s, sync=0.075 s, total=0.147 s; sync files=251, longest=0.007 s, average=0.001 s; distance=141318 kB, estimate=141318 kB
2023-07-22 03:41:18.242 UTC [539743] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:41:18.242 UTC [539743] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:41:49.397 UTC [539543] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:41:49.454 UTC [539543] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.005 s, total=0.057 s; sync files=4, longest=0.004 s, average=0.002 s; distance=138932 kB, estimate=141080 kB
2023-07-22 03:41:49.497 UTC [539542] LOG:  received fast shutdown request
2023-07-22 03:41:49.500 UTC [539542] LOG:  aborting any active transactions
2023-07-22 03:41:49.501 UTC [539542] LOG:  background worker "logical replication launcher" (PID 539548) exited with exit code 1
2023-07-22 03:41:49.501 UTC [539543] LOG:  shutting down
2023-07-22 03:41:49.504 UTC [539543] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:41:49.521 UTC [539543] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126972 kB
2023-07-22 03:41:49.543 UTC [539542] LOG:  database system is shut down
2023-07-22 03:41:50.204 UTC [539786] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:41:50.205 UTC [539786] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:41:50.211 UTC [539786] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:41:50.220 UTC [539789] LOG:  database system was shut down at 2023-07-22 03:41:50 UTC
2023-07-22 03:41:50.225 UTC [539786] LOG:  database system is ready to accept connections
2023-07-22 03:41:50.398 UTC [539805] ERROR:  array must have even number of elements
2023-07-22 03:41:50.398 UTC [539805] STATEMENT:  select ARRAY['a','g','b','h','asd']::hstore;
2023-07-22 03:41:50.398 UTC [539805] ERROR:  array must have two columns
2023-07-22 03:41:50.398 UTC [539805] STATEMENT:  select ARRAY[['a','g','b'],['h','asd','i']]::hstore;
2023-07-22 03:41:50.398 UTC [539805] ERROR:  wrong number of array subscripts
2023-07-22 03:41:50.398 UTC [539805] STATEMENT:  select ARRAY[[['a','g'],['b','h'],['asd','i']]]::hstore;
2023-07-22 03:41:50.398 UTC [539805] ERROR:  array must have even number of elements
2023-07-22 03:41:50.398 UTC [539805] STATEMENT:  select hstore(ARRAY['a','g','b','h','asd']);
2023-07-22 03:41:50.398 UTC [539805] ERROR:  array must have two columns
2023-07-22 03:41:50.398 UTC [539805] STATEMENT:  select hstore(ARRAY[['a','g','b'],['h','asd','i']]);
2023-07-22 03:41:50.398 UTC [539805] ERROR:  wrong number of array subscripts
2023-07-22 03:41:50.398 UTC [539805] STATEMENT:  select hstore(ARRAY[[['a','g'],['b','h'],['asd','i']]]);
2023-07-22 03:41:50.399 UTC [539805] ERROR:  arrays must have same bounds
2023-07-22 03:41:50.399 UTC [539805] STATEMENT:  select hstore(ARRAY['a'], '{}'::text[]);
2023-07-22 03:41:50.399 UTC [539805] ERROR:  arrays must have same bounds
2023-07-22 03:41:50.399 UTC [539805] STATEMENT:  select hstore('{}'::text[], ARRAY['a']);
2023-07-22 03:41:50.412 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.412 UTC [539805] STATEMENT:  select populate_record(v, hstore('e', null)) from testhstore1 v;
2023-07-22 03:41:50.412 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.412 UTC [539805] STATEMENT:  select populate_record(v, hstore('b', 'foo') || hstore('e', null)) from testhstore1 v;
2023-07-22 03:41:50.412 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.412 UTC [539805] STATEMENT:  select populate_record(null::testhstore1, hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 03:41:50.412 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.412 UTC [539805] STATEMENT:  select populate_record(null::testhstore1, '');
2023-07-22 03:41:50.413 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.413 UTC [539805] STATEMENT:  select v #= hstore('e', null) from testhstore1 v;
2023-07-22 03:41:50.413 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.413 UTC [539805] STATEMENT:  select null::testhstore1 #= (hstore('c', '3.45') || hstore('a', '123'));
2023-07-22 03:41:50.413 UTC [539805] ERROR:  domain hstestdom1 does not allow null values
2023-07-22 03:41:50.413 UTC [539805] STATEMENT:  select null::testhstore1 #= hstore '';
2023-07-22 03:41:50.446 UTC [539805] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 03:41:50.446 UTC [539805] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:41:50.446 UTC [539805] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=0));
2023-07-22 03:41:50.446 UTC [539805] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 03:41:50.446 UTC [539805] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:41:50.446 UTC [539805] STATEMENT:  create index hidx on testhstore using gist(h gist_hstore_ops(siglen=2025));
2023-07-22 03:41:50.927 UTC [539805] ERROR:  hstore allows only one subscript
2023-07-22 03:41:50.927 UTC [539805] STATEMENT:  select f2['d']['e'] from test_json_agg;
2023-07-22 03:41:50.927 UTC [539805] ERROR:  hstore allows only one subscript
2023-07-22 03:41:50.927 UTC [539805] STATEMENT:  select f2['d':'e'] from test_json_agg;
2023-07-22 03:41:50.944 UTC [539787] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:41:50.998 UTC [539787] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.005 s, total=0.055 s; sync files=7, longest=0.003 s, average=0.001 s; distance=7843 kB, estimate=7843 kB
2023-07-22 03:41:51.187 UTC [539831] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:41:51.187 UTC [539831] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:42:22.608 UTC [539787] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:42:22.749 UTC [539787] LOG:  checkpoint complete: wrote 628 buffers (3.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.037 s, sync=0.060 s, total=0.141 s; sync files=251, longest=0.004 s, average=0.001 s; distance=141275 kB, estimate=141275 kB
2023-07-22 03:42:22.885 UTC [539849] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:42:22.885 UTC [539849] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:42:54.067 UTC [539787] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:42:54.118 UTC [539787] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.005 s, total=0.051 s; sync files=4, longest=0.003 s, average=0.002 s; distance=137267 kB, estimate=140874 kB
2023-07-22 03:42:54.180 UTC [539786] LOG:  received fast shutdown request
2023-07-22 03:42:54.183 UTC [539786] LOG:  aborting any active transactions
2023-07-22 03:42:54.184 UTC [539786] LOG:  background worker "logical replication launcher" (PID 539792) exited with exit code 1
2023-07-22 03:42:54.185 UTC [539787] LOG:  shutting down
2023-07-22 03:42:54.188 UTC [539787] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:42:54.205 UTC [539787] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126787 kB
2023-07-22 03:42:54.255 UTC [539786] LOG:  database system is shut down
2023-07-22 03:42:54.826 UTC [539891] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:42:54.826 UTC [539891] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:42:54.832 UTC [539891] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:42:54.845 UTC [539894] LOG:  database system was shut down at 2023-07-22 03:42:54 UTC
2023-07-22 03:42:54.854 UTC [539891] LOG:  database system is ready to accept connections
2023-07-22 03:42:55.221 UTC [539912] WARNING:  hypopg: SQL order #1 is not a CREATE INDEX statement
2023-07-22 03:42:55.221 UTC [539912] WARNING:  hypopg: SQL order #3 is not a CREATE INDEX statement
2023-07-22 03:42:55.224 UTC [539912] ERROR:  value 1 out of bounds for option "fillfactor"
2023-07-22 03:42:55.224 UTC [539912] DETAIL:  Valid values are between "10" and "100".
2023-07-22 03:42:55.224 UTC [539912] STATEMENT:  SELECT COUNT(*) AS NB
	FROM public.hypopg_create_index('CREATE INDEX ON hypo(id) WITH (fillfactor = 1)');
2023-07-22 03:42:55.224 UTC [539912] ERROR:  oid 1 is not a hypothetical index
2023-07-22 03:42:55.224 UTC [539912] STATEMENT:  SELECT hypopg_relation_size(1);
2023-07-22 03:42:55.678 UTC [539958] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:42:55.678 UTC [539958] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:43:27.144 UTC [539892] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:43:27.298 UTC [539892] LOG:  checkpoint complete: wrote 1171 buffers (7.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.092 s, total=0.154 s; sync files=505, longest=0.004 s, average=0.001 s; distance=158538 kB, estimate=158538 kB
2023-07-22 03:43:27.401 UTC [539976] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:43:27.401 UTC [539976] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:43:58.630 UTC [539892] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:43:58.721 UTC [539892] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.010 s, sync=0.009 s, total=0.092 s; sync files=4, longest=0.006 s, average=0.003 s; distance=133986 kB, estimate=156083 kB
2023-07-22 03:43:58.788 UTC [539891] LOG:  received fast shutdown request
2023-07-22 03:43:58.796 UTC [539891] LOG:  aborting any active transactions
2023-07-22 03:43:58.796 UTC [539891] LOG:  background worker "logical replication launcher" (PID 539897) exited with exit code 1
2023-07-22 03:43:58.797 UTC [539892] LOG:  shutting down
2023-07-22 03:43:58.802 UTC [539892] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:43:58.833 UTC [539892] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.003 s, total=0.037 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=140474 kB
2023-07-22 03:43:58.883 UTC [539891] LOG:  database system is shut down
2023-07-22 03:43:59.609 UTC [540018] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:43:59.609 UTC [540018] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:43:59.617 UTC [540018] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:43:59.631 UTC [540021] LOG:  database system was shut down at 2023-07-22 03:43:59 UTC
2023-07-22 03:43:59.638 UTC [540018] LOG:  database system is ready to accept connections
2023-07-22 03:43:59.958 UTC [540065] ERROR:  Type of sequence element int4 doesn't match with function cs_to_float4_array return type
2023-07-22 03:43:59.958 UTC [540065] STATEMENT:  select cs_to_float4_array('int4:{1,2,3,4,5}');
2023-07-22 03:44:00.057 UTC [540141] ERROR:  no matching timestamp in timeseries
2023-07-22 03:44:00.057 UTC [540141] STATEMENT:  select (Quote_project(Quote_get('IBM'), Quote_join('IBM', 'date:{2-Nov-2013,4-Nov-2013,03-Nov-2013,01-Nov-2013}', 0))).*;
2023-07-22 03:44:00.512 UTC [540179] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:44:00.512 UTC [540179] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:44:32.827 UTC [540019] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:44:33.017 UTC [540019] LOG:  checkpoint complete: wrote 1879 buffers (11.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.064 s, sync=0.050 s, total=0.191 s; sync files=502, longest=0.017 s, average=0.001 s; distance=142722 kB, estimate=142722 kB
2023-07-22 03:44:33.146 UTC [540197] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:44:33.146 UTC [540197] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:45:04.804 UTC [540019] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:45:04.924 UTC [540019] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.017 s, sync=0.011 s, total=0.121 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133180 kB, estimate=141768 kB
2023-07-22 03:45:04.991 UTC [540018] LOG:  received fast shutdown request
2023-07-22 03:45:04.998 UTC [540018] LOG:  aborting any active transactions
2023-07-22 03:45:04.999 UTC [540018] LOG:  background worker "logical replication launcher" (PID 540024) exited with exit code 1
2023-07-22 03:45:04.999 UTC [540019] LOG:  shutting down
2023-07-22 03:45:05.006 UTC [540019] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:45:05.046 UTC [540019] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.004 s, total=0.047 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=127591 kB
2023-07-22 03:45:05.067 UTC [540018] LOG:  database system is shut down
2023-07-22 03:45:05.788 UTC [540243] FATAL:  could not access file "intagg": No such file or directory
2023-07-22 03:45:05.788 UTC [540243] LOG:  database system is shut down
2023-07-22 03:45:06.587 UTC [540276] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:45:06.588 UTC [540276] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:45:06.602 UTC [540276] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:45:06.616 UTC [540279] LOG:  database system was shut down at 2023-07-22 03:45:06 UTC
2023-07-22 03:45:06.623 UTC [540276] LOG:  database system is ready to accept connections
2023-07-22 03:45:07.053 UTC [540295] ERROR:  value 0 out of bounds for option "numranges"
2023-07-22 03:45:07.053 UTC [540295] DETAIL:  Valid values are between "1" and "252".
2023-07-22 03:45:07.053 UTC [540295] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 0));
2023-07-22 03:45:07.053 UTC [540295] ERROR:  value 253 out of bounds for option "numranges"
2023-07-22 03:45:07.053 UTC [540295] DETAIL:  Valid values are between "1" and "252".
2023-07-22 03:45:07.053 UTC [540295] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__int_ops(numranges = 253));
2023-07-22 03:45:07.292 UTC [540295] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 03:45:07.292 UTC [540295] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:45:07.292 UTC [540295] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 0));
2023-07-22 03:45:07.292 UTC [540295] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 03:45:07.292 UTC [540295] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:45:07.292 UTC [540295] STATEMENT:  CREATE INDEX text_idx on test__int using gist (a gist__intbig_ops(siglen = 2025));
2023-07-22 03:45:08.148 UTC [540277] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:45:08.221 UTC [540277] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 2 recycled; write=0.016 s, sync=0.014 s, total=0.073 s; sync files=7, longest=0.008 s, average=0.002 s; distance=29455 kB, estimate=29455 kB
2023-07-22 03:45:08.530 UTC [540321] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:45:08.530 UTC [540321] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:45:40.739 UTC [540277] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:45:40.892 UTC [540277] LOG:  checkpoint complete: wrote 900 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.026 s, sync=0.047 s, total=0.153 s; sync files=251, longest=0.019 s, average=0.001 s; distance=136822 kB, estimate=136822 kB
2023-07-22 03:45:41.019 UTC [540339] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:45:41.019 UTC [540339] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:46:12.694 UTC [540277] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:12.813 UTC [540277] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.017 s, sync=0.011 s, total=0.120 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132683 kB, estimate=136408 kB
2023-07-22 03:46:12.880 UTC [540276] LOG:  received fast shutdown request
2023-07-22 03:46:12.887 UTC [540276] LOG:  aborting any active transactions
2023-07-22 03:46:12.888 UTC [540276] LOG:  background worker "logical replication launcher" (PID 540282) exited with exit code 1
2023-07-22 03:46:12.888 UTC [540277] LOG:  shutting down
2023-07-22 03:46:12.895 UTC [540277] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:46:12.933 UTC [540277] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.046 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122767 kB
2023-07-22 03:46:12.956 UTC [540276] LOG:  database system is shut down
2023-07-22 03:46:13.692 UTC [540381] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:46:13.692 UTC [540381] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:46:13.708 UTC [540381] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:46:13.724 UTC [540384] LOG:  database system was shut down at 2023-07-22 03:46:13 UTC
2023-07-22 03:46:13.734 UTC [540381] LOG:  database system is ready to accept connections
2023-07-22 03:46:13.951 UTC [540400] ERROR:  invalid IP4 value: '1.2.3' at character 8
2023-07-22 03:46:13.951 UTC [540400] STATEMENT:  select '1.2.3'::ip4;
2023-07-22 03:46:13.952 UTC [540400] ERROR:  invalid IP4 value: '0' at character 8
2023-07-22 03:46:13.952 UTC [540400] STATEMENT:  select '0'::ip4;
2023-07-22 03:46:13.952 UTC [540400] ERROR:  invalid IP4 value: ' 1.2.3.4' at character 8
2023-07-22 03:46:13.952 UTC [540400] STATEMENT:  select ' 1.2.3.4'::ip4;
2023-07-22 03:46:13.952 UTC [540400] ERROR:  invalid IP4 value: '1.2.3.4 ' at character 8
2023-07-22 03:46:13.952 UTC [540400] STATEMENT:  select '1.2.3.4 '::ip4;
2023-07-22 03:46:13.952 UTC [540400] ERROR:  invalid IP4 value: '0.0.0.256' at character 8
2023-07-22 03:46:13.952 UTC [540400] STATEMENT:  select '0.0.0.256'::ip4;
2023-07-22 03:46:13.952 UTC [540400] ERROR:  invalid IP4 value: '0.0.256' at character 8
2023-07-22 03:46:13.952 UTC [540400] STATEMENT:  select '0.0.256'::ip4;
2023-07-22 03:46:13.952 UTC [540400] ERROR:  invalid IP4 value: '0..255.0' at character 8
2023-07-22 03:46:13.952 UTC [540400] STATEMENT:  select '0..255.0'::ip4;
2023-07-22 03:46:13.953 UTC [540400] ERROR:  invalid IP4 value: '+0.255.0.0' at character 8
2023-07-22 03:46:13.953 UTC [540400] STATEMENT:  select '+0.255.0.0'::ip4;
2023-07-22 03:46:13.953 UTC [540400] ERROR:  invalid IP4 value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 03:46:13.953 UTC [540400] STATEMENT:  select '1.2.3.4-1.2.3.4'::ip4;
2023-07-22 03:46:13.962 UTC [540400] ERROR:  invalid IP6 value: '' at character 8
2023-07-22 03:46:13.962 UTC [540400] STATEMENT:  select ''::ip6;
2023-07-22 03:46:13.962 UTC [540400] ERROR:  invalid IP6 value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 03:46:13.962 UTC [540400] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 03:46:13.962 UTC [540400] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 03:46:13.962 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ip6;
2023-07-22 03:46:13.962 UTC [540400] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 03:46:13.962 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1.2.3.4:1111::5555' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1.2.3.4:1111::5555'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1.2.3.4::' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1.2.3.4::'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1.2.3.4::5555' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1.2.3.4::5555'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1111:' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1111:'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1111:2222:3333:4444::5555:'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1111:2222:3333::5555:' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1111:2222:3333::5555:'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1111:2222::5555:' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1111:2222::5555:'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1111::5555:' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1111::5555:'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '123' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '123'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '12345::6:7:8' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '12345::6:7:8'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '127.0.0.1' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '127.0.0.1'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1:2:3::4:5::7:8' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1:2:3::4:5::7:8'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1::1.2.256.4' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1::1.2.256.4'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1::1.2.3.256' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1::1.2.3.256'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1::1.2.3.300' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1::1.2.3.300'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1::1.2.3.900' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1::1.2.3.900'::ip6;
2023-07-22 03:46:13.963 UTC [540400] ERROR:  invalid IP6 value: '1::1.2.300.4' at character 8
2023-07-22 03:46:13.963 UTC [540400] STATEMENT:  select '1::1.2.300.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::1.2.900.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::1.2.900.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::1.256.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::1.256.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::1.300.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::1.300.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::1.900.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::1.900.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::256.2.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::256.2.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::260.2.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::260.2.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::2::3' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::2::3'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::300.2.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::300.2.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::300.300.300.300' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::300.300.300.300'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::3000.30.30.30' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::3000.30.30.30'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::400.2.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::400.2.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.2.256.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.2.256.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.2.3.256' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.2.3.256'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.2.3.300' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.2.3.300'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.2.3.900' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.2.3.900'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.2.300.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.2.300.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.2.900.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.2.900.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.256.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.256.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.300.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.300.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:1.900.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:1.900.3.4'::ip6;
2023-07-22 03:46:13.964 UTC [540400] ERROR:  invalid IP6 value: '1::5:256.2.3.4' at character 8
2023-07-22 03:46:13.964 UTC [540400] STATEMENT:  select '1::5:256.2.3.4'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::5:260.2.3.4' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::5:260.2.3.4'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::5:300.2.3.4' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::5:300.2.3.4'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::5:300.300.300.300' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::5:300.300.300.300'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::5:3000.30.30.30' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::5:3000.30.30.30'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::5:400.2.3.4' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::5:400.2.3.4'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::5:900.2.3.4' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::5:900.2.3.4'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1::900.2.3.4' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1::900.2.3.4'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '1:::3:4:5' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '1:::3:4:5'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001::FFD3::57ab' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001::FFD3::57ab'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: '3ffe:b00::1::a' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select '3ffe:b00::1::a'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: ':' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select ':'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select ':1111:2222:3333:4444::5555'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: ':1111:2222:3333::5555' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select ':1111:2222:3333::5555'::ip6;
2023-07-22 03:46:13.965 UTC [540400] ERROR:  invalid IP6 value: ':1111:2222::5555' at character 8
2023-07-22 03:46:13.965 UTC [540400] STATEMENT:  select ':1111:2222::5555'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: ':1111::5555' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select ':1111::5555'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.2.256.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.2.256.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.2.3.256' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.2.3.256'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.2.3.300' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.2.3.300'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.2.3.900' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.2.3.900'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.2.300.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.2.300.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.2.900.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.2.900.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.256.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.256.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.300.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.300.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1.900.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1.900.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::256.2.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::256.2.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::260.2.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::260.2.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::300.2.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::300.2.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::300.300.300.300' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::300.300.300.300'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::3000.30.30.30' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::3000.30.30.30'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::400.2.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::400.2.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::5555:' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::5555:'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: '::900.2.3.4' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select '::900.2.3.4'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: ':::' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select ':::'::ip6;
2023-07-22 03:46:13.966 UTC [540400] ERROR:  invalid IP6 value: ':::5555' at character 8
2023-07-22 03:46:13.966 UTC [540400] STATEMENT:  select ':::5555'::ip6;
2023-07-22 03:46:13.967 UTC [540400] ERROR:  invalid IP6 value: '::ffff:2.3.4' at character 8
2023-07-22 03:46:13.967 UTC [540400] STATEMENT:  select '::ffff:2.3.4'::ip6;
2023-07-22 03:46:13.967 UTC [540400] ERROR:  invalid IP6 value: '::ffff:257.1.2.3' at character 8
2023-07-22 03:46:13.967 UTC [540400] STATEMENT:  select '::ffff:257.1.2.3'::ip6;
2023-07-22 03:46:13.967 UTC [540400] ERROR:  invalid IP6 value: 'FF01::101::2' at character 8
2023-07-22 03:46:13.967 UTC [540400] STATEMENT:  select 'FF01::101::2'::ip6;
2023-07-22 03:46:13.967 UTC [540400] ERROR:  invalid IP6 value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 03:46:13.967 UTC [540400] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ip6;
2023-07-22 03:46:13.967 UTC [540400] ERROR:  invalid IP6 value: 'ldkfj' at character 8
2023-07-22 03:46:13.967 UTC [540400] STATEMENT:  select 'ldkfj'::ip6;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '1.2.3'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '255.255.255.255-1.2.3'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/31'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/30'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/29'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/28'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/27'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/26'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/25'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/24'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/23'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/22'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/21'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/20'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/19'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/18'::ip4r;
2023-07-22 03:46:13.969 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 03:46:13.969 UTC [540400] STATEMENT:  select '0.0.0.1/17'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/16'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/15'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/14'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/13'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/12'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/11'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/10'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/9'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/8'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/7'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/6'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/5'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/4'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/3'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/2'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/1'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.1/0'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.2/30'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.4/29'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.8/28'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.16/27'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.32/26'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.64/25'::ip4r;
2023-07-22 03:46:13.970 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 03:46:13.970 UTC [540400] STATEMENT:  select '0.0.0.128/24'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.1.0/23'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.2.0/22'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.4.0/21'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.8.0/20'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.16.0/19'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.32.0/18'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.64.0/17'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.0.128.0/16'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.1.0.0/15'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.2.0.0/14'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.4.0.0/13'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.8.0.0/12'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.16.0.0/11'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.32.0.0/10'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.64.0.0/9'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '0.128.0.0/8'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '1.0.0.0/7'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '2.0.0.0/6'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '4.0.0.0/5'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '8.0.0.0/4'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '16.0.0.0/3'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '32.0.0.0/2'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '64.0.0.0/1'::ip4r;
2023-07-22 03:46:13.971 UTC [540400] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 03:46:13.971 UTC [540400] STATEMENT:  select '128.0.0.0/0'::ip4r;
2023-07-22 03:46:13.972 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 03:46:13.972 UTC [540400] STATEMENT:  select '0.0.0.0/33'::ip4r;
2023-07-22 03:46:13.972 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 03:46:13.972 UTC [540400] STATEMENT:  select '0.0.0.0/3.0'::ip4r;
2023-07-22 03:46:13.972 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 03:46:13.972 UTC [540400] STATEMENT:  select '0.0.0.0/+33'::ip4r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '::-::-::'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::ip6r;
2023-07-22 03:46:13.974 UTC [540400] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 03:46:13.974 UTC [540400] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '::/129'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '::/255'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '::/256'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '::/+0'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '::/0-0'::ip6r;
2023-07-22 03:46:13.975 UTC [540400] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 03:46:13.975 UTC [540400] STATEMENT:  select '::-::/0'::ip6r;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '1.2.3' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '1.2.3'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '0' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '0'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: ' 1.2.3.4' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select ' 1.2.3.4'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '1.2.3.4 ' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '1.2.3.4 '::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '0.0.0.256' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '0.0.0.256'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '0.0.256' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '0.0.256'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '0..255.0' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '0..255.0'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '+0.255.0.0' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '+0.255.0.0'::ipaddress;
2023-07-22 03:46:13.980 UTC [540400] ERROR:  invalid IP value: '1.2.3.4-1.2.3.4' at character 8
2023-07-22 03:46:13.980 UTC [540400] STATEMENT:  select '1.2.3.4-1.2.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select ''::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '02001:0000:1234:0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333:4444::5555' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1.2.3.4:1111:2222:3333::5555' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1.2.3.4:1111:2222::5555' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222::5555'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1.2.3.4:1111::5555' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1.2.3.4:1111::5555'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1.2.3.4::' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1.2.3.4::'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1.2.3.4::5555' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1.2.3.4::5555'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1111:' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1111:'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1111:2222:3333:4444::5555:' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1111:2222:3333:4444::5555:'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1111:2222:3333::5555:' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1111:2222:3333::5555:'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1111:2222::5555:' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1111:2222::5555:'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1111::5555:' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1111::5555:'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '123' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '123'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '12345::6:7:8' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '12345::6:7:8'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1:2:3:4:5:6:7:8:9' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1:2:3::4:5:6:7:8:9' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1:2:3::4:5::7:8' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1:2:3::4:5::7:8'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.2.256.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.2.256.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.2.3.256' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.2.3.256'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.2.3.300' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.2.3.300'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.2.3.900' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.2.3.900'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.2.300.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.2.300.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.2.900.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.2.900.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.256.3.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.256.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.300.3.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.300.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::1.900.3.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::1.900.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::256.2.3.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::256.2.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::260.2.3.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::260.2.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::2::3' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::2::3'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::300.2.3.4' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::300.2.3.4'::ipaddress;
2023-07-22 03:46:13.981 UTC [540400] ERROR:  invalid IP value: '1::300.300.300.300' at character 8
2023-07-22 03:46:13.981 UTC [540400] STATEMENT:  select '1::300.300.300.300'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::3000.30.30.30' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::3000.30.30.30'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::400.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::400.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.2.256.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.2.256.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.2.3.256' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.2.3.256'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.2.3.300' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.2.3.300'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.2.3.900' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.2.3.900'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.2.300.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.2.300.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.2.900.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.2.900.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.256.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.256.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.300.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.300.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:1.900.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:1.900.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:256.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:256.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:260.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:260.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:300.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:300.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:300.300.300.300' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:300.300.300.300'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:3000.30.30.30' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:3000.30.30.30'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:400.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:400.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::5:900.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::5:900.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1::900.2.3.4' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1::900.2.3.4'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '1:::3:4:5' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '1:::3:4:5'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001:0000:1234: 0000:0000:C1C0:ABCD:0876' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001:0000:1234:0000:00001:C1C0:ABCD:0876' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001::FFD3::57ab' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001::FFD3::57ab'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001:DB8:0:0:8:800:200C:417A:221' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:37023:7334' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '2001:db8:85a3::8a2e:370k:7334' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '3ffe:0b00:0000:0001:0000:0000:000a' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: '3ffe:b00::1::a' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select '3ffe:b00::1::a'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: ':' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select ':'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: ':1111:2222:3333:4444::5555' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select ':1111:2222:3333:4444::5555'::ipaddress;
2023-07-22 03:46:13.982 UTC [540400] ERROR:  invalid IP value: ':1111:2222:3333::5555' at character 8
2023-07-22 03:46:13.982 UTC [540400] STATEMENT:  select ':1111:2222:3333::5555'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: ':1111:2222::5555' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select ':1111:2222::5555'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: ':1111::5555' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select ':1111::5555'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.2.256.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.2.256.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.2.3.256' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.2.3.256'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.2.3.300' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.2.3.300'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.2.3.900' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.2.3.900'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.2.300.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.2.300.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.2.900.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.2.900.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.256.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.256.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.300.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.300.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1.900.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1.900.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::1111:2222:3333:4444:5555:6666::' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::256.2.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::256.2.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::260.2.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::260.2.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::300.2.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::300.2.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::300.300.300.300' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::300.300.300.300'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::3000.30.30.30' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::3000.30.30.30'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::400.2.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::400.2.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::5555:' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::5555:'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::900.2.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::900.2.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: ':::' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select ':::'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: ':::5555' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select ':::5555'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::ffff:2.3.4' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::ffff:2.3.4'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: '::ffff:257.1.2.3' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select '::ffff:257.1.2.3'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: 'FF01::101::2' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select 'FF01::101::2'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: 'FF02:0000:0000:0000:0000:0000:0000:0000:0001' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::ipaddress;
2023-07-22 03:46:13.983 UTC [540400] ERROR:  invalid IP value: 'ldkfj' at character 8
2023-07-22 03:46:13.983 UTC [540400] STATEMENT:  select 'ldkfj'::ipaddress;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "1.2.3" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '1.2.3'::iprange;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255.255.255.255.255.255" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::iprange;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255.255-255.255.255.255.255" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::iprange;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3.4.5" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::iprange;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "255.255.255.255-1.2.3" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '255.255.255.255-1.2.3'::iprange;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/31" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '0.0.0.1/31'::iprange;
2023-07-22 03:46:13.987 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/30" at character 8
2023-07-22 03:46:13.987 UTC [540400] STATEMENT:  select '0.0.0.1/30'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/29" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/29'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/28" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/28'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/27" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/27'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/26" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/26'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/25" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/25'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/24" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/24'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/23" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/23'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/22" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/22'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/21" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/21'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/20" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/20'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/19" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/19'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/18" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/18'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/17" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/17'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/16" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/16'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/15" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/15'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/14" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/14'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/13" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/13'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/12" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/12'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/11" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/11'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/10" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/10'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/9" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/9'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/8" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/8'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/7" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/7'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/6" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/6'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/5" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/5'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/4" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/4'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/3" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/3'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/2" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/2'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/1" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/1'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.1/0" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.1/0'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.2/30" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.2/30'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.4/29" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.4/29'::iprange;
2023-07-22 03:46:13.988 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.8/28" at character 8
2023-07-22 03:46:13.988 UTC [540400] STATEMENT:  select '0.0.0.8/28'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.16/27" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.16/27'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.32/26" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.32/26'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.64/25" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.64/25'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.128/24" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.128/24'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.1.0/23" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.1.0/23'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.2.0/22" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.2.0/22'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.4.0/21" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.4.0/21'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.8.0/20" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.8.0/20'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.16.0/19" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.16.0/19'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.32.0/18" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.32.0/18'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.64.0/17" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.64.0/17'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.128.0/16" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.128.0/16'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.1.0.0/15" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.1.0.0/15'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.2.0.0/14" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.2.0.0/14'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.4.0.0/13" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.4.0.0/13'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.8.0.0/12" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.8.0.0/12'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.16.0.0/11" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.16.0.0/11'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.32.0.0/10" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.32.0.0/10'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.64.0.0/9" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.64.0.0/9'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.128.0.0/8" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.128.0.0/8'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "1.0.0.0/7" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '1.0.0.0/7'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "2.0.0.0/6" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '2.0.0.0/6'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "4.0.0.0/5" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '4.0.0.0/5'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "8.0.0.0/4" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '8.0.0.0/4'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "16.0.0.0/3" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '16.0.0.0/3'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "32.0.0.0/2" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '32.0.0.0/2'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "64.0.0.0/1" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '64.0.0.0/1'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "128.0.0.0/0" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '128.0.0.0/0'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.0/33" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.0/33'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.0/3.0" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.0/3.0'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP4R value: "0.0.0.0/+33" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '0.0.0.0/+33'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP6R value: "::-::-::" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select '::-::-::'::iprange;
2023-07-22 03:46:13.989 UTC [540400] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff" at character 8
2023-07-22 03:46:13.989 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::ip6r;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/127" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/120" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/112" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/96" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/80" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/64" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/48" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/32" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/16" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/8" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/4" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0001/0" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0008/124" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:0080/120" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:0000:8000/112" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:0000:8000:0000/96" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:0000:8000:0000:0000/80" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:0000:8000:0000:0000:0000/64" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:0000:8000:0000:0000:0000:0000/48" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:0000:8000:0000:0000:0000:0000:0000/32" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0000:8000:0000:0000:0000:0000:0000:0000/16" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0080:0000:0000:0000:0000:0000:0000:0000/8" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "0800:0000:0000:0000:0000:0000:0000:0000/4" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "8000:0000:0000:0000:0000:0000:0000:0000/0" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::/129" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::/129'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::/255" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::/255'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::/256" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::/256'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::/+0" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::/+0'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::/0-0" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::/0-0'::iprange;
2023-07-22 03:46:13.990 UTC [540400] ERROR:  invalid IP6R value: "::-::/0" at character 8
2023-07-22 03:46:13.990 UTC [540400] STATEMENT:  select '::-::/0'::iprange;
2023-07-22 03:46:13.991 UTC [540400] ERROR:  invalid IP6R value: "-::" at character 8
2023-07-22 03:46:13.991 UTC [540400] STATEMENT:  select '-::'::iprange;
2023-07-22 03:46:13.991 UTC [540400] ERROR:  invalid IP4R value: "-1.2.3.4" at character 8
2023-07-22 03:46:13.991 UTC [540400] STATEMENT:  select '-1.2.3.4'::iprange;
2023-07-22 03:46:13.991 UTC [540400] ERROR:  invalid IP4R value: "1.2.3.4-" at character 8
2023-07-22 03:46:13.991 UTC [540400] STATEMENT:  select '1.2.3.4-'::iprange;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '1.2.3'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '0'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select ' 1.2.3.4'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '1.2.3.4 '::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '0.0.0.256'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '0.0.256'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '0..255.0'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '+0.255.0.0'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4 value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ip4;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '1.2.3'::text::ip4r;
2023-07-22 03:46:14.005 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.005 UTC [540400] STATEMENT:  select '255.255.255.255.255.255.255.255.255'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '255.255.255.255.255-255.255.255.255.255'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '255.255.255.255-1.2.3.4.5'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '255.255.255.255-1.2.3'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/31'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/30'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/29'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/28'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/27'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/26'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/25'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/24'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/23'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/22'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/21'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/20'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/19'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/18'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/17'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/16'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/15'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/14'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/13'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/12'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/11'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/10'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/9'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/8'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/7'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/6'::text::ip4r;
2023-07-22 03:46:14.006 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.006 UTC [540400] STATEMENT:  select '0.0.0.1/5'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.1/4'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.1/3'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.1/2'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.1/1'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.1/0'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.2/30'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.4/29'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.8/28'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.16/27'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.32/26'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.64/25'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.0.128/24'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.1.0/23'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.2.0/22'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.4.0/21'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.8.0/20'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.16.0/19'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.32.0/18'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.64.0/17'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.0.128.0/16'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.1.0.0/15'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.2.0.0/14'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.4.0.0/13'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.8.0.0/12'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.16.0.0/11'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.32.0.0/10'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.64.0.0/9'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '0.128.0.0/8'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '1.0.0.0/7'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '2.0.0.0/6'::text::ip4r;
2023-07-22 03:46:14.007 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.007 UTC [540400] STATEMENT:  select '4.0.0.0/5'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '8.0.0.0/4'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '16.0.0.0/3'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '32.0.0.0/2'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '64.0.0.0/1'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '128.0.0.0/0'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '0.0.0.0/33'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '0.0.0.0/3.0'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP4R value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '0.0.0.0/+33'::text::ip4r;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select ''::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1.2.3.4:1111::5555'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1.2.3.4::'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1.2.3.4::5555'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1111:'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1111:2222:3333::5555:'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1111:2222::5555:'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1111::5555:'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '123'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '12345::6:7:8'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '127.0.0.1'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1:2:3::4:5::7:8'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1::1.2.256.4'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1::1.2.3.256'::text::ip6;
2023-07-22 03:46:14.008 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.008 UTC [540400] STATEMENT:  select '1::1.2.3.300'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::1.2.3.900'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::1.2.300.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::1.2.900.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::1.256.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::1.300.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::1.900.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::256.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::260.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::2::3'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::300.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::300.300.300.300'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::3000.30.30.30'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::400.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.2.256.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.2.3.256'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.2.3.300'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.2.3.900'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.2.300.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.2.900.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.256.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.300.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:1.900.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:256.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:260.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:300.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:300.300.300.300'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:3000.30.30.30'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:400.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::5:900.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1::900.2.3.4'::text::ip6;
2023-07-22 03:46:14.009 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.009 UTC [540400] STATEMENT:  select '1:::3:4:5'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001::FFD3::57ab'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '3ffe:b00::1::a'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select ':'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select ':1111:2222:3333::5555'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select ':1111:2222::5555'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select ':1111::5555'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.2.256.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.2.3.256'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.2.3.300'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.2.3.900'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.2.300.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.2.900.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.256.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.300.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1.900.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::256.2.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::260.2.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::300.2.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::300.300.300.300'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::3000.30.30.30'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::400.2.3.4'::text::ip6;
2023-07-22 03:46:14.010 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.010 UTC [540400] STATEMENT:  select '::5555:'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '::900.2.3.4'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select ':::'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select ':::5555'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '::ffff:2.3.4'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '::ffff:257.1.2.3'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select 'FF01::101::2'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6 value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select 'ldkfj'::text::ip6;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '::-::-::'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff-ffff'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '::-ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff-::'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/128'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/127'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/120'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/112'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/96'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/80'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/64'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/48'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/32'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/16'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/8'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/4'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0001/0'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0008/124'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:0080/120'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:0000:8000/112'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:0000:8000:0000/96'::text::ip6r;
2023-07-22 03:46:14.011 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.011 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:0000:8000:0000:0000/80'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0000:0000:0000:0000:8000:0000:0000:0000/64'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0000:0000:0000:8000:0000:0000:0000:0000/48'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0000:0000:8000:0000:0000:0000:0000:0000/32'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0000:8000:0000:0000:0000:0000:0000:0000/16'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0080:0000:0000:0000:0000:0000:0000:0000/8'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0800:0000:0000:0000:0000:0000:0000:0000/4'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '8000:0000:0000:0000:0000:0000:0000:0000/0'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '::/129'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '::/255'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '::/256'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '::/+0'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '::/0-0'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP6R value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '::-::/0'::text::ip6r;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select ' 1.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4 '::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0.0.0.256'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0.0.256'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '0..255.0'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '+0.255.0.0'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4-1.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select ''::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '02001:0000:1234:0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222:3333::5555'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4:1111:2222::5555'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4:1111::5555'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4::'::text::ipaddress;
2023-07-22 03:46:14.012 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.012 UTC [540400] STATEMENT:  select '1.2.3.4::5555'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1111:'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1111:2222:3333:4444::5555:'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1111:2222:3333::5555:'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1111:2222::5555:'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1111::5555:'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '123'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '12345::6:7:8'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1:2:3:4:5:6:7:8:9'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1:2:3::4:5:6:7:8:9'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1:2:3::4:5::7:8'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.2.256.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.2.3.256'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.2.3.300'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.2.3.900'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.2.300.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.2.900.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.256.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.300.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::1.900.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::256.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::260.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::2::3'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::300.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::300.300.300.300'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::3000.30.30.30'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::400.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::5:1.2.256.4'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::5:1.2.3.256'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::5:1.2.3.300'::text::ipaddress;
2023-07-22 03:46:14.013 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.013 UTC [540400] STATEMENT:  select '1::5:1.2.3.900'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:1.2.300.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:1.2.900.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:1.256.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:1.300.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:1.900.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:256.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:260.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:300.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:300.300.300.300'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:3000.30.30.30'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:400.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::5:900.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1::900.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '1:::3:4:5'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001:0000:1234: 0000:0000:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:00001:C1C0:ABCD:0876'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001:0000:1234:0000:0000:C1C0:ABCD:0876 0'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001::FFD3::57ab'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001:DB8:0:0:8:800:200C:417A:221'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:37023:7334'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '2001:db8:85a3::8a2e:370k:7334'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '3ffe:0b00:0000:0001:0000:0000:000a'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '3ffe:b00::1::a'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select ':'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select ':1111:2222:3333:4444::5555'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select ':1111:2222:3333::5555'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select ':1111:2222::5555'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select ':1111::5555'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '::1.2.256.4'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '::1.2.3.256'::text::ipaddress;
2023-07-22 03:46:14.014 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.014 UTC [540400] STATEMENT:  select '::1.2.3.300'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1.2.3.900'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1.2.300.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1.2.900.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1.256.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1.300.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1.900.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::1111:2222:3333:4444:5555:6666::'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::256.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::260.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::300.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::300.300.300.300'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::3000.30.30.30'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::400.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::5555:'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::900.2.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select ':::'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select ':::5555'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::ffff:2.3.4'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select '::ffff:257.1.2.3'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select 'FF01::101::2'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select 'FF02:0000:0000:0000:0000:0000:0000:0000:0001'::text::ipaddress;
2023-07-22 03:46:14.015 UTC [540400] ERROR:  invalid IP value in text
2023-07-22 03:46:14.015 UTC [540400] STATEMENT:  select 'ldkfj'::text::ipaddress;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select (-4294967295::bigint)::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select (4294967296::bigint)::ip4;
2023-07-22 03:46:14.018 UTC [540400] WARNING:  double converted to IP4 is not integral
2023-07-22 03:46:14.018 UTC [540400] WARNING:  double converted to IP4 is not integral
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select (-4294967295::float8)::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select (4294967296::float8)::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select (-3000000000::float8)::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select 6000000000::float8::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select 6e10::float8::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select 6e30::float8::ip4;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select (-1::numeric)::ip6;
2023-07-22 03:46:14.018 UTC [540400] ERROR:  numeric value too large for conversion to IP6
2023-07-22 03:46:14.018 UTC [540400] STATEMENT:  select 340282366920938463463374607431768211456::numeric::ip6;
2023-07-22 03:46:14.019 UTC [540400] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 03:46:14.019 UTC [540400] STATEMENT:  select 0.1::numeric::ip6;
2023-07-22 03:46:14.019 UTC [540400] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 03:46:14.019 UTC [540400] STATEMENT:  select 0.00000000000000000001::numeric::ip6;
2023-07-22 03:46:14.019 UTC [540400] ERROR:  invalid numeric value for conversion to IP6
2023-07-22 03:46:14.019 UTC [540400] STATEMENT:  select (-0.00000000000000000001::numeric)::ip6;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid INET value for conversion to IP4
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '::'::inet::ip4;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid INET value for conversion to IP6
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '0.0.0.0'::inet::ip6;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid CIDR value for conversion to IP4R
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '::/128'::cidr::ip4r;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid CIDR value for conversion to IP6R
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '0.0.0.0/32'::cidr::ip6r;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid IPR value for conversion to IP4R
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '::/0'::iprange::ip4r;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid IPR value for conversion to IP6R
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '0.0.0.0/0'::iprange::ip6r;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid IP value in cast to IP4
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '::'::ipaddress::ip4;
2023-07-22 03:46:14.021 UTC [540400] ERROR:  invalid IP value in cast to IP4
2023-07-22 03:46:14.021 UTC [540400] STATEMENT:  select '0.0.0.0'::ipaddress::ip6;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'0102030')::ip4;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IP4
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'0102030405')::ip4;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ip6;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IP6
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ip6;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'0102030')::ipaddress;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'0102030405')::ipaddress;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff')::ipaddress;
2023-07-22 03:46:14.022 UTC [540400] ERROR:  invalid BIT value for conversion to IPADDRESS
2023-07-22 03:46:14.022 UTC [540400] STATEMENT:  select (x'fff0fff1fff2fff3000000000000fff4f')::ipaddress;
2023-07-22 03:46:14.023 UTC [540400] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 03:46:14.023 UTC [540400] STATEMENT:  select (decode('010203','hex'))::ip4;
2023-07-22 03:46:14.023 UTC [540400] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 03:46:14.023 UTC [540400] STATEMENT:  select (decode('0102030405','hex'))::ip4;
2023-07-22 03:46:14.023 UTC [540400] ERROR:  invalid BYTEA value for conversion to IP4
2023-07-22 03:46:14.023 UTC [540400] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ip6;
2023-07-22 03:46:14.023 UTC [540400] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 03:46:14.023 UTC [540400] STATEMENT:  select (decode('0102030405','hex'))::ipaddress;
2023-07-22 03:46:14.023 UTC [540400] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 03:46:14.023 UTC [540400] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ff','hex'))::ipaddress;
2023-07-22 03:46:14.023 UTC [540400] ERROR:  invalid BYTEA value for conversion to IPADDRESS
2023-07-22 03:46:14.023 UTC [540400] STATEMENT:  select (decode('fff0fff1fff2fff3000000000000ffffff','hex'))::ipaddress;
2023-07-22 03:46:14.024 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.024 UTC [540400] STATEMENT:  select ip4_netmask(33);
2023-07-22 03:46:14.024 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.024 UTC [540400] STATEMENT:  select ip4_netmask(-1);
2023-07-22 03:46:14.024 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.024 UTC [540400] STATEMENT:  select ip6_netmask(129);
2023-07-22 03:46:14.024 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.024 UTC [540400] STATEMENT:  select ip6_netmask(-1);
2023-07-22 03:46:14.026 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.026 UTC [540400] STATEMENT:  select ip4_net_lower('255.255.255.255',33);
2023-07-22 03:46:14.026 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.026 UTC [540400] STATEMENT:  select ip4_net_lower('255.255.255.255',-1);
2023-07-22 03:46:14.026 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.026 UTC [540400] STATEMENT:  select ip4_net_upper('0.0.0.0',33);
2023-07-22 03:46:14.026 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.026 UTC [540400] STATEMENT:  select ip4_net_upper('0.0.0.0',-1);
2023-07-22 03:46:14.026 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.026 UTC [540400] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 03:46:14.026 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.026 UTC [540400] STATEMENT:  select ip6_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ip6_net_upper('::',129);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ip6_net_upper('::',-1);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ipaddress_net_lower('255.255.255.255',33);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ipaddress_net_lower('255.255.255.255',-1);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ipaddress_net_upper('0.0.0.0',33);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ipaddress_net_upper('0.0.0.0',-1);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',129);
2023-07-22 03:46:14.027 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.027 UTC [540400] STATEMENT:  select ipaddress_net_lower('ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',-1);
2023-07-22 03:46:14.028 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.028 UTC [540400] STATEMENT:  select ipaddress_net_upper('::',129);
2023-07-22 03:46:14.028 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.028 UTC [540400] STATEMENT:  select ipaddress_net_upper('::',-1);
2023-07-22 03:46:14.030 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.030 UTC [540400] STATEMENT:  select ip4 '255.255.255.255' / 33;
2023-07-22 03:46:14.031 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip4 '255.255.255.255' / -1;
2023-07-22 03:46:14.031 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip4 '255.255.255.255' / ip4 '0.255.255.255';
2023-07-22 03:46:14.031 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip4 '255.255.255.255' / ip4 '255.254.255.255';
2023-07-22 03:46:14.031 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 03:46:14.031 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 03:46:14.031 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 03:46:14.031 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ip6 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ip6 'ffff:ffff:ffff::ffff';
2023-07-22 03:46:14.031 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ipaddress '255.255.255.255' / 33;
2023-07-22 03:46:14.031 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.031 UTC [540400] STATEMENT:  select ipaddress '255.255.255.255' / -1;
2023-07-22 03:46:14.032 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / 129;
2023-07-22 03:46:14.032 UTC [540400] ERROR:  prefix length out of range
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / -1;
2023-07-22 03:46:14.032 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '0.255.255.255';
2023-07-22 03:46:14.032 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '255.254.255.255';
2023-07-22 03:46:14.032 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff:ffff:ffff::ffff';
2023-07-22 03:46:14.032 UTC [540400] ERROR:  invalid netmask
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress 'ffff:ffff:ffff::ffff';
2023-07-22 03:46:14.032 UTC [540400] ERROR:  invalid mixing of IP address families
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff' / ipaddress '0.0.0.0';
2023-07-22 03:46:14.032 UTC [540400] ERROR:  invalid mixing of IP address families
2023-07-22 03:46:14.032 UTC [540400] STATEMENT:  select ipaddress '255.255.255.255' / ipaddress '::';
2023-07-22 03:46:14.034 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.034 UTC [540400] STATEMENT:  select a + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.034 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.034 UTC [540400] STATEMENT:  select a::ipaddress + 1 from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.034 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.034 UTC [540400] STATEMENT:  select a - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.034 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.034 UTC [540400] STATEMENT:  select a::ipaddress - 1 from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a::ipaddress + 1::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a::ipaddress + 4294967296::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a::ipaddress - 1::bigint from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a::ipaddress + 1::numeric from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a::ipaddress + 4294967296::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.035 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.035 UTC [540400] STATEMENT:  select a - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.036 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.036 UTC [540400] STATEMENT:  select a::ipaddress - 1::numeric from (select ip4 '0.0.0.0' as a) s;
2023-07-22 03:46:14.036 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.036 UTC [540400] STATEMENT:  select a - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:14.036 UTC [540400] ERROR:  ip address out of range
2023-07-22 03:46:14.036 UTC [540400] STATEMENT:  select a::ipaddress - 4294967296::bigint from (select ip4 '255.255.255.255' as a) s;
2023-07-22 03:46:15.278 UTC [540407] ERROR:  invalid preceding or following size in window function
2023-07-22 03:46:15.278 UTC [540407] DETAIL:  Offset value -33 is outside the range -32 to 4294967295
2023-07-22 03:46:15.278 UTC [540407] STATEMENT:  select a4,
	       array_agg(a4) over (order by a4 range between -33 preceding and -33 following)
	  from ipaddrs
	 where a4 is not null;
2023-07-22 03:46:15.278 UTC [540407] ERROR:  invalid preceding or following size in window function
2023-07-22 03:46:15.278 UTC [540407] DETAIL:  Offset value -129 is outside the range -128 to 2^63-1
2023-07-22 03:46:15.278 UTC [540407] STATEMENT:  select a6,
	       array_agg(a6) over (order by a6 range between -129 preceding and -129 following)
	  from ipaddrs
	 where a6 is not null;
2023-07-22 03:46:15.285 UTC [540382] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:15.420 UTC [540382] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.017 s, sync=0.014 s, total=0.135 s; sync files=7, longest=0.008 s, average=0.002 s; distance=11246 kB, estimate=11246 kB
2023-07-22 03:46:15.790 UTC [540433] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:46:15.790 UTC [540433] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:46:48.224 UTC [540382] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:46:48.394 UTC [540382] LOG:  checkpoint complete: wrote 946 buffers (5.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.032 s, sync=0.039 s, total=0.171 s; sync files=251, longest=0.019 s, average=0.001 s; distance=138263 kB, estimate=138263 kB
2023-07-22 03:46:48.510 UTC [540450] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:46:48.510 UTC [540450] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:47:20.212 UTC [540382] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:20.323 UTC [540382] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.016 s, sync=0.011 s, total=0.112 s; sync files=4, longest=0.007 s, average=0.003 s; distance=133362 kB, estimate=137773 kB
2023-07-22 03:47:20.389 UTC [540381] LOG:  received fast shutdown request
2023-07-22 03:47:20.397 UTC [540381] LOG:  aborting any active transactions
2023-07-22 03:47:20.398 UTC [540381] LOG:  background worker "logical replication launcher" (PID 540387) exited with exit code 1
2023-07-22 03:47:20.398 UTC [540382] LOG:  shutting down
2023-07-22 03:47:20.405 UTC [540382] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:47:20.450 UTC [540382] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.003 s, total=0.053 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123996 kB
2023-07-22 03:47:20.471 UTC [540381] LOG:  database system is shut down
2023-07-22 03:47:21.213 UTC [540493] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:47:21.214 UTC [540493] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:47:21.228 UTC [540493] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:47:21.244 UTC [540496] LOG:  database system was shut down at 2023-07-22 03:47:20 UTC
2023-07-22 03:47:21.255 UTC [540493] LOG:  database system is ready to accept connections
2023-07-22 03:47:21.424 UTC [540512] ERROR:  invalid check digit for ISBN number: "1234567890", should be X at character 8
2023-07-22 03:47:21.424 UTC [540512] STATEMENT:  SELECT '1234567890'::ISBN;
2023-07-22 03:47:21.424 UTC [540512] ERROR:  invalid check digit for ISMN number: "M123456780", should be 5 at character 8
2023-07-22 03:47:21.424 UTC [540512] STATEMENT:  SELECT 'M123456780'::ISMN;
2023-07-22 03:47:21.425 UTC [540512] ERROR:  invalid check digit for ISSN number: "12345670", should be 9 at character 8
2023-07-22 03:47:21.425 UTC [540512] STATEMENT:  SELECT '12345670'::ISSN;
2023-07-22 03:47:21.425 UTC [540512] ERROR:  invalid check digit for ISBN number: "9780123456780", should be 6 at character 8
2023-07-22 03:47:21.425 UTC [540512] STATEMENT:  SELECT '9780123456780'::ISBN;
2023-07-22 03:47:21.425 UTC [540512] ERROR:  invalid check digit for ISBN number: "9791234567890", should be 6 at character 8
2023-07-22 03:47:21.425 UTC [540512] STATEMENT:  SELECT '9791234567890'::ISBN13;
2023-07-22 03:47:21.425 UTC [540512] ERROR:  invalid check digit for UPC number: "0123456789010", should be 2 at character 8
2023-07-22 03:47:21.425 UTC [540512] STATEMENT:  SELECT '0123456789010'::UPC;
2023-07-22 03:47:21.425 UTC [540512] ERROR:  invalid check digit for EAN13 number: "1234567890120", should be 8 at character 8
2023-07-22 03:47:21.425 UTC [540512] STATEMENT:  SELECT '1234567890120'::EAN13;
2023-07-22 03:47:21.425 UTC [540512] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 03:47:21.425 UTC [540512] STATEMENT:  SELECT '9790123456785'::ISBN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9771234567898'::ISBN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '0123456789012'::ISBN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISMN to ISBN for number: "9790123456785" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9790123456785'::ISBN13;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISSN to ISBN for number: "9771234567898" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9771234567898'::ISBN13;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast UPC to ISBN for number: "0123456789012" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '0123456789012'::ISBN13;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISBN to ISMN for number: "9780123456786" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9780123456786'::ISMN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISSN to ISMN for number: "9771234567898" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9771234567898'::ISMN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISBN to ISMN for number: "9791234567896" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9791234567896'::ISMN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast UPC to ISMN for number: "0123456789012" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '0123456789012'::ISMN;
2023-07-22 03:47:21.426 UTC [540512] ERROR:  cannot cast ISBN to ISSN for number: "9780123456786" at character 8
2023-07-22 03:47:21.426 UTC [540512] STATEMENT:  SELECT '9780123456786'::ISSN;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast ISMN to ISSN for number: "9790123456785" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '9790123456785'::ISSN;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast ISBN to ISSN for number: "9791234567896" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '9791234567896'::ISSN;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast UPC to ISSN for number: "0123456789012" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '0123456789012'::ISSN;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast ISBN to UPC for number: "9780123456786" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '9780123456786'::UPC;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast ISSN to UPC for number: "9771234567898" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '9771234567898'::UPC;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast ISMN to UPC for number: "9790123456785" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '9790123456785'::UPC;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast ISBN to UPC for number: "9791234567896" at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT '9791234567896'::UPC;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  invalid input syntax for EAN13 number: "postgresql..." at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT 'postgresql...'::EAN13;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  invalid input syntax for ISBN number: "postgresql..." at character 8
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT 'postgresql...'::ISBN;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast type bigint to ean13 at character 21
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT 9780123456786::EAN13;
2023-07-22 03:47:21.427 UTC [540512] ERROR:  cannot cast type bigint to isbn at character 21
2023-07-22 03:47:21.427 UTC [540512] STATEMENT:  SELECT 9780123456786::ISBN;
2023-07-22 03:47:21.460 UTC [540494] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:21.525 UTC [540494] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.014 s, total=0.065 s; sync files=7, longest=0.008 s, average=0.002 s; distance=5245 kB, estimate=5245 kB
2023-07-22 03:47:21.979 UTC [540538] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:47:21.979 UTC [540538] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:47:54.389 UTC [540494] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:47:54.559 UTC [540494] LOG:  checkpoint complete: wrote 954 buffers (5.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.034 s, sync=0.045 s, total=0.170 s; sync files=251, longest=0.019 s, average=0.001 s; distance=138687 kB, estimate=138687 kB
2023-07-22 03:47:54.689 UTC [540555] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:47:54.689 UTC [540555] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:48:26.513 UTC [540494] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:26.816 UTC [540494] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.011 s, total=0.304 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133534 kB, estimate=138172 kB
2023-07-22 03:48:26.883 UTC [540493] LOG:  received fast shutdown request
2023-07-22 03:48:26.890 UTC [540493] LOG:  aborting any active transactions
2023-07-22 03:48:26.891 UTC [540493] LOG:  background worker "logical replication launcher" (PID 540499) exited with exit code 1
2023-07-22 03:48:26.891 UTC [540494] LOG:  shutting down
2023-07-22 03:48:26.898 UTC [540494] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:48:26.935 UTC [540494] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.044 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=124354 kB
2023-07-22 03:48:26.981 UTC [540493] LOG:  database system is shut down
2023-07-22 03:48:27.704 UTC [540598] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:48:27.705 UTC [540598] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:48:27.717 UTC [540598] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:48:27.735 UTC [540601] LOG:  database system was shut down at 2023-07-22 03:48:27 UTC
2023-07-22 03:48:27.744 UTC [540598] LOG:  database system is ready to accept connections
2023-07-22 03:48:27.934 UTC [540617] ERROR:  large object 43213 does not exist
2023-07-22 03:48:27.934 UTC [540617] STATEMENT:  SELECT lo_get(43213);
2023-07-22 03:48:27.941 UTC [540617] ERROR:  large object 43214 does not exist
2023-07-22 03:48:27.941 UTC [540617] STATEMENT:  SELECT lo_get(43214);
2023-07-22 03:48:27.968 UTC [540599] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:48:28.037 UTC [540599] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.018 s, sync=0.015 s, total=0.069 s; sync files=7, longest=0.008 s, average=0.002 s; distance=4027 kB, estimate=4027 kB
2023-07-22 03:48:28.396 UTC [540643] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:48:28.396 UTC [540643] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:49:00.869 UTC [540599] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:01.036 UTC [540599] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.040 s, sync=0.037 s, total=0.167 s; sync files=251, longest=0.007 s, average=0.001 s; distance=136543 kB, estimate=136543 kB
2023-07-22 03:49:01.162 UTC [540660] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:49:01.162 UTC [540660] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:49:32.833 UTC [540599] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:33.354 UTC [540599] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.522 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132507 kB, estimate=136139 kB
2023-07-22 03:49:33.397 UTC [540598] LOG:  received fast shutdown request
2023-07-22 03:49:33.405 UTC [540598] LOG:  aborting any active transactions
2023-07-22 03:49:33.405 UTC [540598] LOG:  background worker "logical replication launcher" (PID 540604) exited with exit code 1
2023-07-22 03:49:33.405 UTC [540599] LOG:  shutting down
2023-07-22 03:49:33.413 UTC [540599] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:49:33.452 UTC [540599] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.047 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122525 kB
2023-07-22 03:49:33.474 UTC [540598] LOG:  database system is shut down
2023-07-22 03:49:34.234 UTC [540703] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:49:34.234 UTC [540703] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:49:34.249 UTC [540703] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:49:34.263 UTC [540706] LOG:  database system was shut down at 2023-07-22 03:49:33 UTC
2023-07-22 03:49:34.272 UTC [540703] LOG:  database system is ready to accept connections
2023-07-22 03:49:34.440 UTC [540732] ERROR:  function blah() does not exist at character 8
2023-07-22 03:49:34.440 UTC [540732] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:49:34.440 UTC [540732] STATEMENT:  SELECT blah();
2023-07-22 03:49:44.445 UTC [540732] ERROR:  XXXXX
2023-07-22 03:49:44.445 UTC [540732] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 03:49:44.445 UTC [540732] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXX';
	END;
	$$;
2023-07-22 03:49:44.445 UTC [540732] ERROR:  XXXXY
2023-07-22 03:49:44.445 UTC [540732] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 03:49:44.445 UTC [540732] STATEMENT:  DO LANGUAGE plpgsql $$
	BEGIN
	    RAISE SQLSTATE 'XXXXY';
	END;
	$$;
2023-07-22 03:49:49.476 UTC [540704] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:49:49.538 UTC [540704] LOG:  checkpoint complete: wrote 18 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.020 s, sync=0.015 s, total=0.063 s; sync files=14, longest=0.008 s, average=0.002 s; distance=4017 kB, estimate=4017 kB
2023-07-22 03:49:49.746 UTC [540758] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:49:49.746 UTC [540758] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:50:21.175 UTC [540704] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:50:21.337 UTC [540704] LOG:  checkpoint complete: wrote 773 buffers (4.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.035 s, sync=0.085 s, total=0.162 s; sync files=251, longest=0.004 s, average=0.001 s; distance=140529 kB, estimate=140529 kB
2023-07-22 03:50:21.444 UTC [540777] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:50:21.444 UTC [540777] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:50:52.623 UTC [540704] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:50:52.672 UTC [540704] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.049 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138013 kB, estimate=140277 kB
2023-07-22 03:50:52.738 UTC [540703] LOG:  received fast shutdown request
2023-07-22 03:50:52.741 UTC [540703] LOG:  aborting any active transactions
2023-07-22 03:50:52.743 UTC [540703] LOG:  background worker "logical replication launcher" (PID 540710) exited with exit code 1
2023-07-22 03:50:52.743 UTC [540704] LOG:  shutting down
2023-07-22 03:50:52.746 UTC [540704] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:50:52.765 UTC [540704] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.022 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126250 kB
2023-07-22 03:50:52.807 UTC [540703] LOG:  database system is shut down
2023-07-22 03:50:53.408 UTC [540820] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:50:53.408 UTC [540820] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:50:53.415 UTC [540820] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:50:53.424 UTC [540823] LOG:  database system was shut down at 2023-07-22 03:50:53 UTC
2023-07-22 03:50:53.432 UTC [540820] LOG:  database system is ready to accept connections
2023-07-22 03:50:53.585 UTC [540839] LOG:  lsm3_build lsm3_index
2023-07-22 03:50:53.585 UTC [540839] STATEMENT:  create index lsm3_index on t using lsm3(k);
2023-07-22 03:50:54.809 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 03:50:54.810 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 03:50:55.664 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 03:50:55.665 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 03:50:56.675 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 03:50:56.675 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 03:50:57.685 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top1 with size 2 blocks
2023-07-22 03:50:57.686 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 03:50:58.696 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top0 with size 2 blocks
2023-07-22 03:50:58.696 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 03:50:59.830 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 03:50:59.973 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top1
2023-07-22 03:51:00.042 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top0 with size 250 blocks
2023-07-22 03:51:00.169 UTC [540840] LOG:  Lsm3: truncate index lsm3_index_top0
2023-07-22 03:51:00.231 UTC [540840] LOG:  Lsm3: merge top index lsm3_index_top1 with size 181 blocks
2023-07-22 03:51:00.308 UTC [540839] LOG:  lsm3_build lsm3_index
2023-07-22 03:51:00.308 UTC [540839] STATEMENT:  truncate table t;
2023-07-22 03:51:01.309 UTC [540840] ERROR:  deadlock detected
2023-07-22 03:51:01.309 UTC [540840] DETAIL:  Process 540840 waits for AccessShareLock on relation 17041 of database 16384; blocked by process 540839.
	Process 540839 waits for AccessExclusiveLock on relation 17046 of database 16384; blocked by process 540840.
	Process 540840: truncate
	Process 540839: truncate table t;
2023-07-22 03:51:01.309 UTC [540840] HINT:  See server log for query details.
2023-07-22 03:51:01.313 UTC [540820] LOG:  background worker "lsm3-merger-17044" (PID 540840) exited with exit code 1
2023-07-22 03:51:03.304 UTC [540839] LOG:  lsm3_build lsm3_index
2023-07-22 03:51:03.304 UTC [540839] STATEMENT:  reindex table t;
2023-07-22 03:51:04.405 UTC [540839] LOG:  lsm3_build lsm_k_idx
2023-07-22 03:51:04.405 UTC [540839] STATEMENT:  create index concurrently on lsm using lsm3(k);
2023-07-22 03:51:05.206 UTC [540866] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:51:05.206 UTC [540866] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:51:36.611 UTC [540821] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:51:36.771 UTC [540821] LOG:  checkpoint complete: wrote 1257 buffers (7.7%); 0 WAL file(s) added, 0 removed, 26 recycled; write=0.027 s, sync=0.036 s, total=0.160 s; sync files=504, longest=0.003 s, average=0.001 s; distance=425193 kB, estimate=425193 kB
2023-07-22 03:51:36.880 UTC [540884] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:51:36.880 UTC [540884] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:52:08.092 UTC [540821] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:08.142 UTC [540821] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.050 s; sync files=4, longest=0.003 s, average=0.001 s; distance=138801 kB, estimate=396553 kB
2023-07-22 03:52:08.206 UTC [540820] LOG:  received fast shutdown request
2023-07-22 03:52:08.209 UTC [540820] LOG:  aborting any active transactions
2023-07-22 03:52:08.210 UTC [540820] LOG:  background worker "logical replication launcher" (PID 540826) exited with exit code 1
2023-07-22 03:52:08.212 UTC [540821] LOG:  shutting down
2023-07-22 03:52:08.215 UTC [540821] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:52:08.232 UTC [540821] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=356898 kB
2023-07-22 03:52:08.254 UTC [540820] LOG:  database system is shut down
2023-07-22 03:52:08.919 UTC [540927] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:52:08.919 UTC [540927] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:52:08.925 UTC [540927] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:52:08.934 UTC [540930] LOG:  database system was shut down at 2023-07-22 03:52:08 UTC
2023-07-22 03:52:08.942 UTC [540927] LOG:  database system is ready to accept connections
2023-07-22 03:52:09.114 UTC [540946] ERROR:  ltree syntax error at character 1 at character 8
2023-07-22 03:52:09.114 UTC [540946] STATEMENT:  SELECT '.2.3'::ltree;
2023-07-22 03:52:09.114 UTC [540946] ERROR:  ltree syntax error at character 3 at character 8
2023-07-22 03:52:09.114 UTC [540946] STATEMENT:  SELECT '1..3'::ltree;
2023-07-22 03:52:09.114 UTC [540946] ERROR:  ltree syntax error at character 8
2023-07-22 03:52:09.114 UTC [540946] DETAIL:  Unexpected end of input.
2023-07-22 03:52:09.114 UTC [540946] STATEMENT:  SELECT '1.2.'::ltree;
2023-07-22 03:52:09.114 UTC [540946] ERROR:  label string is too long
2023-07-22 03:52:09.114 UTC [540946] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 03:52:09.114 UTC [540946] STATEMENT:  SELECT repeat('x', 256)::ltree;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '.2.3'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1..3'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 8
2023-07-22 03:52:09.118 UTC [540946] DETAIL:  Unexpected end of input.
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1.2.'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 1 at character 8
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '@.2.3'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 3 at character 8
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1.@.3'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 5 at character 8
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1.2.@'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 2 at character 8
2023-07-22 03:52:09.118 UTC [540946] DETAIL:  Empty labels are not allowed.
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '!.2.3'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 4 at character 8
2023-07-22 03:52:09.118 UTC [540946] DETAIL:  Empty labels are not allowed.
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1.!.3'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 6 at character 8
2023-07-22 03:52:09.118 UTC [540946] DETAIL:  Empty labels are not allowed.
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1.2.!'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  lquery syntax error at character 7 at character 8
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT '1.2.3|@.4'::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  label string is too long
2023-07-22 03:52:09.118 UTC [540946] DETAIL:  Label length is 256, must be at most 255, at character 257.
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT (repeat('x', 256) || '*@@*')::lquery;
2023-07-22 03:52:09.118 UTC [540946] ERROR:  label string is too long
2023-07-22 03:52:09.118 UTC [540946] DETAIL:  Label length is 256, must be at most 255, at character 258.
2023-07-22 03:52:09.118 UTC [540946] STATEMENT:  SELECT ('!' || repeat('x', 256))::lquery;
2023-07-22 03:52:09.123 UTC [540946] ERROR:  number of ltree labels (65536) exceeds the maximum allowed (65535)
2023-07-22 03:52:09.123 UTC [540946] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65535))::ltree);
2023-07-22 03:52:09.127 UTC [540946] ERROR:  number of ltree levels (65536) exceeds the maximum allowed (65535)
2023-07-22 03:52:09.127 UTC [540946] STATEMENT:  SELECT nlevel(('1' || repeat('.1', 65534))::ltree || '1');
2023-07-22 03:52:09.135 UTC [540946] ERROR:  number of lquery items (65536) exceeds the maximum allowed (65535)
2023-07-22 03:52:09.135 UTC [540946] STATEMENT:  SELECT ('1' || repeat('.1', 65535))::lquery IS NULL;
2023-07-22 03:52:09.135 UTC [540946] ERROR:  lquery syntax error at character 8
2023-07-22 03:52:09.135 UTC [540946] DETAIL:  Low limit (65536) exceeds the maximum allowed (65535), at character 3.
2023-07-22 03:52:09.135 UTC [540946] STATEMENT:  SELECT '*{65536}'::lquery;
2023-07-22 03:52:09.135 UTC [540946] ERROR:  lquery syntax error at character 8
2023-07-22 03:52:09.135 UTC [540946] DETAIL:  High limit (65536) exceeds the maximum allowed (65535), at character 4.
2023-07-22 03:52:09.135 UTC [540946] STATEMENT:  SELECT '*{,65536}'::lquery;
2023-07-22 03:52:09.135 UTC [540946] ERROR:  lquery syntax error at character 8
2023-07-22 03:52:09.135 UTC [540946] DETAIL:  Low limit (4) is greater than high limit (3), at character 5.
2023-07-22 03:52:09.135 UTC [540946] STATEMENT:  SELECT '*{4,3}'::lquery;
2023-07-22 03:52:09.211 UTC [540946] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 03:52:09.211 UTC [540946] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 03:52:09.211 UTC [540946] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=0));
2023-07-22 03:52:09.211 UTC [540946] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 03:52:09.211 UTC [540946] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 03:52:09.211 UTC [540946] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2025));
2023-07-22 03:52:09.211 UTC [540946] ERROR:  value 2028 out of bounds for option "siglen"
2023-07-22 03:52:09.211 UTC [540946] DETAIL:  Valid values are between "4" and "2024".
2023-07-22 03:52:09.211 UTC [540946] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2028));
2023-07-22 03:52:09.212 UTC [540946] ERROR:  siglen value must be a multiple of 4
2023-07-22 03:52:09.212 UTC [540946] STATEMENT:  create index tstidx on ltreetest using gist (t gist_ltree_ops(siglen=2019));
2023-07-22 03:52:09.245 UTC [540946] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 03:52:09.245 UTC [540946] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:52:09.245 UTC [540946] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=0));
2023-07-22 03:52:09.246 UTC [540946] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 03:52:09.246 UTC [540946] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 03:52:09.246 UTC [540946] STATEMENT:  create index _tstidx on _ltreetest using gist (t gist__ltree_ops(siglen=2025));
2023-07-22 03:52:09.345 UTC [540928] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:09.425 UTC [540928] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.005 s, total=0.081 s; sync files=7, longest=0.003 s, average=0.001 s; distance=8957 kB, estimate=8957 kB
2023-07-22 03:52:09.628 UTC [540972] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:52:09.628 UTC [540972] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:52:41.121 UTC [540928] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:52:41.211 UTC [540928] LOG:  checkpoint complete: wrote 916 buffers (5.6%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.022 s, sync=0.023 s, total=0.090 s; sync files=251, longest=0.006 s, average=0.001 s; distance=141570 kB, estimate=141570 kB
2023-07-22 03:52:41.316 UTC [540990] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:52:41.316 UTC [540990] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:53:12.474 UTC [540928] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:53:12.524 UTC [540928] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.008 s, sync=0.004 s, total=0.051 s; sync files=4, longest=0.003 s, average=0.001 s; distance=137330 kB, estimate=141146 kB
2023-07-22 03:53:12.591 UTC [540927] LOG:  received fast shutdown request
2023-07-22 03:53:12.593 UTC [540927] LOG:  aborting any active transactions
2023-07-22 03:53:12.594 UTC [540927] LOG:  background worker "logical replication launcher" (PID 540933) exited with exit code 1
2023-07-22 03:53:12.594 UTC [540928] LOG:  shutting down
2023-07-22 03:53:12.597 UTC [540928] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:53:12.614 UTC [540928] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.020 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=127031 kB
2023-07-22 03:53:12.638 UTC [540927] LOG:  database system is shut down
2023-07-22 03:53:13.241 UTC [541032] FATAL:  could not access file "oid2name": No such file or directory
2023-07-22 03:53:13.241 UTC [541032] LOG:  database system is shut down
2023-07-22 03:53:13.940 UTC [541065] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:53:13.940 UTC [541065] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:53:13.946 UTC [541065] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:53:13.954 UTC [541068] LOG:  database system was shut down at 2023-07-22 03:53:13 UTC
2023-07-22 03:53:13.959 UTC [541065] LOG:  database system is ready to accept connections
2023-07-22 03:53:14.228 UTC [541095] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:53:14.228 UTC [541095] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:53:45.603 UTC [541066] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:53:45.704 UTC [541066] LOG:  checkpoint complete: wrote 499 buffers (3.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.041 s, total=0.102 s; sync files=252, longest=0.004 s, average=0.001 s; distance=141066 kB, estimate=141066 kB
2023-07-22 03:53:45.788 UTC [541113] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:53:45.788 UTC [541113] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:54:16.949 UTC [541066] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:54:17.062 UTC [541066] LOG:  checkpoint complete: wrote 8 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.016 s, sync=0.011 s, total=0.114 s; sync files=4, longest=0.008 s, average=0.003 s; distance=134188 kB, estimate=140378 kB
2023-07-22 03:54:17.130 UTC [541065] LOG:  received fast shutdown request
2023-07-22 03:54:17.138 UTC [541065] LOG:  aborting any active transactions
2023-07-22 03:54:17.138 UTC [541065] LOG:  background worker "logical replication launcher" (PID 541071) exited with exit code 1
2023-07-22 03:54:17.139 UTC [541066] LOG:  shutting down
2023-07-22 03:54:17.146 UTC [541066] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:54:17.181 UTC [541066] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.043 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126340 kB
2023-07-22 03:54:17.208 UTC [541065] LOG:  database system is shut down
2023-07-22 03:54:17.906 UTC [541156] FATAL:  could not access file "oracle_fdw": No such file or directory
2023-07-22 03:54:17.906 UTC [541156] LOG:  database system is shut down
2023-07-22 03:54:18.729 UTC [541189] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:54:18.729 UTC [541189] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:54:18.740 UTC [541189] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:54:18.754 UTC [541192] LOG:  database system was shut down at 2023-07-22 03:54:18 UTC
2023-07-22 03:54:18.764 UTC [541189] LOG:  database system is ready to accept connections
2023-07-22 03:54:23.211 UTC [541214] ERROR:  insufficient privilege
2023-07-22 03:54:23.211 UTC [541214] DETAIL:  Insufficient privilege to access pipe
2023-07-22 03:54:23.211 UTC [541214] CONTEXT:  SQL statement "SELECT dbms_pipe.receive_message(pipename,2)"
	PL/pgSQL function receivefrom(text) line 6 at PERFORM
2023-07-22 03:54:23.211 UTC [541214] STATEMENT:  SELECT receiveFrom('private_pipe_2');
2023-07-22 03:54:42.527 UTC [541233] ERROR:  too few parameters specified for template string
2023-07-22 03:54:42.527 UTC [541233] STATEMENT:  select plvsubst.string('My name is %s.', '');
2023-07-22 03:54:42.555 UTC [541233] ERROR:  string is not qualified SQL name
2023-07-22 03:54:42.555 UTC [541233] STATEMENT:  select dbms_assert.qualified_sql_name('aaa.bbb.cc%c."aaaa""aaa"');
2023-07-22 03:54:42.556 UTC [541233] ERROR:  invalid schema name
2023-07-22 03:54:42.556 UTC [541233] STATEMENT:  select dbms_assert.schema_name('jabadabado');
2023-07-22 03:54:42.556 UTC [541233] ERROR:  string is not simple SQL name
2023-07-22 03:54:42.556 UTC [541233] STATEMENT:  select dbms_assert.simple_sql_name('ajajaj -- ajaj');
2023-07-22 03:54:42.556 UTC [541233] ERROR:  invalid object name
2023-07-22 03:54:42.556 UTC [541233] STATEMENT:  select dbms_assert.object_name('dbms_assert.fooo');
2023-07-22 03:54:42.557 UTC [541233] ERROR:  string is not qualified SQL name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  string is not qualified SQL name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.qualified_sql_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  invalid schema name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  invalid schema name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.schema_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  string is not simple SQL name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  string is not simple SQL name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.simple_sql_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  invalid object name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  invalid object name
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select dbms_assert.object_name(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  plunit.assert_true exception
2023-07-22 03:54:42.557 UTC [541233] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select plunit.assert_true(NULL);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  plunit.assert_true exception
2023-07-22 03:54:42.557 UTC [541233] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select plunit.assert_true(1 = 2);
2023-07-22 03:54:42.557 UTC [541233] ERROR:  one is not two
2023-07-22 03:54:42.557 UTC [541233] DETAIL:  Plunit.assertation fails (assert_true).
2023-07-22 03:54:42.557 UTC [541233] STATEMENT:  select plunit.assert_true(1 = 2, 'one is not two');
2023-07-22 03:54:42.558 UTC [541233] ERROR:  plunit.assert_false exception
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_false(1 = 1);
2023-07-22 03:54:42.558 UTC [541233] ERROR:  trap is open
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_false(1 = 1, 'trap is open');
2023-07-22 03:54:42.558 UTC [541233] ERROR:  plunit.assert_false exception
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_false).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_false(NULL);
2023-07-22 03:54:42.558 UTC [541233] ERROR:  plunit.assert_null exception
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_null).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_null(current_date);
2023-07-22 03:54:42.558 UTC [541233] ERROR:  plunit.assert_not_null exception
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_not_null).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_not_null(NULL::date);
2023-07-22 03:54:42.558 UTC [541233] ERROR:  diff dates
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_equals(current_date, current_date + 1, 'diff dates');
2023-07-22 03:54:42.558 UTC [541233] ERROR:  attention some diff
2023-07-22 03:54:42.558 UTC [541233] DETAIL:  Plunit.assertation fails (assert_equals).
2023-07-22 03:54:42.558 UTC [541233] STATEMENT:  select plunit.assert_equals(10.2, 10.3, 0.01, 'attention some diff');
2023-07-22 03:54:42.559 UTC [541233] ERROR:  plunit.assert_fail exception
2023-07-22 03:54:42.559 UTC [541233] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 03:54:42.559 UTC [541233] STATEMENT:  select plunit.fail();
2023-07-22 03:54:42.559 UTC [541233] ERROR:  custom exception
2023-07-22 03:54:42.559 UTC [541233] DETAIL:  Plunit.assertation (assert_fail).
2023-07-22 03:54:42.559 UTC [541233] STATEMENT:  select plunit.fail('custom exception');
2023-07-22 03:54:42.581 UTC [541233] ERROR:  an argument is NULL
2023-07-22 03:54:42.581 UTC [541233] STATEMENT:  select dbms_random.string(null, 42);
2023-07-22 03:54:42.581 UTC [541233] ERROR:  pipe name is NULL
2023-07-22 03:54:42.581 UTC [541233] DETAIL:  Pipename may not be NULL.
2023-07-22 03:54:42.581 UTC [541233] STATEMENT:  select dbms_pipe.create_pipe(null);
2023-07-22 03:54:42.581 UTC [541233] ERROR:  plunit.assert_not_equal exception
2023-07-22 03:54:42.581 UTC [541233] DETAIL:  Plunit.assertation fails (assert_not_equals).
2023-07-22 03:54:42.581 UTC [541233] STATEMENT:  select plunit.assert_not_equals(1,2,3);
2023-07-22 03:54:42.587 UTC [541233] WARNING:  Field "a" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 03:54:42.588 UTC [541233] WARNING:  Field "c" of table "trg_test" is empty string (replaced by NULL).
2023-07-22 03:54:42.597 UTC [541233] ERROR:  invalid Unicode surrogate pair
2023-07-22 03:54:42.597 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \db99');
2023-07-22 03:54:42.598 UTC [541233] ERROR:  invalid Unicode surrogate pair
2023-07-22 03:54:42.598 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \db99\0061');
2023-07-22 03:54:42.598 UTC [541233] ERROR:  invalid Unicode surrogate pair
2023-07-22 03:54:42.598 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \+00db99\+000061');
2023-07-22 03:54:42.598 UTC [541233] ERROR:  invalid Unicode escape value
2023-07-22 03:54:42.598 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \+2FFFFF');
2023-07-22 03:54:42.598 UTC [541233] ERROR:  invalid Unicode surrogate pair
2023-07-22 03:54:42.598 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \udb99\u0061');
2023-07-22 03:54:42.599 UTC [541233] ERROR:  invalid Unicode surrogate pair
2023-07-22 03:54:42.599 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \U0000db99\U00000061');
2023-07-22 03:54:42.599 UTC [541233] ERROR:  invalid Unicode escape value
2023-07-22 03:54:42.599 UTC [541233] STATEMENT:  SELECT oracle.unistr('wrong: \U002FFFFF');
2023-07-22 03:54:42.637 UTC [541237] ERROR:  could not determine polymorphic type because input has type unknown
2023-07-22 03:54:42.637 UTC [541237] STATEMENT:  select oracle.decode('2012-01-01', '2012-01-01', 23, '2012-01-02', 24);
2023-07-22 03:54:42.652 UTC [541241] ERROR:  function dbms_output_test() does not exist
2023-07-22 03:54:42.652 UTC [541241] STATEMENT:  DROP FUNCTION dbms_output_test();
2023-07-22 03:54:42.653 UTC [541241] ERROR:  table "dbms_output_test" does not exist
2023-07-22 03:54:42.653 UTC [541241] STATEMENT:  DROP TABLE dbms_output_test;
2023-07-22 03:54:44.985 UTC [541249] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 03:54:44.985 UTC [541249] DETAIL:  you cannot access locality
2023-07-22 03:54:44.985 UTC [541249] HINT:  locality is not found in utl_file_dir table
2023-07-22 03:54:44.985 UTC [541249] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'sample.txt','r');
2023-07-22 03:54:44.986 UTC [541249] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 03:54:44.986 UTC [541249] DETAIL:  No such file or directory
2023-07-22 03:54:44.986 UTC [541249] STATEMENT:  SELECT utl_file.fopen('test_tmp_dir','file.txt.','w');
2023-07-22 03:54:44.990 UTC [541249] ERROR:  UTL_FILE_INVALID_PATH
2023-07-22 03:54:44.990 UTC [541249] DETAIL:  No such file or directory
2023-07-22 03:54:44.990 UTC [541249] STATEMENT:  SELECT utl_file.fopen(utl_file.tmpdir(),'non_existent_file.txt','r');
2023-07-22 03:54:44.991 UTC [541249] ERROR:  permission denied for table utl_file_dir
2023-07-22 03:54:44.991 UTC [541249] STATEMENT:  INSERT INTO utl_file.utl_file_dir(dir) VALUES('test_tmp_dir');
2023-07-22 03:54:45.032 UTC [541253] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 03:54:45.032 UTC [541253] STATEMENT:  CREATE TABLE foo (a VARCHAR2(0));
2023-07-22 03:54:45.032 UTC [541253] ERROR:  invalid type modifier at character 21
2023-07-22 03:54:45.032 UTC [541253] STATEMENT:  CREATE TABLE foo (a VARCHAR2(10, 1));
2023-07-22 03:54:45.047 UTC [541253] ERROR:  input value length is 6; too long for type varchar2(5)
2023-07-22 03:54:45.047 UTC [541253] STATEMENT:  INSERT INTO foo VALUES ('abcdef');
2023-07-22 03:54:45.048 UTC [541253] ERROR:  input value length is 7; too long for type varchar2(5)
2023-07-22 03:54:45.048 UTC [541253] STATEMENT:  INSERT INTO foo VALUES ('abcde  ');
2023-07-22 03:54:45.074 UTC [541257] ERROR:  length for type varchar must be at least 1 at character 21
2023-07-22 03:54:45.074 UTC [541257] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(0));
2023-07-22 03:54:45.075 UTC [541257] ERROR:  invalid type modifier at character 21
2023-07-22 03:54:45.075 UTC [541257] STATEMENT:  CREATE TABLE bar (a NVARCHAR2(10, 1));
2023-07-22 03:54:45.099 UTC [541257] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 03:54:45.099 UTC [541257] STATEMENT:  INSERT INTO bar VALUES ('abcdef');
2023-07-22 03:54:45.099 UTC [541257] ERROR:  input value too long for type nvarchar2(5)
2023-07-22 03:54:45.099 UTC [541257] STATEMENT:  INSERT INTO bar VALUES ('abcde  ');
2023-07-22 03:54:45.329 UTC [541266] ERROR:  failed to set the requested LC_COLLATE value [invalid]
2023-07-22 03:54:45.329 UTC [541266] CONTEXT:  SQL function "nlssort" statement 1
2023-07-22 03:54:45.329 UTC [541266] STATEMENT:  SELECT * FROM test_sort ORDER BY NLSSORT(name);
2023-07-22 03:54:45.345 UTC [541274] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 03:54:45.345 UTC [541274] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 03:54:45.345 UTC [541274] STATEMENT:  SELECT REGEXP_COUNT('foo' || chr(10) || 'bar' || chr(10) || 'bequq' || chr(10) || 'baz', '^bar', 0, 'm');
2023-07-22 03:54:45.347 UTC [541274] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 03:54:45.347 UTC [541274] CONTEXT:  PL/pgSQL function regexp_count(text,text,integer,text) line 12 at RAISE
2023-07-22 03:54:45.347 UTC [541274] STATEMENT:  SELECT REGEXP_COUNT('ORANGE' || chr(10) || 'GREEN', '^..([aeiou])\1', -1, 'i');
2023-07-22 03:54:45.351 UTC [541274] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 03:54:45.351 UTC [541274] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', -1, 3, 1, 'i', 4);
2023-07-22 03:54:45.352 UTC [541274] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 03:54:45.352 UTC [541274] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, -3, 1, 'i', 4);
2023-07-22 03:54:45.352 UTC [541274] ERROR:  argument 'return_opt' must be 0 or 1
2023-07-22 03:54:45.352 UTC [541274] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, -1, 'i', 4);
2023-07-22 03:54:45.352 UTC [541274] ERROR:  argument 'group' must be a positive number
2023-07-22 03:54:45.352 UTC [541274] STATEMENT:  SELECT REGEXP_INSTR('1234567890 1234567890 1234567890', '(123)(4(56)(78))', 1, 3, 1, 'i', -4);
2023-07-22 03:54:45.355 UTC [541274] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 03:54:45.355 UTC [541274] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 15 at RAISE
2023-07-22 03:54:45.355 UTC [541274] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', -1, 1, 'i', 0);
2023-07-22 03:54:45.355 UTC [541274] ERROR:  argument 'occurence' must be a number greater than 0
2023-07-22 03:54:45.355 UTC [541274] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 18 at RAISE
2023-07-22 03:54:45.355 UTC [541274] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, -1, 'i', 0);
2023-07-22 03:54:45.355 UTC [541274] ERROR:  argument 'group' must be a positive number
2023-07-22 03:54:45.355 UTC [541274] CONTEXT:  PL/pgSQL function regexp_substr(text,text,integer,integer,text,integer) line 21 at RAISE
2023-07-22 03:54:45.355 UTC [541274] STATEMENT:  SELECT REGEXP_SUBSTR('1234567890 1234567890', '(123)(4(56)(78))', 1, 1, 'i', -1);
2023-07-22 03:54:45.356 UTC [541274] ERROR:  argument 'position' must be a number greater than 0
2023-07-22 03:54:45.356 UTC [541274] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', -1, 0, 'i');
2023-07-22 03:54:45.356 UTC [541274] ERROR:  argument 'occurrence' must be a positive number
2023-07-22 03:54:45.356 UTC [541274] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, -1, 'i');
2023-07-22 03:54:45.356 UTC [541274] ERROR:  modifier 'g' is not supported by this function
2023-07-22 03:54:45.356 UTC [541274] STATEMENT:  SELECT oracle.REGEXP_REPLACE ('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, 1, 'g');
2023-07-22 03:54:45.765 UTC [541304] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:54:45.765 UTC [541304] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:55:17.165 UTC [541190] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:17.395 UTC [541190] LOG:  checkpoint complete: wrote 1449 buffers (8.8%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.050 s, sync=0.133 s, total=0.231 s; sync files=789, longest=0.005 s, average=0.001 s; distance=152939 kB, estimate=152939 kB
2023-07-22 03:55:17.493 UTC [541325] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:55:17.493 UTC [541325] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:55:48.710 UTC [541190] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:48.775 UTC [541190] LOG:  checkpoint complete: wrote 116 buffers (0.7%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.011 s, sync=0.008 s, total=0.066 s; sync files=20, longest=0.006 s, average=0.001 s; distance=138981 kB, estimate=151543 kB
2023-07-22 03:55:48.836 UTC [541189] LOG:  received fast shutdown request
2023-07-22 03:55:48.839 UTC [541189] LOG:  aborting any active transactions
2023-07-22 03:55:48.839 UTC [541343] FATAL:  terminating autovacuum process due to administrator command
2023-07-22 03:55:48.840 UTC [541189] LOG:  background worker "logical replication launcher" (PID 541195) exited with exit code 1
2023-07-22 03:55:48.841 UTC [541190] LOG:  shutting down
2023-07-22 03:55:48.844 UTC [541190] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:55:48.864 UTC [541190] LOG:  checkpoint complete: wrote 104 buffers (0.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.005 s, total=0.024 s; sync files=16, longest=0.003 s, average=0.001 s; distance=155 kB, estimate=136404 kB
2023-07-22 03:55:48.891 UTC [541189] LOG:  database system is shut down
2023-07-22 03:55:49.512 UTC [541370] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:55:49.513 UTC [541370] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:55:49.519 UTC [541370] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:55:49.529 UTC [541373] LOG:  database system was shut down at 2023-07-22 03:55:49 UTC
2023-07-22 03:55:49.537 UTC [541370] LOG:  database system is ready to accept connections
2023-07-22 03:55:49.724 UTC [541389] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 03:55:49.724 UTC [541389] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', 1)) AS main_1;
2023-07-22 03:55:49.724 UTC [541389] ERROR:  block number 1 is out of range for relation "test1"
2023-07-22 03:55:49.724 UTC [541389] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'vm', 1)) AS vm_1;
2023-07-22 03:55:49.724 UTC [541389] ERROR:  invalid block number
2023-07-22 03:55:49.724 UTC [541389] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'main', -1));
2023-07-22 03:55:49.724 UTC [541389] ERROR:  relation "xxx" does not exist
2023-07-22 03:55:49.724 UTC [541389] STATEMENT:  SELECT octet_length(get_raw_page('xxx', 'main', 0));
2023-07-22 03:55:49.724 UTC [541389] ERROR:  invalid fork name
2023-07-22 03:55:49.724 UTC [541389] HINT:  Valid fork names are "main", "fsm", "vm", and "init".
2023-07-22 03:55:49.724 UTC [541389] STATEMENT:  SELECT octet_length(get_raw_page('test1', 'xxx', 0));
2023-07-22 03:55:49.725 UTC [541389] ERROR:  invalid block number
2023-07-22 03:55:49.725 UTC [541389] STATEMENT:  SELECT page_checksum(get_raw_page('test1', 0), -1);
2023-07-22 03:55:49.731 UTC [541389] ERROR:  cannot get raw page from relation "test_partitioned"
2023-07-22 03:55:49.731 UTC [541389] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 03:55:49.731 UTC [541389] STATEMENT:  select get_raw_page('test_partitioned', 0);
2023-07-22 03:55:49.731 UTC [541389] ERROR:  cannot get raw page from relation "test_partitioned_index"
2023-07-22 03:55:49.731 UTC [541389] DETAIL:  This operation is not supported for partitioned indexes.
2023-07-22 03:55:49.731 UTC [541389] STATEMENT:  select get_raw_page('test_partitioned_index', 0);
2023-07-22 03:55:49.740 UTC [541389] ERROR:  block number 0 is out of range for relation "test_part1"
2023-07-22 03:55:49.740 UTC [541389] STATEMENT:  select get_raw_page('test_part1', 0);
2023-07-22 03:55:49.751 UTC [541389] ERROR:  invalid page size
2023-07-22 03:55:49.751 UTC [541389] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:49.751 UTC [541389] STATEMENT:  SELECT fsm_page_contents('aaa'::bytea);
2023-07-22 03:55:49.752 UTC [541389] ERROR:  invalid page size
2023-07-22 03:55:49.752 UTC [541389] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:49.752 UTC [541389] STATEMENT:  SELECT page_checksum('bbb'::bytea, 0);
2023-07-22 03:55:49.752 UTC [541389] ERROR:  invalid page size
2023-07-22 03:55:49.752 UTC [541389] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:49.752 UTC [541389] STATEMENT:  SELECT page_header('ccc'::bytea);
2023-07-22 03:55:49.795 UTC [541393] ERROR:  invalid block number
2023-07-22 03:55:49.795 UTC [541393] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', -1);
2023-07-22 03:55:49.795 UTC [541393] ERROR:  block 0 is a meta page
2023-07-22 03:55:49.795 UTC [541393] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 0);
2023-07-22 03:55:49.797 UTC [541393] ERROR:  block number out of range
2023-07-22 03:55:49.797 UTC [541393] STATEMENT:  SELECT * FROM bt_page_stats('test1_a_idx', 2);
2023-07-22 03:55:49.797 UTC [541393] ERROR:  invalid block number
2023-07-22 03:55:49.797 UTC [541393] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', -1);
2023-07-22 03:55:49.798 UTC [541393] ERROR:  block 0 is a meta page
2023-07-22 03:55:49.798 UTC [541393] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 0);
2023-07-22 03:55:49.799 UTC [541393] ERROR:  block number out of range
2023-07-22 03:55:49.799 UTC [541393] STATEMENT:  SELECT * FROM bt_page_items('test1_a_idx', 2);
2023-07-22 03:55:49.800 UTC [541393] ERROR:  invalid block number
2023-07-22 03:55:49.800 UTC [541393] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', -1));
2023-07-22 03:55:49.800 UTC [541393] ERROR:  block is a meta page
2023-07-22 03:55:49.800 UTC [541393] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 0));
2023-07-22 03:55:49.801 UTC [541393] ERROR:  block number 2 is out of range for relation "test1_a_idx"
2023-07-22 03:55:49.801 UTC [541393] STATEMENT:  SELECT * FROM bt_page_items(get_raw_page('test1_a_idx', 2));
2023-07-22 03:55:49.804 UTC [541393] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 03:55:49.804 UTC [541393] STATEMENT:  SELECT bt_metap('test1_a_hash');
2023-07-22 03:55:49.805 UTC [541393] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 03:55:49.805 UTC [541393] STATEMENT:  SELECT bt_page_stats('test1_a_hash', 0);
2023-07-22 03:55:49.805 UTC [541393] ERROR:  "test1_a_hash" is not a btree index
2023-07-22 03:55:49.805 UTC [541393] STATEMENT:  SELECT bt_page_items('test1_a_hash', 0);
2023-07-22 03:55:49.806 UTC [541393] ERROR:  block is a meta page
2023-07-22 03:55:49.806 UTC [541393] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_hash', 0));
2023-07-22 03:55:49.812 UTC [541393] ERROR:  block is not a valid btree leaf page
2023-07-22 03:55:49.812 UTC [541393] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_b_gist', 0));
2023-07-22 03:55:49.813 UTC [541393] ERROR:  invalid page size
2023-07-22 03:55:49.813 UTC [541393] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:49.813 UTC [541393] STATEMENT:  SELECT bt_page_items('aaa'::bytea);
2023-07-22 03:55:49.816 UTC [541393] ERROR:  input page is not a valid btree page
2023-07-22 03:55:49.816 UTC [541393] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:49.816 UTC [541393] STATEMENT:  SELECT bt_page_items(get_raw_page('test1', 0));
2023-07-22 03:55:49.817 UTC [541393] ERROR:  input page is not a valid btree page
2023-07-22 03:55:49.817 UTC [541393] DETAIL:  Expected special size 16, got 8.
2023-07-22 03:55:49.817 UTC [541393] STATEMENT:  SELECT bt_page_items(get_raw_page('test1_a_brin', 0));
2023-07-22 03:55:49.860 UTC [541397] ERROR:  page is not a BRIN page of type "metapage"
2023-07-22 03:55:49.860 UTC [541397] DETAIL:  Expected special type 0000f091, got 0000f092.
2023-07-22 03:55:49.860 UTC [541397] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1_a_idx', 1));
2023-07-22 03:55:49.861 UTC [541397] ERROR:  page is not a BRIN page of type "revmap"
2023-07-22 03:55:49.861 UTC [541397] DETAIL:  Expected special type 0000f092, got 0000f091.
2023-07-22 03:55:49.861 UTC [541397] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1_a_idx', 0)) LIMIT 5;
2023-07-22 03:55:49.871 UTC [541397] ERROR:  "test1_a_btree" is not a BRIN index
2023-07-22 03:55:49.871 UTC [541397] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_btree');
2023-07-22 03:55:49.872 UTC [541397] ERROR:  input page is not a valid BRIN page
2023-07-22 03:55:49.872 UTC [541397] DETAIL:  Expected special size 8, got 16.
2023-07-22 03:55:49.872 UTC [541397] STATEMENT:  SELECT brin_page_items(get_raw_page('test1_a_btree', 0), 'test1_a_idx');
2023-07-22 03:55:49.872 UTC [541397] ERROR:  input page is not a valid BRIN page
2023-07-22 03:55:49.872 UTC [541397] DETAIL:  Expected special size 8, got 0.
2023-07-22 03:55:49.872 UTC [541397] STATEMENT:  SELECT brin_page_type(get_raw_page('test1', 0));
2023-07-22 03:55:49.873 UTC [541397] ERROR:  input page is not a valid BRIN page
2023-07-22 03:55:49.873 UTC [541397] DETAIL:  Expected special size 8, got 0.
2023-07-22 03:55:49.873 UTC [541397] STATEMENT:  SELECT * FROM brin_metapage_info(get_raw_page('test1', 0));
2023-07-22 03:55:49.873 UTC [541397] ERROR:  input page is not a valid BRIN page
2023-07-22 03:55:49.873 UTC [541397] DETAIL:  Expected special size 8, got 0.
2023-07-22 03:55:49.873 UTC [541397] STATEMENT:  SELECT * FROM brin_revmap_data(get_raw_page('test1', 0));
2023-07-22 03:55:49.918 UTC [541401] ERROR:  input page is not a GIN metapage
2023-07-22 03:55:49.918 UTC [541401] DETAIL:  Flags 0002, expected 0008
2023-07-22 03:55:49.918 UTC [541401] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1_y_idx', 1));
2023-07-22 03:55:49.919 UTC [541401] ERROR:  input page is not a compressed GIN data leaf page
2023-07-22 03:55:49.919 UTC [541401] DETAIL:  Flags 0002, expected 0083
2023-07-22 03:55:49.919 UTC [541401] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1_y_idx', 1));
2023-07-22 03:55:50.062 UTC [541401] ERROR:  invalid page size
2023-07-22 03:55:50.062 UTC [541401] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.062 UTC [541401] STATEMENT:  SELECT gin_leafpage_items('aaa'::bytea);
2023-07-22 03:55:50.062 UTC [541401] ERROR:  invalid page size
2023-07-22 03:55:50.062 UTC [541401] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.062 UTC [541401] STATEMENT:  SELECT gin_metapage_info('bbb'::bytea);
2023-07-22 03:55:50.063 UTC [541401] ERROR:  invalid page size
2023-07-22 03:55:50.063 UTC [541401] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.063 UTC [541401] STATEMENT:  SELECT gin_page_opaque_info('ccc'::bytea);
2023-07-22 03:55:50.063 UTC [541401] ERROR:  input page is not a valid GIN metapage
2023-07-22 03:55:50.063 UTC [541401] DETAIL:  Expected special size 8, got 0.
2023-07-22 03:55:50.063 UTC [541401] STATEMENT:  SELECT * FROM gin_metapage_info(get_raw_page('test1', 0));
2023-07-22 03:55:50.064 UTC [541401] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 03:55:50.064 UTC [541401] DETAIL:  Expected special size 8, got 0.
2023-07-22 03:55:50.064 UTC [541401] STATEMENT:  SELECT * FROM gin_page_opaque_info(get_raw_page('test1', 0));
2023-07-22 03:55:50.064 UTC [541401] ERROR:  input page is not a valid GIN data leaf page
2023-07-22 03:55:50.064 UTC [541401] DETAIL:  Expected special size 8, got 0.
2023-07-22 03:55:50.064 UTC [541401] STATEMENT:  SELECT * FROM gin_leafpage_items(get_raw_page('test1', 0));
2023-07-22 03:55:50.112 UTC [541405] ERROR:  "test_gist_btree" is not a GiST index
2023-07-22 03:55:50.112 UTC [541405] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_btree');
2023-07-22 03:55:50.113 UTC [541405] ERROR:  input page is not a valid GiST page
2023-07-22 03:55:50.113 UTC [541405] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 03:55:50.113 UTC [541405] STATEMENT:  SELECT gist_page_items(get_raw_page('test_gist_btree', 0), 'test_gist_idx');
2023-07-22 03:55:50.113 UTC [541405] ERROR:  invalid page size
2023-07-22 03:55:50.113 UTC [541405] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.113 UTC [541405] STATEMENT:  SELECT gist_page_items_bytea('aaa'::bytea);
2023-07-22 03:55:50.114 UTC [541405] ERROR:  invalid page size
2023-07-22 03:55:50.114 UTC [541405] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.114 UTC [541405] STATEMENT:  SELECT gist_page_items('aaa'::bytea, 'test_gist_idx'::regclass);
2023-07-22 03:55:50.114 UTC [541405] ERROR:  invalid page size
2023-07-22 03:55:50.114 UTC [541405] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.114 UTC [541405] STATEMENT:  SELECT gist_page_opaque_info('aaa'::bytea);
2023-07-22 03:55:50.115 UTC [541405] ERROR:  input page is not a valid GiST page
2023-07-22 03:55:50.115 UTC [541405] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:50.115 UTC [541405] STATEMENT:  SELECT * FROM gist_page_opaque_info(get_raw_page('test_gist', 0));
2023-07-22 03:55:50.116 UTC [541405] ERROR:  input page is not a valid GiST page
2023-07-22 03:55:50.116 UTC [541405] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:50.116 UTC [541405] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist', 0));
2023-07-22 03:55:50.116 UTC [541405] ERROR:  input page is not a valid GiST page
2023-07-22 03:55:50.116 UTC [541405] DETAIL:  Expected 0000ff81, got 00000000.
2023-07-22 03:55:50.116 UTC [541405] STATEMENT:  SELECT gist_page_items_bytea(get_raw_page('test_gist_btree', 0));
2023-07-22 03:55:50.150 UTC [541409] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 03:55:50.150 UTC [541409] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash_a_idx', 6));
2023-07-22 03:55:50.150 UTC [541409] ERROR:  invalid block number
2023-07-22 03:55:50.150 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', -1);
2023-07-22 03:55:50.150 UTC [541409] ERROR:  invalid overflow block number 0
2023-07-22 03:55:50.150 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 0);
2023-07-22 03:55:50.150 UTC [541409] ERROR:  invalid overflow block number 1
2023-07-22 03:55:50.150 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 1);
2023-07-22 03:55:50.151 UTC [541409] ERROR:  invalid overflow block number 2
2023-07-22 03:55:50.151 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 2);
2023-07-22 03:55:50.151 UTC [541409] ERROR:  invalid overflow block number 3
2023-07-22 03:55:50.151 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 3);
2023-07-22 03:55:50.151 UTC [541409] ERROR:  invalid overflow block number 4
2023-07-22 03:55:50.151 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 4);
2023-07-22 03:55:50.151 UTC [541409] ERROR:  invalid overflow block number 5
2023-07-22 03:55:50.151 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 5);
2023-07-22 03:55:50.152 UTC [541409] ERROR:  block number 6 is out of range for relation "test_hash_a_idx"
2023-07-22 03:55:50.152 UTC [541409] STATEMENT:  SELECT * FROM hash_bitmap_info('test_hash_a_idx', 6);
2023-07-22 03:55:50.153 UTC [541409] ERROR:  page is not a hash meta page
2023-07-22 03:55:50.153 UTC [541409] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 1));
2023-07-22 03:55:50.153 UTC [541409] ERROR:  page is not a hash meta page
2023-07-22 03:55:50.153 UTC [541409] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 2));
2023-07-22 03:55:50.154 UTC [541409] ERROR:  page is not a hash meta page
2023-07-22 03:55:50.154 UTC [541409] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 3));
2023-07-22 03:55:50.154 UTC [541409] ERROR:  page is not a hash meta page
2023-07-22 03:55:50.154 UTC [541409] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 4));
2023-07-22 03:55:50.155 UTC [541409] ERROR:  page is not a hash meta page
2023-07-22 03:55:50.155 UTC [541409] STATEMENT:  SELECT magic, version, ntuples, bsize, bmsize, bmshift, maxbucket, highmask,
	lowmask, ovflpoint, firstfree, nmaps, procid, spares, mapp FROM
	hash_metapage_info(get_raw_page('test_hash_a_idx', 5));
2023-07-22 03:55:50.155 UTC [541409] ERROR:  page is not a hash bucket or overflow page
2023-07-22 03:55:50.155 UTC [541409] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 0));
2023-07-22 03:55:50.157 UTC [541409] ERROR:  page is not a hash bucket or overflow page
2023-07-22 03:55:50.157 UTC [541409] STATEMENT:  SELECT live_items, dead_items, page_size, hasho_prevblkno, hasho_nextblkno,
	hasho_bucket, hasho_flag, hasho_page_id FROM
	hash_page_stats(get_raw_page('test_hash_a_idx', 5));
2023-07-22 03:55:50.157 UTC [541409] ERROR:  page is not a hash bucket or overflow page
2023-07-22 03:55:50.157 UTC [541409] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 0));
2023-07-22 03:55:50.159 UTC [541409] ERROR:  page is not a hash bucket or overflow page
2023-07-22 03:55:50.159 UTC [541409] STATEMENT:  SELECT * FROM hash_page_items(get_raw_page('test_hash_a_idx', 5));
2023-07-22 03:55:50.168 UTC [541409] ERROR:  "test_hash_a_btree" is not a hash index
2023-07-22 03:55:50.168 UTC [541409] STATEMENT:  SELECT hash_bitmap_info('test_hash_a_btree', 0);
2023-07-22 03:55:50.169 UTC [541409] ERROR:  invalid page size
2023-07-22 03:55:50.169 UTC [541409] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.169 UTC [541409] STATEMENT:  SELECT hash_metapage_info('aaa'::bytea);
2023-07-22 03:55:50.169 UTC [541409] ERROR:  invalid page size
2023-07-22 03:55:50.169 UTC [541409] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.169 UTC [541409] STATEMENT:  SELECT hash_page_items('bbb'::bytea);
2023-07-22 03:55:50.169 UTC [541409] ERROR:  invalid page size
2023-07-22 03:55:50.169 UTC [541409] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.169 UTC [541409] STATEMENT:  SELECT hash_page_stats('ccc'::bytea);
2023-07-22 03:55:50.170 UTC [541409] ERROR:  invalid page size
2023-07-22 03:55:50.170 UTC [541409] DETAIL:  Expected 8192 bytes, got 3.
2023-07-22 03:55:50.170 UTC [541409] STATEMENT:  SELECT hash_page_type('ddd'::bytea);
2023-07-22 03:55:50.171 UTC [541409] ERROR:  input page is not a valid hash page
2023-07-22 03:55:50.171 UTC [541409] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:50.171 UTC [541409] STATEMENT:  SELECT hash_metapage_info(get_raw_page('test_hash', 0));
2023-07-22 03:55:50.171 UTC [541409] ERROR:  input page is not a valid hash page
2023-07-22 03:55:50.171 UTC [541409] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:50.171 UTC [541409] STATEMENT:  SELECT hash_page_items(get_raw_page('test_hash', 0));
2023-07-22 03:55:50.172 UTC [541409] ERROR:  input page is not a valid hash page
2023-07-22 03:55:50.172 UTC [541409] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:50.172 UTC [541409] STATEMENT:  SELECT hash_page_stats(get_raw_page('test_hash', 0));
2023-07-22 03:55:50.172 UTC [541409] ERROR:  input page is not a valid hash page
2023-07-22 03:55:50.172 UTC [541409] DETAIL:  Expected special size 16, got 0.
2023-07-22 03:55:50.172 UTC [541409] STATEMENT:  SELECT hash_page_type(get_raw_page('test_hash', 0));
2023-07-22 03:55:50.173 UTC [541409] ERROR:  page is not a hash meta page
2023-07-22 03:55:50.173 UTC [541409] STATEMENT:  SELECT hash_metapage_info(decode(repeat('00', 8192), 'hex'));
2023-07-22 03:55:50.174 UTC [541409] ERROR:  page is not a hash bucket or overflow page
2023-07-22 03:55:50.174 UTC [541409] STATEMENT:  SELECT hash_page_items(decode(repeat('00', 8192), 'hex'));
2023-07-22 03:55:50.174 UTC [541409] ERROR:  page is not a hash bucket or overflow page
2023-07-22 03:55:50.174 UTC [541409] STATEMENT:  SELECT hash_page_stats(decode(repeat('00', 8192), 'hex'));
2023-07-22 03:55:50.295 UTC [541371] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:55:50.325 UTC [541371] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.009 s, sync=0.005 s, total=0.031 s; sync files=7, longest=0.003 s, average=0.001 s; distance=13691 kB, estimate=13691 kB
2023-07-22 03:55:50.566 UTC [541443] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:55:50.566 UTC [541443] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:56:22.001 UTC [541371] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:22.123 UTC [541371] LOG:  checkpoint complete: wrote 473 buffers (2.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.060 s, total=0.122 s; sync files=251, longest=0.004 s, average=0.001 s; distance=141358 kB, estimate=141358 kB
2023-07-22 03:56:22.204 UTC [541461] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:56:22.204 UTC [541461] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:56:53.384 UTC [541371] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:56:53.435 UTC [541371] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.007 s, sync=0.004 s, total=0.052 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136841 kB, estimate=140907 kB
2023-07-22 03:56:53.487 UTC [541370] LOG:  received fast shutdown request
2023-07-22 03:56:53.490 UTC [541370] LOG:  aborting any active transactions
2023-07-22 03:56:53.491 UTC [541370] LOG:  background worker "logical replication launcher" (PID 541376) exited with exit code 1
2023-07-22 03:56:53.491 UTC [541371] LOG:  shutting down
2023-07-22 03:56:53.494 UTC [541371] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:56:53.509 UTC [541371] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.018 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126816 kB
2023-07-22 03:56:53.529 UTC [541370] LOG:  database system is shut down
2023-07-22 03:56:54.195 UTC [541503] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:56:54.196 UTC [541503] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:56:54.202 UTC [541503] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:56:54.210 UTC [541506] LOG:  database system was shut down at 2023-07-22 03:56:54 UTC
2023-07-22 03:56:54.216 UTC [541503] LOG:  database system is ready to accept connections
2023-07-22 03:56:54.395 UTC [541522] ERROR:  password is too short
2023-07-22 03:56:54.395 UTC [541522] STATEMENT:  ALTER USER regress_user1 PASSWORD 'tooshrt';
2023-07-22 03:56:54.395 UTC [541522] ERROR:  password must not contain user name
2023-07-22 03:56:54.395 UTC [541522] STATEMENT:  ALTER USER regress_user1 PASSWORD 'xyzregress_user1';
2023-07-22 03:56:54.396 UTC [541522] ERROR:  password must contain both letters and nonletters
2023-07-22 03:56:54.396 UTC [541522] STATEMENT:  ALTER USER regress_user1 PASSWORD 'alessnicelongpassword';
2023-07-22 03:56:54.397 UTC [541522] ERROR:  password must not equal user name
2023-07-22 03:56:54.397 UTC [541522] STATEMENT:  ALTER USER regress_user1 PASSWORD 'md5e589150ae7d28f93333afae92b36ef48';
2023-07-22 03:56:54.580 UTC [541542] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:56:54.580 UTC [541542] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:57:25.987 UTC [541504] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:57:26.110 UTC [541504] LOG:  checkpoint complete: wrote 863 buffers (5.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.023 s, sync=0.056 s, total=0.123 s; sync files=501, longest=0.003 s, average=0.001 s; distance=144932 kB, estimate=144932 kB
2023-07-22 03:57:26.219 UTC [541560] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:57:26.219 UTC [541560] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:57:57.392 UTC [541504] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:57:57.486 UTC [541504] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.007 s, total=0.095 s; sync files=4, longest=0.006 s, average=0.002 s; distance=136125 kB, estimate=144051 kB
2023-07-22 03:57:57.553 UTC [541503] LOG:  received fast shutdown request
2023-07-22 03:57:57.558 UTC [541503] LOG:  aborting any active transactions
2023-07-22 03:57:57.558 UTC [541503] LOG:  background worker "logical replication launcher" (PID 541509) exited with exit code 1
2023-07-22 03:57:57.559 UTC [541504] LOG:  shutting down
2023-07-22 03:57:57.566 UTC [541504] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:57:57.597 UTC [541504] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.039 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=129646 kB
2023-07-22 03:57:57.645 UTC [541503] LOG:  database system is shut down
2023-07-22 03:57:58.348 UTC [541599] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:57:58.348 UTC [541599] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:57:58.361 UTC [541599] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:57:58.381 UTC [541602] LOG:  database system was shut down at 2023-07-22 03:57:58 UTC
2023-07-22 03:57:58.392 UTC [541599] LOG:  database system is ready to accept connections
2023-07-22 03:57:58.579 UTC [541618] ERROR:  parameter "pg_bigm.last_update" cannot be changed
2023-07-22 03:57:58.579 UTC [541618] STATEMENT:  SET pg_bigm.last_update = '2013.09.18';
2023-07-22 03:57:58.622 UTC [541618] ERROR:  relation "test_bigm" is not a GIN index
2023-07-22 03:57:58.622 UTC [541618] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm');
2023-07-22 03:57:58.633 UTC [541618] ERROR:  relation "test_bigm_btree" is not a GIN index
2023-07-22 03:57:58.633 UTC [541618] STATEMENT:  SELECT * FROM pg_gin_pending_stats('test_bigm_btree');
2023-07-22 03:57:58.679 UTC [541618] ERROR:  function likequery(unknown) does not exist at character 8
2023-07-22 03:57:58.679 UTC [541618] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 03:57:58.679 UTC [541618] STATEMENT:  SELECT likequery('test');
2023-07-22 03:57:59.080 UTC [541648] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:57:59.080 UTC [541648] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:58:31.457 UTC [541600] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:58:31.661 UTC [541600] LOG:  checkpoint complete: wrote 1815 buffers (11.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.063 s, sync=0.052 s, total=0.205 s; sync files=509, longest=0.016 s, average=0.001 s; distance=141494 kB, estimate=141494 kB
2023-07-22 03:58:31.794 UTC [541666] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:58:31.794 UTC [541666] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:59:03.441 UTC [541600] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:59:03.570 UTC [541600] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.011 s, total=0.129 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132517 kB, estimate=140596 kB
2023-07-22 03:59:03.636 UTC [541599] LOG:  received fast shutdown request
2023-07-22 03:59:03.642 UTC [541599] LOG:  aborting any active transactions
2023-07-22 03:59:03.643 UTC [541599] LOG:  background worker "logical replication launcher" (PID 541605) exited with exit code 1
2023-07-22 03:59:03.643 UTC [541600] LOG:  shutting down
2023-07-22 03:59:03.650 UTC [541600] LOG:  checkpoint starting: shutdown immediate
2023-07-22 03:59:03.692 UTC [541600] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.007 s, sync=0.004 s, total=0.049 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126536 kB
2023-07-22 03:59:03.716 UTC [541599] LOG:  database system is shut down
2023-07-22 03:59:04.480 UTC [541708] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 03:59:04.480 UTC [541708] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 03:59:04.495 UTC [541708] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 03:59:04.512 UTC [541711] LOG:  database system was shut down at 2023-07-22 03:59:04 UTC
2023-07-22 03:59:04.523 UTC [541708] LOG:  database system is ready to accept connections
2023-07-22 03:59:04.855 UTC [541738] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:59:04.855 UTC [541738] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 03:59:37.340 UTC [541709] LOG:  checkpoint starting: immediate force wait
2023-07-22 03:59:37.595 UTC [541709] LOG:  checkpoint complete: wrote 895 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.035 s, sync=0.041 s, total=0.255 s; sync files=252, longest=0.019 s, average=0.001 s; distance=136516 kB, estimate=136516 kB
2023-07-22 03:59:37.718 UTC [541756] ERROR:  syntax error at or near "-" at character 22
2023-07-22 03:59:37.718 UTC [541756] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:00:09.407 UTC [541709] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:09.524 UTC [541709] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.118 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132535 kB, estimate=136118 kB
2023-07-22 04:00:09.595 UTC [541708] LOG:  received fast shutdown request
2023-07-22 04:00:09.606 UTC [541708] LOG:  aborting any active transactions
2023-07-22 04:00:09.606 UTC [541708] LOG:  background worker "logical replication launcher" (PID 541714) exited with exit code 1
2023-07-22 04:00:09.606 UTC [541709] LOG:  shutting down
2023-07-22 04:00:09.613 UTC [541709] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:00:09.654 UTC [541709] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.048 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122506 kB
2023-07-22 04:00:09.674 UTC [541708] LOG:  database system is shut down
2023-07-22 04:00:10.407 UTC [541799] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:00:10.407 UTC [541799] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:00:10.422 UTC [541799] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:00:10.438 UTC [541802] LOG:  database system was shut down at 2023-07-22 04:00:10 UTC
2023-07-22 04:00:10.450 UTC [541799] LOG:  database system is ready to accept connections
2023-07-22 04:00:10.465 UTC [541805] LOG:  pg_cron scheduler started
2023-07-22 04:00:10.687 UTC [541819] LOG:  failed to parse schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:00:10.687 UTC [541819] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:00:10.687 UTC [541819] ERROR:  invalid schedule: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2023-07-22 04:00:10.687 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.687 UTC [541819] STATEMENT:  SELECT cron.schedule(repeat('a', 1000), '');
2023-07-22 04:00:10.687 UTC [541819] LOG:  failed to parse schedule: * * * *
2023-07-22 04:00:10.687 UTC [541819] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:00:10.687 UTC [541819] ERROR:  invalid schedule: * * * *
2023-07-22 04:00:10.687 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.687 UTC [541819] STATEMENT:  SELECT cron.schedule('* * * *', 'SELECT 1');
2023-07-22 04:00:10.688 UTC [541819] LOG:  failed to parse schedule: 5 secondc
2023-07-22 04:00:10.688 UTC [541819] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:00:10.688 UTC [541819] ERROR:  invalid schedule: 5 secondc
2023-07-22 04:00:10.688 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.688 UTC [541819] STATEMENT:  SELECT cron.schedule('5 secondc', 'SELECT 1');
2023-07-22 04:00:10.688 UTC [541819] LOG:  failed to parse schedule: 50 seconds c
2023-07-22 04:00:10.688 UTC [541819] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:00:10.688 UTC [541819] ERROR:  invalid schedule: 50 seconds c
2023-07-22 04:00:10.688 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.688 UTC [541819] STATEMENT:  SELECT cron.schedule('50 seconds c', 'SELECT 1');
2023-07-22 04:00:10.689 UTC [541819] LOG:  failed to parse schedule: -1 seconds
2023-07-22 04:00:10.689 UTC [541819] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:00:10.689 UTC [541819] ERROR:  invalid schedule: -1 seconds
2023-07-22 04:00:10.689 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.689 UTC [541819] STATEMENT:  SELECT cron.schedule('-1 seconds', 'SELECT 1');
2023-07-22 04:00:10.689 UTC [541819] LOG:  failed to parse schedule: 0 seconds
2023-07-22 04:00:10.689 UTC [541819] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:00:10.689 UTC [541819] ERROR:  invalid schedule: 0 seconds
2023-07-22 04:00:10.689 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.689 UTC [541819] STATEMENT:  SELECT cron.schedule('0 seconds', 'SELECT 1');
2023-07-22 04:00:10.690 UTC [541819] LOG:  failed to parse schedule: 60 seconds
2023-07-22 04:00:10.690 UTC [541819] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:00:10.690 UTC [541819] ERROR:  invalid schedule: 60 seconds
2023-07-22 04:00:10.690 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.690 UTC [541819] STATEMENT:  SELECT cron.schedule('60 seconds', 'SELECT 1');
2023-07-22 04:00:10.690 UTC [541819] LOG:  failed to parse schedule: 10000000000 seconds
2023-07-22 04:00:10.690 UTC [541819] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:00:10.690 UTC [541819] ERROR:  invalid schedule: 10000000000 seconds
2023-07-22 04:00:10.690 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.690 UTC [541819] STATEMENT:  SELECT cron.schedule('10000000000 seconds', 'SELECT 1');
2023-07-22 04:00:10.691 UTC [541819] LOG:  failed to parse schedule: @restar
2023-07-22 04:00:10.691 UTC [541819] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:00:10.691 UTC [541819] ERROR:  invalid schedule: @restar
2023-07-22 04:00:10.691 UTC [541819] HINT:  Use cron format (e.g. 5 4 * * *), or interval format '[1-59] seconds'
2023-07-22 04:00:10.691 UTC [541819] STATEMENT:  SELECT cron.schedule('@restar', 'ALTER EXTENSION pg_cron UPDATE');
2023-07-22 04:00:10.717 UTC [541819] ERROR:  no updates specified
2023-07-22 04:00:10.717 UTC [541819] HINT:  You must specify at least one job attribute to change when calling alter_job
2023-07-22 04:00:10.717 UTC [541819] STATEMENT:  SELECT cron.alter_job(2);
2023-07-22 04:00:10.717 UTC [541819] ERROR:  database "hopedoesnotexist" does not exist
2023-07-22 04:00:10.717 UTC [541819] STATEMENT:  select cron.alter_job(job_id:=2,database:='hopedoesnotexist');
2023-07-22 04:00:10.819 UTC [541819] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:00:10.819 UTC [541819] STATEMENT:  SELECT cron.schedule_in_database(job_name:='can not connect', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:00:10.944 UTC [541819] ERROR:  role "pgcron_useraqwxszedc" does not exist
2023-07-22 04:00:10.944 UTC [541819] STATEMENT:  SELECT cron.schedule_in_database(job_name:='user does not exist', schedule:='0 11 * * *', command:='VACUUM',database:='pgcron_dbyes',username:='pgcron_useraqwxszedc');
2023-07-22 04:00:10.945 UTC [541819] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:00:10.945 UTC [541819] STATEMENT:  SELECT cron.alter_job(job_id:=2,database:='pgcron_dbno',username:='pgcron_cront');
2023-07-22 04:00:10.954 UTC [541819] ERROR:  permission denied for function schedule_in_database
2023-07-22 04:00:10.954 UTC [541819] STATEMENT:  SELECT cron.schedule_in_database(job_name:='his vacuum', schedule:='0 11 * * *', command:='VACUUM',database:=current_database(),username:='anotheruser');
2023-07-22 04:00:10.955 UTC [541819] ERROR:  must be superuser to alter username
2023-07-22 04:00:10.955 UTC [541819] STATEMENT:  select cron.alter_job(job_id:=6,username:='anotheruser');
2023-07-22 04:00:10.956 UTC [541819] ERROR:  Job 2 does not exist or you don't own it
2023-07-22 04:00:10.956 UTC [541819] STATEMENT:  select cron.alter_job(job_id:=2,database:='pgcron_dbyes');
2023-07-22 04:00:10.962 UTC [541819] ERROR:  User pgcron_cront does not have CONNECT privilege on pgcron_dbno
2023-07-22 04:00:10.962 UTC [541819] STATEMENT:  select cron.alter_job(job_id:=6,database:='pgcron_dbno');
2023-07-22 04:00:11.151 UTC [541800] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:11.326 UTC [541800] LOG:  checkpoint complete: wrote 1809 buffers (11.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.060 s, sync=0.073 s, total=0.175 s; sync files=519, longest=0.020 s, average=0.001 s; distance=12231 kB, estimate=12231 kB
2023-07-22 04:00:11.350 UTC [541800] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:11.404 UTC [541800] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.011 s, sync=0.011 s, total=0.054 s; sync files=2, longest=0.008 s, average=0.006 s; distance=1 kB, estimate=11008 kB
2023-07-22 04:00:11.458 UTC [541800] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:11.515 UTC [541800] LOG:  checkpoint complete: wrote 4 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.011 s, total=0.057 s; sync files=4, longest=0.008 s, average=0.003 s; distance=2 kB, estimate=9908 kB
2023-07-22 04:00:11.889 UTC [541842] ERROR:  can only create extension in database postgres
2023-07-22 04:00:11.889 UTC [541842] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:00:11.889 UTC [541842] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:00:11.889 UTC [541842] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:00:11.889 UTC [541842] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:00:11.898 UTC [541845] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:00:11.898 UTC [541845] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:00:44.352 UTC [541800] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:00:44.519 UTC [541800] LOG:  checkpoint complete: wrote 913 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.039 s, sync=0.032 s, total=0.167 s; sync files=257, longest=0.012 s, average=0.001 s; distance=136575 kB, estimate=136575 kB
2023-07-22 04:00:44.669 UTC [541863] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:00:44.669 UTC [541863] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:00:44.674 UTC [541866] ERROR:  can only create extension in database postgres
2023-07-22 04:00:44.674 UTC [541866] DETAIL:  Jobs must be scheduled from the database configured in cron.database_name, since the pg_cron background worker reads job descriptions from this database.
2023-07-22 04:00:44.674 UTC [541866] HINT:  Add cron.database_name = 'pgbench_test' in postgresql.conf to use the current database.
2023-07-22 04:00:44.674 UTC [541866] CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2023-07-22 04:00:44.674 UTC [541866] STATEMENT:  CREATE EXTENSION pg_cron;
2023-07-22 04:01:16.360 UTC [541800] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:16.483 UTC [541800] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.124 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132469 kB, estimate=136165 kB
2023-07-22 04:01:16.549 UTC [541799] LOG:  received fast shutdown request
2023-07-22 04:01:16.557 UTC [541799] LOG:  aborting any active transactions
2023-07-22 04:01:16.557 UTC [541805] LOG:  pg_cron scheduler shutting down
2023-07-22 04:01:16.557 UTC [541799] LOG:  background worker "logical replication launcher" (PID 541806) exited with exit code 1
2023-07-22 04:01:16.558 UTC [541800] LOG:  shutting down
2023-07-22 04:01:16.565 UTC [541800] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:01:16.607 UTC [541800] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.050 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=122548 kB
2023-07-22 04:01:16.631 UTC [541799] LOG:  database system is shut down
2023-07-22 04:01:17.343 UTC [541907] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:01:17.343 UTC [541907] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:01:17.357 UTC [541907] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:01:17.373 UTC [541910] LOG:  database system was shut down at 2023-07-22 04:01:17 UTC
2023-07-22 04:01:17.385 UTC [541907] LOG:  database system is ready to accept connections
2023-07-22 04:01:17.636 UTC [541926] ERROR:  invalid block number
2023-07-22 04:01:17.636 UTC [541926] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', -1);
2023-07-22 04:01:17.637 UTC [541926] ERROR:  invalid block number
2023-07-22 04:01:17.637 UTC [541926] STATEMENT:  SELECT * FROM pg_freespace('freespace_tab', 4294967295);
2023-07-22 04:01:17.669 UTC [541908] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:17.737 UTC [541908] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.020 s, sync=0.015 s, total=0.069 s; sync files=7, longest=0.008 s, average=0.003 s; distance=4036 kB, estimate=4036 kB
2023-07-22 04:01:18.150 UTC [541952] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:01:18.150 UTC [541952] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:01:50.528 UTC [541908] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:01:50.640 UTC [541908] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.041 s, sync=0.020 s, total=0.113 s; sync files=251, longest=0.003 s, average=0.001 s; distance=136489 kB, estimate=136489 kB
2023-07-22 04:01:50.727 UTC [541969] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:01:50.727 UTC [541969] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:02:21.935 UTC [541908] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:02:21.989 UTC [541908] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.004 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136466 kB, estimate=136487 kB
2023-07-22 04:02:22.024 UTC [541907] LOG:  received fast shutdown request
2023-07-22 04:02:22.027 UTC [541907] LOG:  aborting any active transactions
2023-07-22 04:02:22.027 UTC [541907] LOG:  background worker "logical replication launcher" (PID 541913) exited with exit code 1
2023-07-22 04:02:22.027 UTC [541908] LOG:  shutting down
2023-07-22 04:02:22.030 UTC [541908] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:02:22.048 UTC [541908] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.021 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=122838 kB
2023-07-22 04:02:22.100 UTC [541907] LOG:  database system is shut down
2023-07-22 04:02:22.750 UTC [542012] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:02:22.751 UTC [542012] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:02:22.757 UTC [542012] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:02:22.765 UTC [542015] LOG:  database system was shut down at 2023-07-22 04:02:22 UTC
2023-07-22 04:02:22.770 UTC [542012] LOG:  database system is ready to accept connections
2023-07-22 04:02:24.139 UTC [542012] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:02:24.141 UTC [542012] LOG:  parameter "effective_cache_size" changed to "16384"
2023-07-22 04:02:24.385 UTC [542039] ERROR:  table hint is not activated because queryid is not available
2023-07-22 04:02:24.385 UTC [542039] HINT:  Set compute_query_id to on or auto to use hint table.
2023-07-22 04:02:24.385 UTC [542039] STATEMENT:  SET pg_hint_plan.enable_hint_table to on;
2023-07-22 04:02:24.385 UTC [542039] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 04:02:24.385 UTC [542039] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 04:02:24.385 UTC [542039] LOG:  hint table feature is reactivated
2023-07-22 04:02:24.385 UTC [542039] STATEMENT:  SELECT 1;
2023-07-22 04:02:24.386 UTC [542039] WARNING:  hint table feature is deactivated because queryid is not available
2023-07-22 04:02:24.386 UTC [542039] HINT:  Set compute_query_id to "auto" or "on" to use hint table.
2023-07-22 04:02:24.387 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.387 UTC [542039] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.388 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.388 UTC [542039] STATEMENT:  EXPLAIN (COSTS false) /*+Set(enable_indexscan off)*/
	 SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.388 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(enable_hashjoin off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.388 UTC [542039] STATEMENT:  /*+ Set(enable_indexscan off) Set(enable_hashjoin off) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.388 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.388 UTC [542039] STATEMENT:  /*+ 	 Set 	 ( 	 enable_indexscan 	 off 	 ) 	 */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.388 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.388 UTC [542039] STATEMENT:  /*+ 	 
		 	Set 	 
		 	( 	 
		 	enable_indexscan 	 
		 	off 	 
		 	) 	 
		 	*/	 	
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.389 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	Set(enable_mergejoin off)
	Set(enable_nestloop off)
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.389 UTC [542039] STATEMENT:  /*+ Set(enable_indexscan off)Set(enable_nestloop off)Set(enable_mergejoin off)	 	
		 	Set(enable_seqscan off)
		 	*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.389 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem 1M)
	
2023-07-22 04:02:24.389 UTC [542039] STATEMENT:  /*+Set(work_mem "1M")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.389 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Set(work_mem 1MB)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.389 UTC [542039] STATEMENT:  /*+Set(work_mem "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.389 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(work_mem TO 1MB)
	
2023-07-22 04:02:24.389 UTC [542039] STATEMENT:  /*+Set(work_mem TO "1MB")*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.389 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:02:24.389 UTC [542039] STATEMENT:  /*+SeqScan() */ SELECT 1;
2023-07-22 04:02:24.389 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 04:02:24.389 UTC [542039] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.390 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.390 UTC [542039] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.390 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.390 UTC [542039] STATEMENT:  /*+SeqScan(t1)IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.390 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.390 UTC [542039] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.390 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.390 UTC [542039] STATEMENT:  /*+BitmapScan(t2)NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.390 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.390 UTC [542039] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.391 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.391 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t4 WHERE t1.val < 10;
2023-07-22 04:02:24.391 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.391 UTC [542039] STATEMENT:  /*+TidScan(t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t3, t4 WHERE t3.id = t4.id AND t4.ctid = '(1,1)';
2023-07-22 04:02:24.391 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.391 UTC [542039] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)';
2023-07-22 04:02:24.391 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 04:02:24.391 UTC [542039] STATEMENT:  /*+ NestLoop() */ SELECT 1;
2023-07-22 04:02:24.391 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(x)
	
2023-07-22 04:02:24.391 UTC [542039] STATEMENT:  /*+ NestLoop(x) */ SELECT 1;
2023-07-22 04:02:24.392 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.392 UTC [542039] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.392 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.392 UTC [542039] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.392 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.392 UTC [542039] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.392 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.392 UTC [542039] STATEMENT:  /*+MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 04:02:24.392 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.392 UTC [542039] STATEMENT:  /*+NestLoop(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 04:02:24.392 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.392 UTC [542039] STATEMENT:  /*+NoHashJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t3 WHERE t1.val = t3.val;
2023-07-22 04:02:24.393 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.393 UTC [542039] STATEMENT:  /*+MergeJoin(t4 t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.394 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.394 UTC [542039] STATEMENT:  /*+HashJoin(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.394 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t3)
	NestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.394 UTC [542039] STATEMENT:  /*+NestLoop(t2 t3 t4 t1) IndexScan(t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.395 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.395 UTC [542039] STATEMENT:  /*+NoNestLoop(t4 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.396 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 04:02:24.396 UTC [542039] STATEMENT:  /*+Leading( )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.397 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3)
	
2023-07-22 04:02:24.397 UTC [542039] STATEMENT:  /*+Leading( t3 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.397 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.397 UTC [542039] STATEMENT:  /*+Leading( t3 t4 )*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.398 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.398 UTC [542039] STATEMENT:  /*+Leading(t3 t4 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.398 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t4 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.398 UTC [542039] STATEMENT:  /*+Leading(t3 t4 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.399 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t1 t2 t1)
	
2023-07-22 04:02:24.399 UTC [542039] STATEMENT:  /*+Leading(t3 t4 t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.400 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t3 t4 t4)
	
2023-07-22 04:02:24.400 UTC [542039] STATEMENT:  /*+Leading(t3 t4 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id;
2023-07-22 04:02:24.400 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.400 UTC [542039] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 04:02:24.400 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.400 UTC [542039] STATEMENT:  /*+HashJoin(t1 *VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 04:02:24.401 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	HashJoin(*VALUES* t1)
	not used hint:
	IndexScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.401 UTC [542039] STATEMENT:  /*+HashJoin(t1 *VALUES*) IndexScan(t1) IndexScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, (VALUES(1,1),(2,2),(3,3)) AS t2(id,val) WHERE t1.id = t2.id;
2023-07-22 04:02:24.401 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.401 UTC [542039] STATEMENT:  /*+BitmapScan(v_1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.402 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.402 UTC [542039] STATEMENT:  /*+BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.402 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.402 UTC [542039] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.403 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.403 UTC [542039] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.403 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.403 UTC [542039] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.403 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.403 UTC [542039] STATEMENT:  /*+BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.404 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(v_1)
	BitmapScan(v_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.404 UTC [542039] STATEMENT:  /*+BitmapScan(v_1)BitmapScan(v_2)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(id) FROM t1 v_1 WHERE id < 10), id FROM v1 WHERE v1.id = (SELECT max(id) FROM t1 v_2 WHERE id < 10);
2023-07-22 04:02:24.404 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.404 UTC [542039] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.404 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.404 UTC [542039] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.404 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.404 UTC [542039] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.404 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.404 UTC [542039] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.405 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.405 UTC [542039] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.405 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.405 UTC [542039] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.405 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.405 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.405 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.405 UTC [542039] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 WHERE id < 10 AND ctid = '(1,1)';
2023-07-22 04:02:24.405 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.405 UTC [542039] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.406 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.406 UTC [542039] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.406 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.406 UTC [542039] STATEMENT:  /*+SeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.406 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.406 UTC [542039] STATEMENT:  /*+SeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.406 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.406 UTC [542039] STATEMENT:  /*+SeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.406 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.406 UTC [542039] STATEMENT:  /*+SeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.407 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.407 UTC [542039] STATEMENT:  /*+SeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.407 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.407 UTC [542039] STATEMENT:  /*+SeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.407 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.407 UTC [542039] STATEMENT:  /*+SeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.407 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.407 UTC [542039] STATEMENT:  /*+SeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.407 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.407 UTC [542039] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.408 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.408 UTC [542039] STATEMENT:  /*+IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.408 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.408 UTC [542039] STATEMENT:  /*+IndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.408 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.408 UTC [542039] STATEMENT:  /*+IndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.408 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.408 UTC [542039] STATEMENT:  /*+IndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.408 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.408 UTC [542039] STATEMENT:  /*+IndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.409 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.409 UTC [542039] STATEMENT:  /*+IndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.409 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.409 UTC [542039] STATEMENT:  /*+IndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.409 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.409 UTC [542039] STATEMENT:  /*+IndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.409 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.409 UTC [542039] STATEMENT:  /*+IndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.409 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.409 UTC [542039] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.410 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.410 UTC [542039] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.410 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.410 UTC [542039] STATEMENT:  /*+BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.410 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.410 UTC [542039] STATEMENT:  /*+BitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.410 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.410 UTC [542039] STATEMENT:  /*+BitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.410 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.410 UTC [542039] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.411 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.411 UTC [542039] STATEMENT:  /*+BitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.411 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.411 UTC [542039] STATEMENT:  /*+BitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.411 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.411 UTC [542039] STATEMENT:  /*+BitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.411 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.411 UTC [542039] STATEMENT:  /*+BitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.411 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.411 UTC [542039] STATEMENT:  /*+BitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.412 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.412 UTC [542039] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.412 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.412 UTC [542039] STATEMENT:  /*+TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.412 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.412 UTC [542039] STATEMENT:  /*+TidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.412 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.412 UTC [542039] STATEMENT:  /*+TidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.412 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.412 UTC [542039] STATEMENT:  /*+TidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.413 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.413 UTC [542039] STATEMENT:  /*+TidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.413 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.413 UTC [542039] STATEMENT:  /*+TidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.413 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.413 UTC [542039] STATEMENT:  /*+TidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.413 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.413 UTC [542039] STATEMENT:  /*+TidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.413 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.413 UTC [542039] STATEMENT:  /*+TidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.413 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.413 UTC [542039] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.414 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.414 UTC [542039] STATEMENT:  /*+NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.414 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.414 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.414 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.414 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.414 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.414 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.414 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.414 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.415 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.415 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.415 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.415 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.415 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.415 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.415 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.415 UTC [542039] STATEMENT:  /*+NoSeqScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.415 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.415 UTC [542039] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.415 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.415 UTC [542039] STATEMENT:  /*+NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.416 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.416 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.416 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.416 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.416 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.416 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.416 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.416 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.416 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.416 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.417 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.417 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.417 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.417 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.417 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.417 UTC [542039] STATEMENT:  /*+NoIndexScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.417 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.417 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.417 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.417 UTC [542039] STATEMENT:  /*+NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.417 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.417 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.418 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.418 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.418 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.418 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.418 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.418 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.418 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.418 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.418 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.418 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.419 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.419 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.419 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.419 UTC [542039] STATEMENT:  /*+NoBitmapScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.419 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.419 UTC [542039] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.419 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.419 UTC [542039] STATEMENT:  /*+NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.419 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	SeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.419 UTC [542039] STATEMENT:  /*+NoTidScan(t1) SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.420 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	IndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.420 UTC [542039] STATEMENT:  /*+NoTidScan(t1) IndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.420 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.420 UTC [542039] STATEMENT:  /*+NoTidScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.420 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	TidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.420 UTC [542039] STATEMENT:  /*+NoTidScan(t1) TidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.420 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoSeqScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.420 UTC [542039] STATEMENT:  /*+NoTidScan(t1) NoSeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.420 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoIndexScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.420 UTC [542039] STATEMENT:  /*+NoTidScan(t1) NoIndexScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.420 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoBitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.420 UTC [542039] STATEMENT:  /*+NoTidScan(t1) NoBitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.421 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	NoTidScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.421 UTC [542039] STATEMENT:  /*+NoTidScan(t1) NoTidScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.421 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.421 UTC [542039] STATEMENT:  /*+BitmapScan(t1) BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)' AND t1.id < 10 AND t2.id < 10;
2023-07-22 04:02:24.421 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.421 UTC [542039] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 04:02:24.422 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.422 UTC [542039] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1 FULL OUTER JOIN  t2 ON (t1.id = t2.id);
2023-07-22 04:02:24.424 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.424 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.424 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.424 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.425 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.425 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.425 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.425 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.426 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.426 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.426 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.426 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.426 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.426 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.427 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.427 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.428 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.428 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.429 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.429 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.430 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.430 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.430 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.430 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.431 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.431 UTC [542039] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.431 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.431 UTC [542039] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.432 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.432 UTC [542039] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.433 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.433 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.433 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.433 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.434 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.434 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.434 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.434 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.435 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.435 UTC [542039] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.435 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.435 UTC [542039] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.436 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.436 UTC [542039] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.436 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.436 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.436 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.436 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.436 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.436 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.436 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.436 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.437 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.437 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1 WHERE id >= 50 AND id <= 51 AND p1.ctid = '(1,1)';
2023-07-22 04:02:24.438 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	NestLoop(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.438 UTC [542039] STATEMENT:  /*+NestLoop(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.438 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.438 UTC [542039] STATEMENT:  /*+MergeJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.438 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(p1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.438 UTC [542039] STATEMENT:  /*+HashJoin(p1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.438 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.438 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.439 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.439 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.439 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.439 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.439 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.439 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.439 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.439 UTC [542039] STATEMENT:  /*+SeqScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.439 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.439 UTC [542039] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.440 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.440 UTC [542039] STATEMENT:  /*+BitmapScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.440 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.440 UTC [542039] STATEMENT:  /*+TidScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY p1, t1 WHERE p1.id >= 50 AND p1.id <= 51 AND p1.ctid = '(1,1)' AND p1.id = t1.id AND t1.id < 10;
2023-07-22 04:02:24.457 UTC [542039] LOG:  available indexes for IndexScan(ischk_d1): ischk_d1_b_idx
2023-07-22 04:02:24.457 UTC [542039] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 04:02:24.457 UTC [542039] LOG:  available indexes for IndexScan(ischk_d2): ischk_d2_b_idx
2023-07-22 04:02:24.457 UTC [542039] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 04:02:24.457 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ischk ischk_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.457 UTC [542039] STATEMENT:  /*+ IndexScan(ischk ischk_idx) */
	EXPLAIN (COSTS false) SELECT * FROM ischk WHERE b = 'x';
2023-07-22 04:02:24.458 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""t1 )	")
	IndexScan("t	2 """)
	HashJoin("""t1 )	" T3 "t	2 """)
	Leading("""t1 )	" T3 "t	2 """)
	Set(application_name "a	a	a""	a	A")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.458 UTC [542039] STATEMENT:  /*+SeqScan("""t1 )	")IndexScan("t	2 """)HashJoin("""t1 )	"T3"t	2 """)Leading("""t1 )	"T3"t	2 """)Set(application_name"a	a	a""	a	A")*/
	EXPLAIN (COSTS false) SELECT * FROM t1 """t1 )	", t2 "t	2 """, t3 "T3" WHERE """t1 )	".id = "t	2 """.id AND """t1 )	".id = "T3".id;
2023-07-22 04:02:24.458 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	TidScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_mergejoin on)
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	SeqScan(t1)
	IndexScan(t1)
	BitmapScan(t1)
	SeqScan(t2)
	IndexScan(t2)
	BitmapScan(t2)
	HashJoin(t1 t2)
	NestLoop(t1 t2)
	Leading(t1 t2)
	Set(enable_seqscan off)
	error hint:
	
2023-07-22 04:02:24.458 UTC [542039] STATEMENT:  /*+SeqScan(t1)SeqScan(t2)IndexScan(t1)IndexScan(t2)BitmapScan(t1)BitmapScan(t2)TidScan(t1)TidScan(t2)HashJoin(t1 t2)NestLoop(t2 t1)MergeJoin(t1 t2)Leading(t1 t2)Leading(t2 t1)Set(enable_seqscan off)Set(enable_mergejoin on)Set(enable_seqscan on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.ctid = '(1,1)' AND t2.ctid = '(1,1)';
2023-07-22 04:02:24.462 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.462 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.464 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.464 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.466 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.466 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.468 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.468 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.471 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.471 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.472 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t1_1 t1_2 t1_4 t1_5)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.472 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t1_1 t1_2 t1_4 t1_5)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.473 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	MergeJoin(t1_3 t3_3)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	not used hint:
	Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.473 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(a t3_2 t3_5 t2_2 c1_1 t3_4 t3_3 t2_3 t2_4 t1_3 t2_5 t1_2 t3_1 t1_4 t2_1 t1_5 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.474 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1_3 t3_3)
	Leading(t3_5 t2_5 t1_5)
	Leading(t3_2 t2_2 t1_2)
	Leading(t3_4 t2_4 t1_4)
	Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)
	not used hint:
	HashJoin(t1_1 t3_1)
	NestLoop(t1_2 t2_2)
	NestLoop(t1_4 t2_4)
	NestLoop(t1_5 t2_5)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.474 UTC [542039] STATEMENT:  /*+HashJoin(t1_1 t3_1)MergeJoin(t1_3 t3_3)NestLoop(t1_2 t2_2)NestLoop(t1_4 t2_4)NestLoop(t1_5 t2_5)Leading(t3_5 t2_5 t1_5)Leading(t3_2 t2_2 t1_2)Leading(t3_4 t2_4 t1_4)Leading(c1_1 t3_3 t2_3 t1_3 t3_1 t2_1 t1_1)*/
	EXPLAIN (COSTS false)
	WITH c1_1(id) AS (
	SELECT max(t1_5.id) FROM t1 t1_5, t2 t2_5, t3 t3_5 WHERE t1_5.id = t2_5.id AND t2_5.id = t3_5.id
	)
	SELECT t1_1.id, (
	SELECT max(t1_2.id) FROM t1 t1_2, t2 t2_2, t3 t3_2 WHERE t1_2.id = t2_2.id AND t2_2.id = t3_2.id
	) FROM t1 t1_1, t2 t2_1, t3 t3_1, (
	SELECT t1_3.id FROM t1 t1_3, t2 t2_3, t3 t3_3 WHERE t1_3.id = t2_3.id AND t2_3.id = t3_3.id
	) v1_1(id), c1_1 WHERE t1_1.id = t2_1.id AND t2_1.id = t3_1.id AND t2_1.id = v1_1.id AND v1_1.id = c1_1.id AND t1_1.id = (
	SELECT max(t1_4.id) FROM t1 t1_4, t2 t2_4, t3 t3_4 WHERE t1_4.id = t2_4.id AND t2_4.id = t3_4.id 
	);
2023-07-22 04:02:24.475 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	MergeJoin(t1 t2)
	
2023-07-22 04:02:24.475 UTC [542039] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 04:02:24.475 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t1)
	
2023-07-22 04:02:24.475 UTC [542039] STATEMENT:  /*+Leading(t1 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, s0.t1, t2 WHERE public.t1.id = s0.t1.id AND public.t1.id = t2.id;
2023-07-22 04:02:24.476 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 04:02:24.476 UTC [542039] STATEMENT:  /*+
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "123456789012345678901234567890123456789012345678901234567890123" JOIN t2 ON ("123456789012345678901234567890123456789012345678901234567890123".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 04:02:24.476 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(123456789012345678901234567890123456789012345678901234567890123)
	MergeJoin(123456789012345678901234567890123456789012345678901234567890123 t2)
	Leading(123456789012345678901234567890123456789012345678901234567890123 t2 t3)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 04:02:24.476 UTC [542039] STATEMENT:  /*+
	Leading(1234567890123456789012345678901234567890123456789012345678901234 t2 t3)
	SeqScan(1234567890123456789012345678901234567890123456789012345678901234)
	MergeJoin(1234567890123456789012345678901234567890123456789012345678901234 t2)
	Set(1234567890123456789012345678901234567890123456789012345678901234 1)
	Set(cursor_tuple_fraction 0.1234567890123456789012345678901234567890123456789012345678901234)
	*/
	EXPLAIN (COSTS false) SELECT * FROM t1 "1234567890123456789012345678901234567890123456789012345678901234" JOIN t2 ON ("1234567890123456789012345678901234567890123456789012345678901234".id = t2.id) JOIN t3 ON (t2.id = t3.id);
2023-07-22 04:02:24.477 UTC [542039] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 04:02:24.477 UTC [542039] STATEMENT:  SET "123456789012345678901234567890123456789012345678901234567890123" TO 1;
2023-07-22 04:02:24.477 UTC [542039] ERROR:  unrecognized configuration parameter "123456789012345678901234567890123456789012345678901234567890123"
2023-07-22 04:02:24.477 UTC [542039] STATEMENT:  SET "1234567890123456789012345678901234567890123456789012345678901234" TO 1;
2023-07-22 04:02:24.477 UTC [542039] ERROR:  1.23457e+63 is outside the valid range for parameter "cursor_tuple_fraction" (0 .. 1)
2023-07-22 04:02:24.477 UTC [542039] STATEMENT:  SET cursor_tuple_fraction TO 1234567890123456789012345678901234567890123456789012345678901234;
2023-07-22 04:02:24.477 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_seqscan 100)
	Set(seq_page_cost on)
	
2023-07-22 04:02:24.477 UTC [542039] STATEMENT:  /*+ Set(enable_seqscan 100)Set(seq_page_cost on)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id;
2023-07-22 04:02:24.477 UTC [542039] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 04:02:24.477 UTC [542039] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.477 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.477 UTC [542039] STATEMENT:  /*+IndexScan(t5 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  available indexes for IndexScan(t5):
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  available indexes for IndexScan(t5): t5_id2 t5_id1
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id1 t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 t5_id1 t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  available indexes for IndexScan(t5): t5_id2
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist t5_id2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 no_exist t5_id2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  available indexes for IndexScan(t5):
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 no_exist5 no_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+IndexScan(t5 no_exist5 no_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM t5 WHERE t5.id = 1;
2023-07-22 04:02:24.478 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1))
	
2023-07-22 04:02:24.478 UTC [542039] STATEMENT:  /*+Leading((t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.479 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.479 UTC [542039] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.479 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t1 t2 t3))
	
2023-07-22 04:02:24.479 UTC [542039] STATEMENT:  /*+Leading((t1 t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.480 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.480 UTC [542039] STATEMENT:  /*+Leading((t1 t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id < 10;
2023-07-22 04:02:24.480 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.480 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.481 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) t4))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.481 UTC [542039] STATEMENT:  /*+Leading((((t1 t2) t3) t4))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.481 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.481 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.482 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.482 UTC [542039] STATEMENT:  /*+Leading((t1 (t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.482 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.482 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.483 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t3 t1) t2))
	not used hint:
	duplication hint:
	Leading(((t1 t2) t3))
	error hint:
	
2023-07-22 04:02:24.483 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading(((t3 t1) t2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t1.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 04:02:24.483 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	Leading((t1_2 t2_2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.483 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) Leading((t1_2 t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 04:02:24.484 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(((((t1 t2) t3) t1_2) t2_2))
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.484 UTC [542039] STATEMENT:  /*+Leading(((((t1 t2) t3) t1_2) t2_2))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < ( SELECT t1_2.id FROM t1 t1_2, t2 t2_2 WHERE t1_2.id = t2_2.id AND t2_2.val > 100 ORDER BY t1_2.id LIMIT 1);
2023-07-22 04:02:24.484 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.484 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.484 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.484 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.485 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.485 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.485 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t1 t3)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.485 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.486 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	MergeJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.486 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.486 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2 t3 t4)
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.486 UTC [542039] STATEMENT:  /*+Leading(((t1 t2) t3)) MergeJoin(t1 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4 WHERE t1.id = t2.id AND t3.id = t4.id AND t1.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.486 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.486 UTC [542039] STATEMENT:  /*+ Leading ( ( t1 ( t2 t3 ) ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.487 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 t3)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.487 UTC [542039] STATEMENT:  /*+Leading((t1(t2 t3)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.487 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("t1(t2" "t3)"))
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.487 UTC [542039] STATEMENT:  /*+Leading(("t1(t2" "t3)"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.487 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.487 UTC [542039] STATEMENT:  /*+ Leading ( ( ( t1 t2 ) t3 ) ) */
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.487 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.487 UTC [542039] STATEMENT:  /*+Leading(((t1 t2)t3))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.488 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(("(t1" "t2)t3"))
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.488 UTC [542039] STATEMENT:  /*+Leading(("(t1" "t2)t3"))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.id = t2.id AND t2.val = t3.val AND t1.id < 10;
2023-07-22 04:02:24.488 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t2 (t3 (t4 t5)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.488 UTC [542039] STATEMENT:  /*+Leading((t1(t2(t3(t4 t5)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.489 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((t5 (t4 (t3 (t2 t1)))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.489 UTC [542039] STATEMENT:  /*+Leading((t5(t4(t3(t2 t1)))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.490 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t1 t2) t3) t4) t5))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.490 UTC [542039] STATEMENT:  /*+Leading(((((t1 t2)t3)t4)t5))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.491 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((((t5 t4) t3) t2) t1))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.491 UTC [542039] STATEMENT:  /*+Leading(((((t5 t4)t3)t2)t1))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.492 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 (t4 t5))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.492 UTC [542039] STATEMENT:  /*+Leading(((t1 t2)(t3(t4 t5))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.492 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading(((t5 t4) (t3 (t2 t1))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.492 UTC [542039] STATEMENT:  /*+Leading(((t5 t4)(t3(t2 t1))))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.493 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t2) t3) (t4 t5)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.493 UTC [542039] STATEMENT:  /*+Leading((((t1 t2)t3)(t4 t5)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.494 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Leading((((t5 t4) t3) (t2 t1)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.494 UTC [542039] STATEMENT:  /*+Leading((((t5 t4)t3)(t2 t1)))*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.498 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:02:24.498 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_val_id_idx
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_id_idx
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_id_idx
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_id_idx
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.499 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_id_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.499 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_id_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.500 UTC [542039] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:02:24.500 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.500 UTC [542039] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 04:02:24.500 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c2):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c3):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c4):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2):
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_val)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.501 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.501 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_id2_val
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id2_val
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id2_val)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_id2_val)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_val2_id
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.502 UTC [542039] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 04:02:24.502 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val2_id)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val2_id)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.503 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.503 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2_c1):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.504 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.504 UTC [542039] STATEMENT:  /*+IndexScan(p2 no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.505 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.505 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1):
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2):
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_pkey
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx p2_c1_pkey
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_pkey
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_pkey
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.506 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.506 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_pkey p2_c1_id_val_idx no_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id <= 51 AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.507 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.507 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_expr
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_expr_idx
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.508 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.508 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_expr)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_val_idx6
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.509 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.509 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_val_idx6 p2_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_val_idx7 p2_c1_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_val_idx7 p2_c2_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_val_idx7 p2_c3_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_val_idx7 p2_c4_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_val_idx7 p2_c1_c1_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_val_idx7 p2_c1_c2_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_val_idx7 p2_c3_c1_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_val_idx7 p2_c3_c2_val_idx
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.510 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_val_idx p2_val_idx6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.510 UTC [542039] STATEMENT:  /*+IndexScan(p2 p2_val_idx p2_val_idx6)*/
	EXPLAIN (COSTS false) SELECT val FROM p2 WHERE val >= '50' AND val <= '51' AND p2.ctid = '(1,1)';
2023-07-22 04:02:24.511 UTC [542039] LOG:  available indexes for IndexScanRegexp(t5): t5_val t5_pkey
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  available indexes for IndexScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  available indexes for IndexScanRegexp(t5):
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  available indexes for IndexScan(t5):
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_val t5_pkey
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.511 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.511 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(t5):
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for IndexOnlyScan(t5):
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for BitmapScanRegexp(t5): t5_val t5_pkey
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_[^i].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_[^i].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for BitmapScanRegexp(t5): t5_id3 t5_id2 t5_id1
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 t5[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 t5[^_].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  available indexes for BitmapScanRegexp(t5):
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.512 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.512 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(t5 ^.*t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for BitmapScan(t5):
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t5 t5_id[0-9].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ BitmapScan(t5 t5_id[0-9].*)*/
	EXPLAIN (COSTS false) SELECT id FROM t5 WHERE id = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.513 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.513 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1): p1_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1): p1_c1_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c2): p1_c2_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3): p1_c3_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c4): p1_c4_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c2):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c4):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1_c1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c1_c2):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3_c1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScanRegexp(p1_c3_c2):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c2):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c3):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c4):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c2):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.514 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c1):
2023-07-22 04:02:24.514 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c2):
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1): p1_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1): p1_c1_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2): p1_c2_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3): p1_c3_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4): p1_c4_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.515 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.515 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c2):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c4):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c1_c2):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScanRegexp(p1_c3_c2):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c2):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c3):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c4):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c1_c1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c1_c2):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c3_c1):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for IndexOnlyScan(p1_c3_c2):
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ IndexOnlyScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1): p1_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.516 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_pkey
2023-07-22 04:02:24.516 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_pkey
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*[^0-9]$)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*[^0-9]$)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1): p1_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1): p1_c1_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c2): p1_c2_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3): p1_c3_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c4): p1_c4_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1): p1_c1_c1_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2): p1_c1_c2_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1): p1_c3_c1_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2): p1_c3_c2_val2
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c2):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c4):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1_c1):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c1_c2):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3_c1):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  available indexes for BitmapScanRegexp(p1_c3_c2):
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.517 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScanRegexp(p1 p1[^_].*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.517 UTC [542039] STATEMENT:  /*+ BitmapScanRegexp(p1 p1[^_].*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c1):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c2):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c3):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c4):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c1_c1):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c1_c2):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c3_c1):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  available indexes for BitmapScan(p1_c3_c2):
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.518 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(p1 p1_.*val2.*)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.518 UTC [542039] STATEMENT:  /*+ BitmapScan(p1 p1_.*val2.*)*/
	EXPLAIN (COSTS false) SELECT val FROM p1 WHERE val = 1;
2023-07-22 04:02:24.521 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.521 UTC [542039] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM t1 WHERE t1.id = 1;
2023-07-22 04:02:24.541 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.541 UTC [542039] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ *          FROM t1 LIMIT 1"
	PL/pgSQL function testfunc() line 5 at SQL statement
2023-07-22 04:02:24.541 UTC [542039] STATEMENT:  SELECT testfunc();
2023-07-22 04:02:24.548 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.548 UTC [542039] CONTEXT:  SQL statement "/*+ SeqScan(t1) */ SELECT * FROM t1"
	PL/pgSQL function testfunc() line 3 at EXECUTE
2023-07-22 04:02:24.548 UTC [542039] STATEMENT:  SELECT testfunc();
2023-07-22 04:02:24.552 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.552 UTC [542039] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 04:02:24.556 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.556 UTC [542039] CONTEXT:  SQL statement "SELECT  1, /*+ SeqScan(t1) */ * from t1"
	PL/pgSQL function testfunc() line 3 at PERFORM
2023-07-22 04:02:24.556 UTC [542039] STATEMENT:  SELECT testfunc();
2023-07-22 04:02:24.567 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.567 UTC [542039] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ v FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over SELECT rows
2023-07-22 04:02:24.567 UTC [542039] STATEMENT:  SELECT testfunc();
2023-07-22 04:02:24.578 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.578 UTC [542039] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ val FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 8 at FOR over EXECUTE statement
2023-07-22 04:02:24.578 UTC [542039] STATEMENT:  SELECT testfunc();
2023-07-22 04:02:24.587 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.587 UTC [542039] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 7 at FOR over cursor
2023-07-22 04:02:24.587 UTC [542039] STATEMENT:  SELECT testfunc();
2023-07-22 04:02:24.594 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.594 UTC [542039] CONTEXT:  SQL statement "SELECT /*+ SeqScan(t1) */ * FROM t1 ORDER BY id"
	PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 04:02:24.594 UTC [542039] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 04:02:24.598 UTC [542039] ERROR:  relation "ttx" does not exist at character 34
2023-07-22 04:02:24.598 UTC [542039] QUERY:  SELECT /*+ SeqScan(t1) */ * FROM ttx ORDER BY id
2023-07-22 04:02:24.598 UTC [542039] CONTEXT:  PL/pgSQL function testfunc() line 3 at RETURN QUERY
2023-07-22 04:02:24.598 UTC [542039] STATEMENT:  SELECT * FROM testfunc() LIMIT 1;
2023-07-22 04:02:24.599 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:24.599 UTC [542039] STATEMENT:  /*+ IndexScan(t1) */ SELECT * from t1 LIMIT 1;
2023-07-22 04:02:27.643 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:27.643 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(t1) */ SELECT count(*) FROM t1 WHERE id < $1"
	PL/pgSQL function dynsql1(integer) line 4 at EXECUTE
2023-07-22 04:02:27.643 UTC [542039] STATEMENT:  SELECT dynsql1(9000);
2023-07-22 04:02:30.673 UTC [542039] LOG:  available indexes for IndexScan(p1_c1): p1_c1_pkey
2023-07-22 04:02:30.673 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:02:30.673 UTC [542039] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:02:30.673 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_pkey
2023-07-22 04:02:30.673 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:02:30.673 UTC [542039] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:02:30.674 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_pkey
2023-07-22 04:02:30.674 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:02:30.674 UTC [542039] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:02:30.674 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c1 p1_c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:30.674 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(p1_c1 p1_c1_pkey) */ SELECT sum(val) FROM p1_c1 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:02:30.674 UTC [542039] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:02:30.674 UTC [542039] LOG:  available indexes for IndexScan(p1_c2): p1_c2_pkey
2023-07-22 04:02:30.674 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:02:30.674 UTC [542039] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:02:30.674 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1_c2 p1_c2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:30.674 UTC [542039] CONTEXT:  SQL statement "/*+ IndexScan(p1_c2 p1_c2_pkey) */ SELECT sum(val) FROM p1_c2 WHERE id < 9000"
	PL/pgSQL function dynsql2(integer) line 8 at FOR over EXECUTE statement
2023-07-22 04:02:30.674 UTC [542039] STATEMENT:  SELECT dynsql2(9000);
2023-07-22 04:02:31.684 UTC [542039] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 04:02:31.684 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.684 UTC [542039] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 04:02:31.684 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.685 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 04:02:31.685 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.687 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.687 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.688 UTC [542039] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 04:02:31.688 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.688 UTC [542039] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 04:02:31.688 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.689 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 04:02:31.689 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.690 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:02:31.690 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.690 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:02:31.690 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.690 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 04:02:31.690 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.690 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 04:02:31.690 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.690 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 04:02:31.690 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.691 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:02:31.691 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.691 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:02:31.691 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.691 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 04:02:31.691 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.691 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 04:02:31.691 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.691 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.691 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION ALL
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.697 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 04:02:31.697 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.698 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 04:02:31.698 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.698 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.698 UTC [542039] STATEMENT:  /*+ IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.699 UTC [542039] LOG:  available indexes for IndexScan(p1): p1_val3 p1_val2 p1_val1
2023-07-22 04:02:31.699 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c1): p1_c1_val3 p1_c1_val2 p1_c1_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c2): p1_c2_val3 p1_c2_val2 p1_c2_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c3): p1_c3_val3 p1_c3_val2 p1_c3_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c4): p1_c4_val3 p1_c4_val2 p1_c4_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c1): p1_c1_c1_val3 p1_c1_c1_val2 p1_c1_c1_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c1_c2): p1_c1_c2_val3 p1_c1_c2_val2 p1_c1_c2_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c1): p1_c3_c1_val3 p1_c3_c1_val2 p1_c3_c1_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.700 UTC [542039] LOG:  available indexes for IndexScan(p1_c3_c2): p1_c3_c2_val3 p1_c3_c2_val2 p1_c3_c2_val1
2023-07-22 04:02:31.700 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.701 UTC [542039] LOG:  available indexes for IndexScan(p2): p2_id_val_idx
2023-07-22 04:02:31.701 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.701 UTC [542039] LOG:  available indexes for IndexScan(p2_c1): p2_c1_id_val_idx
2023-07-22 04:02:31.701 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.701 UTC [542039] LOG:  available indexes for IndexScan(p2_c2): p2_c2_id_val_idx
2023-07-22 04:02:31.701 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  available indexes for IndexScan(p2_c3): p2_c3_id_val_idx
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  available indexes for IndexScan(p2_c4): p2_c4_id_val_idx
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c1): p2_c1_c1_id_val_idx
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  available indexes for IndexScan(p2_c1_c2): p2_c1_c2_id_val_idx
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c1): p2_c3_c1_id_val_idx
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  available indexes for IndexScan(p2_c3_c2): p2_c3_c2_id_val_idx
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.702 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_val2)
	IndexScan(p2 p2_id_val_idx)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.702 UTC [542039] STATEMENT:  /*+ IndexScan(p1 p1_val2) IndexScan(p2 p2_id_val_idx) */
	EXPLAIN (COSTS off) SELECT val FROM p1 WHERE val < 1000
	UNION
	SELECT val::int FROM p2 WHERE id < 1000;
2023-07-22 04:02:31.703 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 04:02:31.703 UTC [542039] STATEMENT:  /*+ Rows() */ SELECT 1;
2023-07-22 04:02:31.704 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows()
	
2023-07-22 04:02:31.704 UTC [542039] STATEMENT:  /*+ Rows(x) */ SELECT 1;
2023-07-22 04:02:31.715 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.715 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 #99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.725 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.725 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 +99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.735 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.735 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 -99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.745 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *99)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.745 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 *99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.755 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.01)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.755 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 *0.01) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.765 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #aa)
	
2023-07-22 04:02:31.765 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 #aa) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.775 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 /99)
	
2023-07-22 04:02:31.775 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 /99) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.784 UTC [542039] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -99999) 
2023-07-22 04:02:31.785 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -99999)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.785 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 -99999) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id);
2023-07-22 04:02:31.805 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #22)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.805 UTC [542039] STATEMENT:  /*+ Rows(t1 t2 #22) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 04:02:31.816 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t3 *10)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.816 UTC [542039] STATEMENT:  /*+ Rows(t1 t3 *10) */
	EXPLAIN SELECT * FROM t1 JOIN t2 ON (t1.id = t2.id) JOIN t3 ON (t3.id = t2.id);
2023-07-22 04:02:31.830 UTC [542039] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:31.830 UTC [542039] STATEMENT:  /*+ SeqScan(t1) */ SELECT * FROM t1 LIMIT 0;
2023-07-22 04:02:32.695 UTC [542121] ERROR:  extension "pg_hint_plan" must be installed in schema "hint_plan"
2023-07-22 04:02:32.695 UTC [542121] STATEMENT:  CREATE EXTENSION pg_hint_plan SCHEMA other_schema;
2023-07-22 04:02:32.713 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.713 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.715 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.715 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.715 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.715 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) SELECT c1, c2 AS c_2 /*+SeqScan(t1)*/ FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.729 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.729 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.730 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.730 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.775 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.775 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) SELECT c1 FROM s1.t1;
2023-07-22 04:02:32.793 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.793 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.808 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.808 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 OR t1.c1 = 0;
2023-07-22 04:02:32.824 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.824 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.825 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.825 UTC [542121] STATEMENT:  /*+ Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.825 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.825 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.826 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.826 UTC [542121] STATEMENT:  /*+ Set (enable_indexscan"off") Set (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.827 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.827 UTC [542121] STATEMENT:  /*+Set ( enable_indexscan"off")Set ( enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.827 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.827 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off" ) Set(enable_bitmapscan"off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.828 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.828 UTC [542121] STATEMENT:  /*+Set( enable_indexscan "off" )Set( enable_bitmapscan "off" )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.828 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.828 UTC [542121] STATEMENT:  /*+ Set ( enable_indexscan "off" ) Set ( enable_bitmapscan "off" ) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.829 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.829 UTC [542121] STATEMENT:  /*+	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.829 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.829 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.830 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.830 UTC [542121] STATEMENT:  /*+	Set	(enable_indexscan"off")	Set	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.830 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.830 UTC [542121] STATEMENT:  /*+Set	(	enable_indexscan"off")Set	(	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.830 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.830 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off"	)	Set(enable_bitmapscan"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.831 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.831 UTC [542121] STATEMENT:  /*+Set(	enable_indexscan	"off"	)Set(	enable_bitmapscan	"off"	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.831 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.831 UTC [542121] STATEMENT:  /*+	Set	(	enable_indexscan	"off"	)	Set	(	enable_bitmapscan	"off"	)	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.832 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.832 UTC [542121] STATEMENT:  /*+
	Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.832 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.832 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off")
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.833 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.833 UTC [542121] STATEMENT:  /*+
	Set
	(enable_indexscan"off")
	Set
	(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.834 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.834 UTC [542121] STATEMENT:  /*+Set
	(
	enable_indexscan"off")Set
	(
	enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.834 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.834 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off"
	)
	Set(enable_bitmapscan"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.835 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.835 UTC [542121] STATEMENT:  /*+Set(
	enable_indexscan
	"off"
	)Set(
	enable_bitmapscan
	"off"
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.836 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.836 UTC [542121] STATEMENT:  /*+
	Set
	(
	enable_indexscan
	"off"
	)
	Set
	(
	enable_bitmapscan
	"off"
	)
	*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.836 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.836 UTC [542121] STATEMENT:  /*+ 	
		 Set(enable_indexscan"off")Set(enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.837 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.837 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off")Set(enable_bitmapscan"off") 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.838 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.838 UTC [542121] STATEMENT:  /*+ 	
		 Set 	
		 (enable_indexscan"off") 	
		 Set 	
		 (enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.838 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.838 UTC [542121] STATEMENT:  /*+Set 	
		 ( 	
		 enable_indexscan"off")Set 	
		 ( 	
		 enable_bitmapscan"off")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.839 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.839 UTC [542121] STATEMENT:  /*+Set(enable_indexscan"off" 	
		 ) 	
		 Set(enable_bitmapscan"off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.840 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.840 UTC [542121] STATEMENT:  /*+Set( 	
		 enable_indexscan 	
		 "off" 	
		 )Set( 	
		 enable_bitmapscan 	
		 "off" 	
		 )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.840 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_bitmapscan off)
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.840 UTC [542121] STATEMENT:  /*+ 	
		 Set 	
		 ( 	
		 enable_indexscan 	
		 "off" 	
		 ) 	
		 Set 	
		 ( 	
		 enable_bitmapscan 	
		 "off" 	
		 ) 	
		 */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.841 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.841 UTC [542121] STATEMENT:  /*+SeqScan(t)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 04:02:32.842 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.842 UTC [542121] STATEMENT:  /*+SeqScan(ttt)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 04:02:32.842 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.842 UTC [542121] STATEMENT:  /*+SeqScan("t")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t WHERE t.c1 = 1;
2023-07-22 04:02:32.843 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ttt)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.843 UTC [542121] STATEMENT:  /*+SeqScan("ttt")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ttt WHERE ttt.c1 = 1;
2023-07-22 04:02:32.843 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.843 UTC [542121] STATEMENT:  /*+SeqScan(T)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 04:02:32.844 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.844 UTC [542121] STATEMENT:  /*+SeqScan(TTT)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 04:02:32.845 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(T)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.845 UTC [542121] STATEMENT:  /*+SeqScan("T")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "T" WHERE "T".c1 = 1;
2023-07-22 04:02:32.845 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(TTT)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.845 UTC [542121] STATEMENT:  /*+SeqScan("TTT")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "TTT" WHERE "TTT".c1 = 1;
2023-07-22 04:02:32.846 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("(")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.846 UTC [542121] STATEMENT:  /*+SeqScan("(")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "(" WHERE "(".c1 = 1;
2023-07-22 04:02:32.847 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:02:32.847 UTC [542121] STATEMENT:  /*+SeqScan())*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 04:02:32.847 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.847 UTC [542121] STATEMENT:  /*+SeqScan(")")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")" WHERE ")".c1 = 1;
2023-07-22 04:02:32.848 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(")))")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.848 UTC [542121] STATEMENT:  /*+SeqScan(")))")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ")))" WHERE ")))".c1 = 1;
2023-07-22 04:02:32.849 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.849 UTC [542121] STATEMENT:  /*+SeqScan("""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """" WHERE """".c1 = 1;
2023-07-22 04:02:32.850 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("""""""")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.850 UTC [542121] STATEMENT:  /*+SeqScan("""""""")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 """""""" WHERE """""""".c1 = 1;
2023-07-22 04:02:32.850 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:02:32.850 UTC [542121] STATEMENT:  /*+SeqScan( )*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 04:02:32.851 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(" ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.851 UTC [542121] STATEMENT:  /*+SeqScan(" ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 " " WHERE " ".c1 = 1;
2023-07-22 04:02:32.851 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("   ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.851 UTC [542121] STATEMENT:  /*+SeqScan("   ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "   " WHERE "   ".c1 = 1;
2023-07-22 04:02:32.852 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:02:32.852 UTC [542121] STATEMENT:  /*+SeqScan(	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 04:02:32.852 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.852 UTC [542121] STATEMENT:  /*+SeqScan("	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "	" WHERE "	".c1 = 1;
2023-07-22 04:02:32.853 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("			")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.853 UTC [542121] STATEMENT:  /*+SeqScan("			")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "			" WHERE "			".c1 = 1;
2023-07-22 04:02:32.853 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan()
	
2023-07-22 04:02:32.853 UTC [542121] STATEMENT:  /*+SeqScan(
	)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 04:02:32.854 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.854 UTC [542121] STATEMENT:  /*+SeqScan("
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	" WHERE "
	".c1 = 1;
2023-07-22 04:02:32.854 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("
	
	
	")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.854 UTC [542121] STATEMENT:  /*+SeqScan("
	
	
	")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "
	
	
	" WHERE "
	
	
	".c1 = 1;
2023-07-22 04:02:32.855 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.855 UTC [542121] STATEMENT:  /*+SeqScan(Set)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 04:02:32.855 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(Set)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.855 UTC [542121] STATEMENT:  /*+SeqScan("Set")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set" WHERE "Set".c1 = 1;
2023-07-22 04:02:32.856 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("Set SeqScan Leading")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.856 UTC [542121] STATEMENT:  /*+SeqScan("Set SeqScan Leading")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "Set SeqScan Leading" WHERE "Set SeqScan Leading".c1 = 1;
2023-07-22 04:02:32.857 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.857 UTC [542121] STATEMENT:  /*+SeqScan(あ)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 04:02:32.857 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.857 UTC [542121] STATEMENT:  /*+SeqScan(あいう)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 04:02:32.858 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あ)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.858 UTC [542121] STATEMENT:  /*+SeqScan("あ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あ WHERE あ.c1 = 1;
2023-07-22 04:02:32.858 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(あいう)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.858 UTC [542121] STATEMENT:  /*+SeqScan("あいう")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 あいう WHERE あいう.c1 = 1;
2023-07-22 04:02:32.860 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan("tT()"" 	
	Setあ")
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.860 UTC [542121] STATEMENT:  /*+SeqScan("tT()"" 	
	Setあ")*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "tT()"" 	
	Setあ" WHERE "tT()"" 	
	Setあ".c1 = 1;
2023-07-22 04:02:32.861 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(a123456789b123456789c123456789d123456789e123456789f123)
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.861 UTC [542121] STATEMENT:  /*+SeqScan(a123456789b123456789c123456789d123456789e123456789f123)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 "123456789012345678901234567890123456789012345678901234" WHERE "123456789012345678901234567890123456789012345678901234".c1 = 1;
2023-07-22 04:02:32.861 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.861 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)Set enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.862 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.862 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan off Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.863 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.863 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)Set(enable_tidscan "off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.863 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.863 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)SeqScan("")Set(enable_bitmapscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.864 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.864 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)NoSet(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.864 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.864 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)"Set"(enable_tidscan off)Set(enable_bitmapscan off)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.869 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.869 UTC [542121] STATEMENT:  /*+Set(enable_indexscan off)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.870 UTC [542121] ERROR:  invalid value for parameter "pg_hint_plan.debug_print": "enable"
2023-07-22 04:02:32.870 UTC [542121] HINT:  Available values: off, on, detailed, verbose.
2023-07-22 04:02:32.870 UTC [542121] STATEMENT:  SET pg_hint_plan.debug_print TO enable;
2023-07-22 04:02:32.875 UTC [542121] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:02:32.875 UTC [542121] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:02:32.875 UTC [542121] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:02:32.875 UTC [542121] LOG:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:02:32.875 UTC [542121] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:02:32.875 UTC [542121] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:02:32.877 UTC [542121] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:02:32.877 UTC [542121] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:02:32.878 UTC [542121] WARNING:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:02:32.878 UTC [542121] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:02:32.878 UTC [542121] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:02:32.878 UTC [542121] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:02:32.878 UTC [542121] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:02:32.878 UTC [542121] ERROR:  pg_hint_plan: hint syntax error at or near ""
2023-07-22 04:02:32.878 UTC [542121] DETAIL:  Opening parenthesis is necessary.
2023-07-22 04:02:32.878 UTC [542121] STATEMENT:  /*+Set*/SELECT 1;
2023-07-22 04:02:32.879 UTC [542121] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "fatal"
2023-07-22 04:02:32.879 UTC [542121] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 04:02:32.879 UTC [542121] STATEMENT:  SET pg_hint_plan.parse_messages TO fatal;
2023-07-22 04:02:32.879 UTC [542121] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "panic"
2023-07-22 04:02:32.879 UTC [542121] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 04:02:32.879 UTC [542121] STATEMENT:  SET pg_hint_plan.parse_messages TO panic;
2023-07-22 04:02:32.880 UTC [542121] ERROR:  invalid value for parameter "pg_hint_plan.parse_messages": "on"
2023-07-22 04:02:32.880 UTC [542121] HINT:  Available values: debug5, debug4, debug3, debug2, debug1, log, info, notice, warning, error.
2023-07-22 04:02:32.880 UTC [542121] STATEMENT:  SET pg_hint_plan.parse_messages TO on;
2023-07-22 04:02:32.885 UTC [542121] ERROR:  parameter "pg_hint_plan.enable_hint_table" requires a Boolean value
2023-07-22 04:02:32.885 UTC [542121] STATEMENT:  SET pg_hint_plan.enable_hint_table TO enable;
2023-07-22 04:02:32.901 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.901 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.901 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(no_table)
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.901 UTC [542121] STATEMENT:  /*+SeqScan(no_table)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.903 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	error hint:
	
2023-07-22 04:02:32.903 UTC [542121] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:32.903 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	error hint:
	
2023-07-22 04:02:32.903 UTC [542121] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:32.904 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	TidScan(t1)
	BitmapScan(t1)
	IndexScan(t1)
	error hint:
	
2023-07-22 04:02:32.904 UTC [542121] STATEMENT:  /*+TidScan(t1)BitmapScan(t1)IndexScan(t1)SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:32.905 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(enable_indexscan enable)
	
2023-07-22 04:02:32.905 UTC [542121] STATEMENT:  /*+Set(enable_indexscan enable)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.911 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.911 UTC [542121] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:02:32.913 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.913 UTC [542121] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:02:32.914 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.914 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.915 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.915 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.916 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.916 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.916 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.916 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.917 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.917 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.917 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.917 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.919 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.919 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.920 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.920 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:02:32.922 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.922 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:02:32.923 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.923 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.924 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.924 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.925 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.925 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.925 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.925 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.926 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.926 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.927 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.927 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.929 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.929 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1 (1000);
2023-07-22 04:02:32.939 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.939 UTC [542121] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:02:32.941 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.941 UTC [542121] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:02:32.943 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.943 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.943 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.943 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.944 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.944 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.945 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.945 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.945 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.945 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.946 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.946 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.948 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.948 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.949 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.949 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:02:32.952 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.952 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1;
2023-07-22 04:02:32.953 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.953 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.954 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.954 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.954 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.954 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.955 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.955 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.956 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.956 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.956 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.956 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.958 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.958 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) CREATE TABLE test AS EXECUTE p1 (1000);
2023-07-22 04:02:32.968 UTC [542121] ERROR:  prepared statement "p1" does not exist
2023-07-22 04:02:32.968 UTC [542121] STATEMENT:  EXECUTE p1;
2023-07-22 04:02:32.971 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.971 UTC [542121] STATEMENT:  /*+Set(enable_seqscan off)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.972 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.972 UTC [542121] STATEMENT:  /*+SeqScan(t1)*/ SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:32.976 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1 t1)
	
2023-07-22 04:02:32.976 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p1;
2023-07-22 04:02:32.980 UTC [542121] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 04:02:32.980 UTC [542121] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 04:02:32.980 UTC [542121] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:32.982 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.982 UTC [542121] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:32.984 UTC [542121] ERROR:  pg_hint_plan: hint syntax error at or near "NestLoop(t1 t1)"
2023-07-22 04:02:32.984 UTC [542121] DETAIL:  Relation name "t1" is duplicated.
2023-07-22 04:02:32.984 UTC [542121] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)NestLoop(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:32.988 UTC [542121] ERROR:  prepared statement "p2" does not exist
2023-07-22 04:02:32.988 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 04:02:32.988 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	MergeJoin(t1 t2)
	Set(enable_seqscan off)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.988 UTC [542121] STATEMENT:  /*+Set(enable_seqscan off)Set(geqo_threshold 100)SeqScan(t1)MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:32.991 UTC [542121] ERROR:  prepared statement "p2" does not exist
2023-07-22 04:02:32.991 UTC [542121] STATEMENT:  EXPLAIN (COSTS false) EXECUTE p2;
2023-07-22 04:02:32.994 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.994 UTC [542121] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:32.997 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:32.997 UTC [542121] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.000 UTC [542121] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t2)
	MergeJoin(t1 t2)
	Leading(t2 t1)
	Set(enable_indexscan on)
	Set(geqo_threshold 100)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.000 UTC [542121] STATEMENT:  /*+Set(enable_indexscan on)Set(geqo_threshold 100)IndexScan(t2)MergeJoin(t1 t2)Leading(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.008 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.008 UTC [542122] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.008 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.008 UTC [542122] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(1) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.008 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.008 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.008 UTC [542122] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.009 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.009 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.009 UTC [542122] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.009 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.009 UTC [542122] STATEMENT:  /*+SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(2) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.010 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.010 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.010 UTC [542122] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.010 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.010 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.010 UTC [542122] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.010 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.010 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.010 UTC [542122] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.011 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.011 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.011 UTC [542122] STATEMENT:  EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.011 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.011 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.011 UTC [542122] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.011 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.011 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.011 UTC [542122] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.011 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.011 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
	SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.011 UTC [542122] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.011 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.011 UTC [542122] CONTEXT:  SQL statement "SELECT /*+ IndexScan(t_1) */ nested_planner(cnt - 1)                 FROM s1.t1 t_1
		  JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
		 ORDER BY t_1.c1 LIMIT 1"
	PL/pgSQL function nested_planner(integer) line 12 at SQL statement
2023-07-22 04:02:33.011 UTC [542122] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.012 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	SeqScan(t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.012 UTC [542122] STATEMENT:  /*+SeqScan(t_1) SeqScan(t_2)*/
	EXPLAIN (COSTS false) SELECT nested_planner(5) FROM s1.t1 t_1 ORDER BY t_1.c1;
2023-07-22 04:02:33.013 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.013 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.013 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.013 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.013 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.013 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.013 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.013 UTC [542122] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:02:33.013 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	HashJoin(st_1 st_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.013 UTC [542122] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:02:33.014 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.014 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.014 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:02:33.014 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.014 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 st_1
	   JOIN s1.t2 st_2 ON (st_1.c1 = st_2.c1)
	  ORDER BY st_1.c1;
2023-07-22 04:02:33.014 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.014 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.014 UTC [542122] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.014 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st_1 st_2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.014 UTC [542122] STATEMENT:  /*+HashJoin(st_1 st_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.015 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.015 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.015 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.015 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t_1 t_1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.015 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.016 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.016 UTC [542122] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 04:02:33.016 UTC [542122] STATEMENT:  EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.016 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.016 UTC [542122] CONTEXT:  SQL function "recall_planner_one_t" during startup
2023-07-22 04:02:33.016 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.016 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 04:02:33.016 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner_one_t() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.016 UTC [542122] ERROR:  function recall_planner_one_t(integer) does not exist
2023-07-22 04:02:33.016 UTC [542122] STATEMENT:  DROP FUNCTION recall_planner_one_t(int);
2023-07-22 04:02:33.016 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.016 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.016 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.017 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t_1 t_1)
	
2023-07-22 04:02:33.017 UTC [542122] STATEMENT:  /*+HashJoin(t_1 t_1)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.017 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.017 UTC [542122] CONTEXT:  SQL function "recall_planner" during startup
2023-07-22 04:02:33.017 UTC [542122] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.017 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	MergeJoin(t_1 t_2)
	error hint:
	
2023-07-22 04:02:33.017 UTC [542122] STATEMENT:  /*+MergeJoin(t_1 t_2)HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false)
	 SELECT recall_planner() FROM s1.t1 t_1
	   JOIN s1.t2 t_2 ON (t_1.c1 = t_2.c1)
	  ORDER BY t_1.c1;
2023-07-22 04:02:33.025 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.025 UTC [542122] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 04:02:33.026 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.026 UTC [542122] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 04:02:33.041 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	IndexScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.041 UTC [542122] STATEMENT:  EXPLAIN EXECUTE p2;
2023-07-22 04:02:33.042 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tpc)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.042 UTC [542122] STATEMENT:  EXPLAIN EXECUTE p3(500);
2023-07-22 04:02:33.047 UTC [542122] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.047 UTC [542122] STATEMENT:  EXPLAIN EXECUTE test_query(array[1,2,3]);
2023-07-22 04:02:33.080 UTC [542012] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:02:33.082 UTC [542012] LOG:  parameter "session_preload_libraries" changed to "pg_hint_plan"
2023-07-22 04:02:33.088 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.088 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.088 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.088 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 04:02:33.089 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.089 UTC [542126] STATEMENT:  /*+SeqScan(t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1 WHERE t_1.c1 = 1;
2023-07-22 04:02:33.090 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.090 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.091 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.091 UTC [542126] STATEMENT:  /*+SeqScan(s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.091 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.091 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.092 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.092 UTC [542126] STATEMENT:  /*+SeqScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.094 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.094 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = 1 AND t1.c1 = t2.c1;
2023-07-22 04:02:33.096 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.096 UTC [542126] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.097 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.097 UTC [542126] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 04:02:33.098 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(s2t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.098 UTC [542126] STATEMENT:  /*+BitmapScan(s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = 1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 04:02:33.100 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.100 UTC [542126] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 WHERE s1.t1.c1 = 1) FROM s1.t1 WHERE s1.t1.c1 = 1;
2023-07-22 04:02:33.101 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t11)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.101 UTC [542126] STATEMENT:  /*+BitmapScan(t11)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 04:02:33.102 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t12)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.102 UTC [542126] STATEMENT:  /*+BitmapScan(t12)*/
	EXPLAIN (COSTS false) SELECT (SELECT max(c1) FROM s1.t1 t11 WHERE t11.c1 = 1) FROM s1.t1 t12 WHERE t12.c1 = 1;
2023-07-22 04:02:33.103 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.103 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.107 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.107 UTC [542126] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE p1.c1 = 1;
2023-07-22 04:02:33.109 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ul1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.109 UTC [542126] STATEMENT:  /*+SeqScan(ul1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 WHERE ul1.c1 = 1;
2023-07-22 04:02:33.117 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(tm1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.117 UTC [542126] STATEMENT:  /*+SeqScan(tm1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 WHERE tm1.c1 = 1;
2023-07-22 04:02:33.118 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(pg_class)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.118 UTC [542126] STATEMENT:  /*+SeqScan(pg_class)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class WHERE oid = 1;
2023-07-22 04:02:33.119 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(ft1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.119 UTC [542126] STATEMENT:  /*+SeqScan(ft1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() AS ft1 WHERE ft1.c1 = 1;
2023-07-22 04:02:33.120 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(val1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.120 UTC [542126] STATEMENT:  /*+SeqScan(val1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 04:02:33.120 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.120 UTC [542126] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS val1 (c1, c2, c3, c4) WHERE val1.c1 = 1;
2023-07-22 04:02:33.121 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(c1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.121 UTC [542126] STATEMENT:  /*+SeqScan(c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(c1) FROM s1.t1 WHERE t1.c1 = 1)
	SELECT * FROM s1.t1, c1 WHERE t1.c1 = 1 AND t1.c1 = c1.c1;
2023-07-22 04:02:33.122 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(v1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.122 UTC [542126] STATEMENT:  /*+SeqScan(v1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 WHERE v1.c1 = 1;
2023-07-22 04:02:33.122 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(s1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.122 UTC [542126] STATEMENT:  /*+SeqScan(s1)*/
	EXPLAIN (COSTS false) SELECT * FROM (SELECT * FROM s1.t1 WHERE t1.c1 = 1) AS s1 WHERE s1.c1 = 1;
2023-07-22 04:02:33.125 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.125 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.125 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.125 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.126 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.126 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.126 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.126 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.126 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.126 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.129 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.129 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.129 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.129 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.130 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.130 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.130 UTC [542126] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:02:33.130 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.130 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.130 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.130 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.130 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.130 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.130 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.132 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.132 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.132 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.132 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.132 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.132 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.133 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.133 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.133 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.133 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.134 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.134 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT * FROM s1.t3 bmt3) sbmt3, (SELECT * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.135 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.135 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:02:33.135 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.135 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:02:33.136 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.136 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:02:33.136 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.136 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:02:33.136 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.136 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	;
2023-07-22 04:02:33.138 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.138 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.138 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.138 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.138 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.138 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.138 UTC [542126] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:02:33.138 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.139 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.139 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.139 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.139 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.139 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.139 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.141 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.141 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:02:33.141 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.141 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:02:33.141 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.141 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:02:33.141 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.141 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:02:33.142 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.142 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	;
2023-07-22 04:02:33.145 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.145 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.145 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.145 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.145 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.145 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.145 UTC [542126] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:02:33.145 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.146 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.146 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.146 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.146 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.147 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.147 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.148 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.148 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.148 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.148 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.148 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.148 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.148 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.148 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.148 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.148 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)
	TidScan(b1t1)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.149 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.149 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.149 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.149 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.150 UTC [542126] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 04:02:33.150 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.150 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.150 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.150 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.150 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)
	TidScan(b1t1)SeqScan(b1t2)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.152 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.152 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.152 UTC [542126] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:02:33.152 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.152 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.152 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.152 UTC [542126] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 04:02:33.152 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.153 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.153 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.153 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.153 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.153 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.153 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.153 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.153 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.153 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.153 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.155 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.155 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.155 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.155 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.155 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.155 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.155 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.155 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.155 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.155 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.155 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.155 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.156 UTC [542126] LOG:  available indexes for IndexScan(bmt2): t2_pkey
2023-07-22 04:02:33.156 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.156 UTC [542126] LOG:  available indexes for BitmapScan(bmt3): t3_pkey
2023-07-22 04:02:33.156 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.156 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	SeqScan(bmt1)
	IndexScan(bmt2 t2_pkey)
	BitmapScan(bmt3 t3_pkey)
	TidScan(bmt4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.156 UTC [542126] STATEMENT:  /*+SeqScan(bmt1)IndexScan(bmt2 t2_pkey)BitmapScan(bmt3 t3_pkey)TidScan(bmt4)
	TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	IndexScan(b3t1 t1_pkey)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.157 UTC [542126] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:02:33.157 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.157 UTC [542126] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:02:33.157 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.158 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r1)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.158 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r1)*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.159 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.159 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.159 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.159 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.159 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.159 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	SeqScan(r1_)*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.161 UTC [542126] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:02:33.161 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.161 UTC [542126] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:02:33.161 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.161 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.161 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.161 UTC [542126] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:02:33.161 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.161 UTC [542126] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:02:33.161 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.161 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r2)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.161 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r2)*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.163 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.163 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.163 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.163 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.163 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.163 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.163 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.163 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.163 UTC [542126] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:02:33.163 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.164 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.164 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	SeqScan(r2_)*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.166 UTC [542126] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:02:33.166 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.166 UTC [542126] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:02:33.166 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.166 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.166 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.166 UTC [542126] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:02:33.166 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.166 UTC [542126] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:02:33.166 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.167 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.167 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.167 UTC [542126] LOG:  available indexes for IndexScan(t3): t3_pkey
2023-07-22 04:02:33.167 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.167 UTC [542126] LOG:  available indexes for BitmapScan(t4): t4_pkey
2023-07-22 04:02:33.167 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.167 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r3)
	TidScan(t1)
	SeqScan(t2)
	IndexScan(t3 t3_pkey)
	BitmapScan(t4 t4_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.167 UTC [542126] STATEMENT:  /*+TidScan(t1)SeqScan(t2)IndexScan(t3 t3_pkey)BitmapScan(t4 t4_pkey)
	SeqScan(r3)*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.170 UTC [542126] LOG:  available indexes for IndexScan(b1t3): t3_pkey
2023-07-22 04:02:33.170 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.170 UTC [542126] LOG:  available indexes for BitmapScan(b1t4): t4_pkey
2023-07-22 04:02:33.170 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.170 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.170 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.170 UTC [542126] LOG:  available indexes for BitmapScan(b2t1): t1_pkey
2023-07-22 04:02:33.170 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.170 UTC [542126] LOG:  available indexes for IndexScan(b2t4): t4_pkey
2023-07-22 04:02:33.170 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.170 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.170 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.171 UTC [542126] LOG:  available indexes for IndexScan(b3t1): t1_pkey
2023-07-22 04:02:33.171 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.171 UTC [542126] LOG:  available indexes for BitmapScan(b3t2): t2_pkey
2023-07-22 04:02:33.171 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.171 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b3t1 t1_pkey)
	BitmapScan(b3t2 t2_pkey)
	TidScan(b3t3)
	SeqScan(b3t4)
	SeqScan(r3_)
	not used hint:
	TidScan(b1t1)
	SeqScan(b1t2)
	IndexScan(b1t3 t3_pkey)
	BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)
	TidScan(b2t2)
	SeqScan(b2t3)
	IndexScan(b2t4 t4_pkey)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.171 UTC [542126] STATEMENT:  /*+TidScan(b1t1)SeqScan(b1t2)IndexScan(b1t3 t3_pkey)BitmapScan(b1t4 t4_pkey)
	BitmapScan(b2t1 t1_pkey)TidScan(b2t2)SeqScan(b2t3)IndexScan(b2t4 t4_pkey)
	IndexScan(b3t1 t1_pkey)BitmapScan(b3t2 t2_pkey)TidScan(b3t3)SeqScan(b3t4)
	SeqScan(r3_)*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.172 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(v1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.172 UTC [542126] STATEMENT:  /*+BitmapScan(v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.173 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(v1t1)
	BitmapScan(v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.173 UTC [542126] STATEMENT:  /*+SeqScan(v1t1)BitmapScan(v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.173 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(r4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.173 UTC [542126] STATEMENT:  /*+BitmapScan(r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.174 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(r4t1)
	BitmapScan(r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.174 UTC [542126] STATEMENT:  /*+SeqScan(r4t1)BitmapScan(r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.174 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.174 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 04:02:33.174 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.174 UTC [542126] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1')) AS t1 (c1) WHERE t1.c1 = 1;
2023-07-22 04:02:33.174 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(t1 t2)
	
2023-07-22 04:02:33.174 UTC [542126] STATEMENT:  /*+SeqScan(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.174 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	SeqScan(*VALUES*)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.174 UTC [542126] STATEMENT:  /*+SeqScan(*VALUES*)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t2 (c1, c2) WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.175 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.175 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:02:33.175 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.175 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.175 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.175 UTC [542126] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.175 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.175 UTC [542126] STATEMENT:  /*+IndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:02:33.175 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.175 UTC [542126] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 04:02:33.175 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.175 UTC [542126] STATEMENT:  /*+BitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.176 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.176 UTC [542126] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:33.176 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.176 UTC [542126] STATEMENT:  /*+TidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid IN ('(1,1)', '(2,2)', '(3,3)');
2023-07-22 04:02:33.176 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.176 UTC [542126] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:02:33.176 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.176 UTC [542126] STATEMENT:  /*+NoSeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.176 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.176 UTC [542126] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.177 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.177 UTC [542126] STATEMENT:  /*+NoIndexScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:02:33.177 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.177 UTC [542126] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c3 < 10;
2023-07-22 04:02:33.177 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.177 UTC [542126] STATEMENT:  /*+NoBitmapScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.177 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.177 UTC [542126] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:33.177 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.177 UTC [542126] STATEMENT:  /*+NoTidScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.177 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.177 UTC [542126] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.178 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.178 UTC [542126] STATEMENT:  /*+IndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:02:33.178 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.178 UTC [542126] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.178 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.178 UTC [542126] STATEMENT:  /*+NoIndexOnlyScan(t1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.t1 WHERE t1.c1 >= 1;
2023-07-22 04:02:33.179 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_i3
2023-07-22 04:02:33.179 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.179 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.179 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.179 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_i3 ti1_i2
2023-07-22 04:02:33.179 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.179 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.179 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_i3
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_i3 ti1_i2
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE ti1.c2 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.180 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:02:33.180 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.180 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:02:33.181 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i3 ti1_i2
2023-07-22 04:02:33.181 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:02:33.181 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i3 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.181 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i3 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:02:33.181 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:02:33.181 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:02:33.181 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.181 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_i4 ti1_i3 ti1_i2 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE ti1.c2 >= 1;
2023-07-22 04:02:33.186 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_btree
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_hash
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_gist
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_gin
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.186 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.186 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_expr
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_uniq
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_multi
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.187 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.187 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_ts
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_c2_key
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_hash
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.188 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.188 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_gist
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_gin
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_expr
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_uniq
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.189 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.189 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_multi
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_ts
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_c2_key
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.190 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.190 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 < 100 AND c2 = 1 AND lower(c4) = '1' AND to_tsvector('english', c4) @@ 'a & b' AND ctid = '(1,1)';
2023-07-22 04:02:33.191 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_hash
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_hash)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_hash)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gist
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gist)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_gin
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.191 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_gin)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.191 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_gin)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.192 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_expr
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 04:02:33.192 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_expr)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_expr)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 < 100;
2023-07-22 04:02:33.192 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 04:02:33.192 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/
	EXPLAIN (COSTS false) SELECT c4 FROM s1.ti1 WHERE lower(c4) >= '1';
2023-07-22 04:02:33.192 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_uniq
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.192 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_uniq)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_uniq)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.192 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_multi
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.192 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_multi)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.192 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_multi)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.193 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_ts
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 04:02:33.193 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_ts)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_ts)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE to_tsvector('english', c4) @@ 'a & b';
2023-07-22 04:02:33.193 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.193 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.193 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_c2_key
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 04:02:33.193 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_c2_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_c2_key)*/
	EXPLAIN (COSTS false) SELECT c2 FROM s1.ti1 WHERE c2 >= 1;
2023-07-22 04:02:33.193 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_pred
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.193 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.193 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.196 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_pred
2023-07-22 04:02:33.196 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.196 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.196 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.199 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pred
2023-07-22 04:02:33.199 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.199 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pred)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.199 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pred)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.202 UTC [542126] LOG:  available indexes for IndexScan(ti1):
2023-07-22 04:02:33.202 UTC [542126] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.202 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.202 UTC [542126] STATEMENT:  /*+IndexScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.204 UTC [542126] LOG:  available indexes for BitmapScan(ti1):
2023-07-22 04:02:33.204 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.204 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.204 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT * FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.207 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1):
2023-07-22 04:02:33.207 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.207 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.207 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 not_exist)*/ EXPLAIN (COSTS true) SELECT c1 FROM s1.ti1 WHERE c1 = 100;
2023-07-22 04:02:33.210 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.210 UTC [542126] STATEMENT:  /*+TidScan(t1)*/ EXPLAIN (COSTS true) SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.213 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.213 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 WHERE c1 = 100;
2023-07-22 04:02:33.213 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	BitmapScan(t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.213 UTC [542126] STATEMENT:  /*+SeqScan(t1)BitmapScan(t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:33.213 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.213 UTC [542126] STATEMENT:  /*+SeqScan(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:33.214 UTC [542126] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:02:33.214 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.214 UTC [542126] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:02:33.214 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.214 UTC [542126] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 04:02:33.214 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.214 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	TidScan(b4t1)
	not used hint:
	SeqScan(b1t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.214 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	*/
	EXPLAIN (COSTS false) 
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  available indexes for BitmapScan(b4t2): t2_pkey
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	SeqScan(b2t2)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	BitmapScan(b4t2 t2_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)SeqScan(b2t2)IndexScan(b3t2 t2_pkey)BitmapScan(b4t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 JOIN s1.t2 b2t2 ON(b2t1.c1 = b2t2.c1) WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 JOIN s1.t2 b4t2 ON(b4t1.c1 = b4t2.c1) WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.215 UTC [542126] LOG:  available indexes for IndexScan(b2t1): t1_pkey
2023-07-22 04:02:33.215 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.216 UTC [542126] LOG:  available indexes for BitmapScan(b3t1): t1_pkey
2023-07-22 04:02:33.216 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.216 UTC [542126] LOG:  available indexes for IndexScan(b3t2): t2_pkey
2023-07-22 04:02:33.216 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.216 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(b1t1)
	TidScan(b1t2)
	IndexScan(b2t1 t1_pkey)
	BitmapScan(b3t1 t1_pkey)
	IndexScan(b3t2 t2_pkey)
	TidScan(b4t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.216 UTC [542126] STATEMENT:  /*+SeqScan(b1t1)IndexScan(b2t1 t1_pkey)BitmapScan(b3t1 t1_pkey)TidScan(b4t1)
	TidScan(b1t2)IndexScan(b3t2 t2_pkey)
	*/
	EXPLAIN (COSTS false) 
	WITH cte1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 JOIN s1.t2 b1t2 ON(b1t1.c1 = b1t2.c1) WHERE b1t1.c1 = 1)
	SELECT max(b3t1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	                  ) FROM s1.t1 b3t1 JOIN s1.t2 b3t2 ON(b3t1.c1 = b3t2.c1) JOIN cte1 ON(b3t1.c1 = cte1.c1) WHERE b3t1.c1 = (
	SELECT max(b4t1.c1) FROM s1.t1 b4t1 WHERE b4t1.c1 = 1);
2023-07-22 04:02:33.216 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.216 UTC [542126] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM ONLY s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.217 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.217 UTC [542126] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.217 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.217 UTC [542126] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.217 UTC [542126] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 04:02:33.217 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.217 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.217 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE ONLY s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.217 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.217 UTC [542126] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.218 UTC [542126] LOG:  available indexes for IndexScan(p1): p1_pkey
2023-07-22 04:02:33.218 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.218 UTC [542126] LOG:  available indexes for IndexScan(p1c1): p1c1_pkey
2023-07-22 04:02:33.218 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.218 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.218 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_pkey)*/
	EXPLAIN (COSTS false) UPDATE s1.p1 SET c4 = c4 WHERE c1 = 1;
2023-07-22 04:02:33.218 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.218 UTC [542126] STATEMENT:  /*+IndexScan(p1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.219 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.219 UTC [542126] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.220 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.220 UTC [542126] STATEMENT:  /*+IndexScan(p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.220 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2c1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.220 UTC [542126] STATEMENT:  /*+IndexScan(p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.223 UTC [542126] LOG:  available indexes for IndexScan(p1): p1_parent
2023-07-22 04:02:33.223 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 04:02:33.223 UTC [542126] LOG:  available indexes for IndexScan(p1c1): p1c1_c4_expr_idx
2023-07-22 04:02:33.223 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 04:02:33.223 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_parent)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.223 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_parent)*/ EXPLAIN SELECT c4 FROM s1.p1 WHERE c2 * 2 < 100 AND c1 < 10;
2023-07-22 04:02:33.226 UTC [542126] LOG:  available indexes for IndexScan(p1): p1_i2
2023-07-22 04:02:33.226 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:02:33.226 UTC [542126] LOG:  available indexes for IndexScan(p1c1):
2023-07-22 04:02:33.226 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:02:33.226 UTC [542126] LOG:  available indexes for IndexScan(p1c2):
2023-07-22 04:02:33.226 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:02:33.226 UTC [542126] LOG:  available indexes for IndexScan(p1c3):
2023-07-22 04:02:33.226 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:02:33.226 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1 p1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.226 UTC [542126] STATEMENT:  /*+IndexScan(p1 p1_i2)*/ EXPLAIN SELECT c2 FROM s1.p1 WHERE c2 = 1;
2023-07-22 04:02:33.229 UTC [542126] LOG:  available indexes for IndexScan(p2):
2023-07-22 04:02:33.229 UTC [542126] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.229 UTC [542126] LOG:  available indexes for IndexScan(p2c1): p2c1_pkey
2023-07-22 04:02:33.229 UTC [542126] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.229 UTC [542126] LOG:  available indexes for IndexScan(p2c1c1):
2023-07-22 04:02:33.229 UTC [542126] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.229 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2 p2c1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.229 UTC [542126] STATEMENT:  /*+IndexScan(p2 p2c1_pkey)*/ EXPLAIN (COSTS true) SELECT * FROM s1.p2 WHERE c1 = 1;
2023-07-22 04:02:33.231 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	IndexScan(ti1)
	error hint:
	
2023-07-22 04:02:33.231 UTC [542126] STATEMENT:  /*+IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	BitmapScan(ti1)
	IndexScan(ti1)
	error hint:
	
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+BitmapScan(ti1) IndexScan(ti1) BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_btree
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_btree)
	not used hint:
	duplication hint:
	BitmapScan(ti1 ti1_hash)
	IndexScan(ti1 ti1_pkey)
	error hint:
	
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_hash) IndexScan(ti1 ti1_pkey) BitmapScan(ti1 ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	SeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+SeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.232 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.232 UTC [542126] STATEMENT:  /*+SeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	SeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+SeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+IndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_pkey
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_btree ti1_pkey
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+BitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_pkey
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.233 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.233 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  available indexes for BitmapScan(ti1): ti1_btree ti1_pkey
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	BitmapScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+BitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	TidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+TidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+TidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	TidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+TidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoSeqScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+NoSeqScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoSeqScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+NoSeqScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.234 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoIndexScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.234 UTC [542126] STATEMENT:  /*+NoIndexScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoIndexScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoBitmapScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoBitmapScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoBitmapScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoBitmapScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoTidScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoTidScan(ti1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.235 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoTidScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.235 UTC [542126] STATEMENT:  /*+NoTidScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.236 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_pkey
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  available indexes for IndexOnlyScan(ti1): ti1_btree ti1_pkey
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexOnlyScan(ti1 ti1_pkey ti1_btree)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+IndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 >= 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	NoIndexOnlyScan(ti1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+NoIndexOnlyScan(ti1)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey)
	
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.236 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)
	
2023-07-22 04:02:33.236 UTC [542126] STATEMENT:  /*+NoIndexOnlyScan(ti1 ti1_pkey ti1_btree)*/
	EXPLAIN (COSTS false) SELECT c1 FROM s1.ti1 WHERE c1 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(ti1): ti1_c2_key
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_.*_key)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_.*_key)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(ti1): ti1_i4 ti1_i3 ti1_i2 ti1_i1
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 ti1_i.)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(ti1 ti1_i.)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(ti1):
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(ti1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(ti1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(p1): p1_pkey
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_pkey
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 .*pkey)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 .*pkey)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(p1): p1_i2 p1_i
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  available indexes for IndexScanRegexp(p1c1): p1c1_i p1c1_c4_expr_idx
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.237 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 p1.*i)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.237 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 p1.*i)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScanRegexp(p1):
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScanRegexp(p1c1):
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScanRegexp(p1 no.*_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScanRegexp(p1 no.*_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 WHERE c1 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScan(ti1):
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_i2 ti1_i1
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 ti1_i2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i1 ti1_i2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScan(ti1): ti1_i1
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 ti1_i1 not_exist)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 ti1_i1 not_exist)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  available indexes for IndexScan(ti1):
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.238 UTC [542126] LOG:  pg_hint_plan:
	used hint:
	IndexScan(ti1 not_exist1 not_exist2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.238 UTC [542126] STATEMENT:  /*+IndexScan(ti1 not_exist1 not_exist2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ti1 WHERE c2 = 1;
2023-07-22 04:02:33.258 UTC [542012] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:02:33.259 UTC [542012] LOG:  parameter "session_preload_libraries" removed from configuration file, reset to default
2023-07-22 04:02:33.287 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.287 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.288 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.288 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:02:33.289 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t_1 t_2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.289 UTC [542198] STATEMENT:  /*+HashJoin(t_1 t_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:02:33.290 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.290 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.291 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s1.t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.291 UTC [542198] STATEMENT:  /*+HashJoin(s1.t1 s1.t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.292 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.292 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.293 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t3 t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.293 UTC [542198] STATEMENT:  /*+HashJoin(t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.294 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.294 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.296 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 04:02:33.296 UTC [542198] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.298 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(s1.t1 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.298 UTC [542198] STATEMENT:  /*+HashJoin(s1.t1 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.299 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(s2t1 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.299 UTC [542198] STATEMENT:  /*+HashJoin(t1 s2t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 04:02:33.302 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.302 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.304 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.304 UTC [542198] STATEMENT:  /*+NestLoop(st1 st2)HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.305 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.305 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.306 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	
2023-07-22 04:02:33.306 UTC [542198] STATEMENT:  /*+HashJoin(t1 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.307 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1)
	HashJoin(t2 t2)
	
2023-07-22 04:02:33.307 UTC [542198] STATEMENT:  /*+HashJoin(t1 t1)HashJoin(t2 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.311 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(t1 t1 t2 t2)
	
2023-07-22 04:02:33.311 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.312 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.312 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.316 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.316 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.317 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.317 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.326 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.326 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.328 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.328 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 04:02:33.329 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.329 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.330 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.330 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.330 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(*VALUES* t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.330 UTC [542198] STATEMENT:  /*+NestLoop(*VALUES* t2)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.331 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(c1 t1)
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.331 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)HashJoin(t1 c1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 04:02:33.332 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.332 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.332 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.332 UTC [542198] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.333 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(st1 st2)
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.333 UTC [542198] STATEMENT:  /*+MergeJoin(t1 t2)NestLoop(st1 st2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 04:02:33.338 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(st2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.338 UTC [542198] STATEMENT:  /*+HashJoin(t1 st2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:02:33.338 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.338 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:02:33.342 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.342 UTC [542198] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:02:33.346 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.346 UTC [542198] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:02:33.348 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.348 UTC [542198] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:02:33.349 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(bmt3 bmt4)
	HashJoin(bmt2 bmt3 bmt4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.349 UTC [542198] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	MergeJoin(bmt4 bmt3)HashJoin(bmt4 bmt3 bmt2)NestLoop(bmt1 bmt2 bmt3 bmt4)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:02:33.351 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.351 UTC [542198] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.355 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.355 UTC [542198] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.359 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.359 UTC [542198] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.367 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.367 UTC [542198] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 04:02:33.368 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(bmt1 c1)
	Leading(c1 bmt1)
	not used hint:
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.368 UTC [542198] STATEMENT:  /*+
	Leading(c1 bmt1)
	HashJoin(bmt1 c1)
	HashJoin(b1t1 c1)
	HashJoin(b2t1 c1)
	HashJoin(b3t1 c1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.370 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.370 UTC [542198] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.373 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	MergeJoin(bmt4 c1)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	HashJoin(bmt3 bmt4 c1)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.373 UTC [542198] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.375 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	MergeJoin(bmt4 c1)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.375 UTC [542198] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.377 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r1 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.377 UTC [542198] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r1)
	MergeJoin(t4 t3 t2 t1 r1)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.378 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	NestLoop(b1t2 b1t3 b1t4)
	HashJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r1_)
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.378 UTC [542198] STATEMENT:  /*+
	Leading(b1t4 b1t3 b1t2 b1t1 r1_)
	MergeJoin(b1t4 b1t3 b1t2 b1t1 r1_)
	HashJoin(b1t4 b1t3 b1t2 b1t1)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.380 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.380 UTC [542198] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.381 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r2 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.381 UTC [542198] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r2)
	MergeJoin(t4 t3 t2 t1 r2)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.382 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.382 UTC [542198] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.383 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.383 UTC [542198] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r2_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.385 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.385 UTC [542198] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.386 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.386 UTC [542198] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.386 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t3 t4)
	NestLoop(t2 t3 t4)
	HashJoin(t1 t2 t3 t4)
	MergeJoin(r3 t1 t2 t3 t4)
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.386 UTC [542198] STATEMENT:  /*+
	Leading(t4 t3 t2 t1 r3)
	MergeJoin(t4 t3 t2 t1 r3)
	HashJoin(t4 t3 t2 t1)
	NestLoop(t4 t3 t2)
	MergeJoin(t4 t3)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.388 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b2t1 b2t2 b2t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.388 UTC [542198] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.389 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b3t1 b3t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.389 UTC [542198] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.389 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	HashJoin(b1t1 b1t2 b1t3)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.389 UTC [542198] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	MergeJoin(b1t1 b1t2)
	HashJoin(b1t1 b1t2 b1t3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4 r3_)
	MergeJoin(b2t1 b2t2)
	HashJoin(b2t1 b2t2 b2t3)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4 r3_)
	MergeJoin(b3t1 b3t2)
	HashJoin(b3t1 b3t2 b3t3)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.390 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 04:02:33.390 UTC [542198] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.390 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.390 UTC [542198] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.391 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(r4t1 r4t1)
	
2023-07-22 04:02:33.391 UTC [542198] STATEMENT:  /*+HashJoin(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.391 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.391 UTC [542198] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.392 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	HashJoin(t1 t3)
	NestLoop(t1 t2 t3)
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.392 UTC [542198] STATEMENT:  /*+ Leading(t3 t1 t2) HashJoin(t3 t1)NestLoop(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.392 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(*VALUES* t1)
	NestLoop(*VALUES* t1 t2)
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.392 UTC [542198] STATEMENT:  /*+ Leading(*VALUES* t1 t2) HashJoin(*VALUES* t1)NestLoop(*VALUES* t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.393 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	HashJoin(t2 t3 t4)
	MergeJoin(t1 t2 t3 t4)
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.393 UTC [542198] STATEMENT:  /*+ Leading(t4 t3 t2 t1) NestLoop(t4 t3)HashJoin(t4 t3 t2)MergeJoin(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.393 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	NestLoop(t3 t4)
	duplication hint:
	error hint:
	HashJoin(*VALUES* t2 t3)
	MergeJoin(*VALUES* t1 t2 t3)
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 04:02:33.393 UTC [542198] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) NestLoop(t4 t3)HashJoin(*VALUES* t3 t2)MergeJoin(*VALUES* t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.394 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.394 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.394 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.394 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.394 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.394 UTC [542198] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.394 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.394 UTC [542198] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.ctid = '(1,1)';
2023-07-22 04:02:33.395 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.395 UTC [542198] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.395 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.395 UTC [542198] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.395 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.395 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.395 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.395 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.396 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.396 UTC [542198] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.396 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.396 UTC [542198] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.396 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.396 UTC [542198] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.396 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.396 UTC [542198] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.396 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.396 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.397 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.397 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.397 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.397 UTC [542198] STATEMENT:  /*+MergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.397 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.397 UTC [542198] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.397 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.397 UTC [542198] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.397 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.397 UTC [542198] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.399 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p1 p2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.399 UTC [542198] STATEMENT:  /*+MergeJoin(p1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:02:33.399 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p1c1 p2c1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.399 UTC [542198] STATEMENT:  /*+MergeJoin(p1c1 p2c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:02:33.400 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(p2 pt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.400 UTC [542198] STATEMENT:  /*+MergeJoin(pt1 p2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 04:02:33.400 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	MergeJoin(p2c1 pt1_c1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.400 UTC [542198] STATEMENT:  /*+MergeJoin(pt1_c1 p2c1)*/ /* will ignored */
	EXPLAIN (COSTS false) SELECT * FROM s1.pt1, s1.p2 WHERE pt1.c1 = p2.c1;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+MergeJoin(t1 t2)HashJoin(t1 t2)NestLoop(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	MergeJoin(t1 t2)
	HashJoin(t1 t2)
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+MergeJoin(t2 t1)HashJoin(t1 t2)NestLoop(t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+HashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+MergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.401 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoNestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.401 UTC [542198] STATEMENT:  /*+NoNestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoHashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NoHashJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoMergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NoMergeJoin(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop()
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NestLoop()*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	NestLoop(t1)
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NestLoop(t1)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	SELECT * FROM s1.t1, s1.t2 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2 t3)*/
	SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE false;
2023-07-22 04:02:33.402 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NestLoop(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.402 UTC [542198] STATEMENT:  /*+NestLoop(t1 t2)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1 FULL OUTER JOIN s1.t2 ON (t1.c1 = t2.c1);
2023-07-22 04:02:33.407 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.407 UTC [542198] STATEMENT:  /*+ nomemoize(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 04:02:33.407 UTC [542198] LOG:  pg_hint_plan:
	used hint:
	NoMemoize(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.407 UTC [542198] STATEMENT:  /*+ nomemoize(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3 WHERE t1.val = t2.val and t2.id = t3.id;
2023-07-22 04:02:33.414 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.414 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.414 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.414 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 04:02:33.415 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t_4 t_2 t_3 t_1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.415 UTC [542216] STATEMENT:  /*+Leading(t_4 t_2 t_3 t_1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 t_1, s1.t2 t_2, s1.t3 t_3, s1.t4 t_4 WHERE t_1.c1 = t_2.c1 AND t_1.c1 = t_3.c1 AND t_1.c1 = t_4.c1;
2023-07-22 04:02:33.415 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.415 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.416 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t4 s1.t2 s1.t3 s1.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.416 UTC [542216] STATEMENT:  /*+Leading(s1.t4 s1.t2 s1.t3 s1.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.416 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.416 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.417 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t5 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.417 UTC [542216] STATEMENT:  /*+Leading(t5 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.417 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.417 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.418 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1 t2 t3 t1)
	
2023-07-22 04:02:33.418 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.419 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(s1.t1 t2 t3 s2.t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.419 UTC [542216] STATEMENT:  /*+Leading(s1.t1 t2 t3 s2.t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.419 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(s2t1 t1 t3 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.419 UTC [542216] STATEMENT:  /*+Leading(s2t1 t1 t3 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s2.t1 s2t1 WHERE s1.t1.c1 = t2.c1 AND s1.t1.c1 = t3.c1 AND s1.t1.c1 = s2t1.c1;
2023-07-22 04:02:33.421 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.421 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.422 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(st1 st2 st3 st4)
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.422 UTC [542216] STATEMENT:  /*+Leading(st1 st2 st3 st4)Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2, s1.t3 st3, s1.t4 st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1) FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.422 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.422 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.423 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4)
	
2023-07-22 04:02:33.423 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.424 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t4)
	
2023-07-22 04:02:33.424 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.424 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t3 t1 t4 t2 t3 t1)
	
2023-07-22 04:02:33.424 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1 t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.425 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t4 t2 t2 t4)
	
2023-07-22 04:02:33.425 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t2 t4)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.425 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.425 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.427 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.427 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p1 t1, s1.p1 t2, s1.p1 t3, s1.p1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.428 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.428 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.ul1 t1, s1.ul1 t2, s1.ul1 t3, s1.ul1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.435 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.435 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM tm1 t1, tm1 t2, tm1 t3, tm1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.437 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.437 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM pg_catalog.pg_class t1, pg_catalog.pg_class t2, pg_catalog.pg_class t3, pg_catalog.pg_class t4 WHERE t1.oid = t2.oid AND t1.oid = t3.oid AND t1.oid = t4.oid;
2023-07-22 04:02:33.438 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.438 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.f1() t1, s1.f1() t2, s1.f1() t3, s1.f1() t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.439 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.439 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t1 (c1, c2, c3, c4), s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.440 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(ct4 ct3 ct2 ct1)
	Leading(st4 st3 st2 st1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.440 UTC [542216] STATEMENT:  /*+Leading(ct4 ct3 ct2 ct1)Leading(st4 st3 st2 st1)*/
	EXPLAIN (COSTS false) WITH c1(c1) AS (SELECT st1.c1 FROM s1.t1 st1, s1.t1 st2, s1.t1 st3, s1.t1 st4 WHERE st1.c1 = st2.c1 AND st1.c1 = st3.c1 AND st1.c1 = st4.c1) SELECT * FROM c1 ct1, c1 ct2, c1 ct3, c1 ct4 WHERE ct1.c1 = ct2.c1 AND ct1.c1 = ct3.c1 AND ct1.c1 = ct4.c1;
2023-07-22 04:02:33.442 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.442 UTC [542216] STATEMENT:  /*+Leading(t4 t3 t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1 t2, s1.v1 t3, s1.v1 t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.443 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 v1t1_ v1t1 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.443 UTC [542216] STATEMENT:  /*+Leading(t4 v1t1_ v1t1 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 t1, s1.v1_ t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.444 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(st4 t2 t3 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.444 UTC [542216] STATEMENT:  /*+Leading(st4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 04:02:33.445 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.445 UTC [542216] STATEMENT:  /*+Leading(t4 t2 t3 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, (SELECT t4.c1 FROM s1.t4) st4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = st4.c1;
2023-07-22 04:02:33.447 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.447 UTC [542216] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:02:33.450 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.450 UTC [542216] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	;
2023-07-22 04:02:33.451 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.451 UTC [542216] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:02:33.452 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.452 UTC [542216] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN (COSTS false) SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = sbmt2.c1 AND sbmt2.ctid = '(1,1)' AND bmt1.c1 = sbmt3.c1 AND sbmt3.ctid = '(1,1)' AND bmt1.c1 = sbmt4.c1 AND sbmt4.ctid = '(1,1)';
2023-07-22 04:02:33.454 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.454 UTC [542216] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.457 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.457 UTC [542216] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.461 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.461 UTC [542216] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.469 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.469 UTC [542216] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1
	;
2023-07-22 04:02:33.470 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.470 UTC [542216] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = 1
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = 1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = 1
	)
	;
2023-07-22 04:02:33.471 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.471 UTC [542216] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)'
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.474 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.474 UTC [542216] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = b2t2.c1 AND b2t2.ctid = '(1,1)' AND b2t1.c1 = b2t3.c1 AND b2t3.ctid = '(1,1)' AND b2t1.c1 = b2t4.c1 AND b2t4.ctid = '(1,1)'
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.ctid = '(1,1)' AND b3t1.c1 = b3t2.c1 AND b3t2.ctid = '(1,1)' AND b3t1.c1 = b3t3.c1 AND b3t3.ctid = '(1,1)' AND b3t1.c1 = b3t4.c1 AND b3t4.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.477 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.477 UTC [542216] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN (COSTS false)
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.ctid = '(1,1)' AND b1t1.c1 = b1t2.c1 AND b1t2.ctid = '(1,1)' AND b1t1.c1 = b1t3.c1 AND b1t3.ctid = '(1,1)' AND b1t1.c1 = b1t4.c1 AND b1t4.ctid = '(1,1)'
	)
	SELECT max(bmt1.c1), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1 WHERE b2t1.ctid = '(1,1)' AND b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.ctid = '(1,1)' AND bmt1.c1 = bmt2.c1 AND bmt2.ctid = '(1,1)' AND bmt1.c1 = bmt3.c1 AND bmt3.ctid = '(1,1)' AND bmt1.c1 = bmt4.c1 AND bmt4.ctid = '(1,1)' AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1 WHERE b3t1.ctid = '(1,1)'
	)
	;
2023-07-22 04:02:33.478 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.478 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r1) */
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.479 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.479 UTC [542216] STATEMENT:  /*+ Leading(b1t1 b1t2 b1t3 b1t4 r1_) */
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.481 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.481 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.482 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.482 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r2) */
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.484 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.484 UTC [542216] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.484 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.484 UTC [542216] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r2_)
	Leading(b2t1 b2t2 b2t3 b2t4 r2_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.486 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.486 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.487 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.487 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.487 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t4 t3 t2 t1 r3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.487 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1 r3) */
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.490 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	not used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.490 UTC [542216] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.490 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.490 UTC [542216] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.490 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	not used hint:
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.490 UTC [542216] STATEMENT:  /*+
	Leading(b1t1 b1t2 b1t3 b1t4 r3_)
	Leading(b2t1 b2t2 b2t3 b2t4 r3_)
	Leading(b3t1 b3t2 b3t3 b3t4 r3_)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.491 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(v1t1 v1t1)
	
2023-07-22 04:02:33.491 UTC [542216] STATEMENT:  /*+Leading(v1t1 v1t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.492 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.492 UTC [542216] STATEMENT:  /*+Leading(v1t1 v1t1_)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.492 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(r4t1 r4t1)
	
2023-07-22 04:02:33.492 UTC [542216] STATEMENT:  /*+Leading(r4t1 r4t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r4 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.493 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.493 UTC [542216] STATEMENT:  /*+Leading(r4t1 r5t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.493 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.493 UTC [542216] STATEMENT:  /*+ Leading(t3 t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.494 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.494 UTC [542216] STATEMENT:  /*+ Leading(*VALUES* t1 t2) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.494 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.494 UTC [542216] STATEMENT:  /*+ Leading(t4 t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.495 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	
2023-07-22 04:02:33.495 UTC [542216] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) */
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.495 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t3 t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.495 UTC [542216] STATEMENT:  /*+Leading(t3 t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.496 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.496 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.497 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t1 t2 t3)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.497 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.498 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.498 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.498 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 v2t1 v2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.498 UTC [542216] STATEMENT:  /*+Leading(t1 v2t1 v2t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 04:02:33.499 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(v2t1 v2t2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.499 UTC [542216] STATEMENT:  /*+Leading(v2t1 v2t2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.v2 WHERE t1.c1 = v2.c1;
2023-07-22 04:02:33.500 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.500 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.500 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.500 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t3
	  JOIN s1.t2 ON (t3.c1 = t2.c1)
	  JOIN s1.t1 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.501 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.501 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.502 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(p2c1c1 p2c2c1 p2c3c1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.502 UTC [542216] STATEMENT:  /*+Leading(p2c1c1 p2c2c1 p2c3c1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.p2c1 t1
	  JOIN s1.p2c2 t2 ON (t1.c1 = t2.c1)
	  JOIN s1.p2c3 t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.502 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 04:02:33.502 UTC [542216] STATEMENT:  /*+Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.503 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	Leading(t2 t3 t1)
	error hint:
	
2023-07-22 04:02:33.503 UTC [542216] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.503 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 04:02:33.503 UTC [542216] STATEMENT:  /*+Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.503 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t2 t3 t1)
	not used hint:
	duplication hint:
	Leading(t3 t1 t2)
	error hint:
	Leading()
	
2023-07-22 04:02:33.503 UTC [542216] STATEMENT:  /*+Leading(t3 t1 t2)Leading(t2 t3 t1)Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.504 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading()
	
2023-07-22 04:02:33.504 UTC [542216] STATEMENT:  /*+Leading()*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.504 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading(t1)
	
2023-07-22 04:02:33.504 UTC [542216] STATEMENT:  /*+Leading(t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.504 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.504 UTC [542216] STATEMENT:  /*+Leading(t1 t2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.505 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(t1 t2 t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.505 UTC [542216] STATEMENT:  /*+Leading(t1 t2 t3)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1
	  JOIN s1.t2 ON (t1.c1 = t2.c1)
	  JOIN s1.t3 ON (t1.c1 = t3.c1);
2023-07-22 04:02:33.505 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2))
	
2023-07-22 04:02:33.505 UTC [542216] STATEMENT:  /*+Leading((t2))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.505 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading((t2 t3))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.505 UTC [542216] STATEMENT:  /*+Leading((t2 t3))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.506 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Leading((t2 t3 t4))
	
2023-07-22 04:02:33.506 UTC [542216] STATEMENT:  /*+Leading((t2 t3 t4))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.506 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading(((t1 t2) (t3 t4)))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.506 UTC [542216] STATEMENT:  /*+Leading(((t1 t2) (t3 t4)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.507 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading((((t1 t3) t4) t2))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.507 UTC [542216] STATEMENT:  /*+Leading((((t1 t3) t4) t2)))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.507 UTC [542216] LOG:  pg_hint_plan:
	used hint:
	Leading((t1 (t3 (t4 t2))))
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.507 UTC [542216] STATEMENT:  /*+Leading((t1 (t3 (t4 t2))))*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, s1.t2, s1.t3, s1.t4 WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.515 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.515 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.517 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.517 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.519 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.519 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.519 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.519 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.522 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.522 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.522 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.522 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.525 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.525 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.526 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.526 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.527 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.527 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.530 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.530 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.531 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.531 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.531 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_nestloop off)
	Set(enable_tidscan off)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.531 UTC [542220] STATEMENT:  /*+
	Set(enable_tidscan off)Set(enable_nestloop off)
	*/
	EXPLAIN (COSTS false) UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1 AND ctid = '(1,1)';
2023-07-22 04:02:33.532 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(123456789012345678901234567890123456789012345678901234567890123 1)
	
2023-07-22 04:02:33.532 UTC [542220] STATEMENT:  /*+Set(1234567890123456789012345678901234567890123456789012345678901234 1)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.532 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)
	
2023-07-22 04:02:33.532 UTC [542220] STATEMENT:  /*+Set(constraint_exclusion 1234567890123456789012345678901234567890123456789012345678901234)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.533 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(block_size 16384)
	
2023-07-22 04:02:33.533 UTC [542220] STATEMENT:  /*+Set(block_size 16384)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.533 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_mode off)
	
2023-07-22 04:02:33.533 UTC [542220] STATEMENT:  /*+Set(archive_mode off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.533 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(archive_timeout 0)
	
2023-07-22 04:02:33.533 UTC [542220] STATEMENT:  /*+Set(archive_timeout 0)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.533 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_connections off)
	
2023-07-22 04:02:33.533 UTC [542220] STATEMENT:  /*+Set(log_connections off)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.533 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(log_min_messages WARNING)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.533 UTC [542220] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.536 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Set(log_min_messages WARNING)
	
2023-07-22 04:02:33.536 UTC [542220] STATEMENT:  /*+Set(log_min_messages WARNING)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.536 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_seqscan on)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.536 UTC [542220] STATEMENT:  /*+Set(enable_seqscan on)*/
	SELECT * FROM s1.t1 WHERE t1.c1 = 1;
2023-07-22 04:02:33.539 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(enable_indexscan off)
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	
2023-07-22 04:02:33.539 UTC [542220] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan off)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:02:33.540 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	Set(client_min_messages DEBUG2)
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	
2023-07-22 04:02:33.540 UTC [542220] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBUG2)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:02:33.540 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(enable_indexscan on)
	error hint:
	Set(enable_indexscan o)
	
2023-07-22 04:02:33.540 UTC [542220] STATEMENT:  /*+Set(enable_indexscan on)Set(enable_indexscan o)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:02:33.540 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	Set(client_min_messages DEBUG5)
	Set(client_min_messages WARNING)
	error hint:
	Set(client_min_messages DEBU)
	
2023-07-22 04:02:33.540 UTC [542220] STATEMENT:  /*+Set(client_min_messages DEBUG5)Set(client_min_messages WARNING)Set(client_min_messages DEBU)*/
	SELECT * FROM s1.t1 WHERE false;
2023-07-22 04:02:33.540 UTC [542220] LOG:  pg_hint_plan:
	used hint:
	IndexScan(a)
	not used hint:
	SeqScan(c)
	duplication hint:
	SeqScan(a)
	error hint:
	NestLoop(a)
	
2023-07-22 04:02:33.540 UTC [542220] STATEMENT:  /*+SeqScan(a)IndexScan(a)SeqScan(c)NestLoop(a) */
	SELECT * FROM s1.t1 a, s1.t2 b WHERE false;
2023-07-22 04:02:33.549 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.549 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.551 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.551 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:02:33.554 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t_1 t_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.554 UTC [542224] STATEMENT:  /*+Rows(t_1 t_2 #1)*/
	EXPLAIN SELECT * FROM s1.t1 t_1, s1.t2 t_2 WHERE t_1.c1 = t_2.c1;
2023-07-22 04:02:33.557 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.557 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.560 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s1.t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.560 UTC [542224] STATEMENT:  /*+Rows(s1.t1 s1.t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.562 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.562 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.565 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.565 UTC [542224] STATEMENT:  /*+Rows(t3 t4 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.568 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.568 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.573 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 04:02:33.573 UTC [542224] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.576 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(s1.t1 s2.t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.576 UTC [542224] STATEMENT:  /*+Rows(s1.t1 s2.t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 WHERE s1.t1.c1 = s2.t1.c1;
2023-07-22 04:02:33.582 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(s2t1 t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.582 UTC [542224] STATEMENT:  /*+Rows(t1 s2t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s2.t1 s2t1 WHERE s1.t1.c1 = s2t1.c1;
2023-07-22 04:02:33.588 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.588 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.591 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.591 UTC [542224] STATEMENT:  /*+Rows(st1 st2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT *, (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.593 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.593 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.596 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t1 #1)
	
2023-07-22 04:02:33.596 UTC [542224] STATEMENT:  /*+Rows(t1 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.608 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.608 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.615 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.615 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.p1 t1, s1.p1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.620 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.620 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.ul1 t1, s1.ul1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.628 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.628 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM tm1 t1, tm1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.636 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.636 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM t_pg_class t1, t_pg_class t2 WHERE t1.oid = t2.oid;
2023-07-22 04:02:33.642 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.642 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.f1() t1, s1.f1() t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.647 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.647 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.650 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(*VALUES* t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.650 UTC [542224] STATEMENT:  /*+Rows(*VALUES* t2 #1)*/
	EXPLAIN SELECT * FROM (VALUES(1,1,1,'1'), (2,2,2,'2'), (3,3,3,'3')) AS t1 (c1, c2, c3, c4),  s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.656 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(c1 t1 +1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.656 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 c1 +1)*/
	EXPLAIN WITH c1(c1) AS (SELECT max(t1.c1) FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1) SELECT * FROM s1.t1, c1 WHERE t1.c1 = c1.c1;
2023-07-22 04:02:33.661 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t1 t2 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.661 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.664 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.664 UTC [542224] STATEMENT:  /*+Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 t1, s1.v1_ t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.670 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(st1 st2 #1)
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.670 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)Rows(st1 st2 #1)*/
	EXPLAIN (COSTS true) SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1 AND t1.c1 = (SELECT max(st1.c1) FROM s1.t1 st1, s1.t2 st2 WHERE st1.c1 = st2.c1);
2023-07-22 04:02:33.676 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(st2 t1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.676 UTC [542224] STATEMENT:  /*+Rows(t1 st2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:02:33.679 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.679 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, (SELECT t2.c1 FROM s1.t2) st2 WHERE t1.c1 = st2.c1;
2023-07-22 04:02:33.681 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 #1)
	
2023-07-22 04:02:33.681 UTC [542224] STATEMENT:  /*+Rows(t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.684 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 1)
	
2023-07-22 04:02:33.684 UTC [542224] STATEMENT:  /*+Rows(t1 t2 1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.687 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Rows(t1 t2 #notrows)
	
2023-07-22 04:02:33.687 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #notrows)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.691 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.691 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.695 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.695 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.699 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.699 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.703 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.703 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1), (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	), (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	), (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	;
2023-07-22 04:02:33.707 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.707 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.710 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.710 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.713 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.713 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.716 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 #1)
	Rows(bmt2 bmt3 bmt4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.716 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 #1)Rows(bmt4 bmt3 bmt2 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	*/
	EXPLAIN SELECT max(bmt1.c1) FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.720 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.720 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	);
2023-07-22 04:02:33.724 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.724 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	;
2023-07-22 04:02:33.728 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.728 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 04:02:33.732 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(bmt1 bmt2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(bmt1 bmt2 bmt3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 bmt2 bmt3 bmt4)
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(bmt1 bmt2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.732 UTC [542224] STATEMENT:  /*+
	Leading(bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(bmt1 bmt2)HashJoin(bmt1 bmt2 bmt3)NestLoop(bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(bmt1 bmt2 #1)Rows(bmt1 bmt2 bmt3 #1)Rows(bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	  AND bmt1.c1 <> (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	) AND bmt1.c1 <> (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	;
2023-07-22 04:02:33.737 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.737 UTC [542224] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	;
2023-07-22 04:02:33.742 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(c1 c2)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(bmt1 c1 c2)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(bmt1 bmt2 c1 c2)
	MergeJoin(bmt1 bmt2 bmt3 c1 c2)
	HashJoin(bmt1 bmt2 bmt3 bmt4 c1 c2)
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(c1 c2 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(bmt1 c1 c2 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(bmt1 bmt2 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.742 UTC [542224] STATEMENT:  /*+
	Leading(c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(c2 c1)HashJoin(c2 c1 bmt1)NestLoop(c2 c1 bmt1 bmt2)MergeJoin(c2 c1 bmt1 bmt2 bmt3)HashJoin(c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	Rows(c2 c1 #1)Rows(c2 c1 bmt1 #1)Rows(c2 c1 bmt1 bmt2 #1)Rows(c2 c1 bmt1 bmt2 bmt3 #1)Rows(c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1;
2023-07-22 04:02:33.748 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.748 UTC [542224] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 04:02:33.754 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t2 b1t3)
	MergeJoin(b2t3 b2t4)
	MergeJoin(b3t1 b3t4)
	MergeJoin(c2 c3)
	HashJoin(b1t2 b1t3 b1t4)
	HashJoin(b2t1 b2t3 b2t4)
	HashJoin(b3t1 b3t2 b3t4)
	HashJoin(c1 c2 c3)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	NestLoop(b2t1 b2t2 b2t3 b2t4)
	NestLoop(b3t1 b3t2 b3t3 b3t4)
	NestLoop(bmt1 c1 c2 c3)
	MergeJoin(bmt1 bmt2 c1 c2 c3)
	HashJoin(bmt1 bmt2 bmt3 c1 c2 c3)
	NestLoop(bmt1 bmt2 bmt3 bmt4 c1 c2 c3)
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	Rows(b1t2 b1t3 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t1 b3t4 #1)
	Rows(c2 c3 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t4 #1)
	Rows(c1 c2 c3 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	Rows(bmt1 c1 c2 c3 #1)
	Rows(bmt1 bmt2 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 c1 c2 c3 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 c2 c3 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.754 UTC [542224] STATEMENT:  /*+
	Leading(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	Leading(b1t2 b1t3 b1t4 b1t1)
	Leading(b2t3 b2t4 b2t1 b2t2)
	Leading(b3t4 b3t1 b3t2 b3t3)
	MergeJoin(c3 c2)HashJoin(c3 c2 c1)NestLoop(c3 c2 c1 bmt1)MergeJoin(c3 c2 c1 bmt1 bmt2)HashJoin(c3 c2 c1 bmt1 bmt2 bmt3)NestLoop(c3 c2 c1 bmt1 bmt2 bmt3 bmt4)
	MergeJoin(b1t2 b1t3)HashJoin(b1t2 b1t3 b1t4)NestLoop(b1t2 b1t3 b1t4 b1t1)
	MergeJoin(b2t3 b2t4)HashJoin(b2t3 b2t4 b2t1)NestLoop(b2t3 b2t4 b2t1 b2t2)
	MergeJoin(b3t4 b3t1)HashJoin(b3t4 b3t1 b3t2)NestLoop(b3t1 b3t2 b3t3 b3t4)
	Rows(c3 c2 #1)Rows(c3 c2 c1 #1)Rows(c3 c2 c1 bmt1 #1)Rows(c3 c2 c1 bmt1 bmt2 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 #1)Rows(c3 c2 c1 bmt1 bmt2 bmt3 bmt4 #1)
	Rows(b1t2 b1t3 #1)Rows(b1t2 b1t3 b1t4 #1)Rows(b1t2 b1t3 b1t4 b1t1 #1)
	Rows(b2t3 b2t4 #1)Rows(b2t3 b2t4 b2t1 #1)Rows(b2t3 b2t4 b2t1 b2t2 #1)
	Rows(b3t4 b3t1 #1)Rows(b3t4 b3t1 b3t2 #1)Rows(b3t1 b3t2 b3t3 b3t4 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT max(b1t1.c1) FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	, c2 (c1) AS (
	SELECT max(b2t1.c1) FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	, c3 (c1) AS (
	SELECT max(b3t1.c1) FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	)
	SELECT max(bmt1.c1) FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4
	, c1, c2, c3
	                                                                        WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 = c2.c1
	AND bmt1.c1 = c3.c1;
2023-07-22 04:02:33.758 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.758 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 04:02:33.761 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(c1 bmt1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	Rows(bmt1 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.761 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt1)
	Rows(bmt1 c1 #1)
	Rows(b1t1 c1 #1)
	Rows(b2t1 c1 #1)
	Rows(b3t1 c1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1 WHERE b1t1.c1 = 1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, c1 WHERE bmt1.c1 = 1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1 WHERE b3t1.c1 = 1
	);
2023-07-22 04:02:33.764 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.764 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	);
2023-07-22 04:02:33.768 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	not used hint:
	MergeJoin(bmt2 c1)
	HashJoin(bmt1 bmt2 c1)
	Leading(c1 bmt2 bmt1)
	Rows(bmt2 c1 #1)
	Rows(bmt1 bmt2 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.768 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt2 bmt1)
	Leading(b1t2 b1t1)
	Leading(b2t2 b2t1)
	Leading(b3t2 b3t1)
	MergeJoin(c1 bmt2)
	HashJoin(c1 bmt1 bmt2)
	MergeJoin(b1t1 b1t2)
	MergeJoin(b2t1 b2t2)
	MergeJoin(b3t1 b3t2)
	Rows(c1 bmt2 #1)
	Rows(c1 bmt1 bmt2 #1)
	Rows(b1t1 b1t2 #1)
	Rows(b2t1 b2t2 #1)
	Rows(b3t1 b3t2 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2 WHERE b1t1.c1 = b1t2.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2 WHERE b2t1.c1 = b2t2.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, c1 WHERE bmt1.c1 = bmt2.c1
	AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2 WHERE b3t1.c1 = b3t2.c1
	)
	;
2023-07-22 04:02:33.780 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.780 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 04:02:33.792 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	HashJoin(b1t3 b1t4)
	HashJoin(b2t3 b2t4)
	HashJoin(b3t3 b3t4)
	NestLoop(b1t2 b1t3 b1t4)
	NestLoop(b2t2 b2t3 b2t4)
	NestLoop(b3t2 b3t3 b3t4)
	MergeJoin(b1t1 b1t2 b1t3 b1t4)
	MergeJoin(b2t1 b2t2 b2t3 b2t4)
	MergeJoin(b3t1 b3t2 b3t3 b3t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	Rows(b1t3 b1t4 #1)
	Rows(b2t3 b2t4 #1)
	Rows(b3t3 b3t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b2t2 b2t3 b2t4 #1)
	Rows(b3t2 b3t3 b3t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	Rows(b2t1 b2t2 b2t3 b2t4 #1)
	Rows(b3t1 b3t2 b3t3 b3t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.792 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1) 
	Leading(b2t4 b2t3 b2t2 b2t1)
	Leading(b3t4 b3t3 b3t2 b3t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	HashJoin(b1t4 b1t3)
	NestLoop(b1t4 b1t3 b1t2)
	MergeJoin(b1t4 b1t3 b1t2 b1t1)
	HashJoin(b2t4 b2t3)
	NestLoop(b2t4 b2t3 b2t2)
	MergeJoin(b2t4 b2t3 b2t2 b2t1)
	HashJoin(b3t4 b3t3)
	NestLoop(b3t4 b3t3 b3t2)
	MergeJoin(b3t4 b3t3 b3t2 b3t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	Rows(b2t4 b2t3 #1)
	Rows(b2t4 b2t3 b2t2 #1)
	Rows(b2t4 b2t3 b2t2 b2t1 #1)
	Rows(b3t4 b3t3 #1)
	Rows(b3t4 b3t3 b3t2 #1)
	Rows(b3t4 b3t3 b3t2 b3t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1, s1.t2 b2t2, s1.t3 b2t3, s1.t4 b2t4 WHERE b2t1.c1 = b2t2.c1 AND b2t1.c1 = b2t3.c1 AND b2t1.c1 = b2t4.c1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1, s1.t2 b3t2, s1.t3 b3t3, s1.t4 b3t4 WHERE b3t1.c1 = b3t2.c1 AND b3t1.c1 = b3t3.c1 AND b3t1.c1 = b3t4.c1
	);
2023-07-22 04:02:33.804 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.804 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 04:02:33.815 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(b1t3 b1t4)
	HashJoin(b1t2 b1t3 b1t4)
	NestLoop(b1t1 b1t2 b1t3 b1t4)
	Leading(b1t4 b1t3 b1t2 b1t1)
	Rows(b1t3 b1t4 #1)
	Rows(b1t2 b1t3 b1t4 #1)
	Rows(b1t1 b1t2 b1t3 b1t4 #1)
	not used hint:
	MergeJoin(bmt4 c1)
	HashJoin(bmt3 bmt4 c1)
	NestLoop(bmt2 bmt3 bmt4 c1)
	MergeJoin(bmt1 bmt2 bmt3 bmt4 c1)
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 c1 #1)
	Rows(bmt3 bmt4 c1 #1)
	Rows(bmt2 bmt3 bmt4 c1 #1)
	Rows(bmt1 bmt2 bmt3 bmt4 c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.815 UTC [542224] STATEMENT:  /*+
	Leading(c1 bmt4 bmt3 bmt2 bmt1)
	Leading(b1t4 b1t3 b1t2 b1t1)
	MergeJoin(c1 bmt4)
	HashJoin(c1 bmt4 bmt3)
	NestLoop(c1 bmt4 bmt3 bmt2)
	MergeJoin(c1 bmt4 bmt3 bmt2 bmt1)
	MergeJoin(b1t4 b1t3)
	HashJoin(b1t4 b1t3 b1t2)
	NestLoop(b1t4 b1t3 b1t2 b1t1)
	Rows(c1 bmt4 #1)
	Rows(c1 bmt4 bmt3 #1)
	Rows(c1 bmt4 bmt3 bmt2 #1)
	Rows(c1 bmt4 bmt3 bmt2 bmt1 #1)
	Rows(b1t4 b1t3 #1)
	Rows(b1t4 b1t3 b1t2 #1)
	Rows(b1t4 b1t3 b1t2 b1t1 #1)
	*/
	EXPLAIN
	WITH c1 (c1) AS (
	SELECT b1t1.c1 FROM s1.t1 b1t1, s1.t2 b1t2, s1.t3 b1t3, s1.t4 b1t4 WHERE b1t1.c1 = b1t2.c1 AND b1t1.c1 = b1t3.c1 AND b1t1.c1 = b1t4.c1
	)
	SELECT bmt1.c1, (
	SELECT b2t1.c1 FROM s1.t1 b2t1 WHERE b2t1.c1 = 1
	)
	                    FROM s1.t1 bmt1, s1.t2 bmt2, s1.t3 bmt3, s1.t4 bmt4, c1 WHERE bmt1.c1 = bmt2.c1 AND bmt1.c1 = bmt3.c1 AND bmt1.c1 = bmt4.c1 AND bmt1.c1 = c1.c1
	AND bmt1.c1 <> (
	SELECT b3t1.c1 FROM s1.t1 b3t1
	);
2023-07-22 04:02:33.819 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.819 UTC [542224] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.822 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.822 UTC [542224] STATEMENT:  /*+
	Leading(r1 t1 t2 t3 t4)
	Rows(r1 t1 t2 t3 t4 #2)
	Rows(r1 t1 t2 t3 #2)
	Rows(r1 t1 t2 #2)
	Rows(r1 t1 #2)
	*/
	EXPLAIN UPDATE s1.r1 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.826 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.826 UTC [542224] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.829 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r1_ #2)
	Rows(b1t1 b1t2 r1_ #2)
	Rows(b1t1 b1t2 b1t3 r1_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r1_ #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.829 UTC [542224] STATEMENT:  /*+
	Leading(r1_ b1t1 b1t2 b1t3 b1t4)
	Rows(r1_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r1_ b1t1 b1t2 b1t3 #2)
	Rows(r1_ b1t1 b1t2 #2)
	Rows(r1_ b1t1 #2)
	*/
	EXPLAIN UPDATE s1.r1_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.832 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.832 UTC [542224] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.832 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.832 UTC [542224] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.836 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.836 UTC [542224] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.836 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.836 UTC [542224] STATEMENT:  /*+
	Leading(r2 t1 t2 t3 t4)
	Rows(r2 t1 t2 t3 t4 #2)
	Rows(r2 t1 t2 t3 #2)
	Rows(r2 t1 t2 #2)
	Rows(r2 t1 #2)
	*/
	EXPLAIN UPDATE s1.r2 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.839 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.839 UTC [542224] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.840 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.840 UTC [542224] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.843 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	not used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.843 UTC [542224] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.843 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r2_ #2)
	Rows(b2t1 b2t2 r2_ #2)
	Rows(b2t1 b2t2 b2t3 r2_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r2_ #2)
	not used hint:
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r2_ #2)
	Rows(b1t1 b1t2 r2_ #2)
	Rows(b1t1 b1t2 b1t3 r2_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r2_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.843 UTC [542224] STATEMENT:  /*+
	Leading(r2_ b1t1 b1t2 b1t3 b1t4)
	Leading(r2_ b2t1 b2t2 b2t3 b2t4)
	Rows(r2_ b1t1 #2)
	Rows(r2_ b1t1 b1t2 #2)
	Rows(r2_ b1t1 b1t2 b1t3 #2)
	Rows(r2_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r2_ b2t1 #2)
	Rows(r2_ b2t1 b2t2 #2)
	Rows(r2_ b2t1 b2t2 b2t3  #2)
	Rows(r2_ b2t1 b2t2 b2t3 b2t4 #2)
	*/
	EXPLAIN UPDATE s1.r2_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.847 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.847 UTC [542224] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.847 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.847 UTC [542224] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.848 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.848 UTC [542224] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.851 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.851 UTC [542224] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.851 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.851 UTC [542224] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.852 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 t3 t4 #2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.852 UTC [542224] STATEMENT:  /*+
	Leading(r3 t1 t2 t3 t4)
	Rows(r3 t1 t2 t3 t4 #2)
	Rows(r3 t1 t2 t3 #2)
	Rows(r3 t1 t2 #2)
	Rows(r3 t1 #2)
	*/
	EXPLAIN UPDATE s1.r3 SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.855 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.855 UTC [542224] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.855 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.855 UTC [542224] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.856 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.856 UTC [542224] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.859 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Rows(b1t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	not used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b2t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.859 UTC [542224] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.860 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b2t1 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b1t1 r3_ #2)
	Rows(b3t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.860 UTC [542224] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.860 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(b3t1 r3_ #2)
	Rows(b3t1 b3t2 r3_ #2)
	Rows(b3t1 b3t2 b3t3 r3_ #2)
	Rows(b3t1 b3t2 b3t3 b3t4 r3_ #2)
	not used hint:
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Rows(b1t1 r3_ #2)
	Rows(b2t1 r3_ #2)
	Rows(b1t1 b1t2 r3_ #2)
	Rows(b2t1 b2t2 r3_ #2)
	Rows(b1t1 b1t2 b1t3 r3_ #2)
	Rows(b2t1 b2t2 b2t3 r3_ #2)
	Rows(b1t1 b1t2 b1t3 b1t4 r3_ #2)
	Rows(b2t1 b2t2 b2t3 b2t4 r3_ #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.860 UTC [542224] STATEMENT:  /*+
	Leading(r3_ b1t1 b1t2 b1t3 b1t4)
	Leading(r3_ b2t1 b2t2 b2t3 b2t4)
	Leading(r3_ b3t1 b3t2 b3t3 b3t4)
	Rows(r3_ b1t1 #2)
	Rows(r3_ b1t1 b1t2 #2)
	Rows(r3_ b1t1 b1t2 b1t3 #2)
	Rows(r3_ b1t1 b1t2 b1t3 b1t4 #2)
	Rows(r3_ b2t1 #2)
	Rows(r3_ b2t1 b2t2 #2)
	Rows(r3_ b2t1 b2t2 b2t3 #2)
	Rows(r3_ b2t1 b2t2 b2t3 b2t4 #2)
	Rows(r3_ b3t1 #2)
	Rows(r3_ b3t1 b3t2 #2)
	Rows(r3_ b3t1 b3t2 b3t3 #2)
	Rows(r3_ b3t1 b3t2 b3t3 b3t4 #2)
	*/
	EXPLAIN UPDATE s1.r3_ SET c1 = c1 WHERE c1 = 1;
2023-07-22 04:02:33.863 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	
2023-07-22 04:02:33.863 UTC [542224] STATEMENT:  /*+HashJoin(v1t1 v1t1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.866 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	HashJoin(v1t1 v1t1)
	Rows(v1t1 v1t1 #1)
	
2023-07-22 04:02:33.866 UTC [542224] STATEMENT:  /*+HashJoin(v1t1 v1t1)Rows(v1t1 v1t1 #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1 v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.869 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.869 UTC [542224] STATEMENT:  /*+NestLoop(v1t1 v1t1_)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.872 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(v1t1 v1t1_)
	Rows(v1t1 v1t1_ #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.872 UTC [542224] STATEMENT:  /*+NestLoop(v1t1 v1t1_)Rows(v1t1 v1t1_ #1)*/
	EXPLAIN SELECT * FROM s1.v1 v1, s1.v1_ v2 WHERE v1.c1 = v2.c1;
2023-07-22 04:02:33.880 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.880 UTC [542224] STATEMENT:  /*+NestLoop(r4t1 r5t1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.883 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	NestLoop(r4t1 r5t1)
	Rows(r4t1 r5t1 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.883 UTC [542224] STATEMENT:  /*+NestLoop(r4t1 r5t1)Rows(r4t1 r5t1 #1)*/
	EXPLAIN SELECT * FROM s1.r4 t1, s1.r5 t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.889 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t3 t1 t2)
	Rows(t1 t3 #2)
	Rows(t1 t2 t3 #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.889 UTC [542224] STATEMENT:  /*+ Leading(t3 t1 t2) Rows(t3 t1 #2)Rows(t3 t1 t2 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.892 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(*VALUES* t1 t2)
	Rows(*VALUES* t1 #2)
	Rows(*VALUES* t1 t2 #20)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.892 UTC [542224] STATEMENT:  /*+ Leading(*VALUES* t1 t2) Rows(*VALUES* t1 #2)Rows(*VALUES* t1 t2 #20)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1;
2023-07-22 04:02:33.898 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Leading(t4 t3 t2 t1)
	Rows(t3 t4 #2)
	Rows(t2 t3 t4 #2)
	Rows(t1 t2 t3 t4 #2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.898 UTC [542224] STATEMENT:  /*+ Leading(t4 t3 t2 t1) Rows(t4 t3 #2) Rows(t4 t3 t2 #2)Rows(t4 t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.901 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(t3 t4 #2)
	duplication hint:
	error hint:
	Leading(*VALUES* t3 t2 t1)
	Rows(*VALUES* t2 t3 #2)
	Rows(*VALUES* t1 t2 t3 #2)
	
2023-07-22 04:02:33.901 UTC [542224] STATEMENT:  /*+ Leading(*VALUES* t3 t2 t1) Rows(t4 t3 #2)Rows(*VALUES* t3 t2 #2)Rows(*VALUES* t3 t2 t1 #2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2, (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t3 (c1, c2, c3, c4), (VALUES(1,1,1,'1'), (2,2,2,'2')) AS t4 (c1, c2, c3, c4) WHERE t1.c1 = t2.c1 AND t1.c1 = t3.c1 AND t1.c1 = t4.c1;
2023-07-22 04:02:33.907 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.907 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt2 bmt3 bmt4 *0.7)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.913 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt3 bmt4 *0.6)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.913 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt3 *0.6)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.919 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt1 bmt4 *0.5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.919 UTC [542224] STATEMENT:  /*+
	Leading(bmt4 bmt3 bmt2 bmt1)
	Rows(bmt4 bmt1 *0.5)
	*/
	EXPLAIN SELECT bmt1.c1 FROM s1.t1 bmt1, (SELECT ctid, * FROM s1.t2 bmt2) sbmt2, (SELECT ctid, * FROM s1.t3 bmt3) sbmt3, (SELECT ctid, * FROM s1.t4 bmt4) sbmt4 WHERE bmt1.c1 = sbmt2.c1 AND bmt1.c1 = sbmt3.c1 AND bmt1.c1 = sbmt4.c1;
2023-07-22 04:02:33.922 UTC [542224] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 #0)
2023-07-22 04:02:33.922 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.922 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.925 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #5)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.925 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #5)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.928 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.928 UTC [542224] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.931 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.931 UTC [542224] STATEMENT:  /*+Rows(t1 t2 -1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.933 UTC [542224] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 -1000)
2023-07-22 04:02:33.933 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 -1000)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.933 UTC [542224] STATEMENT:  /*+Rows(t1 t2 -1000)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.936 UTC [542224] WARNING:  Force estimate to be at least one row, to avoid possible divide-by-zero when interpolating costs : Rows(t1 t2 *0)
2023-07-22 04:02:33.936 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.936 UTC [542224] STATEMENT:  /*+Rows(t1 t2 *0)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.939 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.939 UTC [542224] STATEMENT:  /*+Rows(t1 t2 *2)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.942 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 *0.1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.942 UTC [542224] STATEMENT:  /*+Rows(t1 t2 *0.1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.949 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(p1 p2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.949 UTC [542224] STATEMENT:  /*+Rows(p1 p2 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:02:33.955 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	Rows(p1c1 p2c1 #1)
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.955 UTC [542224] STATEMENT:  /*+Rows(p1c1 p2c1 #1)*/
	EXPLAIN SELECT * FROM s1.p1, s1.p2 WHERE p1.c1 = p2.c1;
2023-07-22 04:02:33.960 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:02:33.960 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.966 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:02:33.966 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t1 t2 #1)Rows(t1 t2 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.971 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:02:33.971 UTC [542224] STATEMENT:  /*+Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.977 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 #1)
	not used hint:
	duplication hint:
	Rows(t1 t2 #1)
	Rows(t1 t2 #1)
	error hint:
	
2023-07-22 04:02:33.977 UTC [542224] STATEMENT:  /*+Rows(t2 t1 #1)Rows(t1 t2 #1)Rows(t2 t1 #1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:33.983 UTC [542224] LOG:  pg_hint_plan:
	used hint:
	Rows(t1 t2 +1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:33.983 UTC [542224] STATEMENT:  /*+Rows(t1 t2 +1)*/
	EXPLAIN SELECT * FROM s1.t1, s1.t2 WHERE t1.c1 = t2.c1;
2023-07-22 04:02:34.021 UTC [542992] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	SeqScan(ft_1)
	SeqScan(ft_2)
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.021 UTC [542992] STATEMENT:  /*+SeqScan(t1)SeqScan(ft_1)SeqScan(ft_2)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:02:34.031 UTC [542992] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(ft_1 ft_2)
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.031 UTC [542992] STATEMENT:  /*+MergeJoin(ft_1 ft_2)Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:02:34.040 UTC [542992] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.040 UTC [542992] STATEMENT:  /*+Leading(ft_1 ft_2 t1)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:02:34.050 UTC [542992] LOG:  pg_hint_plan:
	used hint:
	Leading(ft_1 ft_2 t1)
	Rows(ft_1 ft_2 #1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.050 UTC [542992] STATEMENT:  /*+Rows(ft_1 ft_2 #1)Leading(ft_1 ft_2 t1)*/
	EXPLAIN SELECT * FROM s1.t1, ft1 ft_1, ft1 ft_2 WHERE t1.c1 = ft_1.id AND t1.c1 = ft_2.id;
2023-07-22 04:02:34.102 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.102 UTC [543023] STATEMENT:  /*+Parallel(t1 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:02:34.103 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(t11 5 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.103 UTC [543023] STATEMENT:  /*+Parallel(t11 5 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 as t11, s1.t1 as t12;
2023-07-22 04:02:34.106 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.106 UTC [543023] STATEMENT:  /*+Parallel(t1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:02:34.106 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.106 UTC [543023] STATEMENT:  /*+Parallel(t1 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:02:34.107 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.107 UTC [543023] STATEMENT:  /*+Parallel(t1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1;
2023-07-22 04:02:34.108 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(t1 4 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.108 UTC [543023] STATEMENT:  /*+Parallel(t1 4 hard) */ /* to be gather merge*/
	EXPLAIN (COSTS false) SELECT * FROM s1.t1 ORDER BY s1.t1.c1 LIMIT 4;
2023-07-22 04:02:34.116 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.116 UTC [543023] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.117 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.117 UTC [543023] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.120 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.120 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.121 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.121 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.122 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.122 UTC [543023] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.123 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.123 UTC [543023] STATEMENT:  /*+Parallel(p1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.127 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.127 UTC [543023] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:02:34.130 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 soft)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.130 UTC [543023] STATEMENT:  /*+Parallel(p1_c1_c1 8 soft) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:02:34.131 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.131 UTC [543023] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:02:34.132 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1_c1_c1 8 hard)
	Parallel(p2_c1_c1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.132 UTC [543023] STATEMENT:  /*+Parallel(p1_c1_c1 8 hard) Parallel(p2_c1_c1 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1_c1_c1 join p2_c1_c1 on p1_c1_c1.id = p2_c1_c1.id;
2023-07-22 04:02:34.143 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.143 UTC [543023] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.145 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.145 UTC [543023] STATEMENT:  /*+Parallel(p1 8)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.147 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.147 UTC [543023] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.149 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	Parallel(p2 0 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.149 UTC [543023] STATEMENT:  /*+Parallel(p1 8)Parallel(p2 0)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.152 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.152 UTC [543023] STATEMENT:  /*+Parallel(p2 8 soft)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.153 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.153 UTC [543023] STATEMENT:  /*+Parallel(p2 8 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.155 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.155 UTC [543023] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.156 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.156 UTC [543023] STATEMENT:  /*+Parallel(p2 8 hard) Parallel(p1 5 hard) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.158 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.158 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.159 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p2)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.159 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p2) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.160 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.160 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.162 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	SeqScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.162 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard) SeqScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.163 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.163 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.164 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	Parallel(p1 8 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.164 UTC [543023] STATEMENT:  /*+Parallel(p1 8 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.165 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	IndexScan(p1)
	not used hint:
	Parallel(p1 0 hard)
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.165 UTC [543023] STATEMENT:  /*+Parallel(p1 0 hard) IndexScan(p1) */
	EXPLAIN (COSTS false) SELECT * FROM p1 join p2 on p1.id = p2.id;
2023-07-22 04:02:34.166 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 8 soft)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.166 UTC [543023] STATEMENT:  /*+Parallel(p1 8) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:02:34.167 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Set(max_parallel_workers_per_gather 1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.167 UTC [543023] STATEMENT:  /*+Set(max_parallel_workers_per_gather 1)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:02:34.168 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	Parallel(p2 6 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.168 UTC [543023] STATEMENT:  /*+Parallel(p1 5 hard)Parallel(p2 6 hard) */
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:02:34.169 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.169 UTC [543023] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.169 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 0 hard)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.169 UTC [543023] STATEMENT:  /*+Parallel(p1 0 hard)*/
	EXPLAIN (COSTS false) SELECT * FROM p1;
2023-07-22 04:02:34.169 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	not used hint:
	duplication hint:
	error hint:
	Parallel(p1 100x hard)
	Parallel(p1 -1000 hard)
	Parallel(p1 1000000 hard)
	Parallel(p1 8 soft)
	Parallel()
	Parallel()
	
2023-07-22 04:02:34.169 UTC [543023] STATEMENT:  /*+Parallel(p1 100x hard)Parallel(p1 -1000 hard)Parallel(p1 1000000 hard)
	   Parallel(p1 8 hoge)Parallel(p1)Parallel(p1 100 soft x)*/
	EXPLAIN (COSTS false) SELECT id FROM p1 UNION ALL SELECT id FROM p2;
2023-07-22 04:02:34.170 UTC [543023] LOG:  pg_hint_plan:
	used hint:
	Parallel(p1 5 hard)
	not used hint:
	IndexScan(*VALUES*)
	SeqScan(cte1)
	TidScan(fs1)
	IndexScan(ft1)
	IndexScan(t)
	Parallel(s1 3 hard)
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.170 UTC [543023] STATEMENT:  /*+Parallel(p1 5 hard) Parallel(s1 3 hard) IndexScan(ft1) SeqScan(cte1)
	  TidScan(fs1) IndexScan(t) IndexScan(*VALUES*) */
	EXPLAIN (COSTS false) SELECT id FROM p1_c1_c1 as s1 TABLESAMPLE SYSTEM(10)
	 UNION ALL
	SELECT id FROM ft1
	 UNION ALL
	(WITH cte1 AS (SELECT id FROM p1 WHERE id % 2 = 0) SELECT id FROM cte1)
	 UNION ALL
	SELECT userid FROM pg_stat_statements fs1
	 UNION ALL
	SELECT x FROM (VALUES (1), (2), (3)) t(x);
2023-07-22 04:02:34.186 UTC [542012] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:02:34.206 UTC [543031] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.206 UTC [543031] STATEMENT:  EXPLAIN SELECT * FROM t1 WHERE id = 100;
2023-07-22 04:02:34.206 UTC [543031] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.206 UTC [543031] STATEMENT:  EXPLAIN DECLARE c1 CURSOR FOR SELECT * FROM t1 WHERE id = 100;
2023-07-22 04:02:34.206 UTC [543031] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.206 UTC [543031] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS SELECT * FROM t1 WHERE id = 100;
2023-07-22 04:02:34.207 UTC [543031] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.207 UTC [543031] STATEMENT:  EXPLAIN EXECUTE p1;
2023-07-22 04:02:34.207 UTC [543031] LOG:  pg_hint_plan:
	used hint:
	SeqScan(t1)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.207 UTC [543031] STATEMENT:  EXPLAIN CREATE TABLE ct1 AS EXECUTE p1;
2023-07-22 04:02:34.245 UTC [543039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.245 UTC [543039] STATEMENT:  explain (costs false)
	select * from t1 join t2 on t1.id = t2.id where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 04:02:34.247 UTC [543039] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.247 UTC [543039] STATEMENT:  /*+ MergeJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+HashJoin(t1 t2)*/' <> '';
2023-07-22 04:02:34.248 UTC [543039] LOG:  pg_hint_plan:
	used hint:
	HashJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.248 UTC [543039] STATEMENT:  /*+ HashJoin(t1 t2) */
	explain (costs false)
	select * from t1 join t2 on t1.val = t2.val where '/*+MergeJoin(t1 t2)*/' <> '';
2023-07-22 04:02:34.277 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.277 UTC [543043] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 04:02:34.279 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.279 UTC [543043] STATEMENT:  explain (costs false) with test /*+ MergeJoin(t1 t2) */
	  as (select 'x' val) select t1.val from test t1, test t2 where t1.val = t2.val;
2023-07-22 04:02:34.298 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.298 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.298 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.299 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.299 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(0,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(0, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.299 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.303 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.303 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.303 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.304 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.304 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(1,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(1, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.304 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.304 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.304 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.304 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.305 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.305 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(2,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(2, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.305 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.309 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.309 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 1 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.309 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.309 UTC [543043] LOG:  pg_hint_plan:
	used hint:
	MergeJoin(t1 t2)
	not used hint:
	duplication hint:
	error hint:
	
2023-07-22 04:02:34.309 UTC [543043] CONTEXT:  SQL statement "explain (costs false) with test /*+ MergeJoin(t1 t2) */
	    as (select 2 val)
	    select t1.val from test t1, test t2 where t1.val = t2.val;"
	PL/pgSQL function test_hint_queries(integer,integer) line 17 at EXECUTE
	SQL statement "select test_hint_queries(3,1)"
	PL/pgSQL function test_hint_queries(integer,integer) line 21 at EXECUTE
	SQL statement "select test_hint_queries(3, 0)"
	PL/pgSQL function test_hint_transaction() line 5 at EXECUTE
2023-07-22 04:02:34.309 UTC [543043] STATEMENT:  call test_hint_transaction();
2023-07-22 04:02:34.497 UTC [542013] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:02:34.563 UTC [542013] LOG:  checkpoint complete: wrote 19 buffers (0.1%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.018 s, sync=0.011 s, total=0.066 s; sync files=15, longest=0.006 s, average=0.001 s; distance=12296 kB, estimate=12296 kB
2023-07-22 04:02:34.849 UTC [543079] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:02:34.849 UTC [543079] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:03:06.300 UTC [542013] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:06.375 UTC [542013] LOG:  checkpoint complete: wrote 910 buffers (5.6%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.020 s, total=0.075 s; sync files=254, longest=0.003 s, average=0.001 s; distance=141177 kB, estimate=141177 kB
2023-07-22 04:03:06.454 UTC [543097] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:03:06.454 UTC [543097] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:03:37.759 UTC [542013] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:03:37.812 UTC [542013] LOG:  checkpoint complete: wrote 11 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.008 s, sync=0.005 s, total=0.054 s; sync files=4, longest=0.003 s, average=0.002 s; distance=137115 kB, estimate=140771 kB
2023-07-22 04:03:37.877 UTC [542012] LOG:  received fast shutdown request
2023-07-22 04:03:37.880 UTC [542012] LOG:  aborting any active transactions
2023-07-22 04:03:37.880 UTC [542012] LOG:  background worker "logical replication launcher" (PID 542018) exited with exit code 1
2023-07-22 04:03:37.881 UTC [542013] LOG:  shutting down
2023-07-22 04:03:37.883 UTC [542013] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:03:37.904 UTC [542013] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.024 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126694 kB
2023-07-22 04:03:37.975 UTC [542012] LOG:  database system is shut down
2023-07-22 04:03:38.547 UTC [543144] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:03:38.548 UTC [543144] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:03:38.554 UTC [543144] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:03:38.563 UTC [543147] LOG:  database system was shut down at 2023-07-22 04:03:38 UTC
2023-07-22 04:03:38.569 UTC [543144] LOG:  database system is ready to accept connections
2023-07-22 04:03:38.934 UTC [543163] ERROR:  too many column names were specified
2023-07-22 04:03:38.934 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_agg(a,b,c)', 'SELECT i, SUM(j) FROM mv_base_a GROUP BY i');
2023-07-22 04:03:38.949 UTC [543163] WARNING:  there is already a transaction in progress
2023-07-22 04:03:38.966 UTC [543163] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:03:38.966 UTC [543163] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:03:38.966 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_exists_subquery', 'SELECT a.i, a.j FROM mv_base_a a WHERE EXISTS(SELECT 1 FROM mv_base_b b WHERE a.i = b.i)');
2023-07-22 04:03:38.966 UTC [543163] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:03:38.966 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) b WHERE a.i = b.i');
2023-07-22 04:03:38.966 UTC [543163] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:03:38.966 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT a.i,a.j FROM mv_base_a a, (SELECT DISTINCT i FROM mv_base_b) b WHERE a.i = b.i');
2023-07-22 04:03:38.966 UTC [543163] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:03:38.966 UTC [543163] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:03:38.966 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j FROM mv_base_a WHERE i IN (SELECT i FROM mv_base_b WHERE k < 103 )');
2023-07-22 04:03:38.966 UTC [543163] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:03:38.966 UTC [543163] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:03:38.966 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) FROM mv_base_a a');
2023-07-22 04:03:38.967 UTC [543163] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:03:38.967 UTC [543163] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:03:38.967 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT i,j, (SELECT k FROM mv_base_b LIMIT 1) + 1 FROM mv_base_a a');
2023-07-22 04:03:38.967 UTC [543163] ERROR:  unsupported subquery on incrementally maintainable materialized view
2023-07-22 04:03:38.967 UTC [543163] HINT:  Only simple subquery in FROM clause is supported.
2023-07-22 04:03:38.967 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_subquery', 'SELECT * FROM generate_series(1, (SELECT k FROM mv_base_b LIMIT 1)) AS v');
2023-07-22 04:03:38.996 UTC [543163] ERROR:  aggregate functions in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:03:38.996 UTC [543163] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT i, COUNT(*) FROM mv_base_b GROUP BY i) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 04:03:38.996 UTC [543163] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:03:38.996 UTC [543163] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT DISTINCT i FROM mv_base_b) SELECT a.i,a.j FROM mv_base_a a, b WHERE a.i = b.i');
2023-07-22 04:03:38.996 UTC [543163] ERROR:  Ureferenced WITH query is not supported on incrementally maintainable materialized view
2023-07-22 04:03:38.996 UTC [543163] STATEMENT:  SELECT create_immv('mv_cte_fail', 'WITH b AS (SELECT * FROM mv_base_b) SELECT * FROM mv_base_a a');
2023-07-22 04:03:39.025 UTC [543163] ERROR:  OUTER JOIN is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.025 UTC [543163] STATEMENT:  SELECT create_immv('mv(a,b)',
	    'SELECT a.i, b.i FROM mv_base_a a LEFT JOIN mv_base_b b ON a.i=b.i');
2023-07-22 04:03:39.026 UTC [543163] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.026 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm01', 'SELECT i,j,xmin FROM mv_base_a');
2023-07-22 04:03:39.026 UTC [543163] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.026 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm02', 'SELECT i,j FROM mv_base_a WHERE xmin = ''610''');
2023-07-22 04:03:39.026 UTC [543163] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.026 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm03', 'SELECT i,j,xmin::text AS x_min FROM mv_base_a');
2023-07-22 04:03:39.026 UTC [543163] ERROR:  system column is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.026 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm04', 'SELECT i,j,xidsend(xmin) AS x_min FROM mv_base_a');
2023-07-22 04:03:39.026 UTC [543163] ERROR:  ORDER BY clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.026 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) ORDER BY i,j,k');
2023-07-22 04:03:39.026 UTC [543163] ERROR:  HAVING clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.026 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j,k FROM mv_base_a a INNER JOIN mv_base_b b USING(i) GROUP BY i,j,k HAVING SUM(i) > 5');
2023-07-22 04:03:39.027 UTC [543163] ERROR:  GROUP BY clause without aggregate is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.027 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT i,j FROM mv_base_a GROUP BY i,j');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm07', 'SELECT a.i,a.j FROM mv_base_a a,b_view b WHERE a.i = b.i');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  VIEW or MATERIALIZED VIEW is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm08', 'SELECT a.i,a.j FROM mv_base_a a,b_mview b WHERE a.i = b.i');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  mutable function is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] HINT:  functions must be marked IMMUTABLE
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm12', 'SELECT i,j FROM mv_base_a WHERE i = random()::int');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  LIMIT/OFFSET clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm13', 'SELECT i,j FROM mv_base_a LIMIT 10 OFFSET 5');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  DISTINCT ON is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm14', 'SELECT DISTINCT ON(i) i, j FROM mv_base_a');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  TABLESAMPLE clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm15', 'SELECT i, j FROM mv_base_a TABLESAMPLE SYSTEM(50)');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  window functions are not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm16', 'SELECT *, cume_dist() OVER (ORDER BY i) AS rank FROM mv_base_a');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  aggregate function with FILTER clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm17', 'SELECT COUNT(*) FILTER(WHERE i < 3) FROM mv_base_a');
2023-07-22 04:03:39.030 UTC [543163] ERROR:  aggregate function with DISTINCT arguments is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.030 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm18', 'SELECT COUNT(DISTINCT i)  FROM mv_base_a');
2023-07-22 04:03:39.031 UTC [543163] ERROR:  aggregate function with ORDER clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.031 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm19', 'SELECT array_agg(j ORDER BY i DESC) FROM mv_base_a');
2023-07-22 04:03:39.031 UTC [543163] ERROR:  GROUPING SETS, ROLLUP, or CUBE clauses is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.031 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm20', 'SELECT i,SUM(j) FROM mv_base_a GROUP BY GROUPING SETS((i),())');
2023-07-22 04:03:39.035 UTC [543163] ERROR:  inheritance parent is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.035 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm21', 'SELECT * FROM parent');
2023-07-22 04:03:39.037 UTC [543163] ERROR:  UNION/INTERSECT/EXCEPT statements are not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.037 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm22', 'SELECT i,j FROM mv_base_a UNION ALL SELECT i,k FROM mv_base_b');
2023-07-22 04:03:39.037 UTC [543163] ERROR:  DISTINCT clause in nested query are not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.037 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm23', 'SELECT * FROM (SELECT DISTINCT i,j FROM mv_base_a) AS tmp');
2023-07-22 04:03:39.038 UTC [543163] ERROR:  empty target list is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.038 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm25', 'SELECT FROM mv_base_a');
2023-07-22 04:03:39.038 UTC [543163] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.038 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm26', 'SELECT i,j FROM mv_base_a FOR UPDATE');
2023-07-22 04:03:39.039 UTC [543163] ERROR:  FOR UPDATE/SHARE clause is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.039 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm27', 'SELECT * FROM (SELECT i,j FROM mv_base_a FOR UPDATE) AS tmp;');
2023-07-22 04:03:39.039 UTC [543163] ERROR:  column name __ivm_count__ is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.039 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm28', 'SELECT i AS "__ivm_count__" FROM mv_base_a');
2023-07-22 04:03:39.039 UTC [543163] ERROR:  GROUP BY expression not appearing in select list is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.039 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm29', 'SELECT COUNT(i) FROM mv_base_a GROUP BY i;');
2023-07-22 04:03:39.040 UTC [543163] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.040 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm30', 'SELECT sum(i)*0.5 FROM mv_base_a');
2023-07-22 04:03:39.040 UTC [543163] ERROR:  expression containing an aggregate in it is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.040 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm31', 'SELECT sum(i)/sum(j) FROM mv_base_a');
2023-07-22 04:03:39.040 UTC [543163] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.040 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_only_values1', 'values(1)');
2023-07-22 04:03:39.041 UTC [543163] ERROR:  VALUES is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.041 UTC [543163] STATEMENT:  SELECT create_immv('mv_ivm_only_values2',  'SELECT * FROM (values(1)) AS tmp');
2023-07-22 04:03:39.173 UTC [543163] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:03:39.173 UTC [543163] STATEMENT:  INSERT INTO mv_ivm_1 VALUES(1,1,1);
2023-07-22 04:03:39.173 UTC [543163] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:03:39.173 UTC [543163] STATEMENT:  UPDATE  mv_ivm_1 SET k = 1 WHERE i = 1;
2023-07-22 04:03:39.174 UTC [543163] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:03:39.174 UTC [543163] STATEMENT:  DELETE FROM mv_ivm_1;
2023-07-22 04:03:39.174 UTC [543163] ERROR:  cannot change materialized view "mv_ivm_1"
2023-07-22 04:03:39.174 UTC [543163] STATEMENT:  TRUNCATE mv_ivm_1;
2023-07-22 04:03:39.210 UTC [543167] ERROR:  materialized views must not use data-modifying statements in WITH
2023-07-22 04:03:39.210 UTC [543167] STATEMENT:  SELECT create_immv('mv3', 'WITH d AS (DELETE FROM t RETURNING NULL) SELECT * FROM t');
2023-07-22 04:03:39.211 UTC [543167] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.211 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_immv01', 'SELECT i FROM mv');
2023-07-22 04:03:39.211 UTC [543167] ERROR:  including IMMV in definition is not supported on incrementally maintainable materialized view
2023-07-22 04:03:39.211 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_immv02', 'SELECT t.i FROM t INNER JOIN mv2 ON t.i = mv2.x');
2023-07-22 04:03:39.211 UTC [543167] ERROR:  view definition must specify SELECT statement
2023-07-22 04:03:39.211 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_create', 'CREATE TABLE in_create(i int)');
2023-07-22 04:03:39.211 UTC [543167] ERROR:  view definition must specify SELECT statement
2023-07-22 04:03:39.211 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_insert', 'INSERT INTO t VALUES(10)');
2023-07-22 04:03:39.211 UTC [543167] ERROR:  view definition must specify SELECT statement
2023-07-22 04:03:39.211 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_update', 'UPDATE t SET i = 10');
2023-07-22 04:03:39.211 UTC [543167] ERROR:  view definition must specify SELECT statement
2023-07-22 04:03:39.211 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_delete', 'DELETE FROM t');
2023-07-22 04:03:39.212 UTC [543167] ERROR:  view definition must specify SELECT statement
2023-07-22 04:03:39.212 UTC [543167] STATEMENT:  SELECT create_immv('mv_in_drop', 'DROP TABLE t');
2023-07-22 04:03:39.212 UTC [543167] ERROR:  cannot drop table t because other objects depend on it
2023-07-22 04:03:39.212 UTC [543167] DETAIL:  table mv depends on table t
	table mv2 depends on table t
2023-07-22 04:03:39.212 UTC [543167] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:03:39.212 UTC [543167] STATEMENT:  DROP TABLE t;
2023-07-22 04:03:39.278 UTC [543171] ERROR:  relation "mv_not_existing" does not exist
2023-07-22 04:03:39.278 UTC [543171] STATEMENT:  SELECT refresh_immv('mv_not_existing', true);
2023-07-22 04:03:39.279 UTC [543171] ERROR:  "t" is not an IMMV
2023-07-22 04:03:39.279 UTC [543171] STATEMENT:  SELECT refresh_immv('t', true);
2023-07-22 04:03:39.566 UTC [543197] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:03:39.566 UTC [543197] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:04:11.024 UTC [543145] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:11.156 UTC [543145] LOG:  checkpoint complete: wrote 1135 buffers (6.9%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.029 s, sync=0.052 s, total=0.132 s; sync files=582, longest=0.003 s, average=0.001 s; distance=146537 kB, estimate=146537 kB
2023-07-22 04:04:11.274 UTC [543214] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:04:11.274 UTC [543214] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:04:42.468 UTC [543145] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:04:42.512 UTC [543145] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.007 s, sync=0.004 s, total=0.045 s; sync files=4, longest=0.003 s, average=0.001 s; distance=136854 kB, estimate=145569 kB
2023-07-22 04:04:42.549 UTC [543144] LOG:  received fast shutdown request
2023-07-22 04:04:42.552 UTC [543144] LOG:  aborting any active transactions
2023-07-22 04:04:42.552 UTC [543144] LOG:  background worker "logical replication launcher" (PID 543150) exited with exit code 1
2023-07-22 04:04:42.553 UTC [543145] LOG:  shutting down
2023-07-22 04:04:42.555 UTC [543145] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:04:42.571 UTC [543145] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.018 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=131012 kB
2023-07-22 04:04:42.590 UTC [543144] LOG:  database system is shut down
2023-07-22 04:04:43.270 UTC [543258] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:04:43.270 UTC [543258] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:04:43.276 UTC [543258] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:04:43.286 UTC [543261] LOG:  database system was shut down at 2023-07-22 04:04:43 UTC
2023-07-22 04:04:43.294 UTC [543258] LOG:  database system is ready to accept connections
2023-07-22 04:04:43.440 UTC [543275] ERROR:  extension "pg_log_userqueries" is not available
2023-07-22 04:04:43.440 UTC [543275] DETAIL:  Could not open extension control file "/home/abigalek/pgext-cli-python/pg-15-dist/share/postgresql/extension/pg_log_userqueries.control": No such file or directory.
2023-07-22 04:04:43.440 UTC [543275] HINT:  The extension must first be installed on the system where PostgreSQL is running.
2023-07-22 04:04:43.440 UTC [543275] STATEMENT:  CREATE EXTENSION IF NOT EXISTS "pg_log_userqueries"
2023-07-22 04:04:43.446 UTC [543258] LOG:  received fast shutdown request
2023-07-22 04:04:43.449 UTC [543258] LOG:  aborting any active transactions
2023-07-22 04:04:43.450 UTC [543258] LOG:  background worker "logical replication launcher" (PID 543264) exited with exit code 1
2023-07-22 04:04:43.450 UTC [543259] LOG:  shutting down
2023-07-22 04:04:43.453 UTC [543259] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:04:43.501 UTC [543259] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.017 s, sync=0.019 s, total=0.051 s; sync files=252, longest=0.003 s, average=0.001 s; distance=3996 kB, estimate=3996 kB
2023-07-22 04:04:43.510 UTC [543258] LOG:  database system is shut down
2023-07-22 04:04:44.100 UTC [543304] FATAL:  could not access file "pg_partman": No such file or directory
2023-07-22 04:04:44.100 UTC [543304] LOG:  database system is shut down
2023-07-22 04:04:44.800 UTC [543337] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:04:44.801 UTC [543337] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:04:44.806 UTC [543337] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:04:44.814 UTC [543340] LOG:  database system was shut down at 2023-07-22 04:04:44 UTC
2023-07-22 04:04:44.819 UTC [543337] LOG:  database system is ready to accept connections
2023-07-22 04:04:45.034 UTC [543368] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:04:45.034 UTC [543368] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:05:16.533 UTC [543338] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:16.685 UTC [543338] LOG:  checkpoint complete: wrote 546 buffers (3.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.092 s, total=0.152 s; sync files=252, longest=0.004 s, average=0.001 s; distance=140725 kB, estimate=140725 kB
2023-07-22 04:05:16.804 UTC [543389] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:05:16.804 UTC [543389] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:05:48.018 UTC [543338] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:05:48.083 UTC [543338] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.009 s, sync=0.005 s, total=0.065 s; sync files=4, longest=0.003 s, average=0.002 s; distance=136094 kB, estimate=140262 kB
2023-07-22 04:05:48.148 UTC [543337] LOG:  received fast shutdown request
2023-07-22 04:05:48.152 UTC [543337] LOG:  aborting any active transactions
2023-07-22 04:05:48.152 UTC [543337] LOG:  background worker "logical replication launcher" (PID 543344) exited with exit code 1
2023-07-22 04:05:48.161 UTC [543338] LOG:  shutting down
2023-07-22 04:05:48.164 UTC [543338] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:05:48.183 UTC [543338] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.004 s, sync=0.001 s, total=0.022 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126236 kB
2023-07-22 04:05:48.207 UTC [543337] LOG:  database system is shut down
2023-07-22 04:05:48.950 UTC [543432] FATAL:  could not access file "pg_proctab": No such file or directory
2023-07-22 04:05:48.950 UTC [543432] LOG:  database system is shut down
2023-07-22 04:05:49.753 UTC [543465] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:05:49.753 UTC [543465] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:05:49.759 UTC [543465] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:05:49.770 UTC [543468] LOG:  database system was shut down at 2023-07-22 04:05:49 UTC
2023-07-22 04:05:49.774 UTC [543465] LOG:  database system is ready to accept connections
2023-07-22 04:05:50.387 UTC [543512] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:05:50.387 UTC [543512] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:06:22.629 UTC [543466] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:06:22.807 UTC [543466] LOG:  checkpoint complete: wrote 1804 buffers (11.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.033 s, sync=0.078 s, total=0.178 s; sync files=500, longest=0.029 s, average=0.001 s; distance=141789 kB, estimate=141789 kB
2023-07-22 04:06:22.947 UTC [543531] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:06:22.947 UTC [543531] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:06:54.582 UTC [543466] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:06:54.673 UTC [543466] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.011 s, sync=0.006 s, total=0.092 s; sync files=4, longest=0.005 s, average=0.002 s; distance=133305 kB, estimate=140940 kB
2023-07-22 04:06:54.736 UTC [543465] LOG:  received fast shutdown request
2023-07-22 04:06:54.745 UTC [543465] LOG:  aborting any active transactions
2023-07-22 04:06:54.746 UTC [543465] LOG:  background worker "logical replication launcher" (PID 543471) exited with exit code 1
2023-07-22 04:06:54.746 UTC [543466] LOG:  shutting down
2023-07-22 04:06:54.753 UTC [543466] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:06:54.780 UTC [543466] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.005 s, sync=0.001 s, total=0.034 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=126846 kB
2023-07-22 04:06:54.830 UTC [543465] LOG:  database system is shut down
2023-07-22 04:06:55.520 UTC [543573] LOG:  pg_query_rewrite:_PG_init(): pg_query_rewrite is enabled with 10 rules
2023-07-22 04:06:55.534 UTC [543573] LOG:  redirecting log output to logging collector process
2023-07-22 04:06:55.534 UTC [543573] HINT:  Future log output will appear in directory "log".
2023-07-22 04:08:02.057 UTC [543716] FATAL:  pg_queryid should be last the last element in shared_preload_libraries
2023-07-22 04:08:02.057 UTC [543716] LOG:  database system is shut down
2023-07-22 04:08:02.863 UTC [543757] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:08:02.863 UTC [543757] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:08:02.878 UTC [543757] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:08:02.893 UTC [543760] LOG:  database system was shut down at 2023-07-22 04:08:02 UTC
2023-07-22 04:08:02.906 UTC [543757] LOG:  database system is ready to accept connections
2023-07-22 04:08:03.569 UTC [543784] ERROR:  could not create unique index "idx_badindex_n"
2023-07-22 04:08:03.569 UTC [543784] DETAIL:  Key (n)=(10) is duplicated.
2023-07-22 04:08:03.569 UTC [543784] STATEMENT:  CREATE UNIQUE INDEX CONCURRENTLY idx_badindex_n ON tbl_badindex (n);
2023-07-22 04:08:10.495 UTC [543951] ERROR:  permission denied for schema repack at character 8
2023-07-22 04:08:10.495 UTC [543951] STATEMENT:  select repack.version(), repack.version_sql()
2023-07-22 04:08:13.423 UTC [544040] ERROR:  table name not found for OID 1
2023-07-22 04:08:13.423 UTC [544040] STATEMENT:  SELECT repack.get_order_by('issue321_idx'::regclass::oid, 1);
2023-07-22 04:08:13.424 UTC [544040] ERROR:  cache lookup failed for index 1
2023-07-22 04:08:13.424 UTC [544040] STATEMENT:  SELECT repack.get_order_by(1, 1);
2023-07-22 04:08:13.447 UTC [543758] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:08:13.681 UTC [543758] LOG:  checkpoint complete: wrote 1040 buffers (6.3%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.055 s, sync=0.043 s, total=0.234 s; sync files=405, longest=0.008 s, average=0.001 s; distance=7744 kB, estimate=7744 kB
2023-07-22 04:08:13.683 UTC [544066] ERROR:  tablespace "testts" is not empty
2023-07-22 04:08:13.683 UTC [544066] STATEMENT:  DROP TABLESPACE testts
2023-07-22 04:08:13.707 UTC [543758] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:08:13.761 UTC [543758] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.011 s, total=0.055 s; sync files=3, longest=0.008 s, average=0.004 s; distance=1 kB, estimate=6970 kB
2023-07-22 04:08:14.071 UTC [544091] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:08:14.071 UTC [544091] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:08:46.449 UTC [543758] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:08:46.622 UTC [543758] LOG:  checkpoint complete: wrote 900 buffers (5.5%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.032 s, sync=0.045 s, total=0.173 s; sync files=252, longest=0.016 s, average=0.001 s; distance=136617 kB, estimate=136617 kB
2023-07-22 04:08:46.749 UTC [544109] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:08:46.749 UTC [544109] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:09:18.418 UTC [543758] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:09:18.545 UTC [543758] LOG:  checkpoint complete: wrote 6 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.128 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132609 kB, estimate=136216 kB
2023-07-22 04:09:18.612 UTC [543757] LOG:  received fast shutdown request
2023-07-22 04:09:18.620 UTC [543757] LOG:  aborting any active transactions
2023-07-22 04:09:18.621 UTC [543757] LOG:  background worker "logical replication launcher" (PID 543763) exited with exit code 1
2023-07-22 04:09:18.621 UTC [543758] LOG:  shutting down
2023-07-22 04:09:18.628 UTC [543758] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:09:18.669 UTC [543758] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.048 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122595 kB
2023-07-22 04:09:18.712 UTC [543757] LOG:  database system is shut down
2023-07-22 04:09:19.423 UTC [544153] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:09:19.423 UTC [544153] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:09:19.438 UTC [544153] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:09:19.454 UTC [544156] LOG:  database system was shut down at 2023-07-22 04:09:19 UTC
2023-07-22 04:09:19.465 UTC [544153] LOG:  database system is ready to accept connections
2023-07-22 04:09:19.628 UTC [544172] ERROR:  parameter "pg_show_plans.plan_format" cannot be changed without restarting the server
2023-07-22 04:09:19.628 UTC [544172] STATEMENT:  set pg_show_plans.plan_format = 'json';
2023-07-22 04:09:20.019 UTC [544203] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:09:20.019 UTC [544203] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:09:52.396 UTC [544154] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:09:52.580 UTC [544154] LOG:  checkpoint complete: wrote 1779 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.047 s, sync=0.051 s, total=0.185 s; sync files=497, longest=0.019 s, average=0.001 s; distance=140408 kB, estimate=140408 kB
2023-07-22 04:09:52.719 UTC [544220] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:09:52.719 UTC [544220] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:10:24.372 UTC [544154] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:10:24.474 UTC [544154] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.009 s, total=0.103 s; sync files=4, longest=0.008 s, average=0.003 s; distance=133343 kB, estimate=139701 kB
2023-07-22 04:10:24.543 UTC [544153] LOG:  received fast shutdown request
2023-07-22 04:10:24.549 UTC [544153] LOG:  aborting any active transactions
2023-07-22 04:10:24.549 UTC [544153] LOG:  background worker "logical replication launcher" (PID 544159) exited with exit code 1
2023-07-22 04:10:24.549 UTC [544154] LOG:  shutting down
2023-07-22 04:10:24.554 UTC [544154] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:10:24.584 UTC [544154] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.001 s, total=0.035 s; sync files=1, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=125731 kB
2023-07-22 04:10:24.609 UTC [544153] LOG:  database system is shut down
2023-07-22 04:10:25.355 UTC [544263] LOG:  Auto detecting pg_stat_kcache.linux_hz parameter...
2023-07-22 04:10:25.355 UTC [544263] LOG:  pg_stat_kcache.linux_hz is set to 333333
2023-07-22 04:10:25.378 UTC [544263] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:10:25.378 UTC [544263] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:10:25.391 UTC [544263] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:10:25.406 UTC [544266] LOG:  database system was shut down at 2023-07-22 04:10:25 UTC
2023-07-22 04:10:25.417 UTC [544263] LOG:  database system is ready to accept connections
2023-07-22 04:10:26.054 UTC [544316] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:10:26.054 UTC [544316] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:10:58.416 UTC [544264] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:10:58.628 UTC [544264] LOG:  checkpoint complete: wrote 1806 buffers (11.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.046 s, sync=0.081 s, total=0.213 s; sync files=498, longest=0.031 s, average=0.001 s; distance=141215 kB, estimate=141215 kB
2023-07-22 04:10:58.738 UTC [544333] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:10:58.738 UTC [544333] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:11:30.429 UTC [544264] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:30.553 UTC [544264] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.019 s, sync=0.009 s, total=0.124 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132701 kB, estimate=140364 kB
2023-07-22 04:11:30.621 UTC [544263] LOG:  received fast shutdown request
2023-07-22 04:11:30.629 UTC [544263] LOG:  aborting any active transactions
2023-07-22 04:11:30.629 UTC [544263] LOG:  background worker "logical replication launcher" (PID 544269) exited with exit code 1
2023-07-22 04:11:30.630 UTC [544264] LOG:  shutting down
2023-07-22 04:11:30.636 UTC [544264] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:11:30.676 UTC [544264] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.006 s, sync=0.003 s, total=0.047 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126327 kB
2023-07-22 04:11:30.740 UTC [544263] LOG:  database system is shut down
2023-07-22 04:11:31.696 UTC [544379] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:11:31.696 UTC [544379] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:11:31.711 UTC [544379] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:11:31.730 UTC [544382] LOG:  database system was shut down at 2023-07-22 04:11:31 UTC
2023-07-22 04:11:31.739 UTC [544379] LOG:  database system is ready to accept connections
2023-07-22 04:11:32.393 UTC [544380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:32.545 UTC [544380] LOG:  checkpoint complete: wrote 1794 buffers (10.9%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.064 s, sync=0.055 s, total=0.153 s; sync files=497, longest=0.020 s, average=0.001 s; distance=12316 kB, estimate=12316 kB
2023-07-22 04:11:32.571 UTC [544380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:32.625 UTC [544380] LOG:  checkpoint complete: wrote 2 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.011 s, total=0.055 s; sync files=2, longest=0.008 s, average=0.006 s; distance=1 kB, estimate=11084 kB
2023-07-22 04:11:32.722 UTC [544423] ERROR:  current user cannot be dropped
2023-07-22 04:11:32.722 UTC [544423] STATEMENT:  DROP USER su;
2023-07-22 04:11:33.157 UTC [544380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:33.276 UTC [544380] LOG:  checkpoint complete: wrote 1018 buffers (6.2%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.050 s, sync=0.040 s, total=0.120 s; sync files=297, longest=0.011 s, average=0.001 s; distance=8806 kB, estimate=10856 kB
2023-07-22 04:11:33.303 UTC [544380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:33.357 UTC [544380] LOG:  checkpoint complete: wrote 10 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.012 s, sync=0.012 s, total=0.055 s; sync files=7, longest=0.008 s, average=0.002 s; distance=42 kB, estimate=9775 kB
2023-07-22 04:11:33.448 UTC [544451] ERROR:  duplicate key value violates unique constraint "company_pkey"
2023-07-22 04:11:33.448 UTC [544451] DETAIL:  Key (id)=(1) already exists.
2023-07-22 04:11:33.448 UTC [544451] STATEMENT:  INSERT  INTO Company(ID, Name) VALUES (1, 'Percona');
2023-07-22 04:11:33.655 UTC [544471] ERROR:  division by zero
2023-07-22 04:11:33.655 UTC [544471] STATEMENT:  SELECT 1/0;
2023-07-22 04:11:33.656 UTC [544471] ERROR:  relation "unknown" does not exist at character 15
2023-07-22 04:11:33.656 UTC [544471] STATEMENT:  SELECT * FROM unknown;
2023-07-22 04:11:33.656 UTC [544471] ERROR:  syntax error at or near "ELECET" at character 1
2023-07-22 04:11:33.656 UTC [544471] STATEMENT:  ELECET * FROM unknown;
2023-07-22 04:11:33.656 UTC [544471] WARNING:  warning message
2023-07-22 04:11:33.656 UTC [544471] CONTEXT:  PL/pgSQL function inline_code_block line 3 at RAISE
2023-07-22 04:11:33.817 UTC [544485] ERROR:  role "su" already exists
2023-07-22 04:11:33.817 UTC [544485] STATEMENT:  CREATE USER su WITH SUPERUSER;
2023-07-22 04:11:33.856 UTC [544485] ERROR:  permission denied for function pg_stat_monitor_reset
2023-07-22 04:11:33.856 UTC [544485] STATEMENT:  SELECT pg_stat_monitor_reset();
2023-07-22 04:11:33.950 UTC [544380] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:11:34.006 UTC [544380] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.013 s, sync=0.012 s, total=0.057 s; sync files=9, longest=0.008 s, average=0.002 s; distance=1620 kB, estimate=8960 kB
2023-07-22 04:11:34.206 UTC [544379] LOG:  received fast shutdown request
2023-07-22 04:11:34.211 UTC [544379] LOG:  aborting any active transactions
2023-07-22 04:11:34.212 UTC [544379] LOG:  background worker "logical replication launcher" (PID 544385) exited with exit code 1
2023-07-22 04:11:34.212 UTC [544380] LOG:  shutting down
2023-07-22 04:11:34.218 UTC [544380] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:11:34.318 UTC [544380] LOG:  checkpoint complete: wrote 895 buffers (5.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.021 s, sync=0.048 s, total=0.106 s; sync files=251, longest=0.019 s, average=0.001 s; distance=4083 kB, estimate=8472 kB
2023-07-22 04:11:34.323 UTC [544379] LOG:  [pg_stat_monitor] pgsm_shmem_shutdown: Shutdown initiated.
2023-07-22 04:11:34.400 UTC [544379] LOG:  database system is shut down
2023-07-22 04:11:35.106 UTC [544533] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:11:35.106 UTC [544533] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:11:35.121 UTC [544533] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:11:35.135 UTC [544536] LOG:  database system was shut down at 2023-07-22 04:11:34 UTC
2023-07-22 04:11:35.142 UTC [544533] LOG:  database system is ready to accept connections
2023-07-22 04:11:35.616 UTC [544556] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 04:11:35.616 UTC [544556] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 04:11:35.629 UTC [544556] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 04:11:35.629 UTC [544556] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 04:11:35.638 UTC [544556] ERROR:  permission denied for function pg_stat_statements_reset
2023-07-22 04:11:35.638 UTC [544556] STATEMENT:  SELECT pg_stat_statements_reset();
2023-07-22 04:11:36.045 UTC [544582] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:11:36.045 UTC [544582] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:12:08.441 UTC [544534] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:12:08.655 UTC [544534] LOG:  checkpoint complete: wrote 1815 buffers (11.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.074 s, sync=0.049 s, total=0.214 s; sync files=510, longest=0.013 s, average=0.001 s; distance=140989 kB, estimate=140989 kB
2023-07-22 04:12:08.788 UTC [544599] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:12:08.788 UTC [544599] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:12:40.810 UTC [544534] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:12:40.928 UTC [544534] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.009 s, total=0.119 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132614 kB, estimate=140151 kB
2023-07-22 04:12:40.970 UTC [544533] LOG:  received fast shutdown request
2023-07-22 04:12:40.978 UTC [544533] LOG:  aborting any active transactions
2023-07-22 04:12:40.978 UTC [544533] LOG:  background worker "logical replication launcher" (PID 544539) exited with exit code 1
2023-07-22 04:12:40.979 UTC [544534] LOG:  shutting down
2023-07-22 04:12:40.986 UTC [544534] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:12:41.024 UTC [544534] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.046 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=126136 kB
2023-07-22 04:12:41.061 UTC [544533] LOG:  database system is shut down
2023-07-22 04:12:41.768 UTC [544642] FATAL:  could not access file "pg_strom": No such file or directory
2023-07-22 04:12:41.768 UTC [544642] LOG:  database system is shut down
2023-07-22 04:12:42.606 UTC [544675] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:12:42.607 UTC [544675] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:12:42.621 UTC [544675] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:12:42.635 UTC [544678] LOG:  database system was shut down at 2023-07-22 04:12:42 UTC
2023-07-22 04:12:42.644 UTC [544675] LOG:  database system is ready to accept connections
2023-07-22 04:12:42.852 UTC [544694] ERROR:  argument must be empty or one-dimensional array
2023-07-22 04:12:42.852 UTC [544694] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[['(0, 2)']]::tid[]);
2023-07-22 04:12:42.852 UTC [544694] ERROR:  array must not contain nulls
2023-07-22 04:12:42.852 UTC [544694] STATEMENT:  select heap_force_kill('htab2'::regclass, ARRAY[NULL]::tid[]);
2023-07-22 04:12:42.857 UTC [544694] ERROR:  cannot operate on relation "vw"
2023-07-22 04:12:42.857 UTC [544694] DETAIL:  This operation is not supported for views.
2023-07-22 04:12:42.857 UTC [544694] STATEMENT:  select heap_force_kill('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 04:12:42.857 UTC [544694] ERROR:  cannot operate on relation "vw"
2023-07-22 04:12:42.857 UTC [544694] DETAIL:  This operation is not supported for views.
2023-07-22 04:12:42.857 UTC [544694] STATEMENT:  select heap_force_freeze('vw'::regclass, ARRAY['(0, 1)']::tid[]);
2023-07-22 04:12:43.210 UTC [544720] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:12:43.210 UTC [544720] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:13:15.771 UTC [544676] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:13:15.980 UTC [544676] LOG:  checkpoint complete: wrote 1778 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.040 s, sync=0.082 s, total=0.210 s; sync files=498, longest=0.030 s, average=0.001 s; distance=140566 kB, estimate=140566 kB
2023-07-22 04:13:16.125 UTC [544738] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:13:16.125 UTC [544738] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:13:47.820 UTC [544676] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:13:47.932 UTC [544676] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.015 s, sync=0.011 s, total=0.113 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132502 kB, estimate=139760 kB
2023-07-22 04:13:47.999 UTC [544675] LOG:  received fast shutdown request
2023-07-22 04:13:48.010 UTC [544675] LOG:  aborting any active transactions
2023-07-22 04:13:48.011 UTC [544675] LOG:  background worker "logical replication launcher" (PID 544681) exited with exit code 1
2023-07-22 04:13:48.011 UTC [544676] LOG:  shutting down
2023-07-22 04:13:48.016 UTC [544676] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:13:48.064 UTC [544676] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.054 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=125784 kB
2023-07-22 04:13:48.090 UTC [544675] LOG:  database system is shut down
2023-07-22 04:13:48.844 UTC [544780] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:13:48.844 UTC [544780] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:13:48.856 UTC [544780] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:13:48.874 UTC [544783] LOG:  database system was shut down at 2023-07-22 04:13:48 UTC
2023-07-22 04:13:48.884 UTC [544780] LOG:  database system is ready to accept connections
2023-07-22 04:13:49.101 UTC [544780] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:13:49.140 UTC [544780] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:13:49.142 UTC [544780] LOG:  parameter "pgtle.enable_password_check" changed to "on"
2023-07-22 04:13:49.225 UTC [544780] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:13:49.226 UTC [544780] LOG:  parameter "pgtle.enable_password_check" changed to "require"
2023-07-22 04:13:49.233 UTC [544802] ERROR:  "pgtle.enable_password_check" feature is set to require, however no entries exist in "pgtle.feature_info" with the feature "passcheck"
2023-07-22 04:13:49.245 UTC [544802] ERROR:  Passwords needs to be longer than 8
2023-07-22 04:13:49.274 UTC [544802] ERROR:  Passwords needs to be longer than 8
2023-07-22 04:13:49.279 UTC [544802] ERROR:  permission denied for table feature_info
2023-07-22 04:13:49.279 UTC [544802] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'testuser_2', 'unpriv_function_passcheck', 'public.unpriv_function_passcheck(pg_catalog.text,pg_catalog.text,pgtle.password_types,timestamp with time zone,boolean)');
2023-07-22 04:13:49.279 UTC [544802] ERROR:  permission denied for function register_feature
2023-07-22 04:13:49.279 UTC [544802] STATEMENT:  SELECT pgtle.register_feature('testuser_2.unpriv_function_passcheck', 'passcheck');
2023-07-22 04:13:49.280 UTC [544802] ERROR:  permission denied for function unregister_feature
2023-07-22 04:13:49.280 UTC [544802] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 04:13:49.281 UTC [544802] ERROR:  permission denied for table feature_info
2023-07-22 04:13:49.281 UTC [544802] STATEMENT:  DELETE FROM pgtle.feature_info where feature = 'passcheck';
2023-07-22 04:13:49.293 UTC [544802] ERROR:  Passwords can only have numbers
2023-07-22 04:13:49.320 UTC [544802] ERROR:  table, schema, and proname must be present in "pgtle.feature_info"
2023-07-22 04:13:49.321 UTC [544802] ERROR:  duplicate key value violates unique constraint "feature_info_pkey"
2023-07-22 04:13:49.321 UTC [544802] DETAIL:  Key (feature, schema_name, proname)=(passcheck, public, password_check_length_greater_than_8) already exists.
2023-07-22 04:13:49.321 UTC [544802] CONTEXT:  SQL statement "INSERT INTO pgtle.feature_info VALUES (feature, proc_schema_name, proname, ident)"
	PL/pgSQL function pgtle.register_feature(regproc,pgtle.pg_tle_features) line 24 at SQL statement
2023-07-22 04:13:49.321 UTC [544802] STATEMENT:  SELECT pgtle.register_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 04:13:49.330 UTC [544802] ERROR:  Could not unregister "password_check_length_greater_than_8": does not exist.
2023-07-22 04:13:49.330 UTC [544802] CONTEXT:  PL/pgSQL function pgtle.unregister_feature(regproc,pgtle.pg_tle_features) line 44 at RAISE
2023-07-22 04:13:49.330 UTC [544802] STATEMENT:  SELECT pgtle.unregister_feature('password_check_length_greater_than_8', 'passcheck');
2023-07-22 04:13:49.365 UTC [544802] ERROR:  "passcheck" feature does not support calling out to functions/schemas that contain ";"
2023-07-22 04:13:49.365 UTC [544802] HINT:  Check the "pgtle.feature_info" table does not contain ';'.
2023-07-22 04:13:49.396 UTC [544780] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:13:49.397 UTC [544780] LOG:  parameter "pgtle.enable_password_check" removed from configuration file, reset to default
2023-07-22 04:13:49.422 UTC [544802] ERROR:  Function is referenced in pgtle.feature_info
2023-07-22 04:13:49.422 UTC [544802] CONTEXT:  PL/pgSQL function pgtle.pg_tle_feature_info_sql_drop() line 27 at RAISE
2023-07-22 04:13:49.422 UTC [544802] STATEMENT:  DROP SCHEMA pass CASCADE;
2023-07-22 04:13:49.577 UTC [544806] ERROR:  permission denied for function superuser_only
2023-07-22 04:13:49.577 UTC [544806] STATEMENT:  CREATE EXTENSION test_no_switch_to_superuser_when_trusted;
2023-07-22 04:13:49.578 UTC [544806] ERROR:  must be owner of extension test123
2023-07-22 04:13:49.578 UTC [544806] STATEMENT:  DROP EXTENSION test123;
2023-07-22 04:13:49.579 UTC [544806] ERROR:  must be owner of function test123_func
2023-07-22 04:13:49.579 UTC [544806] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 04:13:49.581 UTC [544806] ERROR:  must be owner of extension test123
2023-07-22 04:13:49.581 UTC [544806] STATEMENT:  DROP EXTENSION test123;
2023-07-22 04:13:49.582 UTC [544806] ERROR:  must be owner of function test123_func
2023-07-22 04:13:49.582 UTC [544806] STATEMENT:  DROP FUNCTION test123_func();
2023-07-22 04:13:49.583 UTC [544806] ERROR:  extension "test123" already installed
2023-07-22 04:13:49.583 UTC [544806] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test123',
	 '1.1',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	  CREATE OR REPLACE FUNCTION test123_func_2()
	  RETURNS INT AS $$
	  (
	    SELECT 424242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 04:13:49.608 UTC [544806] ERROR:  permission denied for schema pgtle
2023-07-22 04:13:49.608 UTC [544806] STATEMENT:  CREATE OR REPLACE FUNCTION pgtle.foo()
	RETURNS TEXT AS $$
	SELECT 'ok'
	$$ LANGUAGE sql;
2023-07-22 04:13:49.613 UTC [544806] ERROR:  pgtle schema reserved for pg_tle functions
2023-07-22 04:13:49.613 UTC [544806] STATEMENT:  ALTER FUNCTION public.pg_tlefoo() SET SCHEMA pgtle;
2023-07-22 04:13:49.619 UTC [544806] ERROR:  control file already exists for the plpgsql extension
2023-07-22 04:13:49.619 UTC [544806] STATEMENT:  SELECT pgtle.install_extension
	(
	 'plpgsql',
	 '1.0',
	 'Test TLE Functions',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test123_func()
	  RETURNS INT AS $$
	  (
	    SELECT 42
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 04:13:49.619 UTC [544806] ERROR:  altering pg_tle functions in pgtle schema not allowed
2023-07-22 04:13:49.619 UTC [544806] STATEMENT:  ALTER FUNCTION pgtle.install_extension
	(
	  name text,
	  version text,
	  description text,
	  ext text,
	  requires text[]
	)
	SET search_path TO 'public';
2023-07-22 04:13:49.666 UTC [544806] ERROR:  extension "new_ext" update path "1.0-1.1" already installed
2023-07-22 04:13:49.666 UTC [544806] HINT:  To update this specific install path, first use "pgtle.uninstall_update_path".
2023-07-22 04:13:49.666 UTC [544806] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'new_ext',
	 '1.0',
	 '1.1',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION fun()
	  RETURNS INT AS $$ SELECT 2; $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.678 UTC [544806] ERROR:  Extension new_ext does not exist
2023-07-22 04:13:49.678 UTC [544806] CONTEXT:  PL/pgSQL function uninstall_update_path(text,text,text) line 16 at RAISE
2023-07-22 04:13:49.678 UTC [544806] STATEMENT:  SELECT pgtle.uninstall_update_path('new_ext', '1.1', '1.0');
2023-07-22 04:13:49.709 UTC [544806] ERROR:  extension and version do not exist
2023-07-22 04:13:49.709 UTC [544806] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 04:13:49.709 UTC [544806] STATEMENT:  SELECT pgtle.set_default_version('new_ext', '1.2');
2023-07-22 04:13:49.712 UTC [544806] ERROR:  extension and version do not exist
2023-07-22 04:13:49.712 UTC [544806] HINT:  Try installing the extension with "pgtle.install_extension".
2023-07-22 04:13:49.712 UTC [544806] STATEMENT:  SELECT pgtle.set_default_version('bogus', '1.2');
2023-07-22 04:13:49.729 UTC [544806] ERROR:  syntax error in extension control function for "broken_ext"
2023-07-22 04:13:49.729 UTC [544806] DETAIL:  Could not parse extension control function "pgtle"."broken_ext.control".
2023-07-22 04:13:49.729 UTC [544806] HINT:  You may need to reinstall the extension to correct this error.
2023-07-22 04:13:49.729 UTC [544806] STATEMENT:  SELECT * FROM pgtle.available_extensions();
2023-07-22 04:13:49.736 UTC [544806] ERROR:  Extension bogus does not exist
2023-07-22 04:13:49.736 UTC [544806] CONTEXT:  PL/pgSQL function uninstall_extension(text) line 18 at RAISE
2023-07-22 04:13:49.736 UTC [544806] STATEMENT:  SELECT pgtle.uninstall_extension('bogus');
2023-07-22 04:13:49.773 UTC [544806] ERROR:  version "2.0" of extension "test42" already installed
2023-07-22 04:13:49.773 UTC [544806] STATEMENT:  SELECT pgtle.install_extension_version_sql
	(
	 'test42',
	 '2.0',
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION test42_func()
	  RETURNS INT AS $$
	  (
	    SELECT 4242
	  )$$ LANGUAGE sql;
	$_pgtle_$
	);
2023-07-22 04:13:49.777 UTC [544806] ERROR:  Can not uninstall default version of extension test42, use set_default_version to update the default to another available version and retry
2023-07-22 04:13:49.777 UTC [544806] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 28 at RAISE
2023-07-22 04:13:49.777 UTC [544806] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '1.0');
2023-07-22 04:13:49.790 UTC [544806] ERROR:  Version test42 of extension 3.0 is not installed and therefore can not be uninstalled
2023-07-22 04:13:49.790 UTC [544806] CONTEXT:  PL/pgSQL function uninstall_extension(text,text) line 50 at RAISE
2023-07-22 04:13:49.790 UTC [544806] STATEMENT:  SELECT pgtle.uninstall_extension('test42', '3.0');
2023-07-22 04:13:49.909 UTC [544810] ERROR:  invalid character in extension definition
2023-07-22 04:13:49.909 UTC [544810] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:13:49.909 UTC [544810] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:13:49.909 UTC [544810] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.910 UTC [544810] ERROR:  invalid character in extension definition
2023-07-22 04:13:49.910 UTC [544810] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:13:49.910 UTC [544810] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:13:49.910 UTC [544810] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.916 UTC [544810] ERROR:  invalid character in extension update definition
2023-07-22 04:13:49.916 UTC [544810] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:13:49.916 UTC [544810] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:13:49.916 UTC [544810] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.936 UTC [544810] ERROR:  invalid character in extension definition
2023-07-22 04:13:49.936 UTC [544810] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:13:49.936 UTC [544810] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:13:49.936 UTC [544810] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 $$hax$_pgtle_i_$ $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE OR REPLACE FUNCTION haha() RETURNS TEXT AS $_pgtle_o_$ SELECT $_pgtle_i_$ $$,
	$_pgtle_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.936 UTC [544810] ERROR:  invalid character in extension definition
2023-07-22 04:13:49.936 UTC [544810] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:13:49.936 UTC [544810] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:13:49.936 UTC [544810] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test_hax',
	 '1.0',
	 'hax',
	$_pgtle_$ $_pgtle_i_$ $_pgtle_o_$ ALTER ROLE bad_actor SUPERUSER; $_pgtle_o_$ $_pgtle_i_$
	  CREATE OR REPLACE FUNCTION basic_func()
	  RETURNS INT AS $$
	    SELECT 1;
	  $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.944 UTC [544810] ERROR:  invalid character in extension update definition
2023-07-22 04:13:49.944 UTC [544810] DETAIL:  Use of string delimiters "$_pgtle_o_$" and "$_pgtle_i_$" are forbidden in extension definitions.
2023-07-22 04:13:49.944 UTC [544810] HINT:  This may be an attempt at a SQL injection attack. Please verify your installation file.
2023-07-22 04:13:49.944 UTC [544810] STATEMENT:  SELECT pgtle.install_update_path
	(
	 'legit_100',
	 '1.0',
	 '1.1',
	$_pgtle_$ $_pgtle_i_$ ; $_pgtle_o_$ LANGUAGE SQL; ALTER ROLE bad_actor SUPERUSER; CREATE FUNCTiON hax() RETURNS text AS $_pgtle_o_$ SELECT $_pgtle_i_$
	 CREATE OR REPLACE FUNCTION basic_func()
	 RETURNS INT AS $$
	   SELECT 2;
	 $$ LANGUAGE SQL;
	$_pgtle_$
	);
2023-07-22 04:13:49.954 UTC [544810] ERROR:  invalid extension name: "test9.control"(),pg_sleep(10),pgtle."test9"
2023-07-22 04:13:49.954 UTC [544810] DETAIL:  Extension names must only contain alphanumeric characters or valid separators.
2023-07-22 04:13:49.954 UTC [544810] STATEMENT:  SELECT pgtle.install_extension
	(
	 'test9.control"(),pg_sleep(10),pgtle."test9',
	 '0.1',
	 'comment',
	$_pg_tle_$
	    CREATE FUNCTION dist(x1 numeric, y1 numeric, x2 numeric, y2 numeric, l numeric)
	    RETURNS numeric
	    AS $$
	      SELECT ((x2 ^ l - x1 ^ l) ^ (1 / l)) + ((y2 ^ l - y1 ^ l) ^ (1 / l));
	    $$ LANGUAGE SQL;
	$_pg_tle_$
	);
2023-07-22 04:13:50.063 UTC [544814] ERROR:  permission denied for schema public
2023-07-22 04:13:50.063 UTC [544814] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:13:50.100 UTC [544814] ERROR:  must be owner of extension no_features
2023-07-22 04:13:50.100 UTC [544814] STATEMENT:  DROP EXTENSION no_features;
2023-07-22 04:13:50.111 UTC [544814] ERROR:  permission denied for function register_feature
2023-07-22 04:13:50.111 UTC [544814] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 04:13:50.116 UTC [544814] ERROR:  permission denied for table feature_info
2023-07-22 04:13:50.116 UTC [544814] STATEMENT:  INSERT INTO pgtle.feature_info VALUES ('passcheck', 'public', 'other_passcheck_hook', '');
2023-07-22 04:13:50.117 UTC [544814] ERROR:  must have admin option on role "pgtle_admin"
2023-07-22 04:13:50.117 UTC [544814] STATEMENT:  GRANT pgtle_admin to tle_person;
2023-07-22 04:13:50.139 UTC [544814] ERROR:  permission denied for function unregister_feature
2023-07-22 04:13:50.139 UTC [544814] STATEMENT:  SELECT pgtle.unregister_feature('passcheck_hook', 'passcheck');
2023-07-22 04:13:50.140 UTC [544814] ERROR:  permission denied for function unregister_feature
2023-07-22 04:13:50.140 UTC [544814] STATEMENT:  SELECT pgtle.unregister_feature('other_passcheck_hook', 'passcheck');
2023-07-22 04:13:50.140 UTC [544814] ERROR:  permission denied for table feature_info
2023-07-22 04:13:50.140 UTC [544814] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'passcheck_hook';
2023-07-22 04:13:50.141 UTC [544814] ERROR:  permission denied for table feature_info
2023-07-22 04:13:50.141 UTC [544814] STATEMENT:  DELETE FROM pgtle.feature_info WHERE proname = 'other_passcheck_hook';
2023-07-22 04:13:50.177 UTC [544814] ERROR:  permission denied for schema public
2023-07-22 04:13:50.177 UTC [544814] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:13:50.184 UTC [544814] ERROR:  permission denied for schema public
2023-07-22 04:13:50.184 UTC [544814] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:13:50.191 UTC [544814] ERROR:  permission denied for schema public
2023-07-22 04:13:50.191 UTC [544814] STATEMENT:  CREATE EXTENSION yes_features;
2023-07-22 04:13:50.192 UTC [544814] ERROR:  permission denied for schema public
2023-07-22 04:13:50.192 UTC [544814] STATEMENT:  CREATE EXTENSION no_features;
2023-07-22 04:13:50.285 UTC [544818] ERROR:  "requires" limited to 1024 entries for "pg_tle" extensions
2023-07-22 04:13:50.285 UTC [544818] STATEMENT:  SELECT pgtle.install_extension
	(
	 't',
	 '1',
	 '1',
	$_pg_tle_$
	CREATE FUNCTION pgtle."test12--0.1FOOBAR.control"()
	RETURNS void
	AS $$
	    BEGIN
	    RAISE NOTICE 'called';
	    END
	$$ LANGUAGE SQL;
	$_pg_tle_$,
	'{a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a}'
	);
2023-07-22 04:13:50.743 UTC [544844] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:13:50.743 UTC [544844] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:14:23.282 UTC [544781] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:23.509 UTC [544781] LOG:  checkpoint complete: wrote 1847 buffers (11.3%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.048 s, sync=0.087 s, total=0.228 s; sync files=520, longest=0.031 s, average=0.001 s; distance=141329 kB, estimate=141329 kB
2023-07-22 04:14:23.639 UTC [544863] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:14:23.639 UTC [544863] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:14:55.430 UTC [544781] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:55.568 UTC [544781] LOG:  checkpoint complete: wrote 49 buffers (0.3%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.022 s, sync=0.013 s, total=0.139 s; sync files=16, longest=0.008 s, average=0.001 s; distance=132769 kB, estimate=140473 kB
2023-07-22 04:14:55.634 UTC [544780] LOG:  received fast shutdown request
2023-07-22 04:14:55.642 UTC [544780] LOG:  aborting any active transactions
2023-07-22 04:14:55.642 UTC [544780] LOG:  background worker "logical replication launcher" (PID 544786) exited with exit code 1
2023-07-22 04:14:55.642 UTC [544781] LOG:  shutting down
2023-07-22 04:14:55.650 UTC [544781] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:14:55.695 UTC [544781] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.009 s, sync=0.004 s, total=0.053 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=126426 kB
2023-07-22 04:14:55.740 UTC [544780] LOG:  database system is shut down
2023-07-22 04:14:56.638 UTC [544907] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:14:56.639 UTC [544907] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:14:56.653 UTC [544907] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:14:56.670 UTC [544910] LOG:  database system was shut down at 2023-07-22 04:14:56 UTC
2023-07-22 04:14:56.681 UTC [544907] LOG:  database system is ready to accept connections
2023-07-22 04:14:56.916 UTC [544926] ERROR:  value 0 out of bounds for option "siglen"
2023-07-22 04:14:56.916 UTC [544926] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:14:56.916 UTC [544926] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=0));
2023-07-22 04:14:56.916 UTC [544926] ERROR:  value 2025 out of bounds for option "siglen"
2023-07-22 04:14:56.916 UTC [544926] DETAIL:  Valid values are between "1" and "2024".
2023-07-22 04:14:56.916 UTC [544926] STATEMENT:  create index trgm_idx on test_trgm using gist (t gist_trgm_ops(siglen=2025));
2023-07-22 04:14:57.360 UTC [544934] ERROR:  relation "test_trgm3" does not exist
2023-07-22 04:14:57.360 UTC [544934] STATEMENT:  COPY  test_trgm3 FROM STDIN 
2023-07-22 04:14:57.410 UTC [544908] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:14:57.475 UTC [544908] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.017 s, sync=0.013 s, total=0.065 s; sync files=7, longest=0.007 s, average=0.002 s; distance=4626 kB, estimate=4626 kB
2023-07-22 04:14:57.927 UTC [544960] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:14:57.927 UTC [544960] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:15:30.413 UTC [544908] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:15:30.576 UTC [544908] LOG:  checkpoint complete: wrote 899 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.037 s, sync=0.034 s, total=0.164 s; sync files=251, longest=0.014 s, average=0.001 s; distance=136658 kB, estimate=136658 kB
2023-07-22 04:15:30.708 UTC [544982] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:15:30.708 UTC [544982] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:16:02.476 UTC [544908] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:16:02.600 UTC [544908] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 9 recycled; write=0.018 s, sync=0.009 s, total=0.125 s; sync files=4, longest=0.006 s, average=0.003 s; distance=132565 kB, estimate=136249 kB
2023-07-22 04:16:02.670 UTC [544907] LOG:  received fast shutdown request
2023-07-22 04:16:02.677 UTC [544907] LOG:  aborting any active transactions
2023-07-22 04:16:02.677 UTC [544907] LOG:  background worker "logical replication launcher" (PID 544913) exited with exit code 1
2023-07-22 04:16:02.677 UTC [544908] LOG:  shutting down
2023-07-22 04:16:02.684 UTC [544908] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:16:02.722 UTC [544908] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.004 s, total=0.046 s; sync files=1, longest=0.004 s, average=0.004 s; distance=0 kB, estimate=122624 kB
2023-07-22 04:16:02.742 UTC [544907] LOG:  database system is shut down
2023-07-22 04:16:03.510 UTC [545024] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:16:03.511 UTC [545024] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:16:03.526 UTC [545024] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:16:03.543 UTC [545027] LOG:  database system was shut down at 2023-07-22 04:16:03 UTC
2023-07-22 04:16:03.554 UTC [545024] LOG:  database system is ready to accept connections
2023-07-22 04:16:03.799 UTC [545043] ERROR:  package name can not be NULL
2023-07-22 04:16:03.799 UTC [545043] STATEMENT:  SELECT pgv_exists(NULL);
2023-07-22 04:16:03.800 UTC [545043] ERROR:  package name can not be NULL
2023-07-22 04:16:03.800 UTC [545043] STATEMENT:  SELECT pgv_remove(NULL);
2023-07-22 04:16:03.800 UTC [545043] ERROR:  unrecognized package "vars"
2023-07-22 04:16:03.800 UTC [545043] STATEMENT:  SELECT pgv_remove('vars');
2023-07-22 04:16:03.800 UTC [545043] ERROR:  name "vars111111111111111111111111111111111111111111111111111111111111" is too long
2023-07-22 04:16:03.800 UTC [545043] STATEMENT:  SELECT pgv_exists('vars111111111111111111111111111111111111111111111111111111111111');
2023-07-22 04:16:03.800 UTC [545043] ERROR:  unrecognized package "vars"
2023-07-22 04:16:03.800 UTC [545043] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 04:16:03.801 UTC [545043] ERROR:  unrecognized variable "int3"
2023-07-22 04:16:03.801 UTC [545043] STATEMENT:  SELECT pgv_get_int('vars', 'int3');
2023-07-22 04:16:03.802 UTC [545043] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:16:03.802 UTC [545043] STATEMENT:  SELECT pgv_set_text('vars', 'int1', 's101');
2023-07-22 04:16:03.802 UTC [545043] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.802 UTC [545043] STATEMENT:  SELECT pgv_set_int('vars', 'str1', 101);
2023-07-22 04:16:03.803 UTC [545043] ERROR:  unrecognized variable "str3"
2023-07-22 04:16:03.803 UTC [545043] STATEMENT:  SELECT pgv_get_text('vars', 'str3');
2023-07-22 04:16:03.803 UTC [545043] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:16:03.803 UTC [545043] STATEMENT:  SELECT pgv_get_text('vars', 'int1');
2023-07-22 04:16:03.803 UTC [545043] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.803 UTC [545043] STATEMENT:  SELECT pgv_get_int('vars', 'str1');
2023-07-22 04:16:03.804 UTC [545043] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.804 UTC [545043] STATEMENT:  SELECT pgv_set_numeric('vars', 'str1', 1.01);
2023-07-22 04:16:03.804 UTC [545043] ERROR:  unrecognized variable "num3"
2023-07-22 04:16:03.804 UTC [545043] STATEMENT:  SELECT pgv_get_numeric('vars', 'num3');
2023-07-22 04:16:03.804 UTC [545043] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.804 UTC [545043] STATEMENT:  SELECT pgv_get_numeric('vars', 'str1');
2023-07-22 04:16:03.805 UTC [545043] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:16:03.805 UTC [545043] STATEMENT:  SELECT pgv_set_timestamp('vars', 'num1', '2016-03-30 12:00:00');
2023-07-22 04:16:03.805 UTC [545043] ERROR:  unrecognized variable "ts3"
2023-07-22 04:16:03.805 UTC [545043] STATEMENT:  SELECT pgv_get_timestamp('vars', 'ts3');
2023-07-22 04:16:03.805 UTC [545043] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:16:03.805 UTC [545043] STATEMENT:  SELECT pgv_get_timestamp('vars', 'num1');
2023-07-22 04:16:03.806 UTC [545043] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:16:03.806 UTC [545043] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'ts1', '2016-03-30 12:00:00 GMT+03');
2023-07-22 04:16:03.806 UTC [545043] ERROR:  unrecognized variable "tstz3"
2023-07-22 04:16:03.806 UTC [545043] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'tstz3');
2023-07-22 04:16:03.806 UTC [545043] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:16:03.806 UTC [545043] STATEMENT:  SELECT pgv_get_timestamptz('vars', 'ts1');
2023-07-22 04:16:03.807 UTC [545043] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:16:03.807 UTC [545043] STATEMENT:  SELECT pgv_set_date('vars', 'tstz1', '2016-04-01');
2023-07-22 04:16:03.807 UTC [545043] ERROR:  unrecognized variable "d3"
2023-07-22 04:16:03.807 UTC [545043] STATEMENT:  SELECT pgv_get_date('vars', 'd3');
2023-07-22 04:16:03.807 UTC [545043] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:16:03.807 UTC [545043] STATEMENT:  SELECT pgv_get_date('vars', 'tstz1');
2023-07-22 04:16:03.808 UTC [545043] ERROR:  variable "d1" requires "date" value
2023-07-22 04:16:03.808 UTC [545043] STATEMENT:  SELECT pgv_set_jsonb('vars', 'd1', '[1, 2, "foo", null]');
2023-07-22 04:16:03.808 UTC [545043] ERROR:  unrecognized variable "j3"
2023-07-22 04:16:03.808 UTC [545043] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j3');
2023-07-22 04:16:03.808 UTC [545043] ERROR:  variable "d1" requires "date" value
2023-07-22 04:16:03.808 UTC [545043] STATEMENT:  SELECT pgv_get_jsonb('vars', 'd1');
2023-07-22 04:16:03.826 UTC [545043] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:16:03.826 UTC [545043] STATEMENT:  SELECT pgv_insert('vars2', 'j1', tab) FROM tab;
2023-07-22 04:16:03.827 UTC [545043] ERROR:  there is a record in the variable "r1" with same key
2023-07-22 04:16:03.827 UTC [545043] STATEMENT:  SELECT pgv_insert('vars3', 'r1', tab) FROM tab;
2023-07-22 04:16:03.827 UTC [545043] ERROR:  new record structure have 3 attributes, but variable "r1" structure have 2.
2023-07-22 04:16:03.827 UTC [545043] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 'str1', 'str2'));
2023-07-22 04:16:03.827 UTC [545043] ERROR:  new record attribute type for attribute number 2 differs from variable "r1" structure.
2023-07-22 04:16:03.827 UTC [545043] HINT:  You may need explicit type casts.
2023-07-22 04:16:03.827 UTC [545043] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(1, 1));
2023-07-22 04:16:03.828 UTC [545043] ERROR:  new record attribute type for attribute number 1 differs from variable "r1" structure.
2023-07-22 04:16:03.828 UTC [545043] HINT:  You may need explicit type casts.
2023-07-22 04:16:03.828 UTC [545043] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row('str1', 'str1'));
2023-07-22 04:16:03.829 UTC [545043] ERROR:  searching for elements in multidimensional arrays is not supported
2023-07-22 04:16:03.829 UTC [545043] STATEMENT:  SELECT pgv_select('vars3', 'r1', ARRAY[[1,2]]);
2023-07-22 04:16:03.830 UTC [545043] ERROR:  unrecognized package "vars4"
2023-07-22 04:16:03.830 UTC [545043] STATEMENT:  SELECT pgv_update('vars4', 'r1', row(3, 'str22'::varchar));
2023-07-22 04:16:03.831 UTC [545043] ERROR:  unrecognized package "vars4"
2023-07-22 04:16:03.831 UTC [545043] STATEMENT:  select pgv_delete('vars4', 'r2', NULL::int);
2023-07-22 04:16:03.832 UTC [545043] ERROR:  record argument can not be NULL
2023-07-22 04:16:03.832 UTC [545043] STATEMENT:  SELECT pgv_insert('vars3', 'r2', NULL);
2023-07-22 04:16:03.832 UTC [545043] ERROR:  record argument can not be NULL
2023-07-22 04:16:03.832 UTC [545043] STATEMENT:  SELECT pgv_update('vars3', 'r2', NULL);
2023-07-22 04:16:03.833 UTC [545043] ERROR:  array argument can not be NULL
2023-07-22 04:16:03.833 UTC [545043] STATEMENT:  SELECT pgv_select('vars3', 'r1', NULL::int[]);
2023-07-22 04:16:03.835 UTC [545043] ERROR:  requested value type differs from variable "r1" key type
2023-07-22 04:16:03.835 UTC [545043] STATEMENT:  SELECT pgv_select('vars3', 'r1', 1::float);
2023-07-22 04:16:03.843 UTC [545043] ERROR:  unrecognized variable "r3"
2023-07-22 04:16:03.843 UTC [545043] STATEMENT:  SELECT pgv_select('vars3', 'r3');
2023-07-22 04:16:03.844 UTC [545043] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:16:03.844 UTC [545043] STATEMENT:  SELECT pgv_select('vars2', 'j1');
2023-07-22 04:16:03.853 UTC [545043] ERROR:  unrecognized variable "r3"
2023-07-22 04:16:03.853 UTC [545043] CONTEXT:  SQL statement "SELECT pgv_select('vars3', 'r3')"
	PL/pgSQL function inline_code_block line 3 at PERFORM
2023-07-22 04:16:03.853 UTC [545043] STATEMENT:  DO
	$$BEGIN
	    PERFORM pgv_select('vars3', 'r1') LIMIT 2 OFFSET 2;
	    PERFORM pgv_select('vars3', 'r3');
	END$$;
2023-07-22 04:16:03.858 UTC [545043] ERROR:  could not identify a hash function for type record
2023-07-22 04:16:03.858 UTC [545043] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 04:16:03.862 UTC [545043] ERROR:  variable "r1" already created as NOT TRANSACTIONAL
2023-07-22 04:16:03.862 UTC [545043] STATEMENT:  SELECT pgv_set('vars5', 'r1', row(1, 'str11'), true);
2023-07-22 04:16:03.862 UTC [545043] ERROR:  "r1" isn't a record variable
2023-07-22 04:16:03.862 UTC [545043] STATEMENT:  SELECT pgv_insert('vars5', 'r1', row(1, 'str11'));
2023-07-22 04:16:03.863 UTC [545043] ERROR:  "r1" isn't a record variable
2023-07-22 04:16:03.863 UTC [545043] STATEMENT:  SELECT pgv_select('vars5', 'r1');
2023-07-22 04:16:03.863 UTC [545043] ERROR:  "r1" isn't a scalar variable
2023-07-22 04:16:03.863 UTC [545043] STATEMENT:  SELECT pgv_get('vars3', 'r1', NULL::record);
2023-07-22 04:16:03.866 UTC [545043] ERROR:  unrecognized variable "int3"
2023-07-22 04:16:03.866 UTC [545043] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 04:16:03.867 UTC [545043] ERROR:  unrecognized variable "int1"
2023-07-22 04:16:03.867 UTC [545043] STATEMENT:  SELECT pgv_get_int('vars', 'int1');
2023-07-22 04:16:03.868 UTC [545043] ERROR:  unrecognized package "vars2"
2023-07-22 04:16:03.868 UTC [545043] STATEMENT:  SELECT pgv_get_jsonb('vars2', 'j1');
2023-07-22 04:16:03.883 UTC [545043] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 04:16:03.883 UTC [545043] STATEMENT:  SELECT pgv_insert('vars', 'r1', foo) FROM foo;
2023-07-22 04:16:03.887 UTC [545043] ERROR:  new record attribute type for attribute number 2 differs from variable "r4" structure.
2023-07-22 04:16:03.887 UTC [545043] HINT:  You may need explicit type casts.
2023-07-22 04:16:03.887 UTC [545043] STATEMENT:  SELECT pgv_insert('vars', 'r4', row(0, 'str1'));
2023-07-22 04:16:03.909 UTC [545047] ERROR:  unrecognized package "vars"
2023-07-22 04:16:03.909 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 04:16:03.913 UTC [545047] ERROR:  unrecognized variable "int3"
2023-07-22 04:16:03.913 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'int3', NULL::int);
2023-07-22 04:16:03.917 UTC [545047] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:16:03.917 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'int1', 's101'::text);
2023-07-22 04:16:03.918 UTC [545047] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.918 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'str1', 101);
2023-07-22 04:16:03.920 UTC [545047] ERROR:  unrecognized variable "str3"
2023-07-22 04:16:03.920 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'str3', NULL::text);
2023-07-22 04:16:03.922 UTC [545047] ERROR:  variable "int1" requires "integer" value
2023-07-22 04:16:03.922 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::text);
2023-07-22 04:16:03.922 UTC [545047] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.922 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::int);
2023-07-22 04:16:03.924 UTC [545047] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.924 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'str1', 1.01::numeric);
2023-07-22 04:16:03.927 UTC [545047] ERROR:  unrecognized variable "num3"
2023-07-22 04:16:03.927 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'num3', NULL::numeric);
2023-07-22 04:16:03.928 UTC [545047] ERROR:  variable "str1" requires "text" value
2023-07-22 04:16:03.928 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'str1', NULL::numeric);
2023-07-22 04:16:03.931 UTC [545047] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:16:03.931 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'num1', '2016-03-30 12:00:00'::timestamp);
2023-07-22 04:16:03.933 UTC [545047] ERROR:  unrecognized variable "ts3"
2023-07-22 04:16:03.933 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'ts3', NULL::timestamp);
2023-07-22 04:16:03.935 UTC [545047] ERROR:  variable "num1" requires "numeric" value
2023-07-22 04:16:03.935 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'num1', NULL::timestamp);
2023-07-22 04:16:03.938 UTC [545047] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:16:03.938 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'ts1', '2016-03-30 12:00:00 GMT+03'::timestamptz);
2023-07-22 04:16:03.940 UTC [545047] ERROR:  unrecognized variable "tstz3"
2023-07-22 04:16:03.940 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'tstz3', NULL::timestamptz);
2023-07-22 04:16:03.942 UTC [545047] ERROR:  variable "ts1" requires "timestamp without time zone" value
2023-07-22 04:16:03.942 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'ts1', NULL::timestamptz);
2023-07-22 04:16:03.944 UTC [545047] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:16:03.944 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'tstz1', '2016-04-01'::date);
2023-07-22 04:16:03.946 UTC [545047] ERROR:  unrecognized variable "d3"
2023-07-22 04:16:03.946 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'd3', NULL::date);
2023-07-22 04:16:03.948 UTC [545047] ERROR:  variable "tstz1" requires "timestamp with time zone" value
2023-07-22 04:16:03.948 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'tstz1', NULL::date);
2023-07-22 04:16:03.950 UTC [545047] ERROR:  variable "d1" requires "date" value
2023-07-22 04:16:03.950 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'd1', '[1, 2, "foo", null]'::jsonb);
2023-07-22 04:16:03.952 UTC [545047] ERROR:  unrecognized variable "j3"
2023-07-22 04:16:03.952 UTC [545047] STATEMENT:  SELECT pgv_get('vars2', 'j3', NULL::jsonb);
2023-07-22 04:16:03.954 UTC [545047] ERROR:  variable "d1" requires "date" value
2023-07-22 04:16:03.954 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'd1', NULL::jsonb);
2023-07-22 04:16:03.956 UTC [545047] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:16:03.956 UTC [545047] STATEMENT:  SELECT pgv_set('vars2', 'j1', '{1, 2, null}'::int[]);
2023-07-22 04:16:03.957 UTC [545047] ERROR:  variable "arr2" requires "text[]" value
2023-07-22 04:16:03.957 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'arr2', NULL::int[]);
2023-07-22 04:16:03.958 UTC [545047] ERROR:  variable "arr1" requires "integer[]" value
2023-07-22 04:16:03.958 UTC [545047] STATEMENT:  SELECT pgv_set('vars', 'arr1', '{"bar", "balance", "active"}'::text[]);
2023-07-22 04:16:03.959 UTC [545047] ERROR:  unrecognized variable "arr3"
2023-07-22 04:16:03.959 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'arr3', NULL::int[]);
2023-07-22 04:16:03.961 UTC [545047] ERROR:  variable "j1" requires "jsonb" value
2023-07-22 04:16:03.961 UTC [545047] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::int[]);
2023-07-22 04:16:03.964 UTC [545047] ERROR:  unrecognized variable "int3"
2023-07-22 04:16:03.964 UTC [545047] STATEMENT:  SELECT pgv_remove('vars', 'int3');
2023-07-22 04:16:03.965 UTC [545047] ERROR:  unrecognized variable "int1"
2023-07-22 04:16:03.965 UTC [545047] STATEMENT:  SELECT pgv_get('vars', 'int1', NULL::int);
2023-07-22 04:16:03.966 UTC [545047] ERROR:  unrecognized package "vars2"
2023-07-22 04:16:03.966 UTC [545047] STATEMENT:  SELECT pgv_get('vars2', 'j1', NULL::jsonb);
2023-07-22 04:16:04.041 UTC [545051] ERROR:  variable "any1" already created as TRANSACTIONAL
2023-07-22 04:16:04.041 UTC [545051] STATEMENT:  SELECT pgv_set('vars', 'any1', 'value'::text);
2023-07-22 04:16:04.041 UTC [545051] ERROR:  variable "any2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.041 UTC [545051] STATEMENT:  SELECT pgv_set('vars', 'any2', 'value'::text, true);
2023-07-22 04:16:04.041 UTC [545051] ERROR:  variable "int1" already created as TRANSACTIONAL
2023-07-22 04:16:04.041 UTC [545051] STATEMENT:  SELECT pgv_set_int('vars', 'int1', 301);
2023-07-22 04:16:04.042 UTC [545051] ERROR:  variable "int2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.042 UTC [545051] STATEMENT:  SELECT pgv_set_int('vars', 'int2', 302, true);
2023-07-22 04:16:04.042 UTC [545051] ERROR:  variable "str1" already created as TRANSACTIONAL
2023-07-22 04:16:04.042 UTC [545051] STATEMENT:  SELECT pgv_set_text('vars', 'str1', 's301');
2023-07-22 04:16:04.043 UTC [545051] ERROR:  variable "str2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.043 UTC [545051] STATEMENT:  SELECT pgv_set_text('vars', 'str2', 's302', true);
2023-07-22 04:16:04.043 UTC [545051] ERROR:  variable "num1" already created as TRANSACTIONAL
2023-07-22 04:16:04.043 UTC [545051] STATEMENT:  SELECT pgv_set_numeric('vars', 'num1', 3.01);
2023-07-22 04:16:04.043 UTC [545051] ERROR:  variable "num2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.043 UTC [545051] STATEMENT:  SELECT pgv_set_numeric('vars', 'num2', 3.02, true);
2023-07-22 04:16:04.044 UTC [545051] ERROR:  variable "ts1" already created as TRANSACTIONAL
2023-07-22 04:16:04.044 UTC [545051] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts1', '2016-03-30 20:00:00');
2023-07-22 04:16:04.044 UTC [545051] ERROR:  variable "ts2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.044 UTC [545051] STATEMENT:  SELECT pgv_set_timestamp('vars', 'ts2', '2016-03-30 21:00:00', true);
2023-07-22 04:16:04.044 UTC [545051] ERROR:  variable "tstz1" already created as TRANSACTIONAL
2023-07-22 04:16:04.044 UTC [545051] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz1', '2016-03-30 20:00:00 GMT+01');
2023-07-22 04:16:04.045 UTC [545051] ERROR:  variable "tstz2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.045 UTC [545051] STATEMENT:  SELECT pgv_set_timestamptz('vars', 'tstz2', '2016-03-30 21:00:00 GMT+02', true);
2023-07-22 04:16:04.045 UTC [545051] ERROR:  variable "d1" already created as TRANSACTIONAL
2023-07-22 04:16:04.045 UTC [545051] STATEMENT:  SELECT pgv_set_date('vars', 'd1', '2016-04-29');
2023-07-22 04:16:04.046 UTC [545051] ERROR:  variable "d2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.046 UTC [545051] STATEMENT:  SELECT pgv_set_date('vars', 'd2', '2016-04-30', true);
2023-07-22 04:16:04.046 UTC [545051] ERROR:  variable "j1" already created as TRANSACTIONAL
2023-07-22 04:16:04.046 UTC [545051] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j1', '[1, 2, "foo2", null]');
2023-07-22 04:16:04.047 UTC [545051] ERROR:  variable "j2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.047 UTC [545051] STATEMENT:  SELECT pgv_set_jsonb('vars2', 'j2', '{"bar": "baz2", "balance": 7.77, "active": true}', true);
2023-07-22 04:16:04.047 UTC [545051] ERROR:  variable "r1" already created as TRANSACTIONAL
2023-07-22 04:16:04.047 UTC [545051] STATEMENT:  SELECT pgv_insert('vars3', 'r1', row(6 :: integer, 'str66' :: varchar));
2023-07-22 04:16:04.047 UTC [545051] ERROR:  variable "r2" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.047 UTC [545051] STATEMENT:  SELECT pgv_insert('vars3', 'r2', row(6 :: integer, 'str66' :: varchar),true);
2023-07-22 04:16:04.053 UTC [545051] ERROR:  unrecognized variable "any1"
2023-07-22 04:16:04.053 UTC [545051] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:16:04.054 UTC [545051] ERROR:  unrecognized variable "r1"
2023-07-22 04:16:04.054 UTC [545051] STATEMENT:  SELECT pgv_select('vars3', 'r1');
2023-07-22 04:16:04.061 UTC [545051] ERROR:  unrecognized package "vars2"
2023-07-22 04:16:04.061 UTC [545051] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 04:16:04.075 UTC [545051] ERROR:  unrecognized variable "any1"
2023-07-22 04:16:04.075 UTC [545051] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:16:04.076 UTC [545051] ERROR:  unrecognized variable "r1"
2023-07-22 04:16:04.076 UTC [545051] STATEMENT:  SELECT pgv_select('vars', 'r1');
2023-07-22 04:16:04.084 UTC [545051] ERROR:  unrecognized package "vars2"
2023-07-22 04:16:04.084 UTC [545051] STATEMENT:  SELECT pgv_get('vars2', 'any1',NULL::text);
2023-07-22 04:16:04.098 UTC [545051] ERROR:  variable "any1" requires "text" value
2023-07-22 04:16:04.098 UTC [545051] STATEMENT:  SELECT pgv_set('vars', 'any1', 'wrong type'::varchar, true);
2023-07-22 04:16:04.102 UTC [545051] ERROR:  unrecognized package "vars"
2023-07-22 04:16:04.102 UTC [545051] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:16:04.117 UTC [545051] ERROR:  division by zero
2023-07-22 04:16:04.117 UTC [545051] STATEMENT:  SELECT pgv_insert('package', 'errs',row(n), true)
	FROM generate_series(1,5) AS gs(n) WHERE 1.0/(n-3)<>0;
2023-07-22 04:16:04.118 UTC [545051] ERROR:  could not identify a hash function for type record
2023-07-22 04:16:04.118 UTC [545051] STATEMENT:  SELECT pgv_insert('vars4', 'r1', row (('str1'::text, 'str1'::text)));
2023-07-22 04:16:04.118 UTC [545051] ERROR:  unrecognized package "vars4"
2023-07-22 04:16:04.118 UTC [545051] STATEMENT:  SELECT pgv_select('vars4', 'r1', 0);
2023-07-22 04:16:04.120 UTC [545051] ERROR:  unrecognized package "vars"
2023-07-22 04:16:04.120 UTC [545051] STATEMENT:  SELECT pgv_get('vars', 'any1',NULL::text);
2023-07-22 04:16:04.123 UTC [545051] ERROR:  syntax error at or near "ERROR" at character 1
2023-07-22 04:16:04.123 UTC [545051] STATEMENT:  ERROR;
2023-07-22 04:16:04.135 UTC [545051] ERROR:  unrecognized variable "y"
2023-07-22 04:16:04.135 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:16:04.136 UTC [545051] ERROR:  unrecognized variable "y"
2023-07-22 04:16:04.136 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:16:04.137 UTC [545051] ERROR:  unrecognized variable "y"
2023-07-22 04:16:04.137 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:16:04.137 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.137 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.137 UTC [545051] ERROR:  unrecognized variable "y"
2023-07-22 04:16:04.137 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.138 UTC [545051] ERROR:  unrecognized variable "y"
2023-07-22 04:16:04.138 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'y');
2023-07-22 04:16:04.138 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.138 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.138 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.138 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.139 UTC [545051] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 04:16:04.139 UTC [545051] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:16:04.139 UTC [545051] STATEMENT:  SELECT pgv_select('test');
2023-07-22 04:16:04.139 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.139 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.139 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.139 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.139 UTC [545051] ERROR:  function pgv_select(unknown) does not exist at character 8
2023-07-22 04:16:04.139 UTC [545051] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2023-07-22 04:16:04.139 UTC [545051] STATEMENT:  SELECT pgv_select('test');
2023-07-22 04:16:04.140 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.140 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.140 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.140 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:16:04.140 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.140 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.140 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.140 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:16:04.141 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.141 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.141 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.141 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:16:04.141 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.141 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.142 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.142 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.142 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.142 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.142 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.142 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:16:04.143 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.143 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:16:04.143 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.143 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'x');
2023-07-22 04:16:04.144 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.144 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.144 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.144 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.144 UTC [545051] ERROR:  unrecognized package "test"
2023-07-22 04:16:04.144 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.149 UTC [545051] ERROR:  unrecognized variable "z1"
2023-07-22 04:16:04.149 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.149 UTC [545051] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:16:04.149 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.149 UTC [545051] ERROR:  unrecognized variable "z2"
2023-07-22 04:16:04.149 UTC [545051] STATEMENT:  SELECT pgv_select('test', 'z2');
2023-07-22 04:16:04.150 UTC [545051] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:16:04.150 UTC [545051] STATEMENT:  FETCH 1 in r1_cur;
2023-07-22 04:16:04.155 UTC [545051] ERROR:  there is a record in the variable "y" with same key
2023-07-22 04:16:04.155 UTC [545051] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), TRUE);
2023-07-22 04:16:04.156 UTC [545051] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:16:04.156 UTC [545051] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:16:04.156 UTC [545051] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:16:04.156 UTC [545051] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:16:04.156 UTC [545051] ERROR:  variable "x" already created as TRANSACTIONAL
2023-07-22 04:16:04.156 UTC [545051] STATEMENT:  SELECT pgv_insert('test1', 'x', ROW (2::float, 1::float), FALSE);
2023-07-22 04:16:04.156 UTC [545051] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:16:04.156 UTC [545051] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:16:04.157 UTC [545051] ERROR:  variable "y" already created as TRANSACTIONAL
2023-07-22 04:16:04.157 UTC [545051] STATEMENT:  SELECT pgv_insert('test1', 'y', ROW (2::float, 1::float), FALSE);
2023-07-22 04:16:04.170 UTC [545051] ERROR:  new record structure have 2 attributes, but variable "r1" structure have 3.
2023-07-22 04:16:04.170 UTC [545051] STATEMENT:  SELECT pgv_insert('vars', 'r1', tab) FROM tab;
2023-07-22 04:16:04.172 UTC [545051] ERROR:  could not identify a hash function for type record
2023-07-22 04:16:04.172 UTC [545051] STATEMENT:  SELECT pgv_insert('test', 'x5', ROW ((2::int, 1::int)), TRUE);
2023-07-22 04:16:04.197 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.197 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  select pgv_set('vars', 'int3', 103);
2023-07-22 04:16:04.197 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 04:16:04.197 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  select pgv_set('vars', 'int1', 1001);
2023-07-22 04:16:04.197 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.197 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 04:16:04.197 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  select pgv_set('vars', 'int2', 1002);
2023-07-22 04:16:04.197 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.197 UTC [545055] ERROR:  unrecognized variable "int3"
2023-07-22 04:16:04.197 UTC [545055] STATEMENT:  select pgv_get('vars', 'int1', null::int), pgv_get('vars', 'int2', null::int), pgv_get('vars', 'int3', null::int);
2023-07-22 04:16:04.198 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.198 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.198 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  select pgv_set('vars', 'int3', 103, true);
2023-07-22 04:16:04.198 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 04:16:04.198 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.198 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  select pgv_set('vars', 'int2', 1002, true);
2023-07-22 04:16:04.198 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 04:16:04.198 UTC [545055] ERROR:  unrecognized variable "int3"
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  select pgv_get('vars', 'int3', null::int);
2023-07-22 04:16:04.198 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.198 UTC [545055] ERROR:  unrecognized variable "int2"
2023-07-22 04:16:04.198 UTC [545055] STATEMENT:  select pgv_get('vars', 'int2', null::int);
2023-07-22 04:16:04.199 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.199 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.199 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.199 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.199 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.199 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  select pgv_insert('test', 'z', row (11::int, 22::int), false);
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  select pgv_insert('test', 'z', row (22::int, 33::int), false);
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  select pgv_insert('test', 'z', row (33::int, 44::int), false);
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  declare r11_cur cursor for select pgv_select('test', 'x');
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  fetch 2 in r11_cur;
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 04:16:04.199 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.199 UTC [545055] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 04:16:04.200 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.200 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.200 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.200 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.200 UTC [545055] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  declare r2_cur cursor for select pgv_select('test', 'y');
2023-07-22 04:16:04.200 UTC [545055] ERROR:  DECLARE CURSOR can only be used in transaction blocks
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  declare r3_cur cursor for select pgv_select('test', 'z');
2023-07-22 04:16:04.200 UTC [545055] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  fetch 2 in r1_cur;
2023-07-22 04:16:04.200 UTC [545055] ERROR:  cursor "r2_cur" does not exist
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  fetch 2 in r2_cur;
2023-07-22 04:16:04.200 UTC [545055] ERROR:  cursor "r3_cur" does not exist
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  fetch 2 in r3_cur;
2023-07-22 04:16:04.200 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.200 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.200 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  select pgv_set('vars', 'trans_int', 103, true);
2023-07-22 04:16:04.200 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:16:04.200 UTC [545055] ERROR:  unrecognized package "vars"
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:16:04.200 UTC [545055] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  rollback to sp1;
2023-07-22 04:16:04.200 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.200 UTC [545055] ERROR:  unrecognized package "vars"
2023-07-22 04:16:04.200 UTC [545055] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'int1', 2);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  savepoint sp2;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'trans_int1', 4, true);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  savepoint "sp2" does not exist
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  rollback to sp2;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select * from pgv_list() order by package, name;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'trans_int2', 4, true);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'trans_int3', 5, true);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'int2', 3);
2023-07-22 04:16:04.201 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.201 UTC [545055] ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  rollback to sp1;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  unrecognized package "vars"
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_get('vars', 'trans_int', null::int);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  unrecognized package "vars1"
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_get('vars1', 'int1', null::int);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  unrecognized package "vars1"
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_get('vars1', 'int2', null::int);
2023-07-22 04:16:04.201 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.201 UTC [545055] ERROR:  syntax error at or near "autonomous" at character 7
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  begin autonomous;
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'int1', 1);
2023-07-22 04:16:04.201 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.201 UTC [545055] STATEMENT:  select pgv_set('vars1', 'trans_int1', 2, true);
2023-07-22 04:16:04.202 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.202 UTC [545055] STATEMENT:  savepoint sp2;
2023-07-22 04:16:04.202 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.202 UTC [545055] STATEMENT:  select pgv_set('vars1', 'trans_int1', 3, true);
2023-07-22 04:16:04.202 UTC [545055] ERROR:  savepoint "sp2" does not exist
2023-07-22 04:16:04.202 UTC [545055] STATEMENT:  rollback to sp2;
2023-07-22 04:16:04.202 UTC [545055] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.202 UTC [545055] STATEMENT:  select pgv_get('vars1', 'trans_int1', null::int);
2023-07-22 04:16:04.202 UTC [545055] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.208 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.208 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.208 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.208 UTC [545061] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:16:04.208 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.208 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.208 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.208 UTC [545061] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:16:04.209 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.209 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.209 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.209 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.209 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.209 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.209 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.209 UTC [545061] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 04:16:04.209 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.209 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.209 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.209 UTC [545061] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  SELECT pgv_set('vars', 'int1', 1, true);
2023-07-22 04:16:04.209 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.209 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.209 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.209 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.210 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.210 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.210 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  SELECT pgv_get('vars', 'int1', null::int);
2023-07-22 04:16:04.210 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.210 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.211 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.211 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.211 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.211 UTC [545061] ERROR:  variable "int1" already created as NOT TRANSACTIONAL
2023-07-22 04:16:04.211 UTC [545061] STATEMENT:  SELECT pgv_set('vars', 'int1', 2, true);
2023-07-22 04:16:04.211 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.211 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.211 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.211 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.211 UTC [545061] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:16:04.211 UTC [545061] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 04:16:04.211 UTC [545061] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:16:04.211 UTC [545061] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 04:16:04.211 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.212 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.212 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.212 UTC [545061] ERROR:  cursor "r1_cur" does not exist
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  FETCH 1 IN r1_cur;
2023-07-22 04:16:04.212 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.212 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.212 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  SELECT pgv_set('vars', 'int1', 1);
2023-07-22 04:16:04.212 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.212 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.212 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.212 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.212 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  SELECT pgv_set('vars', 'int1', 2);
2023-07-22 04:16:04.212 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.212 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.212 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.212 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.212 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  SAVEPOINT sp1;
2023-07-22 04:16:04.212 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  SELECT pgv_set('vars1', 'int1', 0);
2023-07-22 04:16:04.212 UTC [545061] ERROR:  savepoint "sp1" does not exist
2023-07-22 04:16:04.212 UTC [545061] STATEMENT:  ROLLBACK TO sp1;
2023-07-22 04:16:04.213 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.213 UTC [545061] ERROR:  unrecognized package "vars1"
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  SELECT pgv_remove('vars1', 'int1');
2023-07-22 04:16:04.213 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.213 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  SAVEPOINT sp1;
2023-07-22 04:16:04.213 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  SELECT pgv_set('vars2', 'any1', 'variable exists'::text, true);
2023-07-22 04:16:04.213 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  SELECT pgv_free();
2023-07-22 04:16:04.213 UTC [545061] ERROR:  current transaction is aborted, commands ignored until end of transaction block
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  RELEASE sp1;
2023-07-22 04:16:04.213 UTC [545061] ERROR:  syntax error at or near "AUTONOMOUS" at character 7
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  BEGIN AUTONOMOUS;
2023-07-22 04:16:04.213 UTC [545061] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  SAVEPOINT sp2;
2023-07-22 04:16:04.213 UTC [545061] ERROR:  SAVEPOINT can only be used in transaction blocks
2023-07-22 04:16:04.213 UTC [545061] STATEMENT:  SAVEPOINT sp3;
2023-07-22 04:16:04.213 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.213 UTC [545061] WARNING:  there is no transaction in progress
2023-07-22 04:16:04.605 UTC [545089] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:16:04.605 UTC [545089] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:16:37.157 UTC [545025] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:16:37.359 UTC [545025] LOG:  checkpoint complete: wrote 1786 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.056 s, sync=0.062 s, total=0.203 s; sync files=499, longest=0.025 s, average=0.001 s; distance=140690 kB, estimate=140690 kB
2023-07-22 04:16:37.493 UTC [545107] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:16:37.493 UTC [545107] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:17:09.165 UTC [545025] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:09.282 UTC [545025] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.011 s, total=0.117 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132582 kB, estimate=139880 kB
2023-07-22 04:17:09.350 UTC [545024] LOG:  received fast shutdown request
2023-07-22 04:17:09.358 UTC [545024] LOG:  aborting any active transactions
2023-07-22 04:17:09.359 UTC [545024] LOG:  background worker "logical replication launcher" (PID 545030) exited with exit code 1
2023-07-22 04:17:09.359 UTC [545025] LOG:  shutting down
2023-07-22 04:17:09.366 UTC [545025] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:17:09.406 UTC [545025] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.048 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=125892 kB
2023-07-22 04:17:09.423 UTC [545024] LOG:  database system is shut down
2023-07-22 04:17:10.196 UTC [545152] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:17:10.197 UTC [545152] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:17:10.211 UTC [545152] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:17:10.225 UTC [545155] LOG:  database system was shut down at 2023-07-22 04:17:09 UTC
2023-07-22 04:17:10.236 UTC [545152] LOG:  database system is ready to accept connections
2023-07-22 04:17:10.425 UTC [545171] ERROR:  could not open relation with OID 16405
2023-07-22 04:17:10.425 UTC [545171] STATEMENT:  SELECT * FROM pg_visibility_map(16405);
2023-07-22 04:17:10.425 UTC [545171] ERROR:  could not open relation with OID 16405
2023-07-22 04:17:10.425 UTC [545171] STATEMENT:  SELECT * FROM pg_visibility_map(16405);
2023-07-22 04:17:10.429 UTC [545171] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:17:10.429 UTC [545171] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:17:10.429 UTC [545171] STATEMENT:  select pg_visibility('test_partitioned', 0);
2023-07-22 04:17:10.429 UTC [545171] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:17:10.429 UTC [545171] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:17:10.429 UTC [545171] STATEMENT:  select pg_visibility_map('test_partitioned');
2023-07-22 04:17:10.430 UTC [545171] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:17:10.430 UTC [545171] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:17:10.430 UTC [545171] STATEMENT:  select pg_visibility_map_summary('test_partitioned');
2023-07-22 04:17:10.430 UTC [545171] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:17:10.430 UTC [545171] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:17:10.430 UTC [545171] STATEMENT:  select pg_check_frozen('test_partitioned');
2023-07-22 04:17:10.430 UTC [545171] ERROR:  relation "test_partitioned" is of wrong relation kind
2023-07-22 04:17:10.430 UTC [545171] DETAIL:  This operation is not supported for partitioned tables.
2023-07-22 04:17:10.430 UTC [545171] STATEMENT:  select pg_truncate_visibility_map('test_partitioned');
2023-07-22 04:17:10.444 UTC [545171] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:17:10.444 UTC [545171] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:17:10.444 UTC [545171] STATEMENT:  select pg_visibility('test_index', 0);
2023-07-22 04:17:10.444 UTC [545171] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:17:10.444 UTC [545171] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:17:10.444 UTC [545171] STATEMENT:  select pg_visibility_map('test_index');
2023-07-22 04:17:10.444 UTC [545171] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:17:10.444 UTC [545171] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:17:10.444 UTC [545171] STATEMENT:  select pg_visibility_map_summary('test_index');
2023-07-22 04:17:10.444 UTC [545171] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:17:10.444 UTC [545171] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:17:10.444 UTC [545171] STATEMENT:  select pg_check_frozen('test_index');
2023-07-22 04:17:10.445 UTC [545171] ERROR:  relation "test_index" is of wrong relation kind
2023-07-22 04:17:10.445 UTC [545171] DETAIL:  This operation is not supported for indexes.
2023-07-22 04:17:10.445 UTC [545171] STATEMENT:  select pg_truncate_visibility_map('test_index');
2023-07-22 04:17:10.448 UTC [545171] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:17:10.448 UTC [545171] DETAIL:  This operation is not supported for views.
2023-07-22 04:17:10.448 UTC [545171] STATEMENT:  select pg_visibility('test_view', 0);
2023-07-22 04:17:10.448 UTC [545171] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:17:10.448 UTC [545171] DETAIL:  This operation is not supported for views.
2023-07-22 04:17:10.448 UTC [545171] STATEMENT:  select pg_visibility_map('test_view');
2023-07-22 04:17:10.449 UTC [545171] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:17:10.449 UTC [545171] DETAIL:  This operation is not supported for views.
2023-07-22 04:17:10.449 UTC [545171] STATEMENT:  select pg_visibility_map_summary('test_view');
2023-07-22 04:17:10.449 UTC [545171] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:17:10.449 UTC [545171] DETAIL:  This operation is not supported for views.
2023-07-22 04:17:10.449 UTC [545171] STATEMENT:  select pg_check_frozen('test_view');
2023-07-22 04:17:10.449 UTC [545171] ERROR:  relation "test_view" is of wrong relation kind
2023-07-22 04:17:10.449 UTC [545171] DETAIL:  This operation is not supported for views.
2023-07-22 04:17:10.449 UTC [545171] STATEMENT:  select pg_truncate_visibility_map('test_view');
2023-07-22 04:17:10.453 UTC [545171] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:17:10.453 UTC [545171] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:17:10.453 UTC [545171] STATEMENT:  select pg_visibility('test_sequence', 0);
2023-07-22 04:17:10.453 UTC [545171] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:17:10.453 UTC [545171] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:17:10.453 UTC [545171] STATEMENT:  select pg_visibility_map('test_sequence');
2023-07-22 04:17:10.453 UTC [545171] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:17:10.453 UTC [545171] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:17:10.453 UTC [545171] STATEMENT:  select pg_visibility_map_summary('test_sequence');
2023-07-22 04:17:10.454 UTC [545171] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:17:10.454 UTC [545171] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:17:10.454 UTC [545171] STATEMENT:  select pg_check_frozen('test_sequence');
2023-07-22 04:17:10.454 UTC [545171] ERROR:  relation "test_sequence" is of wrong relation kind
2023-07-22 04:17:10.454 UTC [545171] DETAIL:  This operation is not supported for sequences.
2023-07-22 04:17:10.454 UTC [545171] STATEMENT:  select pg_truncate_visibility_map('test_sequence');
2023-07-22 04:17:10.468 UTC [545171] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:17:10.468 UTC [545171] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:17:10.468 UTC [545171] STATEMENT:  select pg_visibility('test_foreign_table', 0);
2023-07-22 04:17:10.468 UTC [545171] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:17:10.468 UTC [545171] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:17:10.468 UTC [545171] STATEMENT:  select pg_visibility_map('test_foreign_table');
2023-07-22 04:17:10.469 UTC [545171] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:17:10.469 UTC [545171] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:17:10.469 UTC [545171] STATEMENT:  select pg_visibility_map_summary('test_foreign_table');
2023-07-22 04:17:10.469 UTC [545171] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:17:10.469 UTC [545171] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:17:10.469 UTC [545171] STATEMENT:  select pg_check_frozen('test_foreign_table');
2023-07-22 04:17:10.470 UTC [545171] ERROR:  relation "test_foreign_table" is of wrong relation kind
2023-07-22 04:17:10.470 UTC [545171] DETAIL:  This operation is not supported for foreign tables.
2023-07-22 04:17:10.470 UTC [545171] STATEMENT:  select pg_truncate_visibility_map('test_foreign_table');
2023-07-22 04:17:10.691 UTC [545153] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:10.756 UTC [545153] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.024 s, sync=0.013 s, total=0.066 s; sync files=7, longest=0.006 s, average=0.002 s; distance=4253 kB, estimate=4253 kB
2023-07-22 04:17:11.193 UTC [545197] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:17:11.193 UTC [545197] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:17:43.643 UTC [545153] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:17:43.804 UTC [545153] LOG:  checkpoint complete: wrote 893 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.040 s, sync=0.037 s, total=0.161 s; sync files=251, longest=0.009 s, average=0.001 s; distance=136539 kB, estimate=136539 kB
2023-07-22 04:17:43.956 UTC [545215] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:17:43.956 UTC [545215] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:18:15.595 UTC [545153] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:15.713 UTC [545153] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.119 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132517 kB, estimate=136137 kB
2023-07-22 04:18:15.780 UTC [545152] LOG:  received fast shutdown request
2023-07-22 04:18:15.787 UTC [545152] LOG:  aborting any active transactions
2023-07-22 04:18:15.788 UTC [545152] LOG:  background worker "logical replication launcher" (PID 545158) exited with exit code 1
2023-07-22 04:18:15.788 UTC [545153] LOG:  shutting down
2023-07-22 04:18:15.794 UTC [545153] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:18:15.834 UTC [545153] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.047 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122523 kB
2023-07-22 04:18:15.854 UTC [545152] LOG:  database system is shut down
2023-07-22 04:18:16.620 UTC [545258] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:18:16.621 UTC [545258] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:18:16.635 UTC [545258] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:18:16.649 UTC [545261] LOG:  database system was shut down at 2023-07-22 04:18:16 UTC
2023-07-22 04:18:16.659 UTC [545258] LOG:  database system is ready to accept connections
2023-07-22 04:18:16.660 UTC [545264] LOG:  pg_wait_sampling collector started
2023-07-22 04:18:17.177 UTC [545310] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:18:17.177 UTC [545310] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:18:49.624 UTC [545259] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:18:49.839 UTC [545259] LOG:  checkpoint complete: wrote 1783 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.041 s, sync=0.084 s, total=0.216 s; sync files=497, longest=0.031 s, average=0.001 s; distance=140623 kB, estimate=140623 kB
2023-07-22 04:18:49.976 UTC [545327] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:18:49.976 UTC [545327] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:19:21.680 UTC [545259] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:19:21.804 UTC [545259] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.011 s, total=0.124 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132501 kB, estimate=139811 kB
2023-07-22 04:19:21.872 UTC [545258] LOG:  received fast shutdown request
2023-07-22 04:19:21.879 UTC [545258] LOG:  aborting any active transactions
2023-07-22 04:19:21.879 UTC [545264] LOG:  pg_wait_sampling collector shutting down
2023-07-22 04:19:21.880 UTC [545258] LOG:  background worker "logical replication launcher" (PID 545265) exited with exit code 1
2023-07-22 04:19:21.880 UTC [545259] LOG:  shutting down
2023-07-22 04:19:21.887 UTC [545259] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:19:21.933 UTC [545259] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.054 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=125830 kB
2023-07-22 04:19:21.958 UTC [545258] LOG:  database system is shut down
2023-07-22 04:19:22.701 UTC [545370] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:19:22.701 UTC [545370] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:19:22.715 UTC [545370] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:19:22.732 UTC [545373] LOG:  database system was shut down at 2023-07-22 04:19:22 UTC
2023-07-22 04:19:22.741 UTC [545370] LOG:  database system is ready to accept connections
2023-07-22 04:19:22.956 UTC [545389] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 04:19:22.956 UTC [545389] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_records_info('0/1882238', '0/1882120');
2023-07-22 04:19:22.957 UTC [545389] ERROR:  WAL start LSN must be less than end LSN
2023-07-22 04:19:22.957 UTC [545389] STATEMENT:  SELECT COUNT(*) >= 0 AS ok FROM pg_get_wal_stats('0/1882238', '0/1882120');
2023-07-22 04:19:23.046 UTC [545371] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:19:23.115 UTC [545371] LOG:  checkpoint complete: wrote 22 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.019 s, sync=0.019 s, total=0.069 s; sync files=18, longest=0.012 s, average=0.002 s; distance=4035 kB, estimate=4035 kB
2023-07-22 04:19:23.548 UTC [545415] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:19:23.548 UTC [545415] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:19:56.035 UTC [545371] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:19:56.213 UTC [545371] LOG:  checkpoint complete: wrote 892 buffers (5.4%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.056 s, sync=0.029 s, total=0.178 s; sync files=251, longest=0.009 s, average=0.001 s; distance=136617 kB, estimate=136617 kB
2023-07-22 04:19:56.319 UTC [545432] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:19:56.319 UTC [545432] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:20:28.019 UTC [545371] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:20:28.144 UTC [545371] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.012 s, total=0.126 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132563 kB, estimate=136211 kB
2023-07-22 04:20:28.211 UTC [545370] LOG:  received fast shutdown request
2023-07-22 04:20:28.219 UTC [545370] LOG:  aborting any active transactions
2023-07-22 04:20:28.219 UTC [545370] LOG:  background worker "logical replication launcher" (PID 545376) exited with exit code 1
2023-07-22 04:20:28.219 UTC [545371] LOG:  shutting down
2023-07-22 04:20:28.226 UTC [545371] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:20:28.269 UTC [545371] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.050 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122590 kB
2023-07-22 04:20:28.286 UTC [545370] LOG:  database system is shut down
2023-07-22 04:20:29.034 UTC [545476] LOG:  pgaudit extension initialized
2023-07-22 04:20:29.072 UTC [545476] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:20:29.073 UTC [545476] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:20:29.088 UTC [545476] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:20:29.104 UTC [545479] LOG:  database system was shut down at 2023-07-22 04:20:28 UTC
2023-07-22 04:20:29.116 UTC [545476] LOG:  database system is ready to accept connections
2023-07-22 04:20:29.337 UTC [545495] LOG:  AUDIT: SESSION,1,1,MISC,SET,,,SET pgaudit.log = 'all';,<not logged>
2023-07-22 04:20:29.338 UTC [545495] LOG:  AUDIT: SESSION,2,1,MISC,SET,,,SET pgaudit.log_client = ON;,<not logged>
2023-07-22 04:20:29.366 UTC [545495] LOG:  AUDIT: SESSION,6,1,MISC,RESET,,,RESET pgaudit.log_client;,<not logged>
2023-07-22 04:20:29.369 UTC [545495] LOG:  AUDIT: SESSION,7,1,DDL,DROP TABLE,TABLE,public.tmp,DROP TABLE tmp;,<not logged>
2023-07-22 04:20:29.374 UTC [545495] LOG:  AUDIT: SESSION,8,1,DDL,DROP TABLE,TABLE,public.tmp2,DROP TABLE tmp2;,<not logged>
2023-07-22 04:20:29.618 UTC [545499] WARNING:  AUDIT: SESSION,1,1,READ,SELECT,,,"SELECT *
	  FROM test3, test2;",<not logged>
2023-07-22 04:20:29.619 UTC [545499] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.620 UTC [545499] WARNING:  AUDIT: SESSION,2,1,READ,SELECT,,,"SELECT *
	  FROM vw_test3, test2;",<not logged>
2023-07-22 04:20:29.620 UTC [545499] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.620 UTC [545499] WARNING:  AUDIT: OBJECT,2,1,READ,SELECT,VIEW,public.vw_test3,<previously logged>,<previously logged>
2023-07-22 04:20:29.620 UTC [545499] WARNING:  AUDIT: SESSION,3,1,WRITE,INSERT,,,"WITH CTE AS
	(
		SELECT id
		  FROM test2
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 04:20:29.620 UTC [545499] WARNING:  AUDIT: OBJECT,3,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 04:20:29.620 UTC [545499] WARNING:  AUDIT: OBJECT,3,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.621 UTC [545499] WARNING:  AUDIT: SESSION,4,1,WRITE,INSERT,,,"WITH CTE AS
	(
		INSERT INTO test3 VALUES (1)
					   RETURNING id
	)
	INSERT INTO test2
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 04:20:29.621 UTC [545499] WARNING:  AUDIT: OBJECT,4,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 04:20:29.629 UTC [545499] WARNING:  AUDIT: SESSION,5,1,READ,SELECT,,,SELECT test2_change(91),<not logged>
2023-07-22 04:20:29.629 UTC [545499] WARNING:  AUDIT: SESSION,5,2,WRITE,UPDATE,,,"UPDATE test2
		   SET id = id + 1
		 WHERE id = change_id",<not logged>
2023-07-22 04:20:29.629 UTC [545499] WARNING:  AUDIT: OBJECT,5,2,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.633 UTC [545499] WARNING:  AUDIT: SESSION,6,1,WRITE,INSERT,,,"WITH CTE AS
	(
		UPDATE test2
		   SET id = 45
		 WHERE id = 92
		RETURNING id
	)
	INSERT INTO test3
	SELECT id
	  FROM cte;",<not logged>
2023-07-22 04:20:29.634 UTC [545499] WARNING:  AUDIT: OBJECT,6,1,WRITE,INSERT,TABLE,public.test3,<previously logged>,<previously logged>
2023-07-22 04:20:29.634 UTC [545499] WARNING:  AUDIT: OBJECT,6,1,WRITE,UPDATE,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.638 UTC [545499] WARNING:  AUDIT: SESSION,7,1,WRITE,UPDATE,,,"WITH CTE AS
	(
		INSERT INTO test2 VALUES (37)
					   RETURNING id
	)
	UPDATE test3
	   SET id = cte.id
	  FROM cte
	 WHERE test3.id <> cte.id;",<not logged>
2023-07-22 04:20:29.638 UTC [545499] WARNING:  AUDIT: OBJECT,7,1,WRITE,INSERT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.643 UTC [545499] WARNING:  AUDIT: SESSION,8,1,READ,SELECT,,,"SELECT *
	  FROM test2
	 ORDER BY ID;",<not logged>
2023-07-22 04:20:29.643 UTC [545499] WARNING:  AUDIT: OBJECT,8,1,READ,SELECT,TABLE,public.test2,<previously logged>,<previously logged>
2023-07-22 04:20:29.694 UTC [545501] WARNING:  AUDIT: OBJECT,1,1,READ,SELECT,TABLE,public.test4,"SELECT name
	  FROM public.test4;",<not logged>
2023-07-22 04:20:29.698 UTC [545501] WARNING:  AUDIT: OBJECT,2,1,WRITE,INSERT,TABLE,public.test4,"INSERT INTO public.test4 (name)
					  VALUES ('test');",<not logged>
2023-07-22 04:20:29.706 UTC [545501] WARNING:  AUDIT: OBJECT,3,1,WRITE,UPDATE,TABLE,public.test4,"UPDATE public.test4
	   SET id = 1;",<not logged>
2023-07-22 04:20:29.711 UTC [545501] WARNING:  AUDIT: OBJECT,4,1,WRITE,UPDATE,TABLE,public.test4,update public.test4 set name = 'foo' where name = 'bar';,<not logged>
2023-07-22 04:20:30.025 UTC [545510] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 04:20:30.025 UTC [545510] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 04:20:30.025 UTC [545510] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 04:20:30.025 UTC [545510] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 04:20:30.175 UTC [545477] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:20:30.398 UTC [545477] LOG:  checkpoint complete: wrote 918 buffers (5.6%); 1 WAL file(s) added, 0 removed, 0 recycled; write=0.039 s, sync=0.053 s, total=0.224 s; sync files=269, longest=0.015 s, average=0.001 s; distance=8175 kB, estimate=8175 kB
2023-07-22 04:20:30.999 UTC [545511] ERROR:  schema "bogus" does not exist at character 14
2023-07-22 04:20:30.999 UTC [545511] QUERY:  CREATE TABLE bogus.test_block
		(
			id INT
		)
2023-07-22 04:20:30.999 UTC [545511] CONTEXT:  PL/pgSQL function inline_code_block line 3 at SQL statement
2023-07-22 04:20:30.999 UTC [545511] STATEMENT:  DO $$
	BEGIN
		CREATE TABLE bogus.test_block
		(
			id INT
		);
	END $$;
2023-07-22 04:20:31.152 UTC [545477] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:20:31.228 UTC [545477] LOG:  checkpoint complete: wrote 112 buffers (0.7%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.017 s, sync=0.018 s, total=0.077 s; sync files=84, longest=0.009 s, average=0.001 s; distance=4583 kB, estimate=7816 kB
2023-07-22 04:20:31.563 UTC [545514] WARNING:  AUDIT: SESSION,3,1,DDL,CREATE EXTENSION,,,CREATE EXTENSION pg_stat_statements;,<not logged>
2023-07-22 04:20:31.594 UTC [545514] WARNING:  AUDIT: SESSION,4,1,DDL,ALTER EXTENSION,,,ALTER EXTENSION pg_stat_statements UPDATE TO '1.10';,<not logged>
2023-07-22 04:20:31.595 UTC [545514] WARNING:  AUDIT: SESSION,5,1,DDL,DROP EXTENSION,,,DROP EXTENSION pg_stat_statements;,<not logged>
2023-07-22 04:20:31.994 UTC [545540] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:20:31.994 UTC [545540] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:21:04.377 UTC [545477] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:04.573 UTC [545477] LOG:  checkpoint complete: wrote 1017 buffers (6.2%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.066 s, sync=0.036 s, total=0.196 s; sync files=330, longest=0.009 s, average=0.001 s; distance=137148 kB, estimate=137148 kB
2023-07-22 04:21:04.719 UTC [545557] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:21:04.719 UTC [545557] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:21:36.404 UTC [545477] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:21:36.529 UTC [545477] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.020 s, sync=0.012 s, total=0.126 s; sync files=5, longest=0.008 s, average=0.003 s; distance=132593 kB, estimate=136693 kB
2023-07-22 04:21:36.599 UTC [545476] LOG:  received fast shutdown request
2023-07-22 04:21:36.606 UTC [545476] LOG:  aborting any active transactions
2023-07-22 04:21:36.607 UTC [545476] LOG:  background worker "logical replication launcher" (PID 545482) exited with exit code 1
2023-07-22 04:21:36.607 UTC [545477] LOG:  shutting down
2023-07-22 04:21:36.614 UTC [545477] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:21:36.655 UTC [545477] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.049 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=123024 kB
2023-07-22 04:21:36.677 UTC [545476] LOG:  database system is shut down
2023-07-22 04:21:37.431 UTC [545600] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:21:37.431 UTC [545600] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:21:37.446 UTC [545600] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:21:37.465 UTC [545603] LOG:  database system was shut down at 2023-07-22 04:21:37 UTC
2023-07-22 04:21:37.477 UTC [545600] LOG:  database system is ready to accept connections
2023-07-22 04:21:37.692 UTC [545600] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:21:37.694 UTC [545600] LOG:  parameter "session_preload_libraries" changed to "pgextwlist"
2023-07-22 04:21:37.694 UTC [545600] LOG:  parameter "extwlist.extensions" changed to "citext,earthdistance,pg_trgm,pg_stat_statements,refint"
2023-07-22 04:21:37.694 UTC [545600] LOG:  parameter "extwlist.custom_path" changed to "/home/abigalek/pgext-cli-python/pgextworkdir/pgextwlist-1.15/test-scripts"
2023-07-22 04:21:37.785 UTC [545630] ERROR:  extension "plpgsql" already exists
2023-07-22 04:21:37.785 UTC [545630] STATEMENT:  CREATE EXTENSION plpgsql;
2023-07-22 04:21:37.786 UTC [545630] ERROR:  extension "hstore" does not exist
2023-07-22 04:21:37.786 UTC [545630] STATEMENT:  COMMENT ON EXTENSION hstore IS 'plpgsql comment';
2023-07-22 04:21:37.787 UTC [545630] ERROR:  permission denied to create extension "hstore"
2023-07-22 04:21:37.787 UTC [545630] HINT:  Must have CREATE privilege on current database to create this extension.
2023-07-22 04:21:37.787 UTC [545630] STATEMENT:  CREATE EXTENSION hstore;
2023-07-22 04:21:37.787 UTC [545630] ERROR:  extension "hstore" does not exist
2023-07-22 04:21:37.787 UTC [545630] STATEMENT:  COMMENT ON EXTENSION hstore IS 'hstore comment';
2023-07-22 04:21:37.787 UTC [545630] ERROR:  required extension "cube" is not installed
2023-07-22 04:21:37.787 UTC [545630] HINT:  Use CREATE EXTENSION ... CASCADE to install required extensions too.
2023-07-22 04:21:37.787 UTC [545630] STATEMENT:  CREATE EXTENSION earthdistance;
2023-07-22 04:21:37.787 UTC [545630] ERROR:  must be owner of extension plpgsql
2023-07-22 04:21:37.787 UTC [545630] STATEMENT:  DROP EXTENSION plpgsql;
2023-07-22 04:21:37.816 UTC [545638] ERROR:  cannot drop extension citext because other objects depend on it
2023-07-22 04:21:37.816 UTC [545638] DETAIL:  column t of table mere_table depends on type citext
2023-07-22 04:21:37.816 UTC [545638] HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2023-07-22 04:21:37.816 UTC [545638] STATEMENT:  DROP EXTENSION citext;
2023-07-22 04:21:38.034 UTC [545600] LOG:  received fast shutdown request
2023-07-22 04:21:38.042 UTC [545600] LOG:  aborting any active transactions
2023-07-22 04:21:38.043 UTC [545600] LOG:  background worker "logical replication launcher" (PID 545606) exited with exit code 1
2023-07-22 04:21:38.044 UTC [545601] LOG:  shutting down
2023-07-22 04:21:38.051 UTC [545601] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:21:38.208 UTC [545601] LOG:  checkpoint complete: wrote 1806 buffers (11.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.067 s, sync=0.054 s, total=0.165 s; sync files=504, longest=0.017 s, average=0.001 s; distance=8420 kB, estimate=8420 kB
2023-07-22 04:21:38.231 UTC [545600] LOG:  database system is shut down
2023-07-22 04:21:39.008 UTC [545689] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:21:39.008 UTC [545689] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:21:39.022 UTC [545689] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:21:39.038 UTC [545692] LOG:  database system was shut down at 2023-07-22 04:21:38 UTC
2023-07-22 04:21:39.048 UTC [545689] LOG:  database system is ready to accept connections
2023-07-22 04:21:39.226 UTC [545708] ERROR:  pgfadvise_loader: databit argument shouldn't be NULL
2023-07-22 04:21:39.226 UTC [545708] CONTEXT:  SQL function "pgfadvise_loader" statement 1
2023-07-22 04:21:39.226 UTC [545708] STATEMENT:  select from pgfadvise_loader('test', 0, false, false, NULL);
2023-07-22 04:21:39.634 UTC [545734] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:21:39.634 UTC [545734] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:22:12.179 UTC [545690] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:22:12.400 UTC [545690] LOG:  checkpoint complete: wrote 1782 buffers (10.9%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.068 s, sync=0.057 s, total=0.222 s; sync files=497, longest=0.020 s, average=0.001 s; distance=140591 kB, estimate=140591 kB
2023-07-22 04:22:12.536 UTC [545751] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:22:12.536 UTC [545751] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:22:44.255 UTC [545690] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:22:44.382 UTC [545690] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.018 s, sync=0.011 s, total=0.127 s; sync files=4, longest=0.008 s, average=0.003 s; distance=132554 kB, estimate=139788 kB
2023-07-22 04:22:44.450 UTC [545689] LOG:  received fast shutdown request
2023-07-22 04:22:44.458 UTC [545689] LOG:  aborting any active transactions
2023-07-22 04:22:44.458 UTC [545689] LOG:  background worker "logical replication launcher" (PID 545695) exited with exit code 1
2023-07-22 04:22:44.458 UTC [545690] LOG:  shutting down
2023-07-22 04:22:44.465 UTC [545690] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:22:44.507 UTC [545690] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.049 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=125809 kB
2023-07-22 04:22:44.532 UTC [545689] LOG:  database system is shut down
2023-07-22 04:22:45.314 UTC [545794] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:22:45.315 UTC [545794] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:22:45.329 UTC [545794] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:22:45.346 UTC [545797] LOG:  database system was shut down at 2023-07-22 04:22:44 UTC
2023-07-22 04:22:45.357 UTC [545794] LOG:  database system is ready to accept connections
2023-07-22 04:22:45.671 UTC [545824] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:22:45.671 UTC [545824] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:23:18.317 UTC [545795] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:23:18.496 UTC [545795] LOG:  checkpoint complete: wrote 895 buffers (5.5%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.053 s, sync=0.033 s, total=0.180 s; sync files=252, longest=0.011 s, average=0.001 s; distance=136630 kB, estimate=136630 kB
2023-07-22 04:23:18.627 UTC [545842] ERROR:  syntax error at or near "-" at character 22
2023-07-22 04:23:18.627 UTC [545842] STATEMENT:  CREATE EXTENSION uuid-ossp;
2023-07-22 04:23:50.405 UTC [545795] LOG:  checkpoint starting: immediate force wait
2023-07-22 04:23:50.526 UTC [545795] LOG:  checkpoint complete: wrote 7 buffers (0.0%); 0 WAL file(s) added, 0 removed, 8 recycled; write=0.019 s, sync=0.011 s, total=0.122 s; sync files=4, longest=0.007 s, average=0.003 s; distance=132485 kB, estimate=136215 kB
2023-07-22 04:23:50.596 UTC [545794] LOG:  received fast shutdown request
2023-07-22 04:23:50.603 UTC [545794] LOG:  aborting any active transactions
2023-07-22 04:23:50.604 UTC [545794] LOG:  background worker "logical replication launcher" (PID 545800) exited with exit code 1
2023-07-22 04:23:50.604 UTC [545795] LOG:  shutting down
2023-07-22 04:23:50.614 UTC [545795] LOG:  checkpoint starting: shutdown immediate
2023-07-22 04:23:50.655 UTC [545795] LOG:  checkpoint complete: wrote 1 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.008 s, sync=0.003 s, total=0.052 s; sync files=1, longest=0.003 s, average=0.003 s; distance=0 kB, estimate=122594 kB
2023-07-22 04:23:50.673 UTC [545794] LOG:  database system is shut down
2023-07-22 04:23:51.472 UTC [545884] LOG:  starting PostgreSQL 15.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0, 64-bit
2023-07-22 04:23:51.472 UTC [545884] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2023-07-22 04:23:51.487 UTC [545884] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2023-07-22 04:23:51.503 UTC [545887] LOG:  database system was shut down at 2023-07-22 04:23:51 UTC
2023-07-22 04:23:51.513 UTC [545884] LOG:  database system is ready to accept connections
2023-07-22 04:23:51.513 UTC [545890] LOG:  starting bgworker pgsentinel
2023-07-22 04:23:51.513 UTC [545890] FATAL:  database "contrib_regression" does not exist
2023-07-22 04:23:51.520 UTC [545884] LOG:  background worker "pgsentinel" (PID 545890) exited with exit code 1
2023-07-22 04:23:53.524 UTC [545905] LOG:  starting bgworker pgsentinel
2023-07-22 04:23:57.777 UTC [545884] LOG:  received SIGHUP, reloading configuration files
2023-07-22 04:23:57.779 UTC [545884] LOG:  parameter "pgsentinel_ash.track_idle_trans" changed to "true"
2023-07-22 04:23:57.780 UTC [545905] LOG:  bgworker pgsentinel signal: processed SIGHUP
2023-07-22 04:24:05.853 UTC [545916] ERROR:  database "contrib_regression" is being accessed by other users
2023-07-22 04:24:05.853 UTC [545916] DETAIL:  There is 1 other session using the database.
2023-07-22 04:24:05.853 UTC [545916] STATEMENT:  DROP DATABASE IF EXISTS "contrib_regression"
