diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_extension.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_extension.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_extension.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_extension.out	2023-10-28 03:05:51.653701340 +0000
@@ -72,7 +72,7 @@
 --test drops thru cascades of other objects
 \c :TEST_DBNAME :ROLE_SUPERUSER
 drop schema public cascade;
-NOTICE:  drop cascades to 3 other objects
+NOTICE:  drop cascades to 4 other objects
 \dn
   List of schemas
  Name |   Owner    
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/lateral.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/lateral.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/lateral.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/lateral.out	2023-10-28 03:05:57.253722282 +0000
@@ -33,157 +33,4 @@
 (1 row)
 
 INSERT INTO orders values(1,1,timestamp 'epoch' + '1 second');
-INSERT INTO orders values(2,1,timestamp 'epoch' + '2 second');
-INSERT INTO orders values(3,1,timestamp 'epoch' + '3 second');
-INSERT INTO orders values(4,2,timestamp 'epoch' + '4 second');
-INSERT INTO orders values(5,1,timestamp 'epoch' + '5 second');
-INSERT INTO orders values(6,3,timestamp 'epoch' + '6 second');
-INSERT INTO orders values(7,1,timestamp 'epoch' + '7 second');
-INSERT INTO orders values(8,4,timestamp 'epoch' + '8 second');
-INSERT INTO orders values(9,2,timestamp 'epoch' + '9 second');
--- Need a LATERAL query with a reference to the upper-level table and
--- with a restriction on time
--- Upper-level table constraint should be a constant in order to trigger
--- creation of a one-time filter in the planner
-SELECT user_id, first_order_time, max_time FROM
-(SELECT user_id, min(time) AS first_order_time FROM orders GROUP BY user_id) o1
-LEFT JOIN LATERAL
-(SELECT max(time) AS max_time FROM orders WHERE o1.user_id = '2' AND time > now()) o2 ON true
-ORDER BY user_id, first_order_time, max_time;
- user_id |       first_order_time       | max_time 
----------+------------------------------+----------
-       1 | Thu Jan 01 00:00:01 1970 PST | 
-       2 | Thu Jan 01 00:00:04 1970 PST | 
-       3 | Thu Jan 01 00:00:06 1970 PST | 
-       4 | Thu Jan 01 00:00:08 1970 PST | 
-(4 rows)
-
-SELECT user_id, first_order_time, max_time FROM
-(SELECT user_id, min(time) AS first_order_time FROM orders GROUP BY user_id) o1
-LEFT JOIN LATERAL
-(SELECT max(time) AS max_time FROM orders WHERE o1.user_id = '2' AND time < now()) o2 ON true
-ORDER BY user_id, first_order_time, max_time;
- user_id |       first_order_time       |           max_time           
----------+------------------------------+------------------------------
-       1 | Thu Jan 01 00:00:01 1970 PST | 
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:09 1970 PST
-       3 | Thu Jan 01 00:00:06 1970 PST | 
-       4 | Thu Jan 01 00:00:08 1970 PST | 
-(4 rows)
-
--- Nested LATERALs
-SELECT user_id, first_order_time, time1, min_time FROM
-(SELECT user_id, min(time) AS first_order_time FROM orders GROUP BY user_id) o1
-LEFT JOIN LATERAL
-(SELECT user_id as o2user_id, time AS time1 FROM orders WHERE o1.user_id = '2' AND time < now()) o2 ON true
-LEFT JOIN LATERAL
-(SELECT min(time) as min_time FROM orders WHERE o2.o2user_id = '1' AND time < now()) o3 ON true
-ORDER BY user_id, first_order_time, time1, min_time;
- user_id |       first_order_time       |            time1             |           min_time           
----------+------------------------------+------------------------------+------------------------------
-       1 | Thu Jan 01 00:00:01 1970 PST |                              | 
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:01 1970 PST | Thu Jan 01 00:00:01 1970 PST
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:02 1970 PST | Thu Jan 01 00:00:01 1970 PST
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:03 1970 PST | Thu Jan 01 00:00:01 1970 PST
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:04 1970 PST | 
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:05 1970 PST | Thu Jan 01 00:00:01 1970 PST
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:06 1970 PST | 
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:07 1970 PST | Thu Jan 01 00:00:01 1970 PST
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:08 1970 PST | 
-       2 | Thu Jan 01 00:00:04 1970 PST | Thu Jan 01 00:00:09 1970 PST | 
-       3 | Thu Jan 01 00:00:06 1970 PST |                              | 
-       4 | Thu Jan 01 00:00:08 1970 PST |                              | 
-(12 rows)
-
--- Cleanup
-DROP TABLE orders;
----- OUTER JOIN tests ---
---github issue 2500
-CREATE TABLE t1_timescale (a int, b int);
-CREATE TABLE t2 (a int, b int);
-SELECT create_hypertable('t1_timescale', 'a', chunk_time_interval=>1000);
-NOTICE:  adding not-null constraint to column "a"
-     create_hypertable     
----------------------------
- (3,public,t1_timescale,t)
-(1 row)
-
-INSERT into t2 values (3, 3), (15 , 15);
-INSERT into t1_timescale select generate_series(5, 25, 1), 77;
-UPDATE t1_timescale SET b = 15 WHERE a = 15;
-SELECT * FROM t1_timescale
-FULL OUTER JOIN  t2 on t1_timescale.b=t2.b and t2.b between 10 and 20
-ORDER BY 1, 2, 3, 4;
- a  | b  | a  | b  
-----+----+----+----
-  5 | 77 |    |   
-  6 | 77 |    |   
-  7 | 77 |    |   
-  8 | 77 |    |   
-  9 | 77 |    |   
- 10 | 77 |    |   
- 11 | 77 |    |   
- 12 | 77 |    |   
- 13 | 77 |    |   
- 14 | 77 |    |   
- 15 | 15 | 15 | 15
- 16 | 77 |    |   
- 17 | 77 |    |   
- 18 | 77 |    |   
- 19 | 77 |    |   
- 20 | 77 |    |   
- 21 | 77 |    |   
- 22 | 77 |    |   
- 23 | 77 |    |   
- 24 | 77 |    |   
- 25 | 77 |    |   
-    |    |  3 |  3
-(22 rows)
-
-SELECT * FROM t1_timescale
-LEFT OUTER JOIN  t2 on t1_timescale.b=t2.b and t2.b between 10 and 20
-WHERE t1_timescale.a=5
-ORDER BY 1, 2, 3, 4;
- a | b  | a | b 
----+----+---+---
- 5 | 77 |   |  
-(1 row)
-
-SELECT * FROM t1_timescale
-RIGHT JOIN  t2 on t1_timescale.b=t2.b and t2.b between 10 and 20
-ORDER BY 1, 2, 3, 4;
- a  | b  | a  | b  
-----+----+----+----
- 15 | 15 | 15 | 15
-    |    |  3 |  3
-(2 rows)
-
-SELECT * FROM t1_timescale
-RIGHT JOIN  t2 on t1_timescale.b=t2.b and t2.b between 10 and 20
-WHERE t1_timescale.a=5
-ORDER BY 1, 2, 3, 4;
- a | b | a | b 
----+---+---+---
-(0 rows)
-
-SELECT * FROM t1_timescale
-LEFT OUTER JOIN  t2 on t1_timescale.a=t2.a and t2.b between 10 and 20
-WHERE t1_timescale.a IN ( 10, 15, 20, 25)
-ORDER BY 1, 2, 3, 4;
- a  | b  | a  | b  
-----+----+----+----
- 10 | 77 |    |   
- 15 | 15 | 15 | 15
- 20 | 77 |    |   
- 25 | 77 |    |   
-(4 rows)
-
-SELECT * FROM t1_timescale
-RIGHT OUTER JOIN  t2 on t1_timescale.a=t2.a and t2.b between 10 and 20
-ORDER BY 1, 2, 3, 4;
- a  | b  | a  | b  
-----+----+----+----
- 15 | 15 | 15 | 15
-    |    |  3 |  3
-(2 rows)
-
+ERROR:  operator is not unique: timestamp without time zone + unknown at character 49
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/plain.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/plain.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/plain.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/plain.out	2023-10-28 03:06:04.873750204 +0000
@@ -29,17 +29,36 @@
 CREATE TYPE rainbow AS ENUM ('red', 'orange', 'yellow', 'green', 'blue', 'purple');
 ALTER TYPE rainbow RENAME TO colors;
 \dT+
-                                           List of data types
- Schema |  Name  | Internal name | Size | Elements |       Owner       | Access privileges | Description 
---------+--------+---------------+------+----------+-------------------+-------------------+-------------
- public | colors | colors        | 4    | red     +| default_perm_user |                   | 
-        |        |               |      | orange  +|                   |                   | 
-        |        |               |      | yellow  +|                   |                   | 
-        |        |               |      | green   +|                   |                   | 
-        |        |               |      | blue    +|                   |                   | 
-        |        |               |      | purple   |                   |                   | 
- public | rxid   | rxid          | 16   |          | super_user        |                   | 
-(2 rows)
+                                                  List of data types
+ Schema |      Name       |  Internal name  | Size  | Elements  |       Owner       | Access privileges | Description 
+--------+-----------------+-----------------+-------+-----------+-------------------+-------------------+-------------
+ public | colors          | colors          | 4     | red      +| default_perm_user |                   | 
+        |                 |                 |       | orange   +|                   |                   | 
+        |                 |                 |       | yellow   +|                   |                   | 
+        |                 |                 |       | green    +|                   |                   | 
+        |                 |                 |       | blue     +|                   |                   | 
+        |                 |                 |       | purple    |                   |                   | 
+ public | cs_agg_result   | cs_agg_result   | tuple |           | abigalek          |                   | 
+ public | cs_elem_type    | cs_elem_type    | 4     | char     +| abigalek          |                   | 
+        |                 |                 |       | int2     +|                   |                   | 
+        |                 |                 |       | int4     +|                   |                   | 
+        |                 |                 |       | date     +|                   |                   | 
+        |                 |                 |       | int8     +|                   |                   | 
+        |                 |                 |       | time     +|                   |                   | 
+        |                 |                 |       | timestamp+|                   |                   | 
+        |                 |                 |       | money    +|                   |                   | 
+        |                 |                 |       | float4   +|                   |                   | 
+        |                 |                 |       | float8   +|                   |                   | 
+        |                 |                 |       | bpchar   +|                   |                   | 
+        |                 |                 |       | varchar  +|                   |                   | 
+        |                 |                 |       | text     +|                   |                   | 
+        |                 |                 |       | bool      |                   |                   | 
+ public | cs_profile_item | cs_profile_item | tuple |           | abigalek          |                   | 
+ public | cs_sort_order   | cs_sort_order   | 4     | asc      +| abigalek          |                   | 
+        |                 |                 |       | desc      |                   |                   | 
+ public | rxid            | rxid            | 16    |           | super_user        |                   | 
+ public | timeseries      | timeseries      | 8     |           | abigalek          |                   | 
+(7 rows)
 
 REINDEX TABLE regular_table;
 \c :TEST_DBNAME :ROLE_SUPERUSER
