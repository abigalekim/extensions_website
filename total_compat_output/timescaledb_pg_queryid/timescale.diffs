diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/alter.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/alter.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/alter.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/alter.out	2023-10-28 03:32:00.753131887 +0000
@@ -643,151 +643,4 @@
 DROP SCHEMA new_name CASCADE;
 NOTICE:  drop cascades to 4 other objects
 \dt new_name.*;
-      List of relations
- Schema | Name | Type | Owner 
---------+------+------+-------
-(0 rows)
-
--- Make sure we can't rename internal schemas
-\set ON_ERROR_STOP 0
-ALTER SCHEMA _timescaledb_internal RENAME TO my_new_schema_name;
-ERROR:  cannot rename schemas used by the TimescaleDB extension
-ALTER SCHEMA _timescaledb_catalog RENAME TO my_new_schema_name;
-ERROR:  cannot rename schemas used by the TimescaleDB extension
-ALTER SCHEMA _timescaledb_cache RENAME TO my_new_schema_name;
-ERROR:  cannot rename schemas used by the TimescaleDB extension
-ALTER SCHEMA _timescaledb_config RENAME TO my_new_schema_name;
-ERROR:  cannot rename schemas used by the TimescaleDB extension
-\set ON_ERROR_STOP 1
--- Make sure we can rename associated schemas
-CREATE TABLE my_table (
-  date timestamp with time zone NOT NULL,
-  quantity double precision
-);
-SELECT create_hypertable('my_table','date', associated_schema_name => 'my_associated_schema');
-   create_hypertable    
-------------------------
- (12,public,my_table,t)
-(1 row)
-
-INSERT INTO my_table (date, quantity) VALUES ('2018-07-04T21:00:00+00:00', 8);
-ALTER SCHEMA my_associated_schema RENAME TO new_associated_schema;
-INSERT INTO my_table (date, quantity) VALUES ('2018-08-10T23:00:00+00:00', 20);
--- Make sure the schema name is changed in both catalog tables
-SELECT * from _timescaledb_catalog.hypertable;
- id | schema_name | table_name | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
- 12 | public      | my_table   | new_associated_schema  | _hyper_12               |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-SELECT * from _timescaledb_catalog.chunk;
- id | hypertable_id |      schema_name      |     table_name     | compressed_chunk_id | dropped | status | osm_chunk 
-----+---------------+-----------------------+--------------------+---------------------+---------+--------+-----------
- 24 |            12 | new_associated_schema | _hyper_12_24_chunk |                     | f       |      0 | f
- 25 |            12 | new_associated_schema | _hyper_12_25_chunk |                     | f       |      0 | f
-(2 rows)
-
-DROP TABLE my_table;
--- test renaming unique constraints/indexes
-CREATE TABLE t_hypertable ( id INTEGER NOT NULL, time TIMESTAMPTZ NOT NULL, value FLOAT NOT NULL CHECK (value > 0), UNIQUE(id, time));
-SELECT create_hypertable('t_hypertable', 'time');
-     create_hypertable      
-----------------------------
- (13,public,t_hypertable,t)
-(1 row)
-
-INSERT INTO t_hypertable AS h VALUES ( 1, '2020-01-01 00:00:00', 3.2) ON CONFLICT (id, time) DO UPDATE SET value = h.value + EXCLUDED.value;
-INSERT INTO t_hypertable AS h VALUES ( 1, '2021-01-01 00:00:00', 3.2) ON CONFLICT (id, time) DO UPDATE SET value = h.value + EXCLUDED.value;
-BEGIN;
-ALTER INDEX t_hypertable_id_time_key RENAME TO t_new_constraint;
--- chunk_index and chunk_constraint should both have updated constraint names
-SELECT hypertable_index_name, index_name from _timescaledb_catalog.chunk_index WHERE hypertable_index_name = 't_new_constraint' ORDER BY 1,2;
- hypertable_index_name |             index_name              
------------------------+-------------------------------------
- t_new_constraint      | _hyper_13_26_chunk_t_new_constraint
- t_new_constraint      | _hyper_13_27_chunk_t_new_constraint
-(2 rows)
-
-SELECT hypertable_constraint_name, constraint_name from _timescaledb_catalog.chunk_constraint WHERE hypertable_constraint_name = 't_new_constraint' ORDER BY 1,2;
- hypertable_constraint_name |           constraint_name           
-----------------------------+-------------------------------------
- t_new_constraint           | _hyper_13_26_chunk_t_new_constraint
- t_new_constraint           | _hyper_13_27_chunk_t_new_constraint
-(2 rows)
-
-INSERT INTO t_hypertable AS h VALUES ( 1, '2020-01-01 00:01:00', 3.2) ON CONFLICT (id, time) DO UPDATE SET value = h.value + EXCLUDED.value;
-ROLLBACK;
-BEGIN;
-ALTER TABLE t_hypertable RENAME CONSTRAINT t_hypertable_id_time_key TO t_new_constraint;
--- chunk_index and chunk_constraint should both have updated constraint names
-SELECT hypertable_index_name, index_name from _timescaledb_catalog.chunk_index WHERE hypertable_index_name = 't_new_constraint' ORDER BY 1,2;
- hypertable_index_name |      index_name       
------------------------+-----------------------
- t_new_constraint      | 26_5_t_new_constraint
- t_new_constraint      | 27_6_t_new_constraint
-(2 rows)
-
-SELECT hypertable_constraint_name, constraint_name from _timescaledb_catalog.chunk_constraint WHERE hypertable_constraint_name = 't_new_constraint' ORDER BY 1,2;
- hypertable_constraint_name |    constraint_name    
-----------------------------+-----------------------
- t_new_constraint           | 26_5_t_new_constraint
- t_new_constraint           | 27_6_t_new_constraint
-(2 rows)
-
-INSERT INTO t_hypertable AS h VALUES ( 1, '2020-01-01 00:01:00', 3.2) ON CONFLICT (id, time) DO UPDATE SET value = h.value + EXCLUDED.value;
-ROLLBACK;
--- predicate reconstruction when attnos are different in hypertable and chunk
-CREATE TABLE p_hypertable (a integer not null, b integer, c integer);
-SELECT create_hypertable('p_hypertable', 'a', chunk_time_interval => int '3');
-     create_hypertable      
-----------------------------
- (14,public,p_hypertable,t)
-(1 row)
-
-BEGIN;
-ALTER TABLE p_hypertable DROP COLUMN b, ADD COLUMN d boolean;
-CREATE INDEX idx_ht ON p_hypertable(a, c) WHERE d = FALSE;
-END;
-INSERT INTO p_hypertable(a, c, d) VALUES (1, 1, FALSE);
-\d+ _timescaledb_internal._hyper_14_28_chunk
-                     Table "_timescaledb_internal._hyper_14_28_chunk"
- Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
---------+---------+-----------+----------+---------+---------+--------------+-------------
- a      | integer |           | not null |         | plain   |              | 
- c      | integer |           |          |         | plain   |              | 
- d      | boolean |           |          |         | plain   |              | 
-Indexes:
-    "_hyper_14_28_chunk_idx_ht" btree (a, c) WHERE NOT d
-    "_hyper_14_28_chunk_p_hypertable_a_idx" btree (a DESC)
-Check constraints:
-    "constraint_34" CHECK (a >= 0 AND a < 3)
-Inherits: p_hypertable
-
-DROP TABLE p_hypertable;
--- check none of our hooks interact badly with normal alter view handling
-CREATE VIEW v1 AS SELECT random();
-\set ON_ERROR_STOP 0
--- should error with unrecognized parameter
-ALTER VIEW v1 SET (autovacuum_enabled = false);
-ERROR:  unrecognized parameter "autovacuum_enabled"
-\set ON_ERROR_STOP 1
--- issue 4474
--- test hypertable with non-default statistics target
--- and chunk creation triggered by non-owner
-CREATE ROLE role_4474;
-CREATE TABLE i4474(time timestamptz NOT NULL);
-SELECT table_name FROM public.create_hypertable( 'i4474', 'time');
- table_name 
-------------
- i4474
-(1 row)
-
-GRANT SELECT, INSERT on i4474 TO role_4474;
--- create chunk as owner
-INSERT INTO i4474 SELECT '2020-01-01';
--- set statistics
-ALTER TABLE i4474 ALTER COLUMN time SET statistics 10;
--- create chunk as non-owner
-SET ROLE role_4474;
-INSERT INTO i4474 SELECT '2021-01-01';
-RESET ROLE;
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/alternate_users.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/alternate_users.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/alternate_users.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/alternate_users.out	2023-10-28 03:32:01.749119043 +0000
@@ -60,471 +60,4 @@
 --test creating and using schema as non-superuser
 \c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
 \dt
-                 List of relations
- Schema |     Name      | Type  |       Owner       
---------+---------------+-------+-------------------
- public | one_Partition | table | default_perm_user
-(1 row)
-
-\set ON_ERROR_STOP 0
-SELECT * FROM "one_Partition";
-ERROR:  permission denied for table one_Partition
-SELECT set_chunk_time_interval('"one_Partition"', 1::bigint);
-ERROR:  must be owner of hypertable "one_Partition"
-select add_dimension('"one_Partition"', 'device_id', 2);
-ERROR:  must be owner of hypertable "one_Partition"
-select attach_tablespace('tablespace1', '"one_Partition"');
-ERROR:  must be owner of hypertable "one_Partition"
-\set ON_ERROR_STOP 1
-CREATE TABLE "1dim"(time timestamp, temp float);
-SELECT create_hypertable('"1dim"', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
- create_hypertable 
--------------------
- (2,public,1dim,t)
-(1 row)
-
-INSERT INTO "1dim" VALUES('2017-01-20T09:00:01', 22.5);
-INSERT INTO "1dim" VALUES('2017-01-20T09:00:21', 21.2);
-INSERT INTO "1dim" VALUES('2017-01-20T09:00:47', 25.1);
-SELECT * FROM "1dim";
-           time           | temp 
---------------------------+------
- Fri Jan 20 09:00:01 2017 | 22.5
- Fri Jan 20 09:00:21 2017 | 21.2
- Fri Jan 20 09:00:47 2017 | 25.1
-(3 rows)
-
-\ir include/ddl_ops_1.sql
--- This file and its contents are licensed under the Apache License 2.0.
--- Please see the included NOTICE for copyright information and
--- LICENSE-APACHE for a copy of the license.
-CREATE TABLE PUBLIC."Hypertable_1" (
-  time BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  temp_c int NOT NULL DEFAULT -1,
-  humidity numeric NULL DEFAULT 0,
-  sensor_1 NUMERIC NULL DEFAULT 1,
-  sensor_2 NUMERIC NOT NULL DEFAULT 1,
-  sensor_3 NUMERIC NOT NULL DEFAULT 1,
-  sensor_4 NUMERIC NOT NULL DEFAULT 1
-);
-CREATE INDEX ON PUBLIC."Hypertable_1" (time, "Device_id");
-CREATE TABLE "customSchema"."Hypertable_1" (
-  time BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  temp_c int NOT NULL DEFAULT -1,
-  humidity numeric NULL DEFAULT 0,
-  sensor_1 NUMERIC NULL DEFAULT 1,
-  sensor_2 NUMERIC NOT NULL DEFAULT 1,
-  sensor_3 NUMERIC NOT NULL DEFAULT 1,
-  sensor_4 NUMERIC NOT NULL DEFAULT 1
-);
-CREATE INDEX ON "customSchema"."Hypertable_1" (time, "Device_id");
-SELECT * FROM create_hypertable('"public"."Hypertable_1"', 'time', 'Device_id', 1, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name |  table_name  | created 
----------------+-------------+--------------+---------
-             3 | public      | Hypertable_1 | t
-(1 row)
-
-SELECT * FROM create_hypertable('"customSchema"."Hypertable_1"', 'time', NULL, 1, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name  |  table_name  | created 
----------------+--------------+--------------+---------
-             4 | customSchema | Hypertable_1 | t
-(1 row)
-
-SELECT * FROM _timescaledb_catalog.hypertable;
- id | schema_name  |  table_name   | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+--------------+---------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
-  1 | public       | one_Partition | one_Partition          | _hyper_1                |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-  2 | public       | 1dim          | _timescaledb_internal  | _hyper_2                |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-  3 | public       | Hypertable_1  | _timescaledb_internal  | _hyper_3                |              2 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-  4 | customSchema | Hypertable_1  | _timescaledb_internal  | _hyper_4                |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(4 rows)
-
-CREATE INDEX ON PUBLIC."Hypertable_1" (time, "temp_c");
-CREATE INDEX "ind_humidity" ON PUBLIC."Hypertable_1" (time, "humidity");
-CREATE INDEX "ind_sensor_1" ON PUBLIC."Hypertable_1" (time, "sensor_1");
-INSERT INTO PUBLIC."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
-VALUES(1257894000000000000, 'dev1', 30, 70, 1, 2, 3, 100);
-CREATE UNIQUE INDEX "Unique1" ON PUBLIC."Hypertable_1" (time, "Device_id");
-CREATE UNIQUE INDEX "Unique1" ON "customSchema"."Hypertable_1" (time);
-INSERT INTO "customSchema"."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
-VALUES(1257894000000000000, 'dev1', 30, 70, 1, 2, 3, 100);
-INSERT INTO "customSchema"."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
-VALUES(1257894000000000001, 'dev1', 30, 70, 1, 2, 3, 100);
-SELECT * FROM _timescaledb_catalog.chunk_index ORDER BY hypertable_id, hypertable_index_name, chunk_id;
- chunk_id |                        index_name                         | hypertable_id |          hypertable_index_name           
-----------+-----------------------------------------------------------+---------------+------------------------------------------
-        1 | _hyper_1_1_chunk_one_Partition_device_id_timeCustom_idx   |             1 | one_Partition_device_id_timeCustom_idx
-        2 | _hyper_1_2_chunk_one_Partition_device_id_timeCustom_idx   |             1 | one_Partition_device_id_timeCustom_idx
-        3 | _hyper_1_3_chunk_one_Partition_device_id_timeCustom_idx   |             1 | one_Partition_device_id_timeCustom_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_idx             |             1 | one_Partition_timeCustom_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_idx             |             1 | one_Partition_timeCustom_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_idx             |             1 | one_Partition_timeCustom_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_0_idx    |             1 | one_Partition_timeCustom_series_0_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_0_idx    |             1 | one_Partition_timeCustom_series_0_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_0_idx    |             1 | one_Partition_timeCustom_series_0_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_1_idx    |             1 | one_Partition_timeCustom_series_1_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_1_idx    |             1 | one_Partition_timeCustom_series_1_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_1_idx    |             1 | one_Partition_timeCustom_series_1_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_2_idx    |             1 | one_Partition_timeCustom_series_2_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_2_idx    |             1 | one_Partition_timeCustom_series_2_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_2_idx    |             1 | one_Partition_timeCustom_series_2_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_bool_idx |             1 | one_Partition_timeCustom_series_bool_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_bool_idx |             1 | one_Partition_timeCustom_series_bool_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_bool_idx |             1 | one_Partition_timeCustom_series_bool_idx
-        4 | _hyper_2_4_chunk_1dim_time_idx                            |             2 | 1dim_time_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_Device_id_time_idx          |             3 | Hypertable_1_Device_id_time_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_time_Device_id_idx          |             3 | Hypertable_1_time_Device_id_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_time_idx                    |             3 | Hypertable_1_time_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_time_temp_c_idx             |             3 | Hypertable_1_time_temp_c_idx
-        5 | _hyper_3_5_chunk_Unique1                                  |             3 | Unique1
-        5 | _hyper_3_5_chunk_ind_humidity                             |             3 | ind_humidity
-        5 | _hyper_3_5_chunk_ind_sensor_1                             |             3 | ind_sensor_1
-        6 | _hyper_4_6_chunk_Hypertable_1_time_Device_id_idx          |             4 | Hypertable_1_time_Device_id_idx
-        6 | _hyper_4_6_chunk_Hypertable_1_time_idx                    |             4 | Hypertable_1_time_idx
-        6 | _hyper_4_6_chunk_Unique1                                  |             4 | Unique1
-(29 rows)
-
---expect error cases
-\set ON_ERROR_STOP 0
-INSERT INTO "customSchema"."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
-VALUES(1257894000000000000, 'dev1', 31, 71, 72, 4, 1, 102);
-psql:include/ddl_ops_1.sql:56: ERROR:  duplicate key value violates unique constraint "_hyper_4_6_chunk_Unique1"
-CREATE UNIQUE INDEX "Unique2" ON PUBLIC."Hypertable_1" ("Device_id");
-psql:include/ddl_ops_1.sql:57: ERROR:  cannot create a unique index without the column "time" (used in partitioning)
-CREATE UNIQUE INDEX "Unique2" ON PUBLIC."Hypertable_1" (time);
-psql:include/ddl_ops_1.sql:58: ERROR:  cannot create a unique index without the column "Device_id" (used in partitioning)
-CREATE UNIQUE INDEX "Unique2" ON PUBLIC."Hypertable_1" (sensor_1);
-psql:include/ddl_ops_1.sql:59: ERROR:  cannot create a unique index without the column "time" (used in partitioning)
-UPDATE ONLY PUBLIC."Hypertable_1" SET time = 0 WHERE TRUE;
-DELETE FROM ONLY PUBLIC."Hypertable_1" WHERE "Device_id" = 'dev1';
-\set ON_ERROR_STOP 1
-CREATE TABLE my_ht (time BIGINT, val integer);
-SELECT * FROM create_hypertable('my_ht', 'time', chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
-psql:include/ddl_ops_1.sql:66: NOTICE:  adding not-null constraint to column "time"
- hypertable_id | schema_name | table_name | created 
----------------+-------------+------------+---------
-             5 | public      | my_ht      | t
-(1 row)
-
-ALTER TABLE my_ht ADD COLUMN val2 integer;
-SELECT * FROM test.show_columns('my_ht');
- Column |  Type   | NotNull 
---------+---------+---------
- time   | bigint  | t
- val    | integer | f
- val2   | integer | f
-(3 rows)
-
--- Should error when adding again
-\set ON_ERROR_STOP 0
-ALTER TABLE my_ht ADD COLUMN val2 integer;
-psql:include/ddl_ops_1.sql:72: ERROR:  column "val2" of relation "my_ht" already exists
-\set ON_ERROR_STOP 1
--- Should create
-ALTER TABLE my_ht ADD COLUMN IF NOT EXISTS val3 integer;
-SELECT * FROM test.show_columns('my_ht');
- Column |  Type   | NotNull 
---------+---------+---------
- time   | bigint  | t
- val    | integer | f
- val2   | integer | f
- val3   | integer | f
-(4 rows)
-
--- Should skip and not error
-ALTER TABLE my_ht ADD COLUMN IF NOT EXISTS val3 integer;
-psql:include/ddl_ops_1.sql:80: NOTICE:  column "val3" of relation "my_ht" already exists, skipping
-SELECT * FROM test.show_columns('my_ht');
- Column |  Type   | NotNull 
---------+---------+---------
- time   | bigint  | t
- val    | integer | f
- val2   | integer | f
- val3   | integer | f
-(4 rows)
-
--- Should drop
-ALTER TABLE my_ht DROP COLUMN IF EXISTS val3;
-SELECT * FROM test.show_columns('my_ht');
- Column |  Type   | NotNull 
---------+---------+---------
- time   | bigint  | t
- val    | integer | f
- val2   | integer | f
-(3 rows)
-
--- Should skip and not error
-ALTER TABLE my_ht DROP COLUMN IF EXISTS val3;
-psql:include/ddl_ops_1.sql:88: NOTICE:  column "val3" of relation "my_ht" does not exist, skipping
-SELECT * FROM test.show_columns('my_ht');
- Column |  Type   | NotNull 
---------+---------+---------
- time   | bigint  | t
- val    | integer | f
- val2   | integer | f
-(3 rows)
-
---Test default index creation on create_hypertable().
---Make sure that we do not duplicate indexes that already exists
---
---No existing indexes: both time and space-time indexes created
-BEGIN;
-CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
-  "Time" BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  sensor_1 NUMERIC NULL DEFAULT 1
-);
-SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name |               table_name                | created 
----------------+-------------+-----------------------------------------+---------
-             6 | public      | Hypertable_1_with_default_index_enabled | t
-(1 row)
-
-SELECT * FROM test.show_indexes('"Hypertable_1_with_default_index_enabled"');
-                            Index                             |     Columns      | Expr | Unique | Primary | Exclusion | Tablespace 
---------------------------------------------------------------+------------------+------+--------+---------+-----------+------------
- "Hypertable_1_with_default_index_enabled_Device_id_Time_idx" | {Device_id,Time} |      | f      | f       | f         | 
- "Hypertable_1_with_default_index_enabled_Time_idx"           | {Time}           |      | f      | f       | f         | 
-(2 rows)
-
-ROLLBACK;
---Space index exists: only time index created
-BEGIN;
-CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
-  "Time" BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  sensor_1 NUMERIC NULL DEFAULT 1
-);
-CREATE INDEX ON PUBLIC."Hypertable_1_with_default_index_enabled" ("Device_id", "Time" DESC);
-SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name |               table_name                | created 
----------------+-------------+-----------------------------------------+---------
-             7 | public      | Hypertable_1_with_default_index_enabled | t
-(1 row)
-
-SELECT * FROM test.show_indexes('"Hypertable_1_with_default_index_enabled"');
-                            Index                             |     Columns      | Expr | Unique | Primary | Exclusion | Tablespace 
---------------------------------------------------------------+------------------+------+--------+---------+-----------+------------
- "Hypertable_1_with_default_index_enabled_Device_id_Time_idx" | {Device_id,Time} |      | f      | f       | f         | 
- "Hypertable_1_with_default_index_enabled_Time_idx"           | {Time}           |      | f      | f       | f         | 
-(2 rows)
-
-ROLLBACK;
---Time index exists, only partition index created
-BEGIN;
-CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
-  "Time" BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  sensor_1 NUMERIC NULL DEFAULT 1
-);
-CREATE INDEX ON PUBLIC."Hypertable_1_with_default_index_enabled" ("Time" DESC);
-SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name |               table_name                | created 
----------------+-------------+-----------------------------------------+---------
-             8 | public      | Hypertable_1_with_default_index_enabled | t
-(1 row)
-
-SELECT * FROM test.show_indexes('"Hypertable_1_with_default_index_enabled"');
-                            Index                             |     Columns      | Expr | Unique | Primary | Exclusion | Tablespace 
---------------------------------------------------------------+------------------+------+--------+---------+-----------+------------
- "Hypertable_1_with_default_index_enabled_Device_id_Time_idx" | {Device_id,Time} |      | f      | f       | f         | 
- "Hypertable_1_with_default_index_enabled_Time_idx"           | {Time}           |      | f      | f       | f         | 
-(2 rows)
-
-ROLLBACK;
---No space partitioning, only time index created
-BEGIN;
-CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
-  "Time" BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  sensor_1 NUMERIC NULL DEFAULT 1
-);
-SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name |               table_name                | created 
----------------+-------------+-----------------------------------------+---------
-             9 | public      | Hypertable_1_with_default_index_enabled | t
-(1 row)
-
-SELECT * FROM test.show_indexes('"Hypertable_1_with_default_index_enabled"');
-                       Index                        | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
-----------------------------------------------------+---------+------+--------+---------+-----------+------------
- "Hypertable_1_with_default_index_enabled_Time_idx" | {Time}  |      | f      | f       | f         | 
-(1 row)
-
-ROLLBACK;
---Disable index creation: no default indexes created
-BEGIN;
-CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
-  "Time" BIGINT NOT NULL,
-  "Device_id" TEXT NOT NULL,
-  sensor_1 NUMERIC NULL DEFAULT 1
-);
-SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1, create_default_indexes=>FALSE, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
- hypertable_id | schema_name |               table_name                | created 
----------------+-------------+-----------------------------------------+---------
-            10 | public      | Hypertable_1_with_default_index_enabled | t
-(1 row)
-
-SELECT * FROM test.show_indexes('"Hypertable_1_with_default_index_enabled"');
- Index | Columns | Expr | Unique | Primary | Exclusion | Tablespace 
--------+---------+------+--------+---------+-----------+------------
-(0 rows)
-
-ROLLBACK;
-\ir include/ddl_ops_2.sql
--- This file and its contents are licensed under the Apache License 2.0.
--- Please see the included NOTICE for copyright information and
--- LICENSE-APACHE for a copy of the license.
-ALTER TABLE PUBLIC."Hypertable_1" ADD COLUMN temp_f INTEGER NOT NULL DEFAULT 31;
-ALTER TABLE PUBLIC."Hypertable_1" DROP COLUMN temp_c;
-ALTER TABLE PUBLIC."Hypertable_1" DROP COLUMN sensor_4;
-ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN humidity SET DEFAULT 100;
-ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_1 DROP DEFAULT;
-ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_2 SET DEFAULT NULL;
-ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_1 SET NOT NULL;
-ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_2 DROP NOT NULL;
-ALTER TABLE PUBLIC."Hypertable_1" RENAME COLUMN sensor_2 TO sensor_2_renamed;
-ALTER TABLE PUBLIC."Hypertable_1" RENAME COLUMN sensor_3 TO sensor_3_renamed;
-DROP INDEX "ind_sensor_1";
-CREATE OR REPLACE FUNCTION empty_trigger_func()
-    RETURNS TRIGGER LANGUAGE PLPGSQL AS
-$BODY$
-BEGIN
-END
-$BODY$;
-CREATE TRIGGER test_trigger BEFORE UPDATE OR DELETE ON PUBLIC."Hypertable_1"
-FOR EACH STATEMENT EXECUTE FUNCTION empty_trigger_func();
-ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_2_renamed SET DATA TYPE int;
-ALTER INDEX "ind_humidity" RENAME TO "ind_humdity2";
--- Change should be reflected here
-SELECT * FROM _timescaledb_catalog.chunk_index;
- chunk_id |                        index_name                         | hypertable_id |          hypertable_index_name           
-----------+-----------------------------------------------------------+---------------+------------------------------------------
-        1 | _hyper_1_1_chunk_one_Partition_device_id_timeCustom_idx   |             1 | one_Partition_device_id_timeCustom_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_0_idx    |             1 | one_Partition_timeCustom_series_0_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_1_idx    |             1 | one_Partition_timeCustom_series_1_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_2_idx    |             1 | one_Partition_timeCustom_series_2_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_series_bool_idx |             1 | one_Partition_timeCustom_series_bool_idx
-        1 | _hyper_1_1_chunk_one_Partition_timeCustom_idx             |             1 | one_Partition_timeCustom_idx
-        2 | _hyper_1_2_chunk_one_Partition_device_id_timeCustom_idx   |             1 | one_Partition_device_id_timeCustom_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_0_idx    |             1 | one_Partition_timeCustom_series_0_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_1_idx    |             1 | one_Partition_timeCustom_series_1_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_2_idx    |             1 | one_Partition_timeCustom_series_2_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_series_bool_idx |             1 | one_Partition_timeCustom_series_bool_idx
-        2 | _hyper_1_2_chunk_one_Partition_timeCustom_idx             |             1 | one_Partition_timeCustom_idx
-        3 | _hyper_1_3_chunk_one_Partition_device_id_timeCustom_idx   |             1 | one_Partition_device_id_timeCustom_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_0_idx    |             1 | one_Partition_timeCustom_series_0_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_1_idx    |             1 | one_Partition_timeCustom_series_1_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_2_idx    |             1 | one_Partition_timeCustom_series_2_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_series_bool_idx |             1 | one_Partition_timeCustom_series_bool_idx
-        3 | _hyper_1_3_chunk_one_Partition_timeCustom_idx             |             1 | one_Partition_timeCustom_idx
-        4 | _hyper_2_4_chunk_1dim_time_idx                            |             2 | 1dim_time_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_time_Device_id_idx          |             3 | Hypertable_1_time_Device_id_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_time_idx                    |             3 | Hypertable_1_time_idx
-        5 | _hyper_3_5_chunk_Hypertable_1_Device_id_time_idx          |             3 | Hypertable_1_Device_id_time_idx
-        5 | _hyper_3_5_chunk_Unique1                                  |             3 | Unique1
-        6 | _hyper_4_6_chunk_Hypertable_1_time_Device_id_idx          |             4 | Hypertable_1_time_Device_id_idx
-        6 | _hyper_4_6_chunk_Hypertable_1_time_idx                    |             4 | Hypertable_1_time_idx
-        6 | _hyper_4_6_chunk_Unique1                                  |             4 | Unique1
-        5 | _hyper_3_5_chunk_ind_humdity2                             |             3 | ind_humdity2
-(27 rows)
-
---create column with same name as previously renamed one
-ALTER TABLE PUBLIC."Hypertable_1" ADD COLUMN sensor_3 BIGINT NOT NULL DEFAULT 131;
---create column with same name as previously dropped one
-ALTER TABLE PUBLIC."Hypertable_1" ADD COLUMN sensor_4 BIGINT NOT NULL DEFAULT 131;
---test proper denials for all security definer functions:
-\c :TEST_DBNAME :ROLE_SUPERUSER
-CREATE TABLE plain_table_su (time timestamp, temp float);
-CREATE TABLE hypertable_su (time timestamp, temp float);
-SELECT create_hypertable('hypertable_su', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-      create_hypertable      
------------------------------
- (11,public,hypertable_su,t)
-(1 row)
-
-CREATE INDEX "ind_1" ON hypertable_su (time);
-INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
-\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
---all of the following should produce errors
-\set ON_ERROR_STOP 0
-SELECT create_hypertable('plain_table_su', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-ERROR:  must be owner of hypertable "plain_table_su"
-CREATE INDEX ON plain_table_su (time, temp);
-ERROR:  must be owner of table plain_table_su
-CREATE INDEX ON hypertable_su (time, temp);
-ERROR:  must be owner of hypertable "hypertable_su"
-DROP INDEX "ind_1";
-ERROR:  must be owner of index ind_1
-ALTER INDEX "ind_1" RENAME TO "ind_2";
-ERROR:  must be owner of index ind_1
-\set ON_ERROR_STOP 1
---test that I can't do anything to a non-owned hypertable.
-\set ON_ERROR_STOP 0
-CREATE INDEX ON hypertable_su (time, temp);
-ERROR:  must be owner of hypertable "hypertable_su"
-SELECT * FROM hypertable_su;
-ERROR:  permission denied for table hypertable_su
-INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
-ERROR:  permission denied for table hypertable_su
-ALTER TABLE hypertable_su ADD COLUMN val2 integer;
-ERROR:  must be owner of table hypertable_su
-\set ON_ERROR_STOP 1
---grant read permissions
-\c :TEST_DBNAME :ROLE_SUPERUSER
-GRANT SELECT ON hypertable_su TO :ROLE_DEFAULT_PERM_USER_2;
-\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
-SELECT * FROM hypertable_su;
-           time           | temp 
---------------------------+------
- Fri Jan 20 09:00:01 2017 | 22.5
-(1 row)
-
-\set ON_ERROR_STOP 0
-CREATE INDEX ON hypertable_su (time, temp);
-ERROR:  must be owner of hypertable "hypertable_su"
-INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
-ERROR:  permission denied for table hypertable_su
-ALTER TABLE hypertable_su ADD COLUMN val2 integer;
-ERROR:  must be owner of table hypertable_su
-\set ON_ERROR_STOP 1
---grant read, insert permissions
-\c :TEST_DBNAME :ROLE_SUPERUSER
-GRANT SELECT, INSERT ON hypertable_su TO :ROLE_DEFAULT_PERM_USER_2;
-\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
-INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
-SELECT * FROM hypertable_su;
-           time           | temp 
---------------------------+------
- Fri Jan 20 09:00:01 2017 | 22.5
- Fri Jan 20 09:00:01 2017 | 22.5
-(2 rows)
-
-\set ON_ERROR_STOP 0
-CREATE INDEX ON hypertable_su (time, temp);
-ERROR:  must be owner of hypertable "hypertable_su"
-ALTER TABLE hypertable_su ADD COLUMN val2 integer;
-ERROR:  must be owner of table hypertable_su
-\set ON_ERROR_STOP 1
---change owner
-\c :TEST_DBNAME :ROLE_SUPERUSER
-ALTER TABLE hypertable_su OWNER TO :ROLE_DEFAULT_PERM_USER_2;
-\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
-INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
-SELECT * FROM hypertable_su;
-           time           | temp 
---------------------------+------
- Fri Jan 20 09:00:01 2017 | 22.5
- Fri Jan 20 09:00:01 2017 | 22.5
- Fri Jan 20 09:00:01 2017 | 22.5
-(3 rows)
-
-CREATE INDEX ON hypertable_su (time, temp);
-ALTER TABLE hypertable_su ADD COLUMN val2 integer;
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/chunk_utils.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/chunk_utils.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/chunk_utils.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/chunk_utils.out	2023-10-28 03:32:02.533108946 +0000
@@ -76,1393 +76,4 @@
 (0 rows)
 
 \dt "_timescaledb_internal"._hyper*
-      List of relations
- Schema | Name | Type | Owner 
---------+------+------+-------
-(0 rows)
-
-SELECT  _timescaledb_internal.get_partition_for_key('dev1'::text);
- get_partition_for_key 
------------------------
-            1129986420
-(1 row)
-
-SELECT  _timescaledb_internal.get_partition_for_key('dev7'::varchar(5));
- get_partition_for_key 
------------------------
-             449729092
-(1 row)
-
-INSERT INTO PUBLIC.drop_chunk_test1 VALUES(1, 1.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test1 VALUES(2, 2.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test1 VALUES(3, 3.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test1 VALUES(4, 4.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test1 VALUES(5, 5.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test1 VALUES(6, 6.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test2 VALUES(1, 1.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test2 VALUES(2, 2.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test2 VALUES(3, 3.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test2 VALUES(4, 4.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test2 VALUES(5, 5.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test2 VALUES(6, 6.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(1, 1.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(2, 2.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(3, 3.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(4, 4.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(5, 5.0, 'dev7');
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(6, 6.0, 'dev7');
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1' OR h.table_name = 'drop_chunk_test2')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |    chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+-------------------+-------------+-----------
-        1 |             1 | _timescaledb_internal | _hyper_1_1_chunk  |           1 |         2
-        2 |             1 | _timescaledb_internal | _hyper_1_2_chunk  |           2 |         3
-        3 |             1 | _timescaledb_internal | _hyper_1_3_chunk  |           3 |         4
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk  |           4 |         5
-        5 |             1 | _timescaledb_internal | _hyper_1_5_chunk  |           5 |         6
-        6 |             1 | _timescaledb_internal | _hyper_1_6_chunk  |           6 |         7
-        7 |             2 | _timescaledb_internal | _hyper_2_7_chunk  |           1 |         2
-        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk  |           2 |         3
-        9 |             2 | _timescaledb_internal | _hyper_2_9_chunk  |           3 |         4
-       10 |             2 | _timescaledb_internal | _hyper_2_10_chunk |           4 |         5
-       11 |             2 | _timescaledb_internal | _hyper_2_11_chunk |           5 |         6
-       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk |           6 |         7
-(12 rows)
-
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_1_1_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_2_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_3_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_4_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_5_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_6_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_10_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_7_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_3_13_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_14_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_15_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_16_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_17_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_18_chunk | table | default_perm_user
-(18 rows)
-
--- next two calls of show_chunks should give same set of chunks as above when combined
-SELECT show_chunks('drop_chunk_test1');
-              show_chunks               
-----------------------------------------
- _timescaledb_internal._hyper_1_1_chunk
- _timescaledb_internal._hyper_1_2_chunk
- _timescaledb_internal._hyper_1_3_chunk
- _timescaledb_internal._hyper_1_4_chunk
- _timescaledb_internal._hyper_1_5_chunk
- _timescaledb_internal._hyper_1_6_chunk
-(6 rows)
-
-SELECT * FROM show_chunks('drop_chunk_test2');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_2_7_chunk
- _timescaledb_internal._hyper_2_8_chunk
- _timescaledb_internal._hyper_2_9_chunk
- _timescaledb_internal._hyper_2_10_chunk
- _timescaledb_internal._hyper_2_11_chunk
- _timescaledb_internal._hyper_2_12_chunk
-(6 rows)
-
-CREATE VIEW dependent_view AS SELECT * FROM _timescaledb_internal._hyper_1_1_chunk;
-\set ON_ERROR_STOP 0
-SELECT drop_chunks('drop_chunk_test1');
-ERROR:  invalid time range for dropping chunks
-SELECT drop_chunks('drop_chunk_test1', older_than => 2);
-ERROR:  cannot drop table _timescaledb_internal._hyper_1_1_chunk because other objects depend on it
-SELECT drop_chunks('drop_chunk_test1', older_than => NULL::interval);
-ERROR:  invalid time range for dropping chunks
-SELECT drop_chunks('drop_chunk_test1', older_than => NULL::int);
-ERROR:  invalid time range for dropping chunks
-DROP VIEW dependent_view;
--- should error because wrong time type
-SELECT drop_chunks('drop_chunk_test1', older_than => now());
-ERROR:  invalid time argument type "timestamp with time zone"
-SELECT show_chunks('drop_chunk_test3', now());
-ERROR:  invalid time argument type "timestamp with time zone"
--- should error because of wrong relative order of time constraints
-SELECT show_chunks('drop_chunk_test1', older_than=>3, newer_than=>4);
-ERROR:  invalid time range
--- Should error because NULL was used for the table name.
-SELECT drop_chunks(NULL, older_than => 3);
-ERROR:  invalid hypertable or continuous aggregate
--- should error because there is no relation with that OID.
-SELECT drop_chunks(3533, older_than => 3);
-ERROR:  invalid hypertable or continuous aggregate
-\set ON_ERROR_STOP 1
--- show created constraints and dimension slices for each chunk
-SELECT c.table_name, cc.constraint_name, ds.id AS dimension_slice_id, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.chunk_constraint cc ON (c.id = cc.chunk_id)
-FULL OUTER JOIN _timescaledb_catalog.dimension_slice ds ON (ds.id = cc.dimension_slice_id)
-ORDER BY c.id;
-    table_name     | constraint_name | dimension_slice_id |     range_start      |      range_end      
--------------------+-----------------+--------------------+----------------------+---------------------
- _hyper_1_1_chunk  | constraint_1    |                  1 |                    1 |                   2
- _hyper_1_1_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_2_chunk  | constraint_3    |                  3 |                    2 |                   3
- _hyper_1_2_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_3_chunk  | constraint_4    |                  4 |                    3 |                   4
- _hyper_1_3_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_4_chunk  | constraint_5    |                  5 |                    4 |                   5
- _hyper_1_4_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_1_5_chunk  | constraint_7    |                  7 |                    5 |                   6
- _hyper_1_5_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_1_6_chunk  | constraint_8    |                  8 |                    6 |                   7
- _hyper_1_6_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_2_7_chunk  | constraint_9    |                  9 |                    1 |                   2
- _hyper_2_7_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_8_chunk  | constraint_11   |                 11 |                    2 |                   3
- _hyper_2_8_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_9_chunk  | constraint_12   |                 12 |                    3 |                   4
- _hyper_2_9_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_10_chunk | constraint_13   |                 13 |                    4 |                   5
- _hyper_2_10_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_2_11_chunk | constraint_15   |                 15 |                    5 |                   6
- _hyper_2_11_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_2_12_chunk | constraint_16   |                 16 |                    6 |                   7
- _hyper_2_12_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_3_13_chunk | constraint_17   |                 17 |                    1 |                   2
- _hyper_3_13_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_14_chunk | constraint_19   |                 19 |                    2 |                   3
- _hyper_3_14_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_15_chunk | constraint_20   |                 20 |                    3 |                   4
- _hyper_3_15_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_16_chunk | constraint_21   |                 21 |                    4 |                   5
- _hyper_3_16_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
- _hyper_3_17_chunk | constraint_23   |                 23 |                    5 |                   6
- _hyper_3_17_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
- _hyper_3_18_chunk | constraint_24   |                 24 |                    6 |                   7
- _hyper_3_18_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
-(36 rows)
-
-SELECT * FROM _timescaledb_catalog.dimension_slice ORDER BY id;
- id | dimension_id |     range_start      |      range_end      
-----+--------------+----------------------+---------------------
-  1 |            1 |                    1 |                   2
-  2 |            4 |           1073741823 | 9223372036854775807
-  3 |            1 |                    2 |                   3
-  4 |            1 |                    3 |                   4
-  5 |            1 |                    4 |                   5
-  6 |            4 | -9223372036854775808 |          1073741823
-  7 |            1 |                    5 |                   6
-  8 |            1 |                    6 |                   7
-  9 |            2 |                    1 |                   2
- 10 |            5 |           1073741823 | 9223372036854775807
- 11 |            2 |                    2 |                   3
- 12 |            2 |                    3 |                   4
- 13 |            2 |                    4 |                   5
- 14 |            5 | -9223372036854775808 |          1073741823
- 15 |            2 |                    5 |                   6
- 16 |            2 |                    6 |                   7
- 17 |            3 |                    1 |                   2
- 18 |            6 |           1073741823 | 9223372036854775807
- 19 |            3 |                    2 |                   3
- 20 |            3 |                    3 |                   4
- 21 |            3 |                    4 |                   5
- 22 |            6 | -9223372036854775808 |          1073741823
- 23 |            3 |                    5 |                   6
- 24 |            3 |                    6 |                   7
-(24 rows)
-
--- Test that truncating chunks works
-SELECT count(*) FROM _timescaledb_internal._hyper_2_7_chunk;
- count 
--------
-     1
-(1 row)
-
-TRUNCATE TABLE _timescaledb_internal._hyper_2_7_chunk;
-SELECT count(*) FROM _timescaledb_internal._hyper_2_7_chunk;
- count 
--------
-     0
-(1 row)
-
--- Drop one chunk "manually" and verify that dimension slices and
--- constraints are cleaned up. Each chunk has two constraints and two
--- dimension slices. Both constraints should be deleted, but only one
--- slice should be deleted since the space-dimension slice is shared
--- with other chunks in the same hypertable
-DROP TABLE _timescaledb_internal._hyper_2_7_chunk;
--- Two constraints deleted compared to above
-SELECT c.table_name, cc.constraint_name, ds.id AS dimension_slice_id, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.chunk_constraint cc ON (c.id = cc.chunk_id)
-FULL OUTER JOIN _timescaledb_catalog.dimension_slice ds ON (ds.id = cc.dimension_slice_id)
-ORDER BY c.id;
-    table_name     | constraint_name | dimension_slice_id |     range_start      |      range_end      
--------------------+-----------------+--------------------+----------------------+---------------------
- _hyper_1_1_chunk  | constraint_1    |                  1 |                    1 |                   2
- _hyper_1_1_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_2_chunk  | constraint_3    |                  3 |                    2 |                   3
- _hyper_1_2_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_3_chunk  | constraint_4    |                  4 |                    3 |                   4
- _hyper_1_3_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_4_chunk  | constraint_5    |                  5 |                    4 |                   5
- _hyper_1_4_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_1_5_chunk  | constraint_7    |                  7 |                    5 |                   6
- _hyper_1_5_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_1_6_chunk  | constraint_8    |                  8 |                    6 |                   7
- _hyper_1_6_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_2_8_chunk  | constraint_11   |                 11 |                    2 |                   3
- _hyper_2_8_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_9_chunk  | constraint_12   |                 12 |                    3 |                   4
- _hyper_2_9_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_10_chunk | constraint_13   |                 13 |                    4 |                   5
- _hyper_2_10_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_2_11_chunk | constraint_15   |                 15 |                    5 |                   6
- _hyper_2_11_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_2_12_chunk | constraint_16   |                 16 |                    6 |                   7
- _hyper_2_12_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_3_13_chunk | constraint_17   |                 17 |                    1 |                   2
- _hyper_3_13_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_14_chunk | constraint_19   |                 19 |                    2 |                   3
- _hyper_3_14_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_15_chunk | constraint_20   |                 20 |                    3 |                   4
- _hyper_3_15_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_16_chunk | constraint_21   |                 21 |                    4 |                   5
- _hyper_3_16_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
- _hyper_3_17_chunk | constraint_23   |                 23 |                    5 |                   6
- _hyper_3_17_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
- _hyper_3_18_chunk | constraint_24   |                 24 |                    6 |                   7
- _hyper_3_18_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
-(34 rows)
-
--- Only one dimension slice deleted
-SELECT * FROM _timescaledb_catalog.dimension_slice ORDER BY id;
- id | dimension_id |     range_start      |      range_end      
-----+--------------+----------------------+---------------------
-  1 |            1 |                    1 |                   2
-  2 |            4 |           1073741823 | 9223372036854775807
-  3 |            1 |                    2 |                   3
-  4 |            1 |                    3 |                   4
-  5 |            1 |                    4 |                   5
-  6 |            4 | -9223372036854775808 |          1073741823
-  7 |            1 |                    5 |                   6
-  8 |            1 |                    6 |                   7
- 10 |            5 |           1073741823 | 9223372036854775807
- 11 |            2 |                    2 |                   3
- 12 |            2 |                    3 |                   4
- 13 |            2 |                    4 |                   5
- 14 |            5 | -9223372036854775808 |          1073741823
- 15 |            2 |                    5 |                   6
- 16 |            2 |                    6 |                   7
- 17 |            3 |                    1 |                   2
- 18 |            6 |           1073741823 | 9223372036854775807
- 19 |            3 |                    2 |                   3
- 20 |            3 |                    3 |                   4
- 21 |            3 |                    4 |                   5
- 22 |            6 | -9223372036854775808 |          1073741823
- 23 |            3 |                    5 |                   6
- 24 |            3 |                    6 |                   7
-(23 rows)
-
--- We drop all chunks older than timestamp 2 in all hypertable. This
--- is added only to avoid making the diff for this commit larger than
--- necessary and make reviews easier.
-SELECT drop_chunks(format('%1$I.%2$I', schema_name, table_name)::regclass, older_than => 2)
-  FROM _timescaledb_catalog.hypertable;
-               drop_chunks               
------------------------------------------
- _timescaledb_internal._hyper_1_1_chunk
- _timescaledb_internal._hyper_3_13_chunk
-(2 rows)
-
-SELECT c.table_name, cc.constraint_name, ds.id AS dimension_slice_id, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.chunk_constraint cc ON (c.id = cc.chunk_id)
-FULL OUTER JOIN _timescaledb_catalog.dimension_slice ds ON (ds.id = cc.dimension_slice_id)
-ORDER BY c.id;
-    table_name     | constraint_name | dimension_slice_id |     range_start      |      range_end      
--------------------+-----------------+--------------------+----------------------+---------------------
- _hyper_1_2_chunk  | constraint_3    |                  3 |                    2 |                   3
- _hyper_1_2_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_3_chunk  | constraint_4    |                  4 |                    3 |                   4
- _hyper_1_3_chunk  | constraint_2    |                  2 |           1073741823 | 9223372036854775807
- _hyper_1_4_chunk  | constraint_5    |                  5 |                    4 |                   5
- _hyper_1_4_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_1_5_chunk  | constraint_7    |                  7 |                    5 |                   6
- _hyper_1_5_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_1_6_chunk  | constraint_8    |                  8 |                    6 |                   7
- _hyper_1_6_chunk  | constraint_6    |                  6 | -9223372036854775808 |          1073741823
- _hyper_2_8_chunk  | constraint_11   |                 11 |                    2 |                   3
- _hyper_2_8_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_9_chunk  | constraint_12   |                 12 |                    3 |                   4
- _hyper_2_9_chunk  | constraint_10   |                 10 |           1073741823 | 9223372036854775807
- _hyper_2_10_chunk | constraint_13   |                 13 |                    4 |                   5
- _hyper_2_10_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_2_11_chunk | constraint_15   |                 15 |                    5 |                   6
- _hyper_2_11_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_2_12_chunk | constraint_16   |                 16 |                    6 |                   7
- _hyper_2_12_chunk | constraint_14   |                 14 | -9223372036854775808 |          1073741823
- _hyper_3_14_chunk | constraint_19   |                 19 |                    2 |                   3
- _hyper_3_14_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_15_chunk | constraint_20   |                 20 |                    3 |                   4
- _hyper_3_15_chunk | constraint_18   |                 18 |           1073741823 | 9223372036854775807
- _hyper_3_16_chunk | constraint_21   |                 21 |                    4 |                   5
- _hyper_3_16_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
- _hyper_3_17_chunk | constraint_23   |                 23 |                    5 |                   6
- _hyper_3_17_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
- _hyper_3_18_chunk | constraint_24   |                 24 |                    6 |                   7
- _hyper_3_18_chunk | constraint_22   |                 22 | -9223372036854775808 |          1073741823
-(30 rows)
-
-SELECT * FROM _timescaledb_catalog.dimension_slice ORDER BY id;
- id | dimension_id |     range_start      |      range_end      
-----+--------------+----------------------+---------------------
-  2 |            4 |           1073741823 | 9223372036854775807
-  3 |            1 |                    2 |                   3
-  4 |            1 |                    3 |                   4
-  5 |            1 |                    4 |                   5
-  6 |            4 | -9223372036854775808 |          1073741823
-  7 |            1 |                    5 |                   6
-  8 |            1 |                    6 |                   7
- 10 |            5 |           1073741823 | 9223372036854775807
- 11 |            2 |                    2 |                   3
- 12 |            2 |                    3 |                   4
- 13 |            2 |                    4 |                   5
- 14 |            5 | -9223372036854775808 |          1073741823
- 15 |            2 |                    5 |                   6
- 16 |            2 |                    6 |                   7
- 18 |            6 |           1073741823 | 9223372036854775807
- 19 |            3 |                    2 |                   3
- 20 |            3 |                    3 |                   4
- 21 |            3 |                    4 |                   5
- 22 |            6 | -9223372036854775808 |          1073741823
- 23 |            3 |                    5 |                   6
- 24 |            3 |                    6 |                   7
-(21 rows)
-
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1' OR h.table_name = 'drop_chunk_test2')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |    chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+-------------------+-------------+-----------
-        2 |             1 | _timescaledb_internal | _hyper_1_2_chunk  |           2 |         3
-        3 |             1 | _timescaledb_internal | _hyper_1_3_chunk  |           3 |         4
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk  |           4 |         5
-        5 |             1 | _timescaledb_internal | _hyper_1_5_chunk  |           5 |         6
-        6 |             1 | _timescaledb_internal | _hyper_1_6_chunk  |           6 |         7
-        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk  |           2 |         3
-        9 |             2 | _timescaledb_internal | _hyper_2_9_chunk  |           3 |         4
-       10 |             2 | _timescaledb_internal | _hyper_2_10_chunk |           4 |         5
-       11 |             2 | _timescaledb_internal | _hyper_2_11_chunk |           5 |         6
-       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk |           6 |         7
-(10 rows)
-
--- next two calls of show_chunks should give same set of chunks as above when combined
-SELECT show_chunks('drop_chunk_test1');
-              show_chunks               
-----------------------------------------
- _timescaledb_internal._hyper_1_2_chunk
- _timescaledb_internal._hyper_1_3_chunk
- _timescaledb_internal._hyper_1_4_chunk
- _timescaledb_internal._hyper_1_5_chunk
- _timescaledb_internal._hyper_1_6_chunk
-(5 rows)
-
-SELECT * FROM show_chunks('drop_chunk_test2');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_2_8_chunk
- _timescaledb_internal._hyper_2_9_chunk
- _timescaledb_internal._hyper_2_10_chunk
- _timescaledb_internal._hyper_2_11_chunk
- _timescaledb_internal._hyper_2_12_chunk
-(5 rows)
-
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_1_2_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_3_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_4_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_5_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_6_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_10_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_3_14_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_15_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_16_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_17_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_3_18_chunk | table | default_perm_user
-(15 rows)
-
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'drop_chunk_test1\', older_than => 3)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'drop_chunk_test1\', older_than => 3)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1' OR h.table_name = 'drop_chunk_test2')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |    chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+-------------------+-------------+-----------
-        3 |             1 | _timescaledb_internal | _hyper_1_3_chunk  |           3 |         4
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk  |           4 |         5
-        5 |             1 | _timescaledb_internal | _hyper_1_5_chunk  |           5 |         6
-        6 |             1 | _timescaledb_internal | _hyper_1_6_chunk  |           6 |         7
-        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk  |           2 |         3
-        9 |             2 | _timescaledb_internal | _hyper_2_9_chunk  |           3 |         4
-       10 |             2 | _timescaledb_internal | _hyper_2_10_chunk |           4 |         5
-       11 |             2 | _timescaledb_internal | _hyper_2_11_chunk |           5 |         6
-       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk |           6 |         7
-(9 rows)
-
-\dt "_timescaledb_internal".*
-                             List of relations
-        Schema         |          Name          | Type  |       Owner       
------------------------+------------------------+-------+-------------------
- _timescaledb_internal | _hyper_1_3_chunk       | table | default_perm_user
- _timescaledb_internal | _hyper_1_4_chunk       | table | default_perm_user
- _timescaledb_internal | _hyper_1_5_chunk       | table | default_perm_user
- _timescaledb_internal | _hyper_1_6_chunk       | table | default_perm_user
- _timescaledb_internal | _hyper_2_10_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_2_11_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk       | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk       | table | default_perm_user
- _timescaledb_internal | _hyper_3_14_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_3_15_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_3_16_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_3_17_chunk      | table | default_perm_user
- _timescaledb_internal | _hyper_3_18_chunk      | table | default_perm_user
- _timescaledb_internal | bgw_job_stat           | table | super_user
- _timescaledb_internal | bgw_policy_chunk_stats | table | super_user
- _timescaledb_internal | job_errors             | table | super_user
-(17 rows)
-
--- next two calls of show_chunks should give same set of chunks as above when combined
-SELECT show_chunks('drop_chunk_test1');
-              show_chunks               
-----------------------------------------
- _timescaledb_internal._hyper_1_3_chunk
- _timescaledb_internal._hyper_1_4_chunk
- _timescaledb_internal._hyper_1_5_chunk
- _timescaledb_internal._hyper_1_6_chunk
-(4 rows)
-
-SELECT * FROM show_chunks('drop_chunk_test2');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_2_8_chunk
- _timescaledb_internal._hyper_2_9_chunk
- _timescaledb_internal._hyper_2_10_chunk
- _timescaledb_internal._hyper_2_11_chunk
- _timescaledb_internal._hyper_2_12_chunk
-(5 rows)
-
--- 2,147,483,647 is the largest int so this tests that BIGINTs work
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'drop_chunk_test3\', older_than => 2147483648)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'drop_chunk_test3\', older_than => 2147483648)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       5 |                       5
-(1 row)
-
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1' OR h.table_name = 'drop_chunk_test2' OR h.table_name = 'drop_chunk_test3')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |    chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+-------------------+-------------+-----------
-        3 |             1 | _timescaledb_internal | _hyper_1_3_chunk  |           3 |         4
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk  |           4 |         5
-        5 |             1 | _timescaledb_internal | _hyper_1_5_chunk  |           5 |         6
-        6 |             1 | _timescaledb_internal | _hyper_1_6_chunk  |           6 |         7
-        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk  |           2 |         3
-        9 |             2 | _timescaledb_internal | _hyper_2_9_chunk  |           3 |         4
-       10 |             2 | _timescaledb_internal | _hyper_2_10_chunk |           4 |         5
-       11 |             2 | _timescaledb_internal | _hyper_2_11_chunk |           5 |         6
-       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk |           6 |         7
-(9 rows)
-
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_1_3_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_4_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_5_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_6_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_10_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
-(9 rows)
-
-\set ON_ERROR_STOP 0
--- should error because no hypertable
-SELECT drop_chunks('drop_chunk_test4', older_than => 5);
-ERROR:  relation "drop_chunk_test4" does not exist at character 20
-SELECT show_chunks('drop_chunk_test4');
-ERROR:  relation "drop_chunk_test4" does not exist at character 20
-SELECT show_chunks('drop_chunk_test4', 5);
-ERROR:  relation "drop_chunk_test4" does not exist at character 20
-\set ON_ERROR_STOP 1
-DROP TABLE _timescaledb_internal._hyper_1_6_chunk;
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1' OR h.table_name = 'drop_chunk_test2')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |    chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+-------------------+-------------+-----------
-        3 |             1 | _timescaledb_internal | _hyper_1_3_chunk  |           3 |         4
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk  |           4 |         5
-        5 |             1 | _timescaledb_internal | _hyper_1_5_chunk  |           5 |         6
-        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk  |           2 |         3
-        9 |             2 | _timescaledb_internal | _hyper_2_9_chunk  |           3 |         4
-       10 |             2 | _timescaledb_internal | _hyper_2_10_chunk |           4 |         5
-       11 |             2 | _timescaledb_internal | _hyper_2_11_chunk |           5 |         6
-       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk |           6 |         7
-(8 rows)
-
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_1_3_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_4_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_5_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_10_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
-(8 rows)
-
--- newer_than tests
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'drop_chunk_test1\', newer_than=>5)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'drop_chunk_test1\', newer_than=>5, verbose => true)::NAME'
-\set ECHO errors
-psql:include/query_result_test_equal.sql:16: INFO:  dropping chunk _timescaledb_internal._hyper_1_5_chunk
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |   chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+------------------+-------------+-----------
-        3 |             1 | _timescaledb_internal | _hyper_1_3_chunk |           3 |         4
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk |           4 |         5
-(2 rows)
-
-SELECT show_chunks('drop_chunk_test1');
-              show_chunks               
-----------------------------------------
- _timescaledb_internal._hyper_1_3_chunk
- _timescaledb_internal._hyper_1_4_chunk
-(2 rows)
-
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_1_3_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_1_4_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_10_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
-(7 rows)
-
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'drop_chunk_test1\', older_than=>4, newer_than=>3)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'drop_chunk_test1\', older_than=>4, newer_than=>3)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public' AND (h.table_name = 'drop_chunk_test1')
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |   chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+------------------+-------------+-----------
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk |           4 |         5
-(1 row)
-
--- the call of show_chunks should give same set of chunks as above
-SELECT show_chunks('drop_chunk_test1');
-              show_chunks               
-----------------------------------------
- _timescaledb_internal._hyper_1_4_chunk
-(1 row)
-
-SELECT c.id AS chunk_id, c.hypertable_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN  dimension_get_time(h.id) time_dimension ON(true)
-INNER JOIN  _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = time_dimension.id)
-INNER JOIN  _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.schema_name = 'public'
-ORDER BY c.id;
- chunk_id | hypertable_id |     chunk_schema      |    chunk_table    | range_start | range_end 
-----------+---------------+-----------------------+-------------------+-------------+-----------
-        4 |             1 | _timescaledb_internal | _hyper_1_4_chunk  |           4 |         5
-        8 |             2 | _timescaledb_internal | _hyper_2_8_chunk  |           2 |         3
-        9 |             2 | _timescaledb_internal | _hyper_2_9_chunk  |           3 |         4
-       10 |             2 | _timescaledb_internal | _hyper_2_10_chunk |           4 |         5
-       11 |             2 | _timescaledb_internal | _hyper_2_11_chunk |           5 |         6
-       12 |             2 | _timescaledb_internal | _hyper_2_12_chunk |           6 |         7
-(6 rows)
-
-SELECT drop_chunks(format('%1$I.%2$I', schema_name, table_name)::regclass, older_than => 5, newer_than => 4)
-  FROM _timescaledb_catalog.hypertable WHERE schema_name = 'public';
-               drop_chunks               
------------------------------------------
- _timescaledb_internal._hyper_1_4_chunk
- _timescaledb_internal._hyper_2_10_chunk
-(2 rows)
-
-CREATE TABLE PUBLIC.drop_chunk_test_ts(time timestamp, temp float8, device_id text);
-SELECT create_hypertable('public.drop_chunk_test_ts', 'time', chunk_time_interval => interval '1 minute', create_default_indexes=>false);
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-        create_hypertable        
----------------------------------
- (4,public,drop_chunk_test_ts,t)
-(1 row)
-
-CREATE TABLE PUBLIC.drop_chunk_test_tstz(time timestamptz, temp float8, device_id text);
-SELECT create_hypertable('public.drop_chunk_test_tstz', 'time', chunk_time_interval => interval '1 minute', create_default_indexes=>false);
-NOTICE:  adding not-null constraint to column "time"
-         create_hypertable         
------------------------------------
- (5,public,drop_chunk_test_tstz,t)
-(1 row)
-
-SET timezone = '+1';
-INSERT INTO PUBLIC.drop_chunk_test_ts VALUES(now()-INTERVAL '5 minutes', 1.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test_ts VALUES(now()+INTERVAL '5 minutes', 1.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test_tstz VALUES(now()-INTERVAL '5 minutes', 1.0, 'dev1');
-INSERT INTO PUBLIC.drop_chunk_test_tstz VALUES(now()+INTERVAL '5 minutes', 1.0, 'dev1');
-SELECT * FROM test.show_subtables('drop_chunk_test_ts');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_4_19_chunk | 
- _timescaledb_internal._hyper_4_20_chunk | 
-(2 rows)
-
-SELECT * FROM test.show_subtables('drop_chunk_test_tstz');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_5_21_chunk | 
- _timescaledb_internal._hyper_5_22_chunk | 
-(2 rows)
-
-BEGIN;
-    SELECT show_chunks('drop_chunk_test_ts');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_4_19_chunk
- _timescaledb_internal._hyper_4_20_chunk
-(2 rows)
-
-    SELECT show_chunks('drop_chunk_test_ts', now()::timestamp-interval '1 minute');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_4_19_chunk
-(1 row)
-
--- show_chunks and drop_chunks output should be the same
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_ts\', newer_than => interval \'1 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_ts\', newer_than => interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_ts\', older_than => interval \'6 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_ts\', older_than => interval \'6 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       0 |                       0
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_ts');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_4_19_chunk | 
-(1 row)
-
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_ts\', older_than => interval \'1 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_ts\', interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_ts');
- Child | Tablespace 
--------+------------
-(0 rows)
-
-    SELECT show_chunks('drop_chunk_test_tstz');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_5_21_chunk
- _timescaledb_internal._hyper_5_22_chunk
-(2 rows)
-
-    SELECT show_chunks('drop_chunk_test_tstz', older_than => now() - interval '1 minute', newer_than => now() - interval '6 minute');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_5_21_chunk
-(1 row)
-
-    SELECT show_chunks('drop_chunk_test_tstz', newer_than => now() - interval '1 minute');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_5_22_chunk
-(1 row)
-
-    SELECT show_chunks('drop_chunk_test_tstz', older_than => now() - interval '1 minute');
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_5_21_chunk
-(1 row)
-
-    \set QUERY1 'SELECT show_chunks(older_than => interval \'1 minute\', relation => \'drop_chunk_test_tstz\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_tstz\', interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_tstz');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_5_22_chunk | 
-(1 row)
-
-ROLLBACK;
-BEGIN;
--- show_chunks and drop_chunks output should be the same
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_ts\', newer_than => interval \'6 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_ts\', newer_than => interval \'6 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       2 |                       2
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_ts');
- Child | Tablespace 
--------+------------
-(0 rows)
-
-ROLLBACK;
-BEGIN;
--- show_chunks and drop_chunks output should be the same
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_ts\', older_than => interval \'1 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_ts\', older_than => interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_ts');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_4_20_chunk | 
-(1 row)
-
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_tstz\', older_than => interval \'1 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_tstz\', older_than => interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_tstz');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_5_22_chunk | 
-(1 row)
-
-ROLLBACK;
-BEGIN;
--- show_chunks and drop_chunks output should be the same
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_ts\', older_than => now()::timestamp-interval \'1 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_ts\', older_than => now()::timestamp-interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_ts');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_4_20_chunk | 
-(1 row)
-
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_tstz\', older_than => now()-interval \'1 minute\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_tstz\', older_than => now()-interval \'1 minute\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_tstz');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_5_22_chunk | 
-(1 row)
-
-ROLLBACK;
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_4_19_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_4_20_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_5_21_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_5_22_chunk | table | default_perm_user
-(8 rows)
-
-\set ON_ERROR_STOP 0
-SELECT drop_chunks(interval '1 minute');
-ERROR:  function drop_chunks(interval) does not exist at character 8
-SELECT drop_chunks('drop_chunk_test3', interval '1 minute');
-ERROR:  can only use an INTERVAL for TIMESTAMP, TIMESTAMPTZ, and DATE types
-SELECT drop_chunks('drop_chunk_test_ts', (now()-interval '1 minute'));
-ERROR:  invalid time argument type "timestamp with time zone"
-SELECT drop_chunks('drop_chunk_test3', verbose => true);
-ERROR:  invalid time range for dropping chunks
-\set ON_ERROR_STOP 1
-\dt "_timescaledb_internal"._hyper*
-                           List of relations
-        Schema         |       Name        | Type  |       Owner       
------------------------+-------------------+-------+-------------------
- _timescaledb_internal | _hyper_2_11_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_12_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_2_8_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_2_9_chunk  | table | default_perm_user
- _timescaledb_internal | _hyper_4_19_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_4_20_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_5_21_chunk | table | default_perm_user
- _timescaledb_internal | _hyper_5_22_chunk | table | default_perm_user
-(8 rows)
-
-CREATE TABLE PUBLIC.drop_chunk_test_date(time date, temp float8, device_id text);
-SELECT create_hypertable('public.drop_chunk_test_date', 'time', chunk_time_interval => interval '1 day', create_default_indexes=>false);
-NOTICE:  adding not-null constraint to column "time"
-         create_hypertable         
------------------------------------
- (6,public,drop_chunk_test_date,t)
-(1 row)
-
-SET timezone = '+100';
-INSERT INTO PUBLIC.drop_chunk_test_date VALUES(now()-INTERVAL '2 day', 1.0, 'dev1');
-BEGIN;
--- show_chunks and drop_chunks output should be the same
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_date\', older_than => interval \'1 day\')::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_date\', older_than => interval \'1 day\')::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_date');
- Child | Tablespace 
--------+------------
-(0 rows)
-
-ROLLBACK;
-BEGIN;
--- show_chunks and drop_chunks output should be the same
-    \set QUERY1 'SELECT show_chunks(\'drop_chunk_test_date\', older_than => (now()-interval \'1 day\')::date)::NAME'
-    \set QUERY2 'SELECT drop_chunks(\'drop_chunk_test_date\', older_than => (now()-interval \'1 day\')::date)::NAME'
-    \set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-    SELECT * FROM test.show_subtables('drop_chunk_test_date');
- Child | Tablespace 
--------+------------
-(0 rows)
-
-ROLLBACK;
-SET timezone TO '-5';
-CREATE TABLE chunk_id_from_relid_test(time bigint, temp float8, device_id int);
-SELECT hypertable_id FROM create_hypertable('chunk_id_from_relid_test', 'time', chunk_time_interval => 10) \gset
-NOTICE:  adding not-null constraint to column "time"
-INSERT INTO chunk_id_from_relid_test VALUES (0, 1.1, 0), (0, 1.3, 11), (12, 2.0, 0), (12, 0.1, 11);
-SELECT _timescaledb_internal.chunk_id_from_relid(tableoid) FROM chunk_id_from_relid_test;
- chunk_id_from_relid 
----------------------
-                  24
-                  24
-                  25
-                  25
-(4 rows)
-
-DROP TABLE chunk_id_from_relid_test;
-CREATE TABLE chunk_id_from_relid_test(time bigint, temp float8, device_id int);
-SELECT hypertable_id FROM  create_hypertable('chunk_id_from_relid_test',
-    'time', chunk_time_interval => 10,
-    partitioning_column => 'device_id',
-    number_partitions => 3) \gset
-NOTICE:  adding not-null constraint to column "time"
-INSERT INTO chunk_id_from_relid_test VALUES (0, 1.1, 2), (0, 1.3, 11), (12, 2.0, 2), (12, 0.1, 11);
-SELECT _timescaledb_internal.chunk_id_from_relid(tableoid) FROM chunk_id_from_relid_test;
- chunk_id_from_relid 
----------------------
-                  26
-                  27
-                  28
-                  29
-(4 rows)
-
-\set ON_ERROR_STOP 0
-SELECT _timescaledb_internal.chunk_id_from_relid('pg_type'::regclass);
-ERROR:  chunk not found
-SELECT _timescaledb_internal.chunk_id_from_relid('chunk_id_from_relid_test'::regclass);
-ERROR:  chunk not found
--- test drop/show_chunks on custom partition types
-CREATE FUNCTION extract_time(a jsonb)
-RETURNS TIMESTAMPTZ
-LANGUAGE SQL
-AS $$ SELECT (a->>'time')::TIMESTAMPTZ $$ IMMUTABLE;
-CREATE TABLE test_weird_type(a jsonb);
-SELECT create_hypertable('test_weird_type', 'a',
-    time_partitioning_func=>'extract_time'::regproc,
-    chunk_time_interval=>'2 hours'::interval);
-NOTICE:  adding not-null constraint to column "a"
-      create_hypertable       
-------------------------------
- (9,public,test_weird_type,t)
-(1 row)
-
-INSERT INTO test_weird_type VALUES ('{"time":"2019/06/06 1:00+0"}'), ('{"time":"2019/06/06 5:00+0"}');
-SELECT * FROM test.show_subtables('test_weird_type');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_9_30_chunk | 
- _timescaledb_internal._hyper_9_31_chunk | 
-(2 rows)
-
-SELECT show_chunks('test_weird_type', older_than=>'2019/06/06 4:00+0'::TIMESTAMPTZ);
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_9_30_chunk
-(1 row)
-
-SELECT show_chunks('test_weird_type', older_than=>'2019/06/06 10:00+0'::TIMESTAMPTZ);
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_9_30_chunk
- _timescaledb_internal._hyper_9_31_chunk
-(2 rows)
-
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'test_weird_type\', older_than => \'2019/06/06 5:00+0\'::TIMESTAMPTZ)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'test_weird_type\', older_than => \'2019/06/06 5:00+0\'::TIMESTAMPTZ)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT * FROM test.show_subtables('test_weird_type');
-                  Child                  | Tablespace 
------------------------------------------+------------
- _timescaledb_internal._hyper_9_31_chunk | 
-(1 row)
-
-SELECT show_chunks('test_weird_type', older_than=>'2019/06/06 4:00+0'::TIMESTAMPTZ);
- show_chunks 
--------------
-(0 rows)
-
-SELECT show_chunks('test_weird_type', older_than=>'2019/06/06 10:00+0'::TIMESTAMPTZ);
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_9_31_chunk
-(1 row)
-
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'test_weird_type\', older_than => \'2019/06/06 6:00+0\'::TIMESTAMPTZ)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'test_weird_type\', older_than => \'2019/06/06 6:00+0\'::TIMESTAMPTZ)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT * FROM test.show_subtables('test_weird_type');
- Child | Tablespace 
--------+------------
-(0 rows)
-
-SELECT show_chunks('test_weird_type', older_than=>'2019/06/06 10:00+0'::TIMESTAMPTZ);
- show_chunks 
--------------
-(0 rows)
-
-DROP TABLE test_weird_type;
-CREATE FUNCTION extract_int_time(a jsonb)
-RETURNS BIGINT
-LANGUAGE SQL
-AS $$ SELECT (a->>'time')::BIGINT $$ IMMUTABLE;
-CREATE TABLE test_weird_type_i(a jsonb);
-SELECT create_hypertable('test_weird_type_i', 'a',
-    time_partitioning_func=>'extract_int_time'::regproc,
-    chunk_time_interval=>5);
-NOTICE:  adding not-null constraint to column "a"
-        create_hypertable        
----------------------------------
- (10,public,test_weird_type_i,t)
-(1 row)
-
-INSERT INTO test_weird_type_i VALUES ('{"time":"0"}'), ('{"time":"5"}');
-SELECT * FROM test.show_subtables('test_weird_type_i');
-                  Child                   | Tablespace 
-------------------------------------------+------------
- _timescaledb_internal._hyper_10_32_chunk | 
- _timescaledb_internal._hyper_10_33_chunk | 
-(2 rows)
-
-SELECT show_chunks('test_weird_type_i', older_than=>5);
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_10_32_chunk
-(1 row)
-
-SELECT show_chunks('test_weird_type_i', older_than=>10);
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_10_32_chunk
- _timescaledb_internal._hyper_10_33_chunk
-(2 rows)
-
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'test_weird_type_i\', older_than=>5)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'test_weird_type_i\', older_than => 5)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT * FROM test.show_subtables('test_weird_type_i');
-                  Child                   | Tablespace 
-------------------------------------------+------------
- _timescaledb_internal._hyper_10_33_chunk | 
-(1 row)
-
-SELECT show_chunks('test_weird_type_i', older_than=>5);
- show_chunks 
--------------
-(0 rows)
-
-SELECT show_chunks('test_weird_type_i', older_than=>10);
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_10_33_chunk
-(1 row)
-
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'test_weird_type_i\', older_than=>10)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'test_weird_type_i\', older_than => 10)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-SELECT * FROM test.show_subtables('test_weird_type_i');
- Child | Tablespace 
--------+------------
-(0 rows)
-
-SELECT show_chunks('test_weird_type_i', older_than=>10);
- show_chunks 
--------------
-(0 rows)
-
-DROP TABLE test_weird_type_i CASCADE;
-\c  :TEST_DBNAME :ROLE_SUPERUSER
-ALTER TABLE drop_chunk_test2 OWNER TO :ROLE_DEFAULT_PERM_USER_2;
---drop chunks 3 will have a chunk we a dependent object (a view)
---we create the dependent object now
-INSERT INTO PUBLIC.drop_chunk_test3 VALUES(1, 1.0, 'dev1');
-SELECT c.schema_name as chunk_schema, c.table_name as chunk_table
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-WHERE h.schema_name = 'public' AND h.table_name = 'drop_chunk_test3'
-ORDER BY c.id \gset
-create view dependent_view as SELECT * FROM :"chunk_schema".:"chunk_table";
-create view dependent_view2 as SELECT * FROM :"chunk_schema".:"chunk_table";
-ALTER TABLE drop_chunk_test3 OWNER TO :ROLE_DEFAULT_PERM_USER_2;
-\c  :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
-\set ON_ERROR_STOP 0
-SELECT drop_chunks('drop_chunk_test1', older_than=>4, newer_than=>3);
-ERROR:  must be owner of hypertable "drop_chunk_test1"
---works with modified owner tables
--- show_chunks and drop_chunks output should be the same
-\set QUERY1 'SELECT show_chunks(\'drop_chunk_test2\', older_than=>4, newer_than=>3)::NAME'
-\set QUERY2 'SELECT drop_chunks(\'drop_chunk_test2\', older_than=>4, newer_than=>3)::NAME'
-\set ECHO errors
- Different Rows | Total Rows from Query 1 | Total Rows from Query 2 
-----------------+-------------------------+-------------------------
-              0 |                       1 |                       1
-(1 row)
-
-\set VERBOSITY default
---this fails because there are dependent objects
-SELECT drop_chunks('drop_chunk_test3', older_than=>100);
-ERROR:  cannot drop table _timescaledb_internal._hyper_3_34_chunk because other objects depend on it
-DETAIL:  view dependent_view depends on table _timescaledb_internal._hyper_3_34_chunk
-view dependent_view2 depends on table _timescaledb_internal._hyper_3_34_chunk
-HINT:  Use DROP ... to drop the dependent objects.
-\set VERBOSITY terse
-\c  :TEST_DBNAME :ROLE_SUPERUSER
-DROP VIEW dependent_view;
-DROP VIEW dependent_view2;
-\c  :TEST_DBNAME :ROLE_DEFAULT_PERM_USER_2
-\set ON_ERROR_STOP 1
---drop chunks from hypertable with same name in different schema
--- order of schema in search_path matters --
-\c :TEST_DBNAME :ROLE_SUPERUSER
-drop table chunk_id_from_relid_test;
-drop table drop_chunk_test1;
-drop table drop_chunk_test2;
-drop table drop_chunk_test3;
-CREATE SCHEMA try_schema;
-CREATE SCHEMA test1;
-CREATE SCHEMA test2;
-CREATE SCHEMA test3;
-GRANT CREATE ON SCHEMA try_schema, test1, test2, test3 TO :ROLE_DEFAULT_PERM_USER;
-GRANT USAGE ON SCHEMA try_schema, test1, test2, test3 TO :ROLE_DEFAULT_PERM_USER;
-SET ROLE :ROLE_DEFAULT_PERM_USER;
-CREATE TABLE try_schema.drop_chunk_test_date(time date, temp float8, device_id text);
-SELECT create_hypertable('try_schema.drop_chunk_test_date', 'time', chunk_time_interval => interval '1 day', create_default_indexes=>false);
-NOTICE:  adding not-null constraint to column "time"
-           create_hypertable            
-----------------------------------------
- (11,try_schema,drop_chunk_test_date,t)
-(1 row)
-
-INSERT INTO public.drop_chunk_test_date VALUES( '2020-01-10', 100, 'hello');
-INSERT INTO try_schema.drop_chunk_test_date VALUES( '2020-01-10', 100, 'hello');
-set search_path to try_schema, test1, test2, test3, public;
-SELECT show_chunks('public.drop_chunk_test_date', older_than=>'1 day'::interval);
-               show_chunks               
------------------------------------------
- _timescaledb_internal._hyper_6_35_chunk
-(1 row)
-
-SELECT show_chunks('try_schema.drop_chunk_test_date', older_than=>'1 day'::interval);
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_11_36_chunk
-(1 row)
-
-SELECT drop_chunks('drop_chunk_test_date', older_than=> '1 day'::interval);
-               drop_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_11_36_chunk
-(1 row)
-
--- test drop chunks across two tables within the same schema
-CREATE TABLE test1.hyper1 (time bigint, temp float);
-CREATE TABLE test1.hyper2 (time bigint, temp float);
-SELECT create_hypertable('test1.hyper1', 'time', chunk_time_interval => 10);
-NOTICE:  adding not-null constraint to column "time"
-  create_hypertable  
----------------------
- (12,test1,hyper1,t)
-(1 row)
-
-SELECT create_hypertable('test1.hyper2', 'time', chunk_time_interval => 10);
-NOTICE:  adding not-null constraint to column "time"
-  create_hypertable  
----------------------
- (13,test1,hyper2,t)
-(1 row)
-
-INSERT INTO test1.hyper1 VALUES (10, 0.5);
-INSERT INTO test1.hyper2 VALUES (10, 0.7);
-SELECT show_chunks('test1.hyper1');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_12_37_chunk
-(1 row)
-
-SELECT show_chunks('test1.hyper2');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_13_38_chunk
-(1 row)
-
--- test drop chunks for given table name across all schemas
-CREATE TABLE test2.hyperx (time bigint, temp float);
-CREATE TABLE test3.hyperx (time bigint, temp float);
-SELECT create_hypertable('test2.hyperx', 'time', chunk_time_interval => 10);
-NOTICE:  adding not-null constraint to column "time"
-  create_hypertable  
----------------------
- (14,test2,hyperx,t)
-(1 row)
-
-SELECT create_hypertable('test3.hyperx', 'time', chunk_time_interval => 10);
-NOTICE:  adding not-null constraint to column "time"
-  create_hypertable  
----------------------
- (15,test3,hyperx,t)
-(1 row)
-
-INSERT INTO test2.hyperx VALUES (10, 0.5);
-INSERT INTO test3.hyperx VALUES (10, 0.7);
-SELECT show_chunks('test2.hyperx');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_14_39_chunk
-(1 row)
-
-SELECT show_chunks('test3.hyperx');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_15_40_chunk
-(1 row)
-
--- This will only drop from one of the tables since the one that is
--- first in the search path will hide the other one.
-SELECT drop_chunks('hyperx', older_than => 100);
-               drop_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_14_39_chunk
-(1 row)
-
-SELECT show_chunks('test2.hyperx');
- show_chunks 
--------------
-(0 rows)
-
-SELECT show_chunks('test3.hyperx');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_15_40_chunk
-(1 row)
-
--- Check CTAS behavior when internal ALTER TABLE gets fired
-CREATE TABLE PUBLIC.drop_chunk_test4(time bigint, temp float8, device_id text);
-CREATE TABLE drop_chunks_table_id AS SELECT hypertable_id
-      FROM create_hypertable('public.drop_chunk_test4', 'time', chunk_time_interval => 1);
-NOTICE:  adding not-null constraint to column "time"
--- TEST for internal api that drops a single chunk
--- this drops the table and removes entry from the catalog.
--- does not affect any materialized cagg data
-INSERT INTO test1.hyper1 VALUES (20, 0.5);
-SELECT chunk_schema as "CHSCHEMA",  chunk_name as "CHNAME"
-FROM timescaledb_information.chunks
-WHERE hypertable_name = 'hyper1' and hypertable_schema = 'test1'
-ORDER BY chunk_name ;
-       CHSCHEMA        |       CHNAME       
------------------------+--------------------
- _timescaledb_internal | _hyper_12_37_chunk
- _timescaledb_internal | _hyper_12_41_chunk
-(2 rows)
-
---drop one of the chunks
-SELECT chunk_schema || '.' || chunk_name as "CHNAME"
-FROM timescaledb_information.chunks
-WHERE hypertable_name = 'hyper1' and hypertable_schema = 'test1'
-ORDER BY chunk_name LIMIT 1
-\gset
-SELECT  _timescaledb_internal.drop_chunk(:'CHNAME');
- drop_chunk 
-------------
- t
-(1 row)
-
-SELECT chunk_schema as "CHSCHEMA",  chunk_name as "CHNAME"
-FROM timescaledb_information.chunks
-WHERE hypertable_name = 'hyper1' and hypertable_schema = 'test1'
-ORDER BY chunk_name ;
-       CHSCHEMA        |       CHNAME       
------------------------+--------------------
- _timescaledb_internal | _hyper_12_41_chunk
-(1 row)
-
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/index.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/index.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/index.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/index.out	2023-10-28 03:32:04.761080314 +0000
@@ -444,7 +444,8 @@
  Index Scan using index_expr_test_expr_idx on public.index_expr_test
    Output: "time", temp, meta
    Index Cond: ((index_expr_test.meta ->> 'field'::text) = 'value1'::text)
-(3 rows)
+ Query Identifier: 3628514090227711857
+(4 rows)
 
 SELECT * FROM index_expr_test WHERE meta ->> 'field' = 'value1';
              time             | temp |        meta         
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/create_hypertable.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/create_hypertable.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/create_hypertable.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/create_hypertable.out	2023-10-28 03:32:10.725004124 +0000
@@ -12,997 +12,4 @@
 ERROR:  hypertable "test_table" not found
 \set ON_ERROR_STOP 1
 \dt "test_schema".*
-                  List of relations
-   Schema    |    Name    | Type  |       Owner       
--------------+------------+-------+-------------------
- test_schema | test_table | table | default_perm_user
-(1 row)
-
-create table test_schema.test_table_no_not_null(time BIGINT, device_id text);
-\set ON_ERROR_STOP 0
--- Permission denied with unprivileged role
-SET ROLE :ROLE_DEFAULT_PERM_USER_2;
-select * from create_hypertable('test_schema.test_table_no_not_null', 'time', 'device_id', 2, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
-ERROR:  permission denied for schema test_schema at character 33
--- CREATE on schema is not enough
-SET ROLE :ROLE_DEFAULT_PERM_USER;
-GRANT ALL ON SCHEMA test_schema TO :ROLE_DEFAULT_PERM_USER_2;
-SET ROLE :ROLE_DEFAULT_PERM_USER_2;
-select * from create_hypertable('test_schema.test_table_no_not_null', 'time', 'device_id', 2, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
-ERROR:  must be owner of hypertable "test_table_no_not_null"
-\set ON_ERROR_STOP 1
--- Should work with when granted table owner role
-RESET ROLE;
-GRANT :ROLE_DEFAULT_PERM_USER TO :ROLE_DEFAULT_PERM_USER_2;
-SET ROLE :ROLE_DEFAULT_PERM_USER_2;
-select * from create_hypertable('test_schema.test_table_no_not_null', 'time', 'device_id', 2, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'));
-NOTICE:  adding not-null constraint to column "time"
- hypertable_id | schema_name |       table_name       | created 
----------------+-------------+------------------------+---------
-             1 | test_schema | test_table_no_not_null | t
-(1 row)
-
-\set ON_ERROR_STOP 0
-insert into test_schema.test_table_no_not_null (device_id) VALUES('foo');
-ERROR:  NULL value in column "time" violates not-null constraint
-\set ON_ERROR_STOP 1
-insert into test_schema.test_table_no_not_null (time, device_id) VALUES(1, 'foo');
-RESET ROLE;
-SET ROLE :ROLE_DEFAULT_PERM_USER;
-\set ON_ERROR_STOP 0
--- No permissions on associated schema should fail
-select * from create_hypertable('test_schema.test_table', 'time', 'device_id', 2, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'), associated_schema_name => 'chunk_schema');
-ERROR:  permissions denied: cannot create chunks in schema "chunk_schema"
-\set ON_ERROR_STOP 1
--- Granting permissions on chunk_schema should make things work
-RESET ROLE;
-GRANT CREATE ON SCHEMA chunk_schema TO :ROLE_DEFAULT_PERM_USER;
-SET ROLE :ROLE_DEFAULT_PERM_USER;
-select * from create_hypertable('test_schema.test_table', 'time', 'device_id', 2, chunk_time_interval=>_timescaledb_internal.interval_to_usec('1 month'), associated_schema_name => 'chunk_schema');
-NOTICE:  adding not-null constraint to column "time"
- hypertable_id | schema_name | table_name | created 
----------------+-------------+------------+---------
-             2 | test_schema | test_table | t
-(1 row)
-
--- Check that the insert block trigger exists
-SELECT * FROM test.show_triggers('test_schema.test_table');
-      Trigger      | Type |               Function               
--------------------+------+--------------------------------------
- ts_insert_blocker |    7 | _timescaledb_internal.insert_blocker
-(1 row)
-
-SELECT * FROM _timescaledb_internal.get_create_command('test_table');
-                                                                get_create_command                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------
- SELECT create_hypertable('test_schema.test_table', 'time', 'device_id', 2, chunk_time_interval => 2592000000000, create_default_indexes=>FALSE);
-(1 row)
-
---test adding one more closed dimension
-select add_dimension('test_schema.test_table', 'location', 4);
-             add_dimension             
----------------------------------------
- (5,test_schema,test_table,location,t)
-(1 row)
-
-select * from _timescaledb_catalog.hypertable where table_name = 'test_table';
- id | schema_name | table_name | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
-  2 | test_schema | test_table | chunk_schema           | _hyper_2                |              3 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-select * from _timescaledb_catalog.dimension;
- id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema | partitioning_func  | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-------------+---------+------------+--------------------------+--------------------+-----------------+--------------------------+-------------------------+------------------
-  1 |             1 | time        | bigint      | t       |            |                          |                    |   2592000000000 |                          |                         | 
-  2 |             1 | device_id   | text        | f       |          2 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-  3 |             2 | time        | bigint      | t       |            |                          |                    |   2592000000000 |                          |                         | 
-  4 |             2 | device_id   | text        | f       |          2 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-  5 |             2 | location    | text        | f       |          4 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-(5 rows)
-
---test that we can change the number of partitions and that 1 is allowed
-SELECT set_number_partitions('test_schema.test_table', 1, 'location');
- set_number_partitions 
------------------------
- 
-(1 row)
-
-select * from _timescaledb_catalog.dimension WHERE column_name = 'location';
- id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema | partitioning_func  | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-------------+---------+------------+--------------------------+--------------------+-----------------+--------------------------+-------------------------+------------------
-  5 |             2 | location    | text        | f       |          1 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-(1 row)
-
-SELECT set_number_partitions('test_schema.test_table', 2, 'location');
- set_number_partitions 
------------------------
- 
-(1 row)
-
-select * from _timescaledb_catalog.dimension WHERE column_name = 'location';
- id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema | partitioning_func  | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-------------+---------+------------+--------------------------+--------------------+-----------------+--------------------------+-------------------------+------------------
-  5 |             2 | location    | text        | f       |          2 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-(1 row)
-
-\set ON_ERROR_STOP 0
---must give an explicit dimension when there are multiple space dimensions
-SELECT set_number_partitions('test_schema.test_table', 3);
-ERROR:  hypertable "test_table" has multiple space dimensions
---too few
-SELECT set_number_partitions('test_schema.test_table', 0, 'location');
-ERROR:  invalid number of partitions: must be between 1 and 32767
--- Too many
-SELECT set_number_partitions('test_schema.test_table', 32768, 'location');
-ERROR:  invalid number of partitions: must be between 1 and 32767
--- get_create_command only works on tables w/ 1 or 2 dimensions
-SELECT * FROM _timescaledb_internal.get_create_command('test_table');
-ERROR:  get_create_command only supports hypertables with up to 2 dimensions
-\set ON_ERROR_STOP 1
---test adding one more open dimension
-select add_dimension('test_schema.test_table', 'id', chunk_time_interval => 1000);
-NOTICE:  adding not-null constraint to column "id"
-          add_dimension          
----------------------------------
- (6,test_schema,test_table,id,t)
-(1 row)
-
-select * from _timescaledb_catalog.hypertable where table_name = 'test_table';
- id | schema_name | table_name | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
-  2 | test_schema | test_table | chunk_schema           | _hyper_2                |              4 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-select * from _timescaledb_catalog.dimension;
- id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema | partitioning_func  | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-------------+---------+------------+--------------------------+--------------------+-----------------+--------------------------+-------------------------+------------------
-  1 |             1 | time        | bigint      | t       |            |                          |                    |   2592000000000 |                          |                         | 
-  2 |             1 | device_id   | text        | f       |          2 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-  3 |             2 | time        | bigint      | t       |            |                          |                    |   2592000000000 |                          |                         | 
-  4 |             2 | device_id   | text        | f       |          2 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-  5 |             2 | location    | text        | f       |          2 | _timescaledb_internal    | get_partition_hash |                 |                          |                         | 
-  6 |             2 | id          | integer     | t       |            |                          |                    |            1000 |                          |                         | 
-(6 rows)
-
--- Test add_dimension: can use interval types for TIMESTAMPTZ columns
-CREATE TABLE dim_test_time(time TIMESTAMPTZ, time2 TIMESTAMPTZ, time3 BIGINT, temp float8, device int, location int);
-SELECT create_hypertable('dim_test_time', 'time');
-NOTICE:  adding not-null constraint to column "time"
-     create_hypertable      
-----------------------------
- (3,public,dim_test_time,t)
-(1 row)
-
-SELECT add_dimension('dim_test_time', 'time2', chunk_time_interval => INTERVAL '1 day');
-NOTICE:  adding not-null constraint to column "time2"
-          add_dimension           
-----------------------------------
- (8,public,dim_test_time,time2,t)
-(1 row)
-
--- Test add_dimension: only integral should work on BIGINT columns
-\set ON_ERROR_STOP 0
-SELECT add_dimension('dim_test_time', 'time3', chunk_time_interval => INTERVAL '1 day');
-ERROR:  invalid interval type for bigint dimension
--- string is not a valid type
-SELECT add_dimension('dim_test_time', 'time3', chunk_time_interval => 'foo'::TEXT);
-ERROR:  invalid interval type for bigint dimension
-\set ON_ERROR_STOP 1
-SELECT add_dimension('dim_test_time', 'time3', chunk_time_interval => 500);
-NOTICE:  adding not-null constraint to column "time3"
-          add_dimension           
-----------------------------------
- (9,public,dim_test_time,time3,t)
-(1 row)
-
--- Test add_dimension: integrals should work on TIMESTAMPTZ columns
-CREATE TABLE dim_test_time2(time TIMESTAMPTZ, time2 TIMESTAMPTZ, temp float8, device int, location int);
-SELECT create_hypertable('dim_test_time2', 'time');
-NOTICE:  adding not-null constraint to column "time"
-      create_hypertable      
------------------------------
- (4,public,dim_test_time2,t)
-(1 row)
-
-SELECT add_dimension('dim_test_time2', 'time2', chunk_time_interval => 500);
-WARNING:  unexpected interval: smaller than one second
-NOTICE:  adding not-null constraint to column "time2"
-           add_dimension            
-------------------------------------
- (11,public,dim_test_time2,time2,t)
-(1 row)
-
---adding a dimension twice should not fail with 'if_not_exists'
-SELECT add_dimension('dim_test_time2', 'time2', chunk_time_interval => 500, if_not_exists => true);
-NOTICE:  column "time2" is already a dimension, skipping
-           add_dimension            
-------------------------------------
- (11,public,dim_test_time2,time2,f)
-(1 row)
-
-\set ON_ERROR_STOP 0
---adding on a non-hypertable
-CREATE TABLE not_hypertable(time TIMESTAMPTZ, temp float8, device int, location int);
-SELECT add_dimension('not_hypertable', 'time', chunk_time_interval => 500);
-ERROR:  table "not_hypertable" is not a hypertable
---adding a non-exist column
-SELECT add_dimension('test_schema.test_table', 'nope', 2);
-ERROR:  column "nope" does not exist
---adding the same dimension twice should fail
-select add_dimension('test_schema.test_table', 'location', 2);
-ERROR:  column "location" is already a dimension
---adding dimension with both number_partitions and chunk_time_interval should fail
-select add_dimension('test_schema.test_table', 'id2', number_partitions => 2, chunk_time_interval => 1000);
-ERROR:  cannot specify both the number of partitions and an interval
-\set ON_ERROR_STOP 1
--- test adding a new dimension on a non-empty table
-CREATE TABLE dim_test(time TIMESTAMPTZ, device int);
-SELECT create_hypertable('dim_test', 'time', chunk_time_interval => INTERVAL '1 day');
-NOTICE:  adding not-null constraint to column "time"
-   create_hypertable   
------------------------
- (5,public,dim_test,t)
-(1 row)
-
-CREATE VIEW dim_test_slices AS
-SELECT c.id AS chunk_id, c.hypertable_id, ds.dimension_id, cc.dimension_slice_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN _timescaledb_catalog.dimension td ON (h.id = td.hypertable_id)
-INNER JOIN _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = td.id)
-INNER JOIN _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.table_name = 'dim_test'
-ORDER BY c.id, ds.dimension_id;
-INSERT INTO dim_test VALUES ('2004-10-10 00:00:00+00', 1);
-INSERT INTO dim_test VALUES ('2004-10-20 00:00:00+00', 2);
-SELECT * FROM dim_test_slices;
- chunk_id | hypertable_id | dimension_id | dimension_slice_id |     chunk_schema      |   chunk_table    |   range_start    |    range_end     
-----------+---------------+--------------+--------------------+-----------------------+------------------+------------------+------------------
-        2 |             5 |           12 |                  3 | _timescaledb_internal | _hyper_5_2_chunk | 1097366400000000 | 1097452800000000
-        3 |             5 |           12 |                  4 | _timescaledb_internal | _hyper_5_3_chunk | 1098230400000000 | 1098316800000000
-(2 rows)
-
-SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_5_2_chunk');
-  Constraint  | Type | Columns | Index |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
---------------+------+---------+-------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
- constraint_3 | c    | {time}  | -     | (("time" >= 'Sat Oct 09 17:00:00 2004 PDT'::timestamp with time zone) AND ("time" < 'Sun Oct 10 17:00:00 2004 PDT'::timestamp with time zone)) | f          | f        | t
-(1 row)
-
-SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_5_3_chunk');
-  Constraint  | Type | Columns | Index |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
---------------+------+---------+-------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
- constraint_4 | c    | {time}  | -     | (("time" >= 'Tue Oct 19 17:00:00 2004 PDT'::timestamp with time zone) AND ("time" < 'Wed Oct 20 17:00:00 2004 PDT'::timestamp with time zone)) | f          | f        | t
-(1 row)
-
--- add dimension to the existing chunks by adding -inf/inf dimension slices
-SELECT add_dimension('dim_test', 'device', 2);
-         add_dimension         
--------------------------------
- (13,public,dim_test,device,t)
-(1 row)
-
-SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_5_2_chunk');
-  Constraint  | Type | Columns | Index |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
---------------+------+---------+-------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
- constraint_3 | c    | {time}  | -     | (("time" >= 'Sat Oct 09 17:00:00 2004 PDT'::timestamp with time zone) AND ("time" < 'Sun Oct 10 17:00:00 2004 PDT'::timestamp with time zone)) | f          | f        | t
-(1 row)
-
-SELECT * FROM test.show_constraints('_timescaledb_internal._hyper_5_3_chunk');
-  Constraint  | Type | Columns | Index |                                                                      Expr                                                                      | Deferrable | Deferred | Validated 
---------------+------+---------+-------+------------------------------------------------------------------------------------------------------------------------------------------------+------------+----------+-----------
- constraint_4 | c    | {time}  | -     | (("time" >= 'Tue Oct 19 17:00:00 2004 PDT'::timestamp with time zone) AND ("time" < 'Wed Oct 20 17:00:00 2004 PDT'::timestamp with time zone)) | f          | f        | t
-(1 row)
-
-SELECT * FROM dim_test_slices;
- chunk_id | hypertable_id | dimension_id | dimension_slice_id |     chunk_schema      |   chunk_table    |     range_start      |      range_end      
-----------+---------------+--------------+--------------------+-----------------------+------------------+----------------------+---------------------
-        2 |             5 |           12 |                  3 | _timescaledb_internal | _hyper_5_2_chunk |     1097366400000000 |    1097452800000000
-        2 |             5 |           13 |                  5 | _timescaledb_internal | _hyper_5_2_chunk | -9223372036854775808 | 9223372036854775807
-        3 |             5 |           12 |                  4 | _timescaledb_internal | _hyper_5_3_chunk |     1098230400000000 |    1098316800000000
-        3 |             5 |           13 |                  5 | _timescaledb_internal | _hyper_5_3_chunk | -9223372036854775808 | 9223372036854775807
-(4 rows)
-
--- newer chunks have proper dimension slices range
-INSERT INTO dim_test VALUES ('2004-10-30 00:00:00+00', 3);
-SELECT * FROM dim_test_slices;
- chunk_id | hypertable_id | dimension_id | dimension_slice_id |     chunk_schema      |   chunk_table    |     range_start      |      range_end      
-----------+---------------+--------------+--------------------+-----------------------+------------------+----------------------+---------------------
-        2 |             5 |           12 |                  3 | _timescaledb_internal | _hyper_5_2_chunk |     1097366400000000 |    1097452800000000
-        2 |             5 |           13 |                  5 | _timescaledb_internal | _hyper_5_2_chunk | -9223372036854775808 | 9223372036854775807
-        3 |             5 |           12 |                  4 | _timescaledb_internal | _hyper_5_3_chunk |     1098230400000000 |    1098316800000000
-        3 |             5 |           13 |                  5 | _timescaledb_internal | _hyper_5_3_chunk | -9223372036854775808 | 9223372036854775807
-        4 |             5 |           12 |                  6 | _timescaledb_internal | _hyper_5_4_chunk |     1099094400000000 |    1099180800000000
-        4 |             5 |           13 |                  7 | _timescaledb_internal | _hyper_5_4_chunk |           1073741823 | 9223372036854775807
-(6 rows)
-
-SELECT * FROM dim_test ORDER BY time;
-             time             | device 
-------------------------------+--------
- Sat Oct 09 17:00:00 2004 PDT |      1
- Tue Oct 19 17:00:00 2004 PDT |      2
- Fri Oct 29 17:00:00 2004 PDT |      3
-(3 rows)
-
-DROP VIEW dim_test_slices;
-DROP TABLE dim_test;
--- test add_dimension() with existing data on table with space partitioning
-CREATE TABLE dim_test(time TIMESTAMPTZ, device int, data int);
-SELECT create_hypertable('dim_test', 'time', 'device', 2, chunk_time_interval => INTERVAL '1 day');
-NOTICE:  adding not-null constraint to column "time"
-   create_hypertable   
------------------------
- (6,public,dim_test,t)
-(1 row)
-
-CREATE VIEW dim_test_slices AS
-SELECT c.id AS chunk_id, c.hypertable_id, ds.dimension_id, cc.dimension_slice_id, c.schema_name AS chunk_schema, c.table_name AS chunk_table, ds.range_start, ds.range_end
-FROM _timescaledb_catalog.chunk c
-INNER JOIN _timescaledb_catalog.hypertable h ON (c.hypertable_id = h.id)
-INNER JOIN _timescaledb_catalog.dimension td ON (h.id = td.hypertable_id)
-INNER JOIN _timescaledb_catalog.dimension_slice ds ON (ds.dimension_id = td.id)
-INNER JOIN _timescaledb_catalog.chunk_constraint cc ON (cc.dimension_slice_id = ds.id AND cc.chunk_id = c.id)
-WHERE h.table_name = 'dim_test'
-ORDER BY c.id, ds.dimension_id;
-INSERT INTO dim_test VALUES ('2004-10-10 00:00:00+00', 1, 3);
-INSERT INTO dim_test VALUES ('2004-10-20 00:00:00+00', 2, 2);
-SELECT * FROM dim_test_slices;
- chunk_id | hypertable_id | dimension_id | dimension_slice_id |     chunk_schema      |   chunk_table    |     range_start      |      range_end      
-----------+---------------+--------------+--------------------+-----------------------+------------------+----------------------+---------------------
-        5 |             6 |           14 |                  8 | _timescaledb_internal | _hyper_6_5_chunk |     1097366400000000 |    1097452800000000
-        5 |             6 |           15 |                  9 | _timescaledb_internal | _hyper_6_5_chunk | -9223372036854775808 |          1073741823
-        6 |             6 |           14 |                 10 | _timescaledb_internal | _hyper_6_6_chunk |     1098230400000000 |    1098316800000000
-        6 |             6 |           15 |                 11 | _timescaledb_internal | _hyper_6_6_chunk |           1073741823 | 9223372036854775807
-(4 rows)
-
--- new dimension slice will cover full range on existing chunks
-SELECT add_dimension('dim_test', 'data', 1);
-        add_dimension        
------------------------------
- (16,public,dim_test,data,t)
-(1 row)
-
-SELECT * FROM dim_test_slices;
- chunk_id | hypertable_id | dimension_id | dimension_slice_id |     chunk_schema      |   chunk_table    |     range_start      |      range_end      
-----------+---------------+--------------+--------------------+-----------------------+------------------+----------------------+---------------------
-        5 |             6 |           14 |                  8 | _timescaledb_internal | _hyper_6_5_chunk |     1097366400000000 |    1097452800000000
-        5 |             6 |           15 |                  9 | _timescaledb_internal | _hyper_6_5_chunk | -9223372036854775808 |          1073741823
-        5 |             6 |           16 |                 12 | _timescaledb_internal | _hyper_6_5_chunk | -9223372036854775808 | 9223372036854775807
-        6 |             6 |           14 |                 10 | _timescaledb_internal | _hyper_6_6_chunk |     1098230400000000 |    1098316800000000
-        6 |             6 |           15 |                 11 | _timescaledb_internal | _hyper_6_6_chunk |           1073741823 | 9223372036854775807
-        6 |             6 |           16 |                 12 | _timescaledb_internal | _hyper_6_6_chunk | -9223372036854775808 | 9223372036854775807
-(6 rows)
-
-INSERT INTO dim_test VALUES ('2004-10-30 00:00:00+00', 3, 1);
-SELECT * FROM dim_test_slices;
- chunk_id | hypertable_id | dimension_id | dimension_slice_id |     chunk_schema      |   chunk_table    |     range_start      |      range_end      
-----------+---------------+--------------+--------------------+-----------------------+------------------+----------------------+---------------------
-        5 |             6 |           14 |                  8 | _timescaledb_internal | _hyper_6_5_chunk |     1097366400000000 |    1097452800000000
-        5 |             6 |           15 |                  9 | _timescaledb_internal | _hyper_6_5_chunk | -9223372036854775808 |          1073741823
-        5 |             6 |           16 |                 12 | _timescaledb_internal | _hyper_6_5_chunk | -9223372036854775808 | 9223372036854775807
-        6 |             6 |           14 |                 10 | _timescaledb_internal | _hyper_6_6_chunk |     1098230400000000 |    1098316800000000
-        6 |             6 |           15 |                 11 | _timescaledb_internal | _hyper_6_6_chunk |           1073741823 | 9223372036854775807
-        6 |             6 |           16 |                 12 | _timescaledb_internal | _hyper_6_6_chunk | -9223372036854775808 | 9223372036854775807
-        7 |             6 |           14 |                 13 | _timescaledb_internal | _hyper_6_7_chunk |     1099094400000000 |    1099180800000000
-        7 |             6 |           15 |                 11 | _timescaledb_internal | _hyper_6_7_chunk |           1073741823 | 9223372036854775807
-        7 |             6 |           16 |                 12 | _timescaledb_internal | _hyper_6_7_chunk | -9223372036854775808 | 9223372036854775807
-(9 rows)
-
-SELECT * FROM dim_test ORDER BY time;
-             time             | device | data 
-------------------------------+--------+------
- Sat Oct 09 17:00:00 2004 PDT |      1 |    3
- Tue Oct 19 17:00:00 2004 PDT |      2 |    2
- Fri Oct 29 17:00:00 2004 PDT |      3 |    1
-(3 rows)
-
-DROP VIEW dim_test_slices;
-DROP TABLE dim_test;
--- should not fail on non-empty table with 'if_not_exists' in case the dimension exists
-select add_dimension('test_schema.test_table', 'location', 2, if_not_exists => true);
-NOTICE:  column "location" is already a dimension, skipping
-             add_dimension             
----------------------------------------
- (5,test_schema,test_table,location,f)
-(1 row)
-
---test partitioning in only time dimension
-create table test_schema.test_1dim(time timestamp, temp float);
-select create_hypertable('test_schema.test_1dim', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-      create_hypertable      
------------------------------
- (7,test_schema,test_1dim,t)
-(1 row)
-
-SELECT * FROM _timescaledb_internal.get_create_command('test_1dim');
-                                                       get_create_command                                                       
---------------------------------------------------------------------------------------------------------------------------------
- SELECT create_hypertable('test_schema.test_1dim', 'time', chunk_time_interval => 604800000000, create_default_indexes=>FALSE);
-(1 row)
-
-\dt "test_schema".*
-                        List of relations
-   Schema    |          Name          | Type  |       Owner       
--------------+------------------------+-------+-------------------
- test_schema | test_1dim              | table | default_perm_user
- test_schema | test_table             | table | default_perm_user
- test_schema | test_table_no_not_null | table | default_perm_user
-(3 rows)
-
-select create_hypertable('test_schema.test_1dim', 'time', if_not_exists => true);
-NOTICE:  table "test_1dim" is already a hypertable, skipping
-      create_hypertable      
------------------------------
- (7,test_schema,test_1dim,f)
-(1 row)
-
--- Should error when creating again without if_not_exists set to true
-\set ON_ERROR_STOP 0
-select create_hypertable('test_schema.test_1dim', 'time');
-ERROR:  table "test_1dim" is already a hypertable
-\set ON_ERROR_STOP 1
--- if_not_exist should also work with data in the hypertable
-insert into test_schema.test_1dim VALUES ('2004-10-19 10:23:54+02', 1.0);
-select create_hypertable('test_schema.test_1dim', 'time', if_not_exists => true);
-NOTICE:  table "test_1dim" is already a hypertable, skipping
-      create_hypertable      
------------------------------
- (7,test_schema,test_1dim,f)
-(1 row)
-
--- Should error when creating again without if_not_exists set to true
-\set ON_ERROR_STOP 0
-select create_hypertable('test_schema.test_1dim', 'time');
-ERROR:  table "test_1dim" is already a hypertable
-\set ON_ERROR_STOP 1
--- Test partitioning functions
-CREATE OR REPLACE FUNCTION invalid_partfunc(source integer)
-    RETURNS INTEGER LANGUAGE PLPGSQL IMMUTABLE AS
-$BODY$
-BEGIN
-    RETURN NULL;
-END
-$BODY$;
-CREATE OR REPLACE FUNCTION time_partfunc(source text)
-    RETURNS TIMESTAMPTZ LANGUAGE PLPGSQL IMMUTABLE AS
-$BODY$
-BEGIN
-    RETURN timezone('UTC', to_timestamp(source));
-END
-$BODY$;
-CREATE TABLE test_schema.test_invalid_func(time timestamptz, temp float8, device text);
-\set ON_ERROR_STOP 0
--- should fail due to invalid signature
-SELECT create_hypertable('test_schema.test_invalid_func', 'time', 'device', 2, partitioning_func => 'invalid_partfunc');
-ERROR:  invalid partitioning function
-SELECT create_hypertable('test_schema.test_invalid_func', 'time');
-NOTICE:  adding not-null constraint to column "time"
-          create_hypertable          
--------------------------------------
- (8,test_schema,test_invalid_func,t)
-(1 row)
-
--- should also fail due to invalid signature
-SELECT add_dimension('test_schema.test_invalid_func', 'device', 2, partitioning_func => 'invalid_partfunc');
-ERROR:  invalid partitioning function
-\set ON_ERROR_STOP 1
--- Test open-dimension function
-CREATE TABLE test_schema.open_dim_part_func(time text, temp float8, device text, event_time text);
-\set ON_ERROR_STOP 0
--- should fail due to invalid signature
-SELECT create_hypertable('test_schema.open_dim_part_func', 'time', time_partitioning_func => 'invalid_partfunc');
-ERROR:  invalid partitioning function
-\set ON_ERROR_STOP 1
-SELECT create_hypertable('test_schema.open_dim_part_func', 'time', time_partitioning_func => 'time_partfunc');
-NOTICE:  adding not-null constraint to column "time"
-          create_hypertable           
---------------------------------------
- (9,test_schema,open_dim_part_func,t)
-(1 row)
-
-\set ON_ERROR_STOP 0
--- should fail due to invalid signature
-SELECT add_dimension('test_schema.open_dim_part_func', 'event_time', chunk_time_interval => interval '1 day', partitioning_func => 'invalid_partfunc');
-ERROR:  invalid partitioning function
-\set ON_ERROR_STOP 1
-SELECT add_dimension('test_schema.open_dim_part_func', 'event_time', chunk_time_interval => interval '1 day', partitioning_func => 'time_partfunc');
-NOTICE:  adding not-null constraint to column "event_time"
-                  add_dimension                   
---------------------------------------------------
- (20,test_schema,open_dim_part_func,event_time,t)
-(1 row)
-
---test data migration
-create table test_schema.test_migrate(time timestamp, temp float);
-insert into test_schema.test_migrate VALUES ('2004-10-19 10:23:54+02', 1.0), ('2004-12-19 10:23:54+02', 2.0);
-select * from only test_schema.test_migrate;
-           time           | temp 
---------------------------+------
- Tue Oct 19 10:23:54 2004 |    1
- Sun Dec 19 10:23:54 2004 |    2
-(2 rows)
-
-\set ON_ERROR_STOP 0
---should fail without migrate_data => true
-select create_hypertable('test_schema.test_migrate', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-ERROR:  table "test_migrate" is not empty
-\set ON_ERROR_STOP 1
-select create_hypertable('test_schema.test_migrate', 'time', migrate_data => true);
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-NOTICE:  migrating data to chunks
-        create_hypertable        
----------------------------------
- (10,test_schema,test_migrate,t)
-(1 row)
-
---there should be two new chunks
-select * from _timescaledb_catalog.hypertable where table_name = 'test_migrate';
- id | schema_name |  table_name  | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+--------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
- 10 | test_schema | test_migrate | _timescaledb_internal  | _hyper_10               |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-select * from _timescaledb_catalog.chunk;
- id | hypertable_id |      schema_name      |     table_name     | compressed_chunk_id | dropped | status | osm_chunk 
-----+---------------+-----------------------+--------------------+---------------------+---------+--------+-----------
-  1 |             1 | _timescaledb_internal | _hyper_1_1_chunk   |                     | f       |      0 | f
-  8 |             7 | _timescaledb_internal | _hyper_7_8_chunk   |                     | f       |      0 | f
-  9 |            10 | _timescaledb_internal | _hyper_10_9_chunk  |                     | f       |      0 | f
- 10 |            10 | _timescaledb_internal | _hyper_10_10_chunk |                     | f       |      0 | f
-(4 rows)
-
-select * from test_schema.test_migrate;
-           time           | temp 
---------------------------+------
- Tue Oct 19 10:23:54 2004 |    1
- Sun Dec 19 10:23:54 2004 |    2
-(2 rows)
-
---main table should now be empty
-select * from only test_schema.test_migrate;
- time | temp 
-------+------
-(0 rows)
-
-select * from only _timescaledb_internal._hyper_10_9_chunk;
-           time           | temp 
---------------------------+------
- Tue Oct 19 10:23:54 2004 |    1
-(1 row)
-
-select * from only _timescaledb_internal._hyper_10_10_chunk;
-           time           | temp 
---------------------------+------
- Sun Dec 19 10:23:54 2004 |    2
-(1 row)
-
-create table test_schema.test_migrate_empty(time timestamp, temp float);
-select create_hypertable('test_schema.test_migrate_empty', 'time', migrate_data => true);
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-           create_hypertable           
----------------------------------------
- (11,test_schema,test_migrate_empty,t)
-(1 row)
-
-CREATE TYPE test_type AS (time timestamp, temp float);
-CREATE TABLE test_table_of_type OF test_type;
-SELECT create_hypertable('test_table_of_type', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-        create_hypertable         
-----------------------------------
- (12,public,test_table_of_type,t)
-(1 row)
-
-INSERT INTO test_table_of_type VALUES ('2004-10-19 10:23:54+02', 1.0), ('2004-12-19 10:23:54+02', 2.0);
-\set ON_ERROR_STOP 0
-DROP TYPE test_type;
-ERROR:  cannot drop type test_type because other objects depend on it
-\set ON_ERROR_STOP 1
-DROP TYPE test_type CASCADE;
-NOTICE:  drop cascades to 3 other objects
-CREATE TABLE test_table_of_type (time timestamp, temp float);
-SELECT create_hypertable('test_table_of_type', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-        create_hypertable         
-----------------------------------
- (13,public,test_table_of_type,t)
-(1 row)
-
-INSERT INTO test_table_of_type VALUES ('2004-10-19 10:23:54+02', 1.0), ('2004-12-19 10:23:54+02', 2.0);
-CREATE TYPE test_type AS (time timestamp, temp float);
-ALTER TABLE test_table_of_type OF test_type;
-\set ON_ERROR_STOP 0
-DROP TYPE test_type;
-ERROR:  cannot drop type test_type because other objects depend on it
-\set ON_ERROR_STOP 1
-BEGIN;
-DROP TYPE test_type CASCADE;
-NOTICE:  drop cascades to 3 other objects
-ROLLBACK;
-ALTER TABLE test_table_of_type NOT OF;
-DROP TYPE test_type;
--- Reset GRANTS
-\c :TEST_DBNAME :ROLE_SUPERUSER
-REVOKE :ROLE_DEFAULT_PERM_USER FROM :ROLE_DEFAULT_PERM_USER_2;
--- Test custom partitioning functions
-CREATE OR REPLACE FUNCTION partfunc_not_immutable(source anyelement)
-    RETURNS INTEGER LANGUAGE PLPGSQL AS
-$BODY$
-BEGIN
-    RETURN _timescaledb_internal.get_partition_hash(source);
-END
-$BODY$;
-CREATE OR REPLACE FUNCTION partfunc_bad_return_type(source anyelement)
-    RETURNS BIGINT LANGUAGE PLPGSQL IMMUTABLE AS
-$BODY$
-BEGIN
-    RETURN _timescaledb_internal.get_partition_hash(source);
-END
-$BODY$;
-CREATE OR REPLACE FUNCTION partfunc_bad_arg_type(source text)
-    RETURNS INTEGER LANGUAGE PLPGSQL IMMUTABLE AS
-$BODY$
-BEGIN
-    RETURN _timescaledb_internal.get_partition_hash(source);
-END
-$BODY$;
-CREATE OR REPLACE FUNCTION partfunc_bad_multi_arg(source anyelement, extra_arg integer)
-    RETURNS INTEGER LANGUAGE PLPGSQL IMMUTABLE AS
-$BODY$
-BEGIN
-    RETURN _timescaledb_internal.get_partition_hash(source);
-END
-$BODY$;
-CREATE OR REPLACE FUNCTION partfunc_valid(source anyelement)
-    RETURNS INTEGER LANGUAGE PLPGSQL IMMUTABLE AS
-$BODY$
-BEGIN
-    RETURN _timescaledb_internal.get_partition_hash(source);
-END
-$BODY$;
-create table test_schema.test_partfunc(time timestamptz, temp float, device int);
--- Test that create_hypertable fails due to invalid partitioning function
-\set ON_ERROR_STOP 0
-select create_hypertable('test_schema.test_partfunc', 'time', 'device', 2, partitioning_func => 'partfunc_not_immutable');
-ERROR:  invalid partitioning function
-select create_hypertable('test_schema.test_partfunc', 'time', 'device', 2, partitioning_func => 'partfunc_bad_return_type');
-ERROR:  invalid partitioning function
-select create_hypertable('test_schema.test_partfunc', 'time', 'device', 2, partitioning_func => 'partfunc_bad_arg_type');
-ERROR:  invalid partitioning function
-select create_hypertable('test_schema.test_partfunc', 'time', 'device', 2, partitioning_func => 'partfunc_bad_multi_arg');
-ERROR:  invalid partitioning function
-\set ON_ERROR_STOP 1
--- Test that add_dimension fails due to invalid partitioning function
-select create_hypertable('test_schema.test_partfunc', 'time');
-NOTICE:  adding not-null constraint to column "time"
-        create_hypertable         
-----------------------------------
- (14,test_schema,test_partfunc,t)
-(1 row)
-
-\set ON_ERROR_STOP 0
-select add_dimension('test_schema.test_partfunc', 'device', 2, partitioning_func => 'partfunc_not_immutable');
-ERROR:  invalid partitioning function
-select add_dimension('test_schema.test_partfunc', 'device', 2, partitioning_func => 'partfunc_bad_return_type');
-ERROR:  invalid partitioning function
-select add_dimension('test_schema.test_partfunc', 'device', 2, partitioning_func => 'partfunc_bad_arg_type');
-ERROR:  invalid partitioning function
-select add_dimension('test_schema.test_partfunc', 'device', 2, partitioning_func => 'partfunc_bad_multi_arg');
-ERROR:  invalid partitioning function
-\set ON_ERROR_STOP 1
--- A valid function should work:
-select add_dimension('test_schema.test_partfunc', 'device', 2, partitioning_func => 'partfunc_valid');
-              add_dimension              
------------------------------------------
- (26,test_schema,test_partfunc,device,t)
-(1 row)
-
--- check get_create_command produces valid command
-CREATE TABLE test_schema.test_sql_cmd(time TIMESTAMPTZ, temp FLOAT8, device_id TEXT, device_type TEXT, location TEXT, id INT, id2 INT);
-SELECT create_hypertable('test_schema.test_sql_cmd','time');
-NOTICE:  adding not-null constraint to column "time"
-        create_hypertable        
----------------------------------
- (15,test_schema,test_sql_cmd,t)
-(1 row)
-
-SELECT * FROM _timescaledb_internal.get_create_command('test_sql_cmd');
-                                                        get_create_command                                                         
------------------------------------------------------------------------------------------------------------------------------------
- SELECT create_hypertable('test_schema.test_sql_cmd', 'time', chunk_time_interval => 604800000000, create_default_indexes=>FALSE);
-(1 row)
-
-SELECT _timescaledb_internal.get_create_command('test_sql_cmd') AS create_cmd; \gset
-                                                            create_cmd                                                             
------------------------------------------------------------------------------------------------------------------------------------
- SELECT create_hypertable('test_schema.test_sql_cmd', 'time', chunk_time_interval => 604800000000, create_default_indexes=>FALSE);
-(1 row)
-
-DROP TABLE test_schema.test_sql_cmd CASCADE;
-CREATE TABLE test_schema.test_sql_cmd(time TIMESTAMPTZ, temp FLOAT8, device_id TEXT, device_type TEXT, location TEXT, id INT, id2 INT);
-SELECT test.execute_sql(:'create_cmd');
-NOTICE:  adding not-null constraint to column "time"
-                                                            execute_sql                                                            
------------------------------------------------------------------------------------------------------------------------------------
- SELECT create_hypertable('test_schema.test_sql_cmd', 'time', chunk_time_interval => 604800000000, create_default_indexes=>FALSE);
-(1 row)
-
-\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
-CREATE TABLE test_table_int(time bigint, junk int);
-SELECT hypertable_id AS "TEST_TABLE_INT_HYPERTABLE_ID" FROM create_hypertable('test_table_int', 'time', chunk_time_interval => 1) \gset
-NOTICE:  adding not-null constraint to column "time"
-\c :TEST_DBNAME :ROLE_SUPERUSER
-CREATE SCHEMA IF NOT EXISTS my_schema;
-create or replace function my_schema.dummy_now2() returns BIGINT LANGUAGE SQL IMMUTABLE as  'SELECT 1::BIGINT';
-grant execute on ALL FUNCTIONS IN SCHEMA my_schema to public;
-create or replace function dummy_now3() returns BIGINT LANGUAGE SQL IMMUTABLE as  'SELECT 1::BIGINT';
-grant execute on ALL FUNCTIONS IN SCHEMA my_schema to public;
-REVOKE execute ON function dummy_now3() FROM PUBLIC;
-CREATE SCHEMA IF NOT EXISTS my_user_schema;
-GRANT ALL ON SCHEMA my_user_schema to PUBLIC;
-\c :TEST_DBNAME :ROLE_DEFAULT_PERM_USER
-create or replace function dummy_now() returns BIGINT LANGUAGE SQL IMMUTABLE as  'SELECT 1::BIGINT';
-create or replace function my_user_schema.dummy_now4() returns BIGINT LANGUAGE SQL IMMUTABLE as  'SELECT 1::BIGINT';
-select set_integer_now_func('test_table_int', 'dummy_now');
- set_integer_now_func 
-----------------------
- 
-(1 row)
-
-select * from _timescaledb_catalog.dimension WHERE hypertable_id = :TEST_TABLE_INT_HYPERTABLE_ID;
- id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema | partitioning_func | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-------------+---------+------------+--------------------------+-------------------+-----------------+--------------------------+-------------------------+------------------
- 29 |            17 | time        | bigint      | t       |            |                          |                   |               1 |                          | public                  | dummy_now
-(1 row)
-
-\set ON_ERROR_STOP 0
-select set_integer_now_func('test_table_int', 'dummy_now');
-ERROR:  custom time function already set for hypertable "test_table_int"
-select set_integer_now_func('test_table_int', 'my_schema.dummy_now2', replace_if_exists => TRUE);
-ERROR:  permission denied for schema my_schema at character 47
-select set_integer_now_func('test_table_int', 'dummy_now3', replace_if_exists => TRUE);
-ERROR:  permission denied for function dummy_now3
-\set ON_ERROR_STOP
-select set_integer_now_func('test_table_int', 'my_user_schema.dummy_now4', replace_if_exists => TRUE);
- set_integer_now_func 
-----------------------
- 
-(1 row)
-
-\c :TEST_DBNAME :ROLE_SUPERUSER
-ALTER SCHEMA my_user_schema RENAME TO my_new_schema;
-select * from _timescaledb_catalog.dimension WHERE hypertable_id = :TEST_TABLE_INT_HYPERTABLE_ID;
- id | hypertable_id | column_name | column_type | aligned | num_slices | partitioning_func_schema | partitioning_func | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-------------+---------+------------+--------------------------+-------------------+-----------------+--------------------------+-------------------------+------------------
- 29 |            17 | time        | bigint      | t       |            |                          |                   |               1 |                          | my_new_schema           | dummy_now4
-(1 row)
-
--- github issue #4650
-CREATE TABLE sample_table (
-       cpu double precision null,
-       time TIMESTAMP WITH TIME ZONE NOT NULL,
-       sensor_id INTEGER NOT NULL,
-       name varchar(100) default 'this is a default string value',
-       UNIQUE(sensor_id, time)
-);
-ALTER TABLE sample_table DROP COLUMN name;
--- below creation should not report any warnings.
-SELECT * FROM create_hypertable('sample_table', 'time');
- hypertable_id | schema_name |  table_name  | created 
----------------+-------------+--------------+---------
-            18 | public      | sample_table | t
-(1 row)
-
--- cleanup
-DROP TABLE sample_table CASCADE;
--- github issue 4684
--- test PARTITION BY HASH
-CREATE TABLE regular(
-   id INT NOT NULL,
-   dev INT NOT NULL,
-   value INT,
-   CONSTRAINT cstr_regular_pky PRIMARY KEY (id)
-) PARTITION BY HASH (id);
-DO $$
-BEGIN
-   FOR i IN 1..2
-   LOOP
-      EXECUTE format('
-         CREATE TABLE %I
-         PARTITION OF regular
-         FOR VALUES WITH (MODULUS 2, REMAINDER %s)',
-         'regular_' || i, i - 1
-      );
-   END LOOP;
-END;
-$$;
-INSERT INTO regular SELECT generate_series(1,1000), 44,55;
-CREATE TABLE timescale (
-   ts TIMESTAMP WITH TIME ZONE NOT NULL,
-   id INT NOT NULL,
-   dev INT NOT NULL,
-   FOREIGN KEY (id)  REFERENCES regular(id) ON DELETE CASCADE
-);
-SELECT create_hypertable(
-   relation => 'timescale',
-   time_column_name => 'ts'
-);
-    create_hypertable    
--------------------------
- (19,public,timescale,t)
-(1 row)
-
--- creates chunk1
-INSERT INTO timescale SELECT now(), generate_series(1,200), 43;
--- creates chunk2
-INSERT INTO timescale SELECT now() + interval '20' day, generate_series(1,200), 43;
--- creates chunk3
-INSERT INTO timescale SELECT now() + interval '40' day, generate_series(1,200), 43;
--- show chunks
-SELECT SHOW_CHUNKS('timescale');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_19_15_chunk
- _timescaledb_internal._hyper_19_16_chunk
- _timescaledb_internal._hyper_19_17_chunk
-(3 rows)
-
-\set ON_ERROR_STOP 0
--- record goes into chunk1 violating FK constraint as value 1001 is not present in regular table
-INSERT INTO timescale SELECT now(), 1001, 43;
-ERROR:  insert or update on table "_hyper_19_15_chunk" violates foreign key constraint "15_1_timescale_id_fkey"
--- record goes into chunk2 violating FK constraint as value 1002 is not present in regular table
-INSERT INTO timescale SELECT now() + interval '20' day, 1002, 43;
-ERROR:  insert or update on table "_hyper_19_16_chunk" violates foreign key constraint "16_2_timescale_id_fkey"
--- record goes into chunk3 violating FK constraint as value 1003 is not present in regular table
-INSERT INTO timescale SELECT now() + interval '40' day, 1003, 43;
-ERROR:  insert or update on table "_hyper_19_17_chunk" violates foreign key constraint "17_3_timescale_id_fkey"
-\set ON_ERROR_STOP 1
--- cleanup
-DROP TABLE regular cascade;
-NOTICE:  drop cascades to 4 other objects
-DROP TABLE timescale cascade;
--- test PARTITION BY RANGE
-CREATE TABLE regular(
-   id INT NOT NULL,
-   dev INT NOT NULL,
-   value INT,
-   CONSTRAINT cstr_regular_pky PRIMARY KEY (id)
-) PARTITION BY RANGE (id);
-CREATE TABLE regular_1_500 PARTITION OF regular
-    FOR VALUES FROM (1) TO (500);
-CREATE TABLE regular_500_1000 PARTITION OF regular
-    FOR VALUES FROM (500) TO (801);
-INSERT INTO regular SELECT generate_series(1,800), 44,55;
-CREATE TABLE timescale (
-   ts TIMESTAMP WITH TIME ZONE NOT NULL,
-   id INT NOT NULL,
-   dev INT NOT NULL,
-   FOREIGN KEY (id)  REFERENCES regular(id) ON DELETE CASCADE
-);
-SELECT create_hypertable(
-   relation => 'timescale',
-   time_column_name => 'ts'
-);
-    create_hypertable    
--------------------------
- (20,public,timescale,t)
-(1 row)
-
--- creates chunk1
-INSERT INTO timescale SELECT now(), generate_series(1,200), 43;
--- creates chunk2
-INSERT INTO timescale SELECT now() + interval '20' day, generate_series(200,400), 43;
--- creates chunk3
-INSERT INTO timescale SELECT now() + interval '40' day, generate_series(400,600), 43;
--- show chunks
-SELECT SHOW_CHUNKS('timescale');
-               show_chunks                
-------------------------------------------
- _timescaledb_internal._hyper_20_18_chunk
- _timescaledb_internal._hyper_20_19_chunk
- _timescaledb_internal._hyper_20_20_chunk
-(3 rows)
-
-\set ON_ERROR_STOP 0
--- FK constraint violation as value 801 is not present in regular table
-INSERT INTO timescale SELECT now(), 801, 43;
-ERROR:  insert or update on table "_hyper_20_18_chunk" violates foreign key constraint "18_4_timescale_id_fkey"
--- FK constraint violation as value 902 is not present in regular table
-INSERT INTO timescale SELECT now() + interval '20' day, 902, 43;
-ERROR:  insert or update on table "_hyper_20_19_chunk" violates foreign key constraint "19_5_timescale_id_fkey"
--- FK constraint violation as value 1003 is not present in regular table
-INSERT INTO timescale SELECT now() + interval '40' day, 1003, 43;
-ERROR:  insert or update on table "_hyper_20_20_chunk" violates foreign key constraint "20_6_timescale_id_fkey"
-\set ON_ERROR_STOP 1
--- cleanup
-DROP TABLE regular cascade;
-NOTICE:  drop cascades to 4 other objects
-DROP TABLE timescale cascade;
--- test PARTITION BY LIST
-CREATE TABLE regular(
-   id INT NOT NULL,
-   dev INT NOT NULL,
-   value INT,
-   CONSTRAINT cstr_regular_pky PRIMARY KEY (id)
-) PARTITION BY LIST (id);
-CREATE TABLE regular_1_2_3_4 PARTITION OF regular FOR VALUES IN (1,2,3,4);
-CREATE TABLE regular_5_6_7_8 PARTITION OF regular FOR VALUES IN (5,6,7,8);
-INSERT INTO regular SELECT generate_series(1,8), 44,55;
-CREATE TABLE timescale (
-   ts TIMESTAMP WITH TIME ZONE NOT NULL,
-   id INT NOT NULL,
-   dev INT NOT NULL,
-   FOREIGN KEY (id)  REFERENCES regular(id) ON DELETE CASCADE
-);
-SELECT create_hypertable(
-   relation => 'timescale',
-   time_column_name => 'ts'
-);
-    create_hypertable    
--------------------------
- (21,public,timescale,t)
-(1 row)
-
-insert into timescale values (now(), 1,2);
-insert into timescale values (now(), 2,2);
-insert into timescale values (now(), 3,2);
-insert into timescale values (now(), 4,2);
-insert into timescale values (now(), 5,2);
-insert into timescale values (now(), 6,2);
-insert into timescale values (now(), 7,2);
-insert into timescale values (now(), 8,2);
-\set ON_ERROR_STOP 0
--- FK constraint violation as value 9 is not present in regular table
-insert into timescale values (now(), 9,2);
-ERROR:  insert or update on table "_hyper_21_21_chunk" violates foreign key constraint "21_7_timescale_id_fkey"
--- FK constraint violation as value 10 is not present in regular table
-insert into timescale values (now(), 10,2);
-ERROR:  insert or update on table "_hyper_21_21_chunk" violates foreign key constraint "21_7_timescale_id_fkey"
--- FK constraint violation as value 111 is not present in regular table
-insert into timescale values (now(), 111,2);
-ERROR:  insert or update on table "_hyper_21_21_chunk" violates foreign key constraint "21_7_timescale_id_fkey"
-\set ON_ERROR_STOP 1
--- cleanup
-DROP TABLE regular cascade;
-NOTICE:  drop cascades to 2 other objects
-DROP TABLE timescale cascade;
--- github issue 4872
--- If subplan of ChunkAppend is TidRangeScan, then SELECT on
--- hypertable fails with error "invalid child of chunk append: Node (26)"
-create table tidrangescan_test (
-  time timestamp with time zone,
-  some_column bigint
-);
-select create_hypertable('tidrangescan_test', 'time');
-NOTICE:  adding not-null constraint to column "time"
-        create_hypertable        
----------------------------------
- (22,public,tidrangescan_test,t)
-(1 row)
-
-insert into tidrangescan_test (time, some_column) values ('2023-02-12 00:00:00+02:40', 1);
-insert into tidrangescan_test (time, some_column) values ('2023-02-12 00:00:10+02:40', 2);
-insert into tidrangescan_test (time, some_column) values ('2023-02-12 00:00:20+02:40', 3);
--- Below query will generate plan as
--- Custom Scan (ChunkAppend)
---   ->  Tid Range Scan
--- However when traversing ChunkAppend node, Tid Range Scan node is not
--- recognised as a valid child node of ChunkAppend which causes error
--- "invalid child of chunk append: Node (26)" when below query is executed
-select * from tidrangescan_test where time > '2023-02-12 00:00:00+02:40'::timestamp with time zone - interval '5 years' and ctid < '(1,1)'::tid ORDER BY time;
-             time             | some_column 
-------------------------------+-------------
- Sat Feb 11 13:20:00 2023 PST |           1
- Sat Feb 11 13:20:10 2023 PST |           2
- Sat Feb 11 13:20:20 2023 PST |           3
-(3 rows)
-
-drop table tidrangescan_test;
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_extension.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_extension.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_extension.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_extension.out	2023-10-28 03:32:12.760978263 +0000
@@ -72,7 +72,7 @@
 --test drops thru cascades of other objects
 \c :TEST_DBNAME :ROLE_SUPERUSER
 drop schema public cascade;
-NOTICE:  drop cascades to 3 other objects
+NOTICE:  drop cascades to 5 other objects
 \dn
   List of schemas
  Name |   Owner    
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_hypertable.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_hypertable.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_hypertable.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_hypertable.out	2023-10-28 03:32:10.945001324 +0000
@@ -38,75 +38,4 @@
 DROP TABLE hyper_with_dependencies CASCADE;
 NOTICE:  drop cascades to view dependent_view
 \dv
-      List of relations
- Schema | Name | Type | Owner 
---------+------+------+-------
-(0 rows)
-
-CREATE TABLE chunk_with_dependencies (time timestamp, temp float8);
-SELECT create_hypertable('chunk_with_dependencies', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-          create_hypertable           
---------------------------------------
- (3,public,chunk_with_dependencies,t)
-(1 row)
-
-INSERT INTO chunk_with_dependencies VALUES (now(), 1.0);
-CREATE VIEW dependent_view_chunk AS SELECT * FROM _timescaledb_internal._hyper_3_2_chunk;
-\set ON_ERROR_STOP 0
-DROP TABLE chunk_with_dependencies;
-ERROR:  cannot drop table _timescaledb_internal._hyper_3_2_chunk because other objects depend on it
-\set ON_ERROR_STOP 1
-DROP TABLE chunk_with_dependencies CASCADE;
-NOTICE:  drop cascades to view dependent_view_chunk
-\dv
-      List of relations
- Schema | Name | Type | Owner 
---------+------+------+-------
-(0 rows)
-
--- Calling create hypertable again will increment hypertable ID
--- although no new hypertable is created. Make sure we can handle this.
-SELECT create_hypertable('should_drop', 'time', if_not_exists => true);
-NOTICE:  table "should_drop" is already a hypertable, skipping
-    create_hypertable     
---------------------------
- (1,public,should_drop,f)
-(1 row)
-
-SELECT * from _timescaledb_catalog.hypertable;
- id | schema_name | table_name  | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+-------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
-  1 | public      | should_drop | _timescaledb_internal  | _hyper_1                |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-SELECT * from _timescaledb_catalog.dimension;
- id | hypertable_id | column_name |         column_type         | aligned | num_slices | partitioning_func_schema | partitioning_func | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-----------------------------+---------+------------+--------------------------+-------------------+-----------------+--------------------------+-------------------------+------------------
-  1 |             1 | time        | timestamp without time zone | t       |            |                          |                   |    604800000000 |                          |                         | 
-(1 row)
-
-DROP TABLE should_drop;
-CREATE TABLE should_drop (time timestamp, temp float8);
-SELECT create_hypertable('should_drop', 'time');
-WARNING:  column type "timestamp without time zone" used for "time" does not follow best practices
-NOTICE:  adding not-null constraint to column "time"
-    create_hypertable     
---------------------------
- (4,public,should_drop,t)
-(1 row)
-
-INSERT INTO should_drop VALUES (now(), 1.0);
-SELECT * from _timescaledb_catalog.hypertable;
- id | schema_name | table_name  | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+-------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
-  4 | public      | should_drop | _timescaledb_internal  | _hyper_4                |              1 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-SELECT * from _timescaledb_catalog.dimension;
- id | hypertable_id | column_name |         column_type         | aligned | num_slices | partitioning_func_schema | partitioning_func | interval_length | compress_interval_length | integer_now_func_schema | integer_now_func 
-----+---------------+-------------+-----------------------------+---------+------------+--------------------------+-------------------+-----------------+--------------------------+-------------------------+------------------
-  4 |             4 | time        | timestamp without time zone | t       |            |                          |                   |    604800000000 |                          |                         | 
-(1 row)
-
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_owned.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_owned.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_owned.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_owned.out	2023-10-28 03:32:18.884900931 +0000
@@ -105,90 +105,4 @@
        random() AS cpu
 FROM generate_series('2020-01-01'::timestamptz, '2020-01-24'::timestamptz, INTERVAL '10 minute') AS g1(time);
 \dp sensor_data
-                                Access privileges
- Schema |    Name     | Type  | Access privileges | Column privileges | Policies 
---------+-------------+-------+-------------------+-------------------+----------
- public | sensor_data | table |                   |                   | 
-(1 row)
-
-\dp _timescaledb_internal._hyper_3*
-                                          Access privileges
-        Schema         |       Name       | Type  | Access privileges | Column privileges | Policies 
------------------------+------------------+-------+-------------------+-------------------+----------
- _timescaledb_internal | _hyper_3_3_chunk | table |                   |                   | 
- _timescaledb_internal | _hyper_3_4_chunk | table |                   |                   | 
- _timescaledb_internal | _hyper_3_5_chunk | table |                   |                   | 
- _timescaledb_internal | _hyper_3_6_chunk | table |                   |                   | 
- _timescaledb_internal | _hyper_3_7_chunk | table |                   |                   | 
-(5 rows)
-
-GRANT SELECT ON sensor_data TO :ROLE_DEFAULT_PERM_USER;
-\dp sensor_data
-                                      Access privileges
- Schema |    Name     | Type  |       Access privileges        | Column privileges | Policies 
---------+-------------+-------+--------------------------------+-------------------+----------
- public | sensor_data | table | super_user=arwdDxt/super_user +|                   | 
-        |             |       | default_perm_user=r/super_user |                   | 
-(1 row)
-
-\dp _timescaledb_internal._hyper_3*
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges        | Column privileges | Policies 
------------------------+------------------+-------+--------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_3_3_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_4_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_5_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_6_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_7_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
-(5 rows)
-
--- Insert more chunks after adding the user to the hypertable. These
--- will now get the privileges of the hypertable.
-INSERT INTO sensor_data
-SELECT time,
-       random() AS cpu
-FROM generate_series('2020-01-20'::timestamptz, '2020-02-05'::timestamptz, INTERVAL '10 minute') AS g1(time);
-\dp _timescaledb_internal._hyper_3*
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges        | Column privileges | Policies 
------------------------+------------------+-------+--------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_3_3_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_4_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_5_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_6_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_7_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
- _timescaledb_internal | _hyper_3_8_chunk | table | super_user=arwdDxt/super_user +|                   | 
-                       |                  |       | default_perm_user=r/super_user |                   | 
-(6 rows)
-
--- This should revoke the privileges on both the hypertable and the chunks.
-DROP OWNED BY :ROLE_DEFAULT_PERM_USER;
-\dp sensor_data
-                                      Access privileges
- Schema |    Name     | Type  |       Access privileges       | Column privileges | Policies 
---------+-------------+-------+-------------------------------+-------------------+----------
- public | sensor_data | table | super_user=arwdDxt/super_user |                   | 
-(1 row)
-
-\dp _timescaledb_internal._hyper_3*
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_3_3_chunk | table | super_user=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_3_4_chunk | table | super_user=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_3_5_chunk | table | super_user=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_3_6_chunk | table | super_user=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_3_7_chunk | table | super_user=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_3_8_chunk | table | super_user=arwdDxt/super_user |                   | 
-(6 rows)
-
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_rename_hypertable.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_rename_hypertable.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/drop_rename_hypertable.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/drop_rename_hypertable.out	2023-10-28 03:32:22.308857991 +0000
@@ -185,56 +185,4 @@
 (0 rows)
 
 \dt  "public".*
-      List of relations
- Schema | Name | Type | Owner 
---------+------+------+-------
-(0 rows)
-
-\dt  "_timescaledb_catalog".*
-                                      List of relations
-        Schema        |                       Name                       | Type  |   Owner    
-----------------------+--------------------------------------------------+-------+------------
- _timescaledb_catalog | chunk                                            | table | super_user
- _timescaledb_catalog | chunk_constraint                                 | table | super_user
- _timescaledb_catalog | chunk_copy_operation                             | table | super_user
- _timescaledb_catalog | chunk_data_node                                  | table | super_user
- _timescaledb_catalog | chunk_index                                      | table | super_user
- _timescaledb_catalog | compression_algorithm                            | table | super_user
- _timescaledb_catalog | compression_chunk_size                           | table | super_user
- _timescaledb_catalog | continuous_agg                                   | table | super_user
- _timescaledb_catalog | continuous_agg_migrate_plan                      | table | super_user
- _timescaledb_catalog | continuous_agg_migrate_plan_step                 | table | super_user
- _timescaledb_catalog | continuous_aggs_bucket_function                  | table | super_user
- _timescaledb_catalog | continuous_aggs_hypertable_invalidation_log      | table | super_user
- _timescaledb_catalog | continuous_aggs_invalidation_threshold           | table | super_user
- _timescaledb_catalog | continuous_aggs_materialization_invalidation_log | table | super_user
- _timescaledb_catalog | continuous_aggs_watermark                        | table | super_user
- _timescaledb_catalog | dimension                                        | table | super_user
- _timescaledb_catalog | dimension_partition                              | table | super_user
- _timescaledb_catalog | dimension_slice                                  | table | super_user
- _timescaledb_catalog | hypertable                                       | table | super_user
- _timescaledb_catalog | hypertable_compression                           | table | super_user
- _timescaledb_catalog | hypertable_data_node                             | table | super_user
- _timescaledb_catalog | metadata                                         | table | super_user
- _timescaledb_catalog | remote_txn                                       | table | super_user
- _timescaledb_catalog | tablespace                                       | table | super_user
- _timescaledb_catalog | telemetry_event                                  | table | super_user
-(25 rows)
-
-\dt "_timescaledb_internal".*
-                          List of relations
-        Schema         |          Name          | Type  |   Owner    
------------------------+------------------------+-------+------------
- _timescaledb_internal | bgw_job_stat           | table | super_user
- _timescaledb_internal | bgw_policy_chunk_stats | table | super_user
- _timescaledb_internal | job_errors             | table | super_user
-(3 rows)
-
--- Test that renaming ordinary table works
-CREATE TABLE renametable (foo int);
-ALTER TABLE "renametable" RENAME TO "newname_none_ht";
-SELECT * FROM "newname_none_ht";
- foo 
------
-(0 rows)
-
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/dump_meta.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/dump_meta.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/dump_meta.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/dump_meta.out	2023-10-28 03:32:22.580854589 +0000
@@ -57,169 +57,4 @@
 \echo 'List of tables'
 List of tables
 \dt
-                  List of relations
- Schema |      Name      | Type  |       Owner       
---------+----------------+-------+-------------------
- public | two_Partitions | table | default_perm_user
-(1 row)
-
-\echo 'List of hypertables'
-List of hypertables
-SELECT * FROM _timescaledb_catalog.hypertable;
- id | schema_name |   table_name   | associated_schema_name | associated_table_prefix | num_dimensions | chunk_sizing_func_schema |  chunk_sizing_func_name  | chunk_target_size | compression_state | compressed_hypertable_id | replication_factor 
-----+-------------+----------------+------------------------+-------------------------+----------------+--------------------------+--------------------------+-------------------+-------------------+--------------------------+--------------------
-  1 | public      | two_Partitions | _timescaledb_internal  | _hyper_1                |              2 | _timescaledb_internal    | calculate_chunk_interval |                 0 |                 0 |                          |                   
-(1 row)
-
-\echo 'List of chunk indexes'
-List of chunk indexes
-SELECT * FROM _timescaledb_catalog.chunk_index;
- chunk_id |                         index_name                         | hypertable_id |           hypertable_index_name           
-----------+------------------------------------------------------------+---------------+-------------------------------------------
-        1 | _hyper_1_1_chunk_two_Partitions_device_id_timeCustom_idx   |             1 | two_Partitions_device_id_timeCustom_idx
-        1 | _hyper_1_1_chunk_two_Partitions_timeCustom_series_0_idx    |             1 | two_Partitions_timeCustom_series_0_idx
-        1 | _hyper_1_1_chunk_two_Partitions_timeCustom_series_1_idx    |             1 | two_Partitions_timeCustom_series_1_idx
-        1 | _hyper_1_1_chunk_two_Partitions_timeCustom_series_2_idx    |             1 | two_Partitions_timeCustom_series_2_idx
-        1 | _hyper_1_1_chunk_two_Partitions_timeCustom_series_bool_idx |             1 | two_Partitions_timeCustom_series_bool_idx
-        1 | _hyper_1_1_chunk_two_Partitions_timeCustom_device_id_idx   |             1 | two_Partitions_timeCustom_device_id_idx
-        1 | _hyper_1_1_chunk_two_Partitions_timeCustom_idx             |             1 | two_Partitions_timeCustom_idx
-        2 | _hyper_1_2_chunk_two_Partitions_device_id_timeCustom_idx   |             1 | two_Partitions_device_id_timeCustom_idx
-        2 | _hyper_1_2_chunk_two_Partitions_timeCustom_series_0_idx    |             1 | two_Partitions_timeCustom_series_0_idx
-        2 | _hyper_1_2_chunk_two_Partitions_timeCustom_series_1_idx    |             1 | two_Partitions_timeCustom_series_1_idx
-        2 | _hyper_1_2_chunk_two_Partitions_timeCustom_series_2_idx    |             1 | two_Partitions_timeCustom_series_2_idx
-        2 | _hyper_1_2_chunk_two_Partitions_timeCustom_series_bool_idx |             1 | two_Partitions_timeCustom_series_bool_idx
-        2 | _hyper_1_2_chunk_two_Partitions_timeCustom_device_id_idx   |             1 | two_Partitions_timeCustom_device_id_idx
-        2 | _hyper_1_2_chunk_two_Partitions_timeCustom_idx             |             1 | two_Partitions_timeCustom_idx
-        3 | _hyper_1_3_chunk_two_Partitions_device_id_timeCustom_idx   |             1 | two_Partitions_device_id_timeCustom_idx
-        3 | _hyper_1_3_chunk_two_Partitions_timeCustom_series_0_idx    |             1 | two_Partitions_timeCustom_series_0_idx
-        3 | _hyper_1_3_chunk_two_Partitions_timeCustom_series_1_idx    |             1 | two_Partitions_timeCustom_series_1_idx
-        3 | _hyper_1_3_chunk_two_Partitions_timeCustom_series_2_idx    |             1 | two_Partitions_timeCustom_series_2_idx
-        3 | _hyper_1_3_chunk_two_Partitions_timeCustom_series_bool_idx |             1 | two_Partitions_timeCustom_series_bool_idx
-        3 | _hyper_1_3_chunk_two_Partitions_timeCustom_device_id_idx   |             1 | two_Partitions_timeCustom_device_id_idx
-        3 | _hyper_1_3_chunk_two_Partitions_timeCustom_idx             |             1 | two_Partitions_timeCustom_idx
-        4 | _hyper_1_4_chunk_two_Partitions_device_id_timeCustom_idx   |             1 | two_Partitions_device_id_timeCustom_idx
-        4 | _hyper_1_4_chunk_two_Partitions_timeCustom_series_0_idx    |             1 | two_Partitions_timeCustom_series_0_idx
-        4 | _hyper_1_4_chunk_two_Partitions_timeCustom_series_1_idx    |             1 | two_Partitions_timeCustom_series_1_idx
-        4 | _hyper_1_4_chunk_two_Partitions_timeCustom_series_2_idx    |             1 | two_Partitions_timeCustom_series_2_idx
-        4 | _hyper_1_4_chunk_two_Partitions_timeCustom_series_bool_idx |             1 | two_Partitions_timeCustom_series_bool_idx
-        4 | _hyper_1_4_chunk_two_Partitions_timeCustom_device_id_idx   |             1 | two_Partitions_timeCustom_device_id_idx
-        4 | _hyper_1_4_chunk_two_Partitions_timeCustom_idx             |             1 | two_Partitions_timeCustom_idx
-(28 rows)
-
-\echo 'Size of hypertables'
-Size of hypertables
-SELECT hypertable,
-       table_bytes,
-       index_bytes,
-       toast_bytes,
-       total_bytes
-       FROM (
-       SELECT *, total_bytes-index_bytes-COALESCE(toast_bytes,0) AS table_bytes FROM (
-              SELECT
-              pgc.oid::regclass::text as hypertable,
-              sum(pg_total_relation_size('"' || c.schema_name || '"."' || c.table_name || '"'))::bigint as total_bytes,
-              sum(pg_indexes_size('"' || c.schema_name || '"."' || c.table_name || '"'))::bigint AS index_bytes,
-              sum(pg_total_relation_size(reltoastrelid))::bigint AS toast_bytes
-              FROM
-              _timescaledb_catalog.hypertable h,
-              _timescaledb_catalog.chunk c,
-              pg_class pgc,
-              pg_namespace pns
-              WHERE c.hypertable_id = h.id
-              AND pgc.relname = h.table_name
-              AND pns.oid = pgc.relnamespace
-              AND pns.nspname = h.schema_name
-              AND relkind = 'r'
-              AND c.dropped is false
-              GROUP BY pgc.oid
-              ) sub1
-       ) sub2;
-    hypertable    | table_bytes | index_bytes | toast_bytes | total_bytes 
-------------------+-------------+-------------+-------------+-------------
- "two_Partitions" |       32768 |      417792 |       32768 |      483328
-(1 row)
-
-\echo 'Chunk sizes:'
-Chunk sizes:
-SELECT chunk_id,
-chunk_table,
-partitioning_columns,
-partitioning_column_types,
-partitioning_hash_functions,
-ranges,
-table_bytes,
-index_bytes,
-toast_bytes,
-total_bytes
-FROM (
-SELECT *,
-      total_bytes-index_bytes-COALESCE(toast_bytes,0) AS table_bytes
-      FROM (
-       SELECT c.id as chunk_id,
-       '"' || c.schema_name || '"."' || c.table_name || '"' as chunk_table,
-       pg_total_relation_size('"' || c.schema_name || '"."' || c.table_name || '"') AS total_bytes,
-       pg_indexes_size('"' || c.schema_name || '"."' || c.table_name || '"') AS index_bytes,
-       pg_total_relation_size(reltoastrelid) AS toast_bytes,
-       array_agg(d.column_name ORDER BY d.interval_length, d.column_name ASC) as partitioning_columns,
-       array_agg(d.column_type ORDER BY d.interval_length, d.column_name ASC) as partitioning_column_types,
-       array_agg(d.partitioning_func_schema || '.' || d.partitioning_func ORDER BY d.interval_length, d.column_name ASC) as partitioning_hash_functions,
-       array_agg('[' || _timescaledb_internal.range_value_to_pretty(range_start, column_type) ||
-                 ',' ||
-                 _timescaledb_internal.range_value_to_pretty(range_end, column_type) || ')' ORDER BY d.interval_length, d.column_name ASC) as ranges
-       FROM
-       _timescaledb_catalog.hypertable h,
-       _timescaledb_catalog.chunk c,
-       _timescaledb_catalog.chunk_constraint cc,
-       _timescaledb_catalog.dimension d,
-       _timescaledb_catalog.dimension_slice ds,
-       pg_class pgc,
-       pg_namespace pns
-       WHERE pgc.relname = h.table_name
-             AND pns.oid = pgc.relnamespace
-             AND pns.nspname = h.schema_name
-             AND relkind = 'r'
-             AND c.hypertable_id = h.id
-             AND c.id = cc.chunk_id
-             AND cc.dimension_slice_id = ds.id
-             AND ds.dimension_id = d.id
-             AND c.dropped is false
-       GROUP BY c.id, pgc.reltoastrelid, pgc.oid ORDER BY c.id
-       ) sub1
-) sub2;
- chunk_id |                chunk_table                 |  partitioning_columns  | partitioning_column_types |           partitioning_hash_functions           |                              ranges                               | table_bytes | index_bytes | toast_bytes | total_bytes 
-----------+--------------------------------------------+------------------------+---------------------------+-------------------------------------------------+-------------------------------------------------------------------+-------------+-------------+-------------+-------------
-        1 | "_timescaledb_internal"."_hyper_1_1_chunk" | {timeCustom,device_id} | {bigint,text}             | {NULL,_timescaledb_internal.get_partition_hash} | {"['1257892416000000000','1257895008000000000')","[1073741823,)"} |        8192 |      114688 |        8192 |      131072
-        2 | "_timescaledb_internal"."_hyper_1_2_chunk" | {timeCustom,device_id} | {bigint,text}             | {NULL,_timescaledb_internal.get_partition_hash} | {"['1257897600000000000','1257900192000000000')","[1073741823,)"} |        8192 |      106496 |        8192 |      122880
-        3 | "_timescaledb_internal"."_hyper_1_3_chunk" | {timeCustom,device_id} | {bigint,text}             | {NULL,_timescaledb_internal.get_partition_hash} | {"['1257985728000000000','1257988320000000000')","[1073741823,)"} |        8192 |       98304 |        8192 |      114688
-        4 | "_timescaledb_internal"."_hyper_1_4_chunk" | {timeCustom,device_id} | {bigint,text}             | {NULL,_timescaledb_internal.get_partition_hash} | {"['1257892416000000000','1257895008000000000')","[,1073741823)"} |        8192 |       98304 |        8192 |      114688
-(4 rows)
-
-\echo 'Hypertable index sizes'
-Hypertable index sizes
-SELECT h.schema_name || '.' || h.table_name AS hypertable,
-       h.schema_name || '.' || ci.hypertable_index_name AS index_name,
-       sum(pg_relation_size(c.oid))::bigint AS index_bytes
-FROM
-pg_class c,
-pg_namespace n,
-_timescaledb_catalog.hypertable h,
-_timescaledb_catalog.chunk ch,
-_timescaledb_catalog.chunk_index ci
-WHERE ch.schema_name = n.nspname
-      AND c.relnamespace = n.oid
-      AND c.relname = ci.index_name
-      AND ch.id = ci.chunk_id
-      AND h.id = ci.hypertable_id
-GROUP BY h.schema_name, h.table_name, ci.hypertable_index_name
-ORDER BY h.schema_name, h.table_name, ci.hypertable_index_name;
-      hypertable       |                    index_name                    | index_bytes 
------------------------+--------------------------------------------------+-------------
- public.two_Partitions | public.two_Partitions_device_id_timeCustom_idx   |       65536
- public.two_Partitions | public.two_Partitions_timeCustom_device_id_idx   |       65536
- public.two_Partitions | public.two_Partitions_timeCustom_idx             |       65536
- public.two_Partitions | public.two_Partitions_timeCustom_series_0_idx    |       65536
- public.two_Partitions | public.two_Partitions_timeCustom_series_1_idx    |       65536
- public.two_Partitions | public.two_Partitions_timeCustom_series_2_idx    |       40960
- public.two_Partitions | public.two_Partitions_timeCustom_series_bool_idx |       49152
-(7 rows)
-
+psql:../../scripts/dump_meta_data.sql:28: ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/grant_hypertable.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/grant_hypertable.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/grant_hypertable.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/grant_hypertable.out	2023-10-28 03:32:21.132872715 +0000
@@ -18,377 +18,4 @@
 SELECT time, (random()*30)::int, random()*80 - 40
 FROM generate_series('2018-12-01 00:00'::timestamp, '2018-12-10 00:00'::timestamp, '1h') AS time;
 \z conditions
-                               Access privileges
- Schema |    Name    | Type  | Access privileges | Column privileges | Policies 
---------+------------+-------+-------------------+-------------------+----------
- public | conditions | table |                   |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                          Access privileges
-        Schema         |       Name       | Type  | Access privileges | Column privileges | Policies 
------------------------+------------------+-------+-------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table |                   |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table |                   |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table |                   |                   | 
-(3 rows)
-
--- Add privileges and show that they propagate to the chunks
-GRANT SELECT, INSERT ON conditions TO PUBLIC;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =ar/super_user                |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
-(3 rows)
-
--- Create some more chunks and show that they also get the privileges.
-INSERT INTO conditions
-SELECT time, (random()*30)::int, random()*80 - 40
-FROM generate_series('2018-12-10 00:00'::timestamp, '2018-12-20 00:00'::timestamp, '1h') AS time;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =ar/super_user                |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
- _timescaledb_internal | _hyper_1_4_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
- _timescaledb_internal | _hyper_1_5_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
-(5 rows)
-
--- Revoke one of the privileges and show that it propagate to the
--- chunks.
-REVOKE INSERT ON conditions FROM PUBLIC;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_4_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_5_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
-(5 rows)
-
--- Add some more chunks and show that it inherits the grants from the
--- hypertable.
-INSERT INTO conditions
-SELECT time, (random()*30)::int, random()*80 - 40
-FROM generate_series('2018-12-20 00:00'::timestamp, '2018-12-30 00:00'::timestamp, '1h') AS time;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_4_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_5_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_6_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_7_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
-(7 rows)
-
--- Change grants of one chunk explicitly and check that it is possible
-\z _timescaledb_internal._hyper_1_1_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
-(1 row)
-
-GRANT UPDATE ON _timescaledb_internal._hyper_1_1_chunk TO PUBLIC;
-\z _timescaledb_internal._hyper_1_1_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =rw/super_user                |                   | 
-(1 row)
-
-REVOKE SELECT ON _timescaledb_internal._hyper_1_1_chunk FROM PUBLIC;
-\z _timescaledb_internal._hyper_1_1_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =w/super_user                 |                   | 
-(1 row)
-
--- Check that revoking a permission first on the chunk and then on the
--- hypertable that was added through the hypertable (INSERT and
--- SELECT, in this case) still do not copy permissions from the
--- hypertable (so there should not be a select permission to public on
--- the chunk but there should be one on the hypertable).
-GRANT INSERT ON conditions TO PUBLIC;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =ar/super_user                |                   | 
-(1 row)
-
-\z _timescaledb_internal._hyper_1_2_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =ar/super_user                |                   | 
-(1 row)
-
-REVOKE SELECT ON _timescaledb_internal._hyper_1_2_chunk FROM PUBLIC;
-REVOKE INSERT ON conditions FROM PUBLIC;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z _timescaledb_internal._hyper_1_2_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user |                   | 
-(1 row)
-
--- Check that granting permissions through hypertable does not remove
--- separate grants on chunk.
-GRANT UPDATE ON _timescaledb_internal._hyper_1_3_chunk TO PUBLIC;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z _timescaledb_internal._hyper_1_3_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =rw/super_user                |                   | 
-(1 row)
-
-GRANT INSERT ON conditions TO PUBLIC;
-REVOKE INSERT ON conditions FROM PUBLIC;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z _timescaledb_internal._hyper_1_3_chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =rw/super_user                |                   | 
-(1 row)
-
--- Check that GRANT ALL IN SCHEMA adds privileges to the parent
--- and also goes to chunks in another schema
-GRANT ALL ON ALL TABLES  IN SCHEMA public TO :ROLE_DEFAULT_PERM_USER_2;
-\z conditions
-                                          Access privileges
- Schema |    Name    | Type  |           Access privileges            | Column privileges | Policies 
---------+------------+-------+----------------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user         +|                   | 
-        |            |       | =r/super_user                         +|                   | 
-        |            |       | default_perm_user_2=arwdDxt/super_user |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                                    Access privileges
-        Schema         |       Name       | Type  |           Access privileges            | Column privileges | Policies 
------------------------+------------------+-------+----------------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | =w/super_user                         +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | =rw/super_user                        +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_4_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | =r/super_user                         +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_5_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | =r/super_user                         +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_6_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | =r/super_user                         +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_7_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-                       |                  |       | =r/super_user                         +|                   | 
-                       |                  |       | default_perm_user_2=arwdDxt/super_user |                   | 
-(7 rows)
-
--- Check that REVOKE ALL IN SCHEMA removes privileges of the parent
--- and also goes to chunks in another schema
-REVOKE ALL ON ALL TABLES  IN SCHEMA public FROM :ROLE_DEFAULT_PERM_USER_2;
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z _timescaledb_internal.*chunk
-                                                Access privileges
-        Schema         |       Name       | Type  |       Access privileges       | Column privileges | Policies 
------------------------+------------------+-------+-------------------------------+-------------------+----------
- _timescaledb_internal | _hyper_1_1_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =w/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_2_chunk | table | super_user=arwdDxt/super_user |                   | 
- _timescaledb_internal | _hyper_1_3_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =rw/super_user                |                   | 
- _timescaledb_internal | _hyper_1_4_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_5_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_6_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
- _timescaledb_internal | _hyper_1_7_chunk | table | super_user=arwdDxt/super_user+|                   | 
-                       |                  |       | =r/super_user                 |                   | 
-(7 rows)
-
--- Create chunks in the same schema as the hypertable and check that
--- they also get the same privileges as the hypertable
-CREATE TABLE measurements(
-    time TIMESTAMPTZ NOT NULL,
-    device INTEGER,
-    temperature FLOAT
-);
--- Create a hypertable with chunks in the same schema
-SELECT * FROM create_hypertable('public.measurements', 'time', chunk_time_interval => '5 days'::interval, associated_schema_name => 'public');
- hypertable_id | schema_name |  table_name  | created 
----------------+-------------+--------------+---------
-             2 | public      | measurements | t
-(1 row)
-
-INSERT INTO measurements
-SELECT time, (random()*30)::int, random()*80 - 40
-FROM generate_series('2018-12-01 00:00'::timestamp, '2018-12-10 00:00'::timestamp, '1h') AS time;
--- GRANT ALL and check privileges
-GRANT ALL ON ALL TABLES  IN SCHEMA public TO :ROLE_DEFAULT_PERM_USER_2;
-\z measurements
-                                           Access privileges
- Schema |     Name     | Type  |           Access privileges            | Column privileges | Policies 
---------+--------------+-------+----------------------------------------+-------------------+----------
- public | measurements | table | super_user=arwdDxt/super_user         +|                   | 
-        |              |       | default_perm_user_2=arwdDxt/super_user |                   | 
-(1 row)
-
-\z conditions
-                                          Access privileges
- Schema |    Name    | Type  |           Access privileges            | Column privileges | Policies 
---------+------------+-------+----------------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user         +|                   | 
-        |            |       | =r/super_user                         +|                   | 
-        |            |       | default_perm_user_2=arwdDxt/super_user |                   | 
-(1 row)
-
-\z public.*chunk
-                                             Access privileges
- Schema |       Name        | Type  |           Access privileges            | Column privileges | Policies 
---------+-------------------+-------+----------------------------------------+-------------------+----------
- public | _hyper_2_10_chunk | table | super_user=arwdDxt/super_user         +|                   | 
-        |                   |       | default_perm_user_2=arwdDxt/super_user |                   | 
- public | _hyper_2_8_chunk  | table | super_user=arwdDxt/super_user         +|                   | 
-        |                   |       | default_perm_user_2=arwdDxt/super_user |                   | 
- public | _hyper_2_9_chunk  | table | super_user=arwdDxt/super_user         +|                   | 
-        |                   |       | default_perm_user_2=arwdDxt/super_user |                   | 
-(3 rows)
-
--- REVOKE ALL and check privileges
-REVOKE ALL ON ALL TABLES  IN SCHEMA public FROM :ROLE_DEFAULT_PERM_USER_2;
-\z measurements
-                                      Access privileges
- Schema |     Name     | Type  |       Access privileges       | Column privileges | Policies 
---------+--------------+-------+-------------------------------+-------------------+----------
- public | measurements | table | super_user=arwdDxt/super_user |                   | 
-(1 row)
-
-\z conditions
-                                     Access privileges
- Schema |    Name    | Type  |       Access privileges       | Column privileges | Policies 
---------+------------+-------+-------------------------------+-------------------+----------
- public | conditions | table | super_user=arwdDxt/super_user+|                   | 
-        |            |       | =r/super_user                 |                   | 
-(1 row)
-
-\z public.*chunk
-                                         Access privileges
- Schema |       Name        | Type  |       Access privileges       | Column privileges | Policies 
---------+-------------------+-------+-------------------------------+-------------------+----------
- public | _hyper_2_10_chunk | table | super_user=arwdDxt/super_user |                   | 
- public | _hyper_2_8_chunk  | table | super_user=arwdDxt/super_user |                   | 
- public | _hyper_2_9_chunk  | table | super_user=arwdDxt/super_user |                   | 
-(3 rows)
-
--- GRANT/REVOKE in an empty schema (Issue #4581)
-CREATE SCHEMA test_grant;
-GRANT ALL ON ALL TABLES IN SCHEMA test_grant TO :ROLE_DEFAULT_PERM_USER_2;
-REVOKE ALL ON ALL TABLES IN SCHEMA test_grant FROM :ROLE_DEFAULT_PERM_USER_2;
+ERROR:  cache lookup failed for type 18
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/insert_many.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/insert_many.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/insert_many.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/insert_many.out	2023-10-28 03:32:36.744679237 +0000
@@ -412,7 +412,8 @@
                                        Output: _hyper_1_177_chunk."time", _hyper_1_177_chunk.temp, _hyper_1_177_chunk.device
                                  ->  Seq Scan on _timescaledb_internal._hyper_1_178_chunk
                                        Output: _hyper_1_178_chunk."time", _hyper_1_178_chunk.temp, _hyper_1_178_chunk.device
-(366 rows)
+ Query Identifier: -138393475033103120
+(367 rows)
 
 INSERT INTO many_partitions_test_1m(time, temp, device)
 SELECT time_bucket('1 minute', time) AS period, avg(temp), device
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/partition.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/partition.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/partition.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/partition.out	2023-10-28 03:32:23.760839844 +0000
@@ -42,7 +42,8 @@
  Seq Scan on _timescaledb_internal._hyper_1_1_chunk
    Output: _hyper_1_1_chunk."time", _hyper_1_1_chunk.temp, _hyper_1_1_chunk.device
    Filter: (_hyper_1_1_chunk.device = 1)
-(3 rows)
+ Query Identifier: 6487020006841722769
+(4 rows)
 
 COMMIT;
 CREATE TABLE part_new(time timestamptz, temp float, device int);
@@ -87,7 +88,8 @@
  Seq Scan on _timescaledb_internal._hyper_2_3_chunk
    Output: _hyper_2_3_chunk."time", _hyper_2_3_chunk.temp, _hyper_2_3_chunk.device
    Filter: (_hyper_2_3_chunk.device = 1)
-(3 rows)
+ Query Identifier: -2882296166484887164
+(4 rows)
 
 COMMIT;
 CREATE TABLE part_new_convert1(time timestamptz, temp float8, device int);
@@ -466,7 +468,8 @@
          Output: _hyper_16_11_chunk."time", _hyper_16_11_chunk.temp, _hyper_16_11_chunk.device
    ->  Seq Scan on _timescaledb_internal._hyper_16_12_chunk
          Output: _hyper_16_12_chunk."time", _hyper_16_12_chunk.temp, _hyper_16_12_chunk.device
-(5 rows)
+ Query Identifier: -3530739121889181968
+(6 rows)
 
 -- Exclude using the function on time
 EXPLAIN (verbose, costs off)
@@ -476,7 +479,8 @@
  Index Scan using _hyper_16_11_chunk_part_time_func_expr_idx on _timescaledb_internal._hyper_16_11_chunk
    Output: _hyper_16_11_chunk."time", _hyper_16_11_chunk.temp, _hyper_16_11_chunk.device
    Index Cond: (time_partfunc(_hyper_16_11_chunk."time") < 'Sun Jul 01 00:00:00 2018 PDT'::timestamp with time zone)
-(3 rows)
+ Query Identifier: -4756686143191121088
+(4 rows)
 
 -- Exclude using the same date but as a UNIX timestamp. Won't do an
 -- index scan since the index is on the time function expression
@@ -488,7 +492,8 @@
  Seq Scan on _timescaledb_internal._hyper_16_11_chunk
    Output: _hyper_16_11_chunk."time", _hyper_16_11_chunk.temp, _hyper_16_11_chunk.device
    Filter: (_hyper_16_11_chunk."time" < '1530403200'::double precision)
-(3 rows)
+ Query Identifier: -6270545147719380421
+(4 rows)
 
 -- Check that inserts will fail if we use a time partitioning function
 -- that returns NULL
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/partitionwise-15.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/partitionwise-15.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/partitionwise-15.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/partitionwise-15.out	2023-10-28 03:32:40.536632889 +0000
@@ -93,7 +93,8 @@
                      Output: pg1dim_1.device, pg1dim_1.temp
                ->  Seq Scan on public.pg1dim_h2 pg1dim_2
                      Output: pg1dim_2.device, pg1dim_2.temp
-(11 rows)
+ Query Identifier: -7658425804110435090
+(12 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -117,7 +118,8 @@
                Group Key: pg1dim_1.device
                ->  Seq Scan on public.pg1dim_h2 pg1dim_1
                      Output: pg1dim_1.device, pg1dim_1.temp
-(14 rows)
+ Query Identifier: -7658425804110435090
+(15 rows)
 
 -- All partition keys not covered by GROUP BY (partial partitionwise)
 SET enable_partitionwise_aggregate = 'off';
@@ -143,7 +145,8 @@
                      Output: pg2dim_3.device, pg2dim_3.temp
                ->  Seq Scan on public.pg2dim_h2_t2 pg2dim_4
                      Output: pg2dim_4.device, pg2dim_4.temp
-(15 rows)
+ Query Identifier: -1311815508437121675
+(16 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -180,7 +183,8 @@
                      Group Key: pg2dim_3.device
                      ->  Seq Scan on public.pg2dim_h2_t2 pg2dim_3
                            Output: pg2dim_3.device, pg2dim_3.temp
-(27 rows)
+ Query Identifier: -1311815508437121675
+(28 rows)
 
 -- All partition keys covered by GROUP BY (full partitionwise)
 SET enable_partitionwise_aggregate = 'off';
@@ -206,7 +210,8 @@
                      Output: pg2dim_3."time", pg2dim_3.device, pg2dim_3.temp
                ->  Seq Scan on public.pg2dim_h2_t2 pg2dim_4
                      Output: pg2dim_4."time", pg2dim_4.device, pg2dim_4.temp
-(15 rows)
+ Query Identifier: -3722556344337507480
+(16 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -240,7 +245,8 @@
                Group Key: pg2dim_3."time", pg2dim_3.device
                ->  Seq Scan on public.pg2dim_h2_t2 pg2dim_3
                      Output: pg2dim_3."time", pg2dim_3.device, pg2dim_3.temp
-(24 rows)
+ Query Identifier: -3722556344337507480
+(25 rows)
 
 -- All partition keys not covered by GROUP BY because of date_trunc
 -- expression on time (partial partitionwise)
@@ -267,7 +273,8 @@
                      Output: date_trunc('month'::text, pg2dim_3."time"), pg2dim_3.device, pg2dim_3.temp
                ->  Seq Scan on public.pg2dim_h2_t2 pg2dim_4
                      Output: date_trunc('month'::text, pg2dim_4."time"), pg2dim_4.device, pg2dim_4.temp
-(15 rows)
+ Query Identifier: 7339004788304197614
+(16 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -304,7 +311,8 @@
                      Group Key: date_trunc('month'::text, pg2dim_3."time"), pg2dim_3.device
                      ->  Seq Scan on public.pg2dim_h2_t2 pg2dim_3
                            Output: date_trunc('month'::text, pg2dim_3."time"), pg2dim_3.device, pg2dim_3.temp
-(27 rows)
+ Query Identifier: 7339004788304197614
+(28 rows)
 
 -- Now run on hypertable
 -- All partition keys not covered by GROUP BY (partial partitionwise)
@@ -331,7 +339,8 @@
                      Output: _hyper_1_3_chunk.device, _hyper_1_3_chunk.temp
                ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                      Output: _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(15 rows)
+ Query Identifier: -6083617235864731379
+(16 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -368,7 +377,8 @@
                      Group Key: _hyper_1_4_chunk.device
                      ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                            Output: _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(27 rows)
+ Query Identifier: -6083617235864731379
+(28 rows)
 
 -- All partition keys covered (full partitionwise)
 SET enable_partitionwise_aggregate = 'off';
@@ -394,7 +404,8 @@
                      Output: _hyper_1_3_chunk."time", _hyper_1_3_chunk.device, _hyper_1_3_chunk.temp
                ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                      Output: _hyper_1_4_chunk."time", _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(15 rows)
+ Query Identifier: -8253605758577684266
+(16 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -428,7 +439,8 @@
                Group Key: _hyper_1_4_chunk."time", _hyper_1_4_chunk.device
                ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                      Output: _hyper_1_4_chunk."time", _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(24 rows)
+ Query Identifier: -8253605758577684266
+(25 rows)
 
 -- Partial aggregation since date_trunc(time) is not a partition key
 SET enable_partitionwise_aggregate = 'off';
@@ -456,7 +468,8 @@
                            Output: _hyper_1_3_chunk."time", _hyper_1_3_chunk.device, _hyper_1_3_chunk.temp
                      ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                            Output: _hyper_1_4_chunk."time", _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(17 rows)
+ Query Identifier: 8491042973171870801
+(18 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -493,7 +506,8 @@
                      Group Key: date_trunc('month'::text, _hyper_1_4_chunk."time"), _hyper_1_4_chunk.device
                      ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                            Output: date_trunc('month'::text, _hyper_1_4_chunk."time"), _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(27 rows)
+ Query Identifier: 8491042973171870801
+(28 rows)
 
 -- Also test time_bucket
 SET enable_partitionwise_aggregate = 'off';
@@ -521,7 +535,8 @@
                            Output: _hyper_1_3_chunk."time", _hyper_1_3_chunk.device, _hyper_1_3_chunk.temp
                      ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                            Output: _hyper_1_4_chunk."time", _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(17 rows)
+ Query Identifier: -5627486205860324143
+(18 rows)
 
 SET enable_partitionwise_aggregate = 'on';
 :PREFIX
@@ -558,7 +573,8 @@
                      Group Key: time_bucket('@ 1 mon'::interval, _hyper_1_4_chunk."time"), _hyper_1_4_chunk.device
                      ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                            Output: time_bucket('@ 1 mon'::interval, _hyper_1_4_chunk."time"), _hyper_1_4_chunk.device, _hyper_1_4_chunk.temp
-(27 rows)
+ Query Identifier: -5627486205860324143
+(28 rows)
 
 -- Test partitionwise joins, mostly to see that we do not break
 -- anything
@@ -601,7 +617,8 @@
                      Output: h_3."time", h_3.device, h_3.temp
                ->  Index Scan using _hyper_1_4_chunk_hyper_device_time_idx on _timescaledb_internal._hyper_1_4_chunk h_4
                      Output: h_4."time", h_4.device, h_4.temp
-(21 rows)
+ Query Identifier: -4358387227929467886
+(22 rows)
 
 :PREFIX
 SELECT pg2.time, pg2.device, pg2.temp, pg1.temp
@@ -632,7 +649,8 @@
                      Output: pg2_3."time", pg2_3.device, pg2_3.temp
                ->  Seq Scan on public.pg2dim_h2_t2 pg2_4
                      Output: pg2_4."time", pg2_4.device, pg2_4.temp
-(23 rows)
+ Query Identifier: -6742477266342971056
+(24 rows)
 
 SET enable_partitionwise_join = 'on';
 :PREFIX
@@ -662,7 +680,8 @@
                      Output: h_3."time", h_3.device, h_3.temp
                ->  Index Scan using _hyper_1_4_chunk_hyper_device_time_idx on _timescaledb_internal._hyper_1_4_chunk h_4
                      Output: h_4."time", h_4.device, h_4.temp
-(21 rows)
+ Query Identifier: -4358387227929467886
+(22 rows)
 
 :PREFIX
 SELECT pg2.time, pg2.device, pg2.temp, pg1.temp
@@ -703,7 +722,8 @@
                            Output: pg2_5."time", pg2_5.device, pg2_5.temp
                      ->  Seq Scan on public.pg2dim_h2_t2 pg2_6
                            Output: pg2_6."time", pg2_6.device, pg2_6.temp
-(33 rows)
+ Query Identifier: -6742477266342971056
+(34 rows)
 
 -- Test hypertable with time partitioning function
 CREATE OR REPLACE FUNCTION time_func(unixtime float8)
@@ -758,7 +778,8 @@
                            Output: _hyper_3_7_chunk."time", _hyper_3_7_chunk.device, _hyper_3_7_chunk.temp
                      ->  Seq Scan on _timescaledb_internal._hyper_3_8_chunk
                            Output: _hyper_3_8_chunk."time", _hyper_3_8_chunk.device, _hyper_3_8_chunk.temp
-(13 rows)
+ Query Identifier: -5702354182171938223
+(14 rows)
 
 :PREFIX
 SELECT time_func(time), device, avg(temp)
@@ -785,7 +806,8 @@
                                  Output: _hyper_3_7_chunk."time", _hyper_3_7_chunk.device, _hyper_3_7_chunk.temp, time_func(_hyper_3_7_chunk."time")
                            ->  Index Scan Backward using _hyper_3_8_chunk_hyper_timepart_expr_idx on _timescaledb_internal._hyper_3_8_chunk
                                  Output: _hyper_3_8_chunk."time", _hyper_3_8_chunk.device, _hyper_3_8_chunk.temp, time_func(_hyper_3_8_chunk."time")
-(17 rows)
+ Query Identifier: 2611718456713672817
+(18 rows)
 
 -- Grouping on original time column should be pushed-down
 SET enable_partitionwise_aggregate = 'on';
@@ -813,7 +835,8 @@
                      Group Key: _hyper_3_8_chunk."time", _hyper_3_8_chunk.device
                      ->  Seq Scan on _timescaledb_internal._hyper_3_8_chunk
                            Output: _hyper_3_8_chunk."time", _hyper_3_8_chunk.device, _hyper_3_8_chunk.temp
-(16 rows)
+ Query Identifier: -5702354182171938223
+(17 rows)
 
 -- Applying the time partitioning function should also allow push-down
 -- on open dimensions
@@ -847,7 +870,8 @@
                      Presorted Key: (time_func(_hyper_3_8_chunk."time"))
                      ->  Index Scan Backward using _hyper_3_8_chunk_hyper_timepart_expr_idx on _timescaledb_internal._hyper_3_8_chunk
                            Output: time_func(_hyper_3_8_chunk."time"), _hyper_3_8_chunk.device, _hyper_3_8_chunk.temp
-(22 rows)
+ Query Identifier: 2611718456713672817
+(23 rows)
 
 -- Should also work to use partitioning function on closed dimensions
 :PREFIX
@@ -880,5 +904,6 @@
                      Presorted Key: (time_func(_hyper_3_8_chunk."time"))
                      ->  Index Scan Backward using _hyper_3_8_chunk_hyper_timepart_expr_idx on _timescaledb_internal._hyper_3_8_chunk
                            Output: time_func(_hyper_3_8_chunk."time"), _timescaledb_internal.get_partition_hash(_hyper_3_8_chunk.device), _hyper_3_8_chunk.temp
-(22 rows)
+ Query Identifier: -2513430346285449829
+(23 rows)
 
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/pg_join.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/pg_join.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/pg_join.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/pg_join.out	2023-10-28 03:32:47.096553293 +0000
@@ -189,13 +189,15 @@
 INSERT INTO tenk2 SELECT * FROM tenk1;
 \set PREFIX ''
 \set ECHO errors
---- Unoptimized results
-+++ Optimized results
-@@ -1,6 +1,6 @@
-              setting              | value 
- ----------------------------------+-------
-- timescaledb.enable_optimizations | off
-+ timescaledb.enable_optimizations | on
- (1 row)
- 
-  table_name 
+psql:include/join_query.sql:1370: ERROR:  cache lookup failed for type 23
+psql:include/join_query.sql:1370: STATEMENT:  select t0.*
+from
+ text_tbl t0
+ left join
+   (select case t1.ten when 0 then 'doh!'::text else null::text end as case1,
+           t1.stringu2
+     from tenk1 t1
+     join int4_tbl i4 ON i4.f1 = t1.unique2
+     left join uniquetbl u1 ON u1.f1 = t1.string4) ss
+  on t0.f1 = ss.case1
+where ss.stringu2 !~* ss.case1;
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/rowsecurity-15.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/rowsecurity-15.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/rowsecurity-15.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/rowsecurity-15.out	2023-10-28 03:32:50.948506898 +0000
@@ -106,53 +106,9 @@
 CREATE POLICY p1r ON document AS RESTRICTIVE TO regress_rls_dave
     USING (cid <> 44);
 \dp
-                                                                  Access privileges
-       Schema       |   Name   | Type  |              Access privileges              | Column privileges |                  Policies                  
---------------------+----------+-------+---------------------------------------------+-------------------+--------------------------------------------
- regress_rls_schema | category | table | regress_rls_alice=arwdDxt/regress_rls_alice+|                   | 
-                    |          |       | =arwdDxt/regress_rls_alice                  |                   | 
- regress_rls_schema | document | table | regress_rls_alice=arwdDxt/regress_rls_alice+|                   | p1:                                       +
-                    |          |       | =arwdDxt/regress_rls_alice                  |                   |   (u): (dlevel <= ( SELECT uaccount.seclv +
-                    |          |       |                                             |                   |    FROM uaccount                          +
-                    |          |       |                                             |                   |   WHERE (uaccount.pguser = CURRENT_USER)))+
-                    |          |       |                                             |                   | p2r (RESTRICTIVE):                        +
-                    |          |       |                                             |                   |   (u): ((cid <> 44) AND (cid < 50))       +
-                    |          |       |                                             |                   |   to: regress_rls_dave                    +
-                    |          |       |                                             |                   | p1r (RESTRICTIVE):                        +
-                    |          |       |                                             |                   |   (u): (cid <> 44)                        +
-                    |          |       |                                             |                   |   to: regress_rls_dave
- regress_rls_schema | uaccount | table | regress_rls_alice=arwdDxt/regress_rls_alice+|                   | 
-                    |          |       | =r/regress_rls_alice                        |                   | 
-(3 rows)
-
+ERROR:  cache lookup failed for type 18
 \d document
-        Table "regress_rls_schema.document"
- Column  |  Type   | Collation | Nullable | Default 
----------+---------+-----------+----------+---------
- did     | integer |           | not null | 
- cid     | integer |           |          | 
- dlevel  | integer |           | not null | 
- dauthor | name    |           |          | 
- dtitle  | text    |           |          | 
-Indexes:
-    "document_pkey" PRIMARY KEY, btree (did)
-Foreign-key constraints:
-    "document_cid_fkey" FOREIGN KEY (cid) REFERENCES category(cid)
-Policies:
-    POLICY "p1"
-      USING ((dlevel <= ( SELECT uaccount.seclv
-   FROM uaccount
-  WHERE (uaccount.pguser = CURRENT_USER))))
-    POLICY "p1r" AS RESTRICTIVE
-      TO regress_rls_dave
-      USING ((cid <> 44))
-    POLICY "p2r" AS RESTRICTIVE
-      TO regress_rls_dave
-      USING (((cid <> 44) AND (cid < 50)))
-Triggers:
-    ts_insert_blocker BEFORE INSERT ON document FOR EACH ROW EXECUTE FUNCTION _timescaledb_internal.insert_blocker()
-Number of child tables: 6 (Use \d+ to list them.)
-
+ERROR:  cache lookup failed for type 18
 SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename = 'document' ORDER BY policyname;
      schemaname     | tablename | policyname | permissive  |       roles        | cmd |                    qual                    | with_check 
 --------------------+-----------+------------+-------------+--------------------+-----+--------------------------------------------+------------
@@ -1023,33 +979,7 @@
 CREATE POLICY pp1r ON hyper_document AS RESTRICTIVE TO regress_rls_dave
     USING (cid < 55);
 \d+ hyper_document
-                         Table "regress_rls_schema.hyper_document"
- Column  |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
----------+---------+-----------+----------+---------+----------+--------------+-------------
- did     | integer |           | not null |         | plain    |              | 
- cid     | integer |           |          |         | plain    |              | 
- dlevel  | integer |           | not null |         | plain    |              | 
- dauthor | name    |           |          |         | plain    |              | 
- dtitle  | text    |           |          |         | extended |              | 
-Indexes:
-    "hyper_document_did_idx" btree (did DESC)
-Policies:
-    POLICY "pp1"
-      USING ((dlevel <= ( SELECT uaccount.seclv
-   FROM uaccount
-  WHERE (uaccount.pguser = CURRENT_USER))))
-    POLICY "pp1r" AS RESTRICTIVE
-      TO regress_rls_dave
-      USING ((cid < 55))
-Triggers:
-    ts_insert_blocker BEFORE INSERT ON hyper_document FOR EACH ROW EXECUTE FUNCTION _timescaledb_internal.insert_blocker()
-Child tables: _timescaledb_internal._hyper_2_10_chunk,
-              _timescaledb_internal._hyper_2_11_chunk,
-              _timescaledb_internal._hyper_2_12_chunk,
-              _timescaledb_internal._hyper_2_13_chunk,
-              _timescaledb_internal._hyper_2_14_chunk,
-              _timescaledb_internal._hyper_2_9_chunk
-
+ERROR:  cache lookup failed for type 18
 SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename like '%hyper_document%' ORDER BY policyname;
      schemaname     |   tablename    | policyname | permissive  |       roles        | cmd |                    qual                    | with_check 
 --------------------+----------------+------------+-------------+--------------------+-----+--------------------------------------------+------------
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/sql_query.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/sql_query.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/sql_query.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/sql_query.out	2023-10-28 03:32:40.664631329 +0000
@@ -63,7 +63,8 @@
          Output: _hyper_1_3_chunk."timeCustom", _hyper_1_3_chunk.device_id, _hyper_1_3_chunk.series_0, _hyper_1_3_chunk.series_1, _hyper_1_3_chunk.series_2, _hyper_1_3_chunk.series_bool
    ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
          Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.device_id, _hyper_1_4_chunk.series_0, _hyper_1_4_chunk.series_1, _hyper_1_4_chunk.series_2, _hyper_1_4_chunk.series_bool
-(9 rows)
+ Query Identifier: 747445655139865774
+(10 rows)
 
 \echo "The following queries should NOT scan two_Partitions._hyper_1_1_chunk"
 "The following queries should NOT scan two_Partitions._hyper_1_1_chunk"
@@ -73,7 +74,8 @@
  Index Scan using "_hyper_1_4_chunk_two_Partitions_device_id_timeCustom_idx" on _timescaledb_internal._hyper_1_4_chunk
    Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.device_id, _hyper_1_4_chunk.series_0, _hyper_1_4_chunk.series_1, _hyper_1_4_chunk.series_2, _hyper_1_4_chunk.series_bool
    Index Cond: (_hyper_1_4_chunk.device_id = 'dev2'::text)
-(3 rows)
+ Query Identifier: -8415525848154468419
+(4 rows)
 
 EXPLAIN (verbose ON, costs off) SELECT * FROM PUBLIC."two_Partitions" WHERE device_id = 'dev'||'2';
                                                                                      QUERY PLAN                                                                                     
@@ -81,7 +83,8 @@
  Index Scan using "_hyper_1_4_chunk_two_Partitions_device_id_timeCustom_idx" on _timescaledb_internal._hyper_1_4_chunk
    Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.device_id, _hyper_1_4_chunk.series_0, _hyper_1_4_chunk.series_1, _hyper_1_4_chunk.series_2, _hyper_1_4_chunk.series_bool
    Index Cond: (_hyper_1_4_chunk.device_id = 'dev2'::text)
-(3 rows)
+ Query Identifier: -6873744060197034736
+(4 rows)
 
 EXPLAIN (verbose ON, costs off) SELECT * FROM PUBLIC."two_Partitions" WHERE 'dev'||'2' = device_id;
                                                                                      QUERY PLAN                                                                                     
@@ -89,7 +92,8 @@
  Index Scan using "_hyper_1_4_chunk_two_Partitions_device_id_timeCustom_idx" on _timescaledb_internal._hyper_1_4_chunk
    Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.device_id, _hyper_1_4_chunk.series_0, _hyper_1_4_chunk.series_1, _hyper_1_4_chunk.series_2, _hyper_1_4_chunk.series_bool
    Index Cond: (_hyper_1_4_chunk.device_id = 'dev2'::text)
-(3 rows)
+ Query Identifier: -1353511112026382900
+(4 rows)
 
 --test integer partition key
 CREATE TABLE "int_part"(time timestamp, object_id int, temp float);
@@ -140,7 +144,8 @@
  Index Scan using _hyper_2_5_chunk_int_part_object_id_time_idx on _timescaledb_internal._hyper_2_5_chunk
    Output: _hyper_2_5_chunk."time", _hyper_2_5_chunk.object_id, _hyper_2_5_chunk.temp
    Index Cond: (_hyper_2_5_chunk.object_id = 1)
-(3 rows)
+ Query Identifier: -1280539756223069566
+(4 rows)
 
 --Need to verify space partitions are currently pruned in this query
 --EXPLAIN (verbose ON, costs off) SELECT * FROM "two_Partitions" WHERE device_id IN ('dev2', 'dev21');
@@ -166,7 +171,8 @@
                      Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.device_id, _hyper_1_4_chunk.series_0, _hyper_1_4_chunk.series_1, _hyper_1_4_chunk.series_2, _hyper_1_4_chunk.series_bool
                ->  Index Scan using "_hyper_1_1_chunk_two_Partitions_timeCustom_device_id_idx" on _timescaledb_internal._hyper_1_1_chunk
                      Output: _hyper_1_1_chunk."timeCustom", _hyper_1_1_chunk.device_id, _hyper_1_1_chunk.series_0, _hyper_1_1_chunk.series_1, _hyper_1_1_chunk.series_2, _hyper_1_1_chunk.series_bool
-(17 rows)
+ Query Identifier: -3102139719784533275
+(18 rows)
 
 --shows that more specific indexes are used if the WHERE clauses "match", uses the series_1 index here.
 EXPLAIN (verbose ON, costs off)SELECT * FROM PUBLIC."two_Partitions" WHERE series_1 IS NOT NULL ORDER BY "timeCustom" DESC NULLS LAST limit 2;
@@ -189,7 +195,8 @@
                      Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.device_id, _hyper_1_4_chunk.series_0, _hyper_1_4_chunk.series_1, _hyper_1_4_chunk.series_2, _hyper_1_4_chunk.series_bool
                ->  Index Scan using "_hyper_1_1_chunk_two_Partitions_timeCustom_series_1_idx" on _timescaledb_internal._hyper_1_1_chunk
                      Output: _hyper_1_1_chunk."timeCustom", _hyper_1_1_chunk.device_id, _hyper_1_1_chunk.series_0, _hyper_1_1_chunk.series_1, _hyper_1_1_chunk.series_2, _hyper_1_1_chunk.series_bool
-(17 rows)
+ Query Identifier: -556641128699658690
+(18 rows)
 
 --here the "match" is implication series_1 > 1 => series_1 IS NOT NULL
 EXPLAIN (verbose ON, costs off)SELECT * FROM PUBLIC."two_Partitions" WHERE series_1 > 1 ORDER BY "timeCustom" DESC NULLS LAST limit 2;
@@ -216,7 +223,8 @@
                ->  Index Scan using "_hyper_1_1_chunk_two_Partitions_timeCustom_series_1_idx" on _timescaledb_internal._hyper_1_1_chunk
                      Output: _hyper_1_1_chunk."timeCustom", _hyper_1_1_chunk.device_id, _hyper_1_1_chunk.series_0, _hyper_1_1_chunk.series_1, _hyper_1_1_chunk.series_2, _hyper_1_1_chunk.series_bool
                      Index Cond: (_hyper_1_1_chunk.series_1 > '1'::double precision)
-(21 rows)
+ Query Identifier: -6809811292482218871
+(22 rows)
 
 --note that without time transform things work too
 EXPLAIN (verbose ON, costs off)SELECT "timeCustom" t, min(series_0) FROM PUBLIC."two_Partitions" GROUP BY t ORDER BY t DESC NULLS LAST limit 2;
@@ -242,7 +250,8 @@
                            Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.series_0
                      ->  Index Scan using "_hyper_1_1_chunk_two_Partitions_timeCustom_device_id_idx" on _timescaledb_internal._hyper_1_1_chunk
                            Output: _hyper_1_1_chunk."timeCustom", _hyper_1_1_chunk.series_0
-(20 rows)
+ Query Identifier: 4959484351637882594
+(21 rows)
 
 --The query should still use the index on timeCustom, even though the GROUP BY/ORDER BY is on the transformed time 't'.
 --However, current query plans show that it does not.
@@ -268,7 +277,8 @@
                                  Output: _hyper_1_3_chunk."timeCustom", _hyper_1_3_chunk.series_0
                            ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                                  Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.series_0
-(19 rows)
+ Query Identifier: 7968409811599693223
+(20 rows)
 
 EXPLAIN (verbose ON, costs off)SELECT "timeCustom"%10 t, min(series_0) FROM PUBLIC."two_Partitions" GROUP BY t ORDER BY t DESC NULLS LAST limit 2;
                                                QUERY PLAN                                               
@@ -292,5 +302,6 @@
                                  Output: _hyper_1_3_chunk."timeCustom", _hyper_1_3_chunk.series_0
                            ->  Seq Scan on _timescaledb_internal._hyper_1_4_chunk
                                  Output: _hyper_1_4_chunk."timeCustom", _hyper_1_4_chunk.series_0
-(19 rows)
+ Query Identifier: 2029298820685560892
+(20 rows)
 
diff -u /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/trusted_extension.out /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/trusted_extension.out
--- /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/test/expected/trusted_extension.out	2023-06-28 16:40:59.000000000 +0000
+++ /home/abigalek/pgext-cli/pgextworkdir/timescaledb-2.11.1/build/test/results/trusted_extension.out	2023-10-28 03:32:41.364622802 +0000
@@ -43,14 +43,4 @@
 (1 row)
 
 \dt+ _timescaledb_internal._hyper_*
-                                            List of relations
-        Schema         |       Name       | Type  |    Owner    | Persistence |    Size    | Description 
------------------------+------------------+-------+-------------+-------------+------------+-------------
- _timescaledb_internal | _hyper_1_1_chunk | table | test_role_1 | permanent   | 8192 bytes | 
- _timescaledb_internal | _hyper_1_2_chunk | table | test_role_1 | permanent   | 8192 bytes | 
-(2 rows)
-
-DROP EXTENSION timescaledb CASCADE;
-NOTICE:  drop cascades to 3 other objects
-\c :TEST_DBNAME :ROLE_SUPERUSER
-DROP DATABASE trusted_test;
+ERROR:  cache lookup failed for type 18
